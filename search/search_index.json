{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>These pages contain all the documentation for the various APIs provided by HAKOM.</p> <p>TODO: introduction and links to all the sub pages (Getting Started, Core Concepts, etc.)</p>"},{"location":"API%20Reference/","title":"API References","text":"<p>TODO</p>"},{"location":"API%20Reference/HTTP%20API/","title":"Index","text":"<p>!! SWAGGER ERROR: File hakom.tsm.http.json not found. !!</p>"},{"location":"API%20Reference/_.NET%20API/","title":".NET API Reference","text":"<p>The .NET API allows you to work with time series data from within any application built using Microsoft .NET.  </p> <p>Including it in your application is as simple as adding a reference to the HAKOM.TSM.Net NuGet package. Detailed instructions can be found here: https://documentation.hakom.at/doce/latest/english/tsm-net-api-114918315.html.</p> <p>An example solution written in C# is also distributed with the NuGet package. It contains several code examples for getting started with the API.</p> <p>For detailed descriptions on all the types available within the library, see the pages in this section.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/","title":"HAKOM Namespace","text":"<p>The <code>HAKOM</code> namespace contains all types publicly available as an API. The library divided into several modules, each serving a specific purpose.</p> <p>For developers looking to work with time series, the single most important module is the TSM module. In fact, there is usually no need to explicitly reference any of the other modules directly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/#modules","title":"Modules","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/#hakomlogging","title":"HAKOM.Logging","text":"<p>Contains all the interfaces to enable and configure logging in HAKOM applications. The implementations are based on the concepts found in Microsoft.Extensions.Logging</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/#hakomloggingcore","title":"HAKOM.Logging.Core","text":"<p>This module provides a link between Microsoft.Extensions.Logging (which is primarily designed to be used with Microsofts dependency-injection system) and HAKOMs dependency injection system.</p> <p>It contains all the neccessary extension methods to register logging providers (i.e. Microsoft.Extensions.Logging.ILoggerProvider implementations) with the HAKOM dependency injection system. </p> <p>It also includes a simple logging provider that writes log messages to files on disk.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/#hakomlogginghakomdatabaselog","title":"HAKOM.Logging.HakomDatabaseLog","text":"<p>HAKOM has previously provided a solution for structured logging into relational databases known as HAKOM Protokoll. The ability to use these logs is now provided in the form of a Microsoft.Extensions.Logging.ILoggerProvider implementation. </p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/#hakomtsm","title":"HAKOM.TSM","text":"<p>Contains all that's needed for time series management.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/","title":"HAKOM.Configuration.Core.Net","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/#hakomconfigurationcorenet-assembly","title":"HAKOM.Configuration.Core.Net Assembly","text":"Namespaces HAKOM.Configuration.Core.Net.Api HAKOM.Configuration.Core.Net.Api.Defaults HAKOM.Configuration.Core.Net.Api.Exceptions HAKOM.Configuration.Core.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/","title":"HAKOM.Configuration.Core.Net.Api","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/#hakomconfigurationcorenetapi-namespace","title":"HAKOM.Configuration.Core.Net.Api Namespace","text":"Classes ConfigurationSourceFactory&lt;TOptions&gt; Loads referenced configurations of one configuration type (e.g. Xml). Interfaces IConfigurationSourceFactory Loads referenced configurations of one configuration type (e.g. Xml). ISettings&lt;TSettingsClass,TSettingsInterface&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/","title":"ConfigurationSourceFactory&lt;TOptions&gt;","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytoptions-class","title":"ConfigurationSourceFactory&lt;TOptions&gt; Class","text":"<p>Loads referenced configurations of one configuration type (e.g. Xml).</p> C#<pre><code>public abstract class ConfigurationSourceFactory&lt;TOptions&gt; :\nHAKOM.Configuration.Core.Net.Api.IConfigurationSourceFactory\n    where TOptions : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TOptions</code></p> <p>Class containing the properties of the configuration type.</p> <p>Inheritance System.Object \ud83e\udc52 ConfigurationSourceFactory <p>Implements IConfigurationSourceFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytype-property","title":"ConfigurationSourceFactory.Type Property <p>Returns the name of the configuration source type this factory can create</p> C#<pre><code>public abstract string Type { get; }\n</code></pre> <p>Implements Type</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytoptionscreateiconfigurationsection-cancellationtoken-method","title":"ConfigurationSourceFactory&lt;TOptions&gt;.Create(IConfigurationSection, CancellationToken) Method <p>Creates a new configuration source based on the settings provided in configurationSection.</p> C#<pre><code>public System.Threading.Tasks.Task&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt; Create(Microsoft.Extensions.Configuration.IConfigurationSection configurationSection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p>One or multiple configuration references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p> <p>Implements Create(IConfigurationSection, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt; A System.Threading.Tasks.Task&lt;&gt; containing the linked configuration.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytoptionsgetdefaultoptions-method","title":"ConfigurationSourceFactory&lt;TOptions&gt;.GetDefaultOptions() Method C#<pre><code>protected abstract TOptions GetDefaultOptions();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#returns_1","title":"Returns","text":"<p>TOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytoptionstrycreatetoptions-cancellationtoken-method","title":"ConfigurationSourceFactory&lt;TOptions&gt;.TryCreate(TOptions, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt;&gt; TryCreate(TOptions options, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>options</code> TOptions</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#configurationsourcefactorytoptionstrygetoptionsiconfigurationsection-method","title":"ConfigurationSourceFactory&lt;TOptions&gt;.TryGetOptions(IConfigurationSection) Method C#<pre><code>protected virtual HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TOptions&gt; TryGetOptions(Microsoft.Extensions.Configuration.IConfigurationSection configurationSection);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ConfigurationSourceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TOptions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/","title":"IConfigurationSourceFactory","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#iconfigurationsourcefactory-interface","title":"IConfigurationSourceFactory Interface","text":"<p>Loads referenced configurations of one configuration type (e.g. Xml).</p> C#<pre><code>public interface IConfigurationSourceFactory\n</code></pre> <p>Derived \u21b3 ConfigurationSourceFactory&lt;TOptions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#iconfigurationsourcefactorytype-property","title":"IConfigurationSourceFactory.Type Property","text":"<p>Returns the name of the configuration source type this factory can create</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#iconfigurationsourcefactorycreateiconfigurationsection-cancellationtoken-method","title":"IConfigurationSourceFactory.Create(IConfigurationSection, CancellationToken) Method","text":"<p>Creates a new configuration source based on the settings provided in configurationSection.</p> C#<pre><code>System.Threading.Tasks.Task&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt; Create(Microsoft.Extensions.Configuration.IConfigurationSection configurationSection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#parameters","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p>One or multiple configuration references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/IConfigurationSourceFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Microsoft.Extensions.Configuration.IConfigurationSource&gt; A System.Threading.Tasks.Task&lt;&gt; containing the linked configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/","title":"ISettings&lt;TSettingsClass,TSettingsInterface&gt;","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#isettingstsettingsclasstsettingsinterface-interface","title":"ISettings&lt;TSettingsClass,TSettingsInterface&gt; Interface","text":"C#<pre><code>public interface ISettings&lt;TSettingsClass,TSettingsInterface&gt;\n    where TSettingsClass : class, TSettingsInterface, HAKOM.Configuration.Core.Net.Api.ISettings&lt;TSettingsClass, TSettingsInterface&gt;\n    where TSettingsInterface : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#type-parameters","title":"Type parameters","text":"<p><code>TSettingsClass</code></p> <p></p> <p><code>TSettingsInterface</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#isettingsdefaults-property","title":"ISettings.Defaults Property C#<pre><code>abstract static TSettingsInterface Defaults { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#property-value","title":"Property Value","text":"<p>TSettingsInterface</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#isettingskey-property","title":"ISettings.Key Property C#<pre><code>abstract static string Key { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#isettingsvalue-property","title":"ISettings.Value Property C#<pre><code>TSettingsInterface Value { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#property-value_2","title":"Property Value","text":"<p>TSettingsInterface</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#isettingstsettingsclasstsettingsinterfacetryreadiconfiguration-method","title":"ISettings&lt;TSettingsClass,TSettingsInterface&gt;.TryRead(IConfiguration) Method C#<pre><code>abstract static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TSettingsInterface&gt; TryRead(Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/ISettingsOf2/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TSettingsInterface&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/","title":"HAKOM.Configuration.Core.Net.Api.Defaults","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/#hakomconfigurationcorenetapidefaults-namespace","title":"HAKOM.Configuration.Core.Net.Api.Defaults Namespace","text":"Interfaces IDefaultFileName The default file name if default configuration should be loaded IDefaultPrefix The default prefix if default configuration should be loaded"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/","title":"IDefaultFileName","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Defaults</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#idefaultfilename-interface","title":"IDefaultFileName Interface","text":"<p>The default file name if default configuration should be loaded</p> C#<pre><code>public interface IDefaultFileName\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#idefaultfilenamename-property","title":"IDefaultFileName.Name Property","text":"<p>The default file name if default configuration should be loaded</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#idefaultfilenamedefault-method","title":"IDefaultFileName.Default() Method","text":"<p>Creates a new instance of the default file name.</p> C#<pre><code>static HAKOM.Configuration.Core.Net.Api.Defaults.IDefaultFileName Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultFileName/#returns","title":"Returns","text":"<p>IDefaultFileName a new instance of the default file name.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/","title":"IDefaultPrefix","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Defaults</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#idefaultprefix-interface","title":"IDefaultPrefix Interface","text":"<p>The default prefix if default configuration should be loaded</p> C#<pre><code>public interface IDefaultPrefix\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#idefaultprefixprefix-property","title":"IDefaultPrefix.Prefix Property","text":"<p>The default prefix if default configuration should be loaded</p> C#<pre><code>string Prefix { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#idefaultprefixdefault-method","title":"IDefaultPrefix.Default() Method","text":"<p>Creates a new instance of the default prefix.</p> C#<pre><code>static HAKOM.Configuration.Core.Net.Api.Defaults.IDefaultPrefix Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Defaults/IDefaultPrefix/#returns","title":"Returns","text":"<p>IDefaultPrefix a new instance of the default prefix.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/","title":"HAKOM.Configuration.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/#hakomconfigurationcorenetapiexceptions-namespace","title":"HAKOM.Configuration.Core.Net.Api.Exceptions Namespace","text":"Classes ConfigurationAlreadyAddedException Thrown when an attempt was made to add a configuration, which has already been registered. Indicates the possibility of a circular reference or that the configuration exists multiple times. ConfigurationFileNotFoundException Thrown when the non optional configuration file was not found. ConfigurationOptionCannotBeNullException Thrown when a non-nullable configuration option is either not provided, empty or null. InvalidRequiredConfigurationValueException MissingRequiredConfigurationValueException NoConfigurationSourceFactoryForConfigurationEntryFoundException Thrown when there is no registered ConfigurationSourceFactory for a configuration entry. NoConfigurationSourceSpecifiedException Thrown when there was no configuration source specified."},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/","title":"ConfigurationAlreadyAddedException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/#configurationalreadyaddedexception-class","title":"ConfigurationAlreadyAddedException Class","text":"<p>Thrown when an attempt was made to add a configuration, which has already been registered. Indicates the possibility of a circular reference or that the configuration exists multiple times.</p> C#<pre><code>public sealed class ConfigurationAlreadyAddedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConfigurationAlreadyAddedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/#remarks","title":"Remarks","text":"<p>Ensure, that there are no circular references and that there are no duplicates in the configuration source.  </p> <p>This exception is identified by error code HK06007</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/#configurationalreadyaddedexceptionequivalenthttpstatuscode-property","title":"ConfigurationAlreadyAddedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationAlreadyAddedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/","title":"ConfigurationFileNotFoundException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#configurationfilenotfoundexception-class","title":"ConfigurationFileNotFoundException Class","text":"<p>Thrown when the non optional configuration file was not found.</p> C#<pre><code>public sealed class ConfigurationFileNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConfigurationFileNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#remarks","title":"Remarks","text":"<p>Ensure, that all files defined in the configuration options actually exist.  </p> <p>This exception is identified by error code HK06008</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#configurationfilenotfoundexceptionequivalenthttpstatuscode-property","title":"ConfigurationFileNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#configurationfilenotfoundexceptionfilenames-property","title":"ConfigurationFileNotFoundException.FileNames Property","text":"C#<pre><code>public System.Collections.Generic.IReadOnlyList&lt;string&gt; FileNames { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationFileNotFoundException/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/","title":"ConfigurationOptionCannotBeNullException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/#configurationoptioncannotbenullexception-class","title":"ConfigurationOptionCannotBeNullException Class","text":"<p>Thrown when a non-nullable configuration option is either not provided, empty or null.</p> C#<pre><code>public sealed class ConfigurationOptionCannotBeNullException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConfigurationOptionCannotBeNullException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/#remarks","title":"Remarks","text":"<p>Ensure that all non-nullable configuration options have a value.  </p> <p>This exception is identified by error code HK06009</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/#configurationoptioncannotbenullexceptionequivalenthttpstatuscode-property","title":"ConfigurationOptionCannotBeNullException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/ConfigurationOptionCannotBeNullException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/","title":"InvalidRequiredConfigurationValueException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#invalidrequiredconfigurationvalueexception-class","title":"InvalidRequiredConfigurationValueException Class","text":"C#<pre><code>public sealed class InvalidRequiredConfigurationValueException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRequiredConfigurationValueException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#invalidrequiredconfigurationvalueexceptionequivalenthttpstatuscode-property","title":"InvalidRequiredConfigurationValueException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#invalidrequiredconfigurationvalueexceptionkey-property","title":"InvalidRequiredConfigurationValueException.Key Property","text":"C#<pre><code>public string Key { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#invalidrequiredconfigurationvalueexceptionsection-property","title":"InvalidRequiredConfigurationValueException.Section Property","text":"C#<pre><code>public string Section { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/InvalidRequiredConfigurationValueException/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/","title":"MissingRequiredConfigurationValueException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#missingrequiredconfigurationvalueexception-class","title":"MissingRequiredConfigurationValueException Class","text":"C#<pre><code>public sealed class MissingRequiredConfigurationValueException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MissingRequiredConfigurationValueException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#missingrequiredconfigurationvalueexceptionequivalenthttpstatuscode-property","title":"MissingRequiredConfigurationValueException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#missingrequiredconfigurationvalueexceptionkey-property","title":"MissingRequiredConfigurationValueException.Key Property","text":"C#<pre><code>public string Key { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#missingrequiredconfigurationvalueexceptionsection-property","title":"MissingRequiredConfigurationValueException.Section Property","text":"C#<pre><code>public string Section { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/MissingRequiredConfigurationValueException/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/","title":"NoConfigurationSourceFactoryForConfigurationEntryFoundException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/#noconfigurationsourcefactoryforconfigurationentryfoundexception-class","title":"NoConfigurationSourceFactoryForConfigurationEntryFoundException Class","text":"<p>Thrown when there is no registered ConfigurationSourceFactory for a configuration entry.</p> C#<pre><code>public sealed class NoConfigurationSourceFactoryForConfigurationEntryFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoConfigurationSourceFactoryForConfigurationEntryFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/#remarks","title":"Remarks","text":"<p>Use one of the extension methods in ContainerExtensions to register the necessary factory.  </p> <p>This exception is identified by error code HK06010</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/#noconfigurationsourcefactoryforconfigurationentryfoundexceptionequivalenthttpstatuscode-property","title":"NoConfigurationSourceFactoryForConfigurationEntryFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceFactoryForConfigurationEntryFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/","title":"NoConfigurationSourceSpecifiedException","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/#noconfigurationsourcespecifiedexception-class","title":"NoConfigurationSourceSpecifiedException Class","text":"<p>Thrown when there was no configuration source specified.</p> C#<pre><code>public sealed class NoConfigurationSourceSpecifiedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoConfigurationSourceSpecifiedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/#remarks","title":"Remarks","text":"<p>Ensure that there is a configuration source or that \"includeExisting\" is true in the call to UseConfiguration(this IContainer, Action&lt;IConfigurationBuilder&gt;, bool) or any of its overloads.  </p> <p>This exception is identified by error code HK06004</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/#noconfigurationsourcespecifiedexceptionequivalenthttpstatuscode-property","title":"NoConfigurationSourceSpecifiedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Exceptions/NoConfigurationSourceSpecifiedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/","title":"HAKOM.Configuration.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/#hakomconfigurationcorenetapiextensions-namespace","title":"HAKOM.Configuration.Core.Net.Api.Extensions Namespace","text":"Classes ConfigurationBuilderExtensions Extends Microsoft.Extensions.Configuration.IConfigurationBuilder to allow adding common configurationsources specific to HAKOM. ConfigurationExtensions ConfigurationSectionExtensions ContainerExtensions Extends IContainer with methods for setting upconfiguration which can then be used by individual components byinjecting an Microsoft.Extensions.Configuration.IConfiguration instance."},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/","title":"ConfigurationBuilderExtensions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#configurationbuilderextensions-class","title":"ConfigurationBuilderExtensions Class","text":"<p>Extends Microsoft.Extensions.Configuration.IConfigurationBuilder to allow adding common configuration sources specific to HAKOM.</p> C#<pre><code>public static class ConfigurationBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ConfigurationBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#configurationbuilderextensionsaddhakomcommandlinethis-iconfigurationbuilder-iliststring-string-bool-method","title":"ConfigurationBuilderExtensions.AddHakomCommandLine(this IConfigurationBuilder, IList&lt;string&gt;, string, bool) Method","text":"<p>Adds configuration from a list of strings (usually command line arguments). Configuration should be passed in the form --{parameterPrefix}:{key}={value}</p> C#<pre><code>public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddHakomCommandLine(this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, System.Collections.Generic.IList&lt;string&gt; arguments, string parameterPrefix=\"HAKOM\", bool removeFromArguments=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>configurationBuilder</code> Microsoft.Extensions.Configuration.IConfigurationBuilder</p> <p>The Microsoft.Extensions.Configuration.IConfigurationBuilder to add command line arguments to.</p> <p></p> <p><code>arguments</code> System.Collections.Generic.IList&lt;System.String&gt;</p> <p>The list of arguments that should be parsed.</p> <p></p> <p><code>parameterPrefix</code> System.String</p> <p>A string that all configuration arguments should start with (default: HAKOM).</p> <p></p> <p><code>removeFromArguments</code> System.Boolean</p> <p>Wether or not to remove matched arguments from arguments.             This may be useful to prevent other argument parsing logic from trying to interpret configuration arguments.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.Configuration.IConfigurationBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#configurationbuilderextensionsaddhakomenvironmentvariablesthis-iconfigurationbuilder-string-method","title":"ConfigurationBuilderExtensions.AddHakomEnvironmentVariables(this IConfigurationBuilder, string) Method","text":"<p>Adds environment variables as a source for configuration to the given Microsoft.Extensions.Configuration.IConfigurationBuilder instance.</p> C#<pre><code>public static Microsoft.Extensions.Configuration.IConfigurationBuilder AddHakomEnvironmentVariables(this Microsoft.Extensions.Configuration.IConfigurationBuilder configurationBuilder, string prefix=\"HAKOM\");\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#parameters_1","title":"Parameters","text":"<p><code>configurationBuilder</code> Microsoft.Extensions.Configuration.IConfigurationBuilder</p> <p>The Microsoft.Extensions.Configuration.IConfigurationBuilder             to add environment variables to.</p> <p></p> <p><code>prefix</code> System.String</p> <p>The prefix by which environment variables used             for configuration distinguish themselves from other system variables.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationBuilderExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.Extensions.Configuration.IConfigurationBuilder The Microsoft.Extensions.Configuration.IConfigurationBuilder instance itself             for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/","title":"ConfigurationExtensions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#configurationextensions-class","title":"ConfigurationExtensions Class","text":"C#<pre><code>public static class ConfigurationExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ConfigurationExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#configurationextensionsgetrequiredvaluetvaluethis-iconfiguration-string-method","title":"ConfigurationExtensions.GetRequiredValue&lt;TValue&gt;(this IConfiguration, string) Method","text":"C#<pre><code>public static TValue GetRequiredValue&lt;TValue&gt;(this Microsoft.Extensions.Configuration.IConfiguration configuration, string key);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p></p> <p><code>key</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#returns","title":"Returns","text":"<p>TValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#configurationextensionstrygetrequiredtvaluethis-iconfiguration-method","title":"ConfigurationExtensions.TryGetRequired&lt;TValue&gt;(this IConfiguration) Method","text":"C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; TryGetRequired&lt;TValue&gt;(this Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#parameters_1","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#configurationextensionstrygetrequiredvaluetvaluethis-iconfiguration-string-predicatetvalue-method","title":"ConfigurationExtensions.TryGetRequiredValue&lt;TValue&gt;(this IConfiguration, string, Predicate&lt;TValue&gt;) Method","text":"C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; TryGetRequiredValue&lt;TValue&gt;(this Microsoft.Extensions.Configuration.IConfiguration configuration, string key, System.Predicate&lt;TValue&gt; isValid);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#parameters_2","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p></p> <p><code>key</code> System.String</p> <p></p> <p><code>isValid</code> System.Predicate&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#configurationextensionstrygetrequiredvaluetvaluethis-iconfiguration-string-method","title":"ConfigurationExtensions.TryGetRequiredValue&lt;TValue&gt;(this IConfiguration, string) Method","text":"C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; TryGetRequiredValue&lt;TValue&gt;(this Microsoft.Extensions.Configuration.IConfiguration configuration, string key);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#parameters_3","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p></p> <p><code>key</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationExtensions/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/","title":"ConfigurationSectionExtensions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#configurationsectionextensions-class","title":"ConfigurationSectionExtensions Class","text":"C#<pre><code>public static class ConfigurationSectionExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ConfigurationSectionExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#configurationsectionextensionstrygetzeroormoretvaluethis-iconfigurationsection-string-method","title":"ConfigurationSectionExtensions.TryGetZeroOrMore&lt;TValue&gt;(this IConfigurationSection, string) Method","text":"C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue[]&gt; TryGetZeroOrMore&lt;TValue&gt;(this Microsoft.Extensions.Configuration.IConfigurationSection configurationSection, string itemKey);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#parameters","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p> <p><code>itemKey</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ConfigurationSectionExtensions/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue[]&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Configuration.Core.Net</p> <p>Namespace: HAKOM.Configuration.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Extends IContainer with methods for setting up configuration which can then be used by individual components by injecting an Microsoft.Extensions.Configuration.IConfiguration instance.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconfigurationthis-icontainer-bool-bool-bool-method","title":"ContainerExtensions.UseConfiguration(this IContainer, bool, bool, bool) Method","text":"<p>Detects and registers referenced configurations with the given IContainer.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguration(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, bool includeExisting=true, bool includeDefaultSources=true, bool includeDefaultConfigurationSourceFactories=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the referenced configurations with.</p> <p></p> <p><code>includeExisting</code> System.Boolean</p> <p>True: includes the already registered configurations.             False: overwrites the already registered configurations.</p> <p></p> <p><code>includeDefaultSources</code> System.Boolean</p> <p>includes the default configurations if true.</p> <p></p> <p><code>includeDefaultConfigurationSourceFactories</code> System.Boolean</p> <p>includes the default configuration source factories if true.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Occurs if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconfigurationthis-icontainer-actioniconfigurationbuilder-bool-method","title":"ContainerExtensions.UseConfiguration(this IContainer, Action&lt;IConfigurationBuilder&gt;, bool) Method","text":"<p>Registers an Microsoft.Extensions.Configuration.IConfiguration instance with the given IContainer.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguration(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureBuilder, bool includeExisting=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the configuration with.</p> <p></p> <p><code>configureBuilder</code> System.Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt;</p> <p>An System.Action&lt;&gt; that can be             used to add configuration sources.</p> <p></p> <p><code>includeExisting</code> System.Boolean</p> <p>True: includes the already registered configurations.             False: overwrites the already registered configurations.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself for chaining.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconfigurationthis-icontainer-actioniconfigurationbuilder-iconfiguration-bool-method","title":"ContainerExtensions.UseConfiguration(this IContainer, Action&lt;IConfigurationBuilder&gt;, IConfiguration, bool) Method","text":"<p>Registers an Microsoft.Extensions.Configuration.IConfiguration instance with the given IContainer. Outputs the built instance which includes configuration from all provided sources for additional use outside the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguration(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt; configureBuilder, out Microsoft.Extensions.Configuration.IConfiguration builtConfiguration, bool includeExisting=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the configuration with.</p> <p></p> <p><code>configureBuilder</code> System.Action&lt;Microsoft.Extensions.Configuration.IConfigurationBuilder&gt;</p> <p>An System.Action&lt;&gt; that can be             used to add configuration sources.</p> <p></p> <p><code>builtConfiguration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The built Microsoft.Extensions.Configuration.IConfiguration instance.</p> <p></p> <p><code>includeExisting</code> System.Boolean</p> <p>True: includes the already registered configurations.             False: overwrites the already registered configurations.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#containerextensionsusedefaultconfigurationsourcefactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultConfigurationSourceFactories(this IContainer) Method","text":"<p>Registers the default provided IConfigurationSourceFactory.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultConfigurationSourceFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the configuration source factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer itself for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Configuration/Core/API/Extensions/ContainerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Occurs if container is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/","title":"HAKOM.Console.Core.Net","text":"<p>Assembly: HAKOM.Console.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/#hakomconsolecorenet-assembly","title":"HAKOM.Console.Core.Net Assembly","text":"Namespaces HAKOM.Console.Core.Net.Api HAKOM.Console.Core.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/","title":"HAKOM.Console.Core.Net.Api","text":"<p>Assembly: HAKOM.Console.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/#hakomconsolecorenetapi-namespace","title":"HAKOM.Console.Core.Net.Api Namespace","text":"Classes Command Base class for console commands Interfaces IConsole"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/","title":"Command","text":"<p>Assembly: HAKOM.Console.Core.Net</p> <p>Namespace: HAKOM.Console.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#command-class","title":"Command Class","text":"<p>Base class for console commands</p> C#<pre><code>public abstract class Command : System.CommandLine.Command\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.CommandLine.Symbol \ud83e\udc52 System.CommandLine.IdentifierSymbol \ud83e\udc52 System.CommandLine.Command \ud83e\udc52 Command</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#commandiconsole-string-string-constructor","title":"Command(IConsole, string, string) Constructor","text":"C#<pre><code>protected Command(HAKOM.Console.Core.Net.Api.IConsole console, string name, string description);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#parameters","title":"Parameters","text":"<p><code>console</code> IConsole</p> <p></p> <p><code>name</code> System.String</p> <p></p> <p><code>description</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#commandconsole-property","title":"Command.Console Property","text":"C#<pre><code>protected HAKOM.Console.Core.Net.Api.IConsole Console { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#property-value","title":"Property Value","text":"<p>IConsole</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#commandrendertablesynctrowienumerabletrow-ienumerablestring-propertynamestring-header-method","title":"Command.RenderTableSync&lt;TRow&gt;(IEnumerable&lt;TRow&gt;, IEnumerable&lt;(string PropertyName,string Header)&gt;) Method","text":"C#<pre><code>protected void RenderTableSync&lt;TRow&gt;(System.Collections.Generic.IEnumerable&lt;TRow&gt; rows, System.Collections.Generic.IEnumerable&lt;(string PropertyName,string Header)&gt;? columns=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#type-parameters","title":"Type parameters","text":"<p><code>TRow</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Command/#parameters_1","title":"Parameters","text":"<p><code>rows</code> System.Collections.Generic.IEnumerable&lt;TRow&gt;</p> <p></p> <p><code>columns</code> System.Collections.Generic.IEnumerable&lt;&lt;System.String,System.String&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/","title":"IConsole","text":"<p>Assembly: HAKOM.Console.Core.Net</p> <p>Namespace: HAKOM.Console.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsole-interface","title":"IConsole Interface","text":"C#<pre><code>public interface IConsole :\nSystem.CommandLine.IConsole,\nSystem.CommandLine.IO.IStandardOut,\nSystem.CommandLine.IO.IStandardError,\nSystem.CommandLine.IO.IStandardIn\n</code></pre> <p>Implements System.CommandLine.IConsole, System.CommandLine.IO.IStandardOut, System.CommandLine.IO.IStandardError, System.CommandLine.IO.IStandardIn</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsoleerror-property","title":"IConsole.Error Property","text":"C#<pre><code>System.IO.TextWriter Error { get; }\n</code></pre> <p>Implements Error</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value","title":"Property Value","text":"<p>System.IO.TextWriter</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsolein-property","title":"IConsole.In Property","text":"C#<pre><code>System.IO.TextReader In { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_1","title":"Property Value","text":"<p>System.IO.TextReader</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsoleinputencoding-property","title":"IConsole.InputEncoding Property","text":"C#<pre><code>System.Text.Encoding InputEncoding { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_2","title":"Property Value","text":"<p>System.Text.Encoding</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsoleout-property","title":"IConsole.Out Property","text":"C#<pre><code>System.IO.TextWriter Out { get; }\n</code></pre> <p>Implements Out</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_3","title":"Property Value","text":"<p>System.IO.TextWriter</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsoleoutputencoding-property","title":"IConsole.OutputEncoding Property","text":"C#<pre><code>System.Text.Encoding OutputEncoding { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_4","title":"Property Value","text":"<p>System.Text.Encoding</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsolewindowheight-property","title":"IConsole.WindowHeight Property","text":"C#<pre><code>int WindowHeight { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_5","title":"Property Value","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#iconsolewindowwidth-property","title":"IConsole.WindowWidth Property","text":"C#<pre><code>int WindowWidth { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/IConsole/#property-value_6","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/","title":"HAKOM.Console.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Console.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/#hakomconsolecorenetapiextensions-namespace","title":"HAKOM.Console.Core.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Console.Core.Net</p> <p>Namespace: HAKOM.Console.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconsolethis-icontainer-textwriter-textwriter-textreader-method","title":"ContainerExtensions.UseConsole(this IContainer, TextWriter, TextWriter, TextReader) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConsole(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.IO.TextWriter @out, System.IO.TextWriter error, System.IO.TextReader @in);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>out</code> System.IO.TextWriter</p> <p></p> <p><code>error</code> System.IO.TextWriter</p> <p></p> <p><code>in</code> System.IO.TextReader</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconsolethis-icontainer-method","title":"ContainerExtensions.UseConsole(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConsole(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Console/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/","title":"HAKOM.Cryptography.Core.Net","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/#hakomcryptographycorenet-assembly","title":"HAKOM.Cryptography.Core.Net Assembly","text":"Namespaces HAKOM.Cryptography.Core.Net.Api HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions HAKOM.Cryptography.Core.Net.Api.CertificateStores.LocalUser.Exceptions HAKOM.Cryptography.Core.Net.Api.Exceptions HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateExceptions HAKOM.Cryptography.Core.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/","title":"HAKOM.Cryptography.Core.Net.Api","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/#hakomcryptographycorenetapi-namespace","title":"HAKOM.Cryptography.Core.Net.Api Namespace","text":"Interfaces ICertificateStore Used to save, load and delete certificates. ICertificateStoreFactory ICertificateStoreRegistration ICryptographyService Provides functions to encrypt and decrypt data, aws well as signing data and verifying signatures. Enums DefaultCertificateStoreNames"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/DefaultCertificateStoreNames/","title":"DefaultCertificateStoreNames","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/DefaultCertificateStoreNames/#defaultcertificatestorenames-enum","title":"DefaultCertificateStoreNames Enum","text":"C#<pre><code>public enum DefaultCertificateStoreNames\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/DefaultCertificateStoreNames/#fields","title":"Fields","text":"<p><code>FileSystem</code> 1</p> <p></p> <p><code>LocalUser</code> 0</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/","title":"ICertificateStore","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestore-interface","title":"ICertificateStore Interface","text":"<p>Used to save, load and delete certificates.</p> C#<pre><code>public interface ICertificateStore\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#remarks","title":"Remarks","text":"<p>Some methods from this interface return System.Security.Cryptography.X509Certificates.X509Certificate2 objects. The caller is responsible to dispose of those!</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestoreconfigureiconfiguration-cancellationtoken-method","title":"ICertificateStore.Configure(IConfiguration, CancellationToken) Method","text":"<p>Uses an Microsoft.Extensions.Configuration.IConfiguration object to initialise some internal variables necessary for the other certificate store operations.</p> C#<pre><code>System.Threading.Tasks.Task Configure(Microsoft.Extensions.Configuration.IConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The Microsoft.Extensions.Configuration.IConfiguration object.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task signifying the configuration has been completed successfully.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestoredeletestring-cancellationtoken-method","title":"ICertificateStore.Delete(string, CancellationToken) Method","text":"<p>Attempts to delete a certificate in the store based on the given name. Throws an appropriate exception, if such a certificate can't be found in the configuration or the store, or if there was a problem while attempting to delete it.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the certificate.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task signifying successful deletion.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestorefindcancellationtoken-method","title":"ICertificateStore.Find(CancellationToken) Method","text":"<p>Returns all configured certificates, which exist in the store.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of disposeable certificates.             The caller has the responsibility to dispose of the System.Security.Cryptography.X509Certificates.X509Certificate2 objects!</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestoreloadstring-cancellationtoken-method","title":"ICertificateStore.Load(string, CancellationToken) Method","text":"<p>Searches for a certificate based on the given name. If there is no configured certificate with that name, or if it can't be found in the store, a relevant exception will be trhown instead.</p> C#<pre><code>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; Load(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters_3","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the certificate.\"/&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; An awaitable System.Threading.Tasks.Task&lt;&gt;             containing a disposable certificate. The caller has the responsibility to dispose of it!</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestoresavestring-x509certificate2-cancellationtoken-method","title":"ICertificateStore.Save(string, X509Certificate2, CancellationToken) Method","text":"<p>Attempts to save the given certificateToSave to the store based on the given name. Throws an appropriate exception, if such a certificate already exists in the configuration, or if there was a problem while attempting to save it.</p> C#<pre><code>System.Threading.Tasks.Task Save(string name, System.Security.Cryptography.X509Certificates.X509Certificate2 certificateToSave, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters_4","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the certificate</p> <p></p> <p><code>certificateToSave</code> System.Security.Cryptography.X509Certificates.X509Certificate2</p> <p>The System.Security.Cryptography.X509Certificates.X509Certificate2 which will be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task signifying a successful save.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#icertificatestoretryloadstring-cancellationtoken-method","title":"ICertificateStore.TryLoad(string, CancellationToken) Method","text":"<p>Attempts to find a certificate based on the given name. Returns null, if there is no configured certificate with that name, or if it can't be found in the store.</p> C#<pre><code>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2?&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#parameters_5","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the certificate.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; An awaitable System.Threading.Tasks.Task&lt;&gt;             containing a disposable certificate or null. The caller has the responsibility to dispose of it!</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/","title":"ICertificateStoreFactory","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#icertificatestorefactory-interface","title":"ICertificateStoreFactory Interface","text":"C#<pre><code>public interface ICertificateStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#icertificatestorefactorycreatestring-iconfiguration-cancellationtoken-method","title":"ICertificateStoreFactory.Create(string, IConfiguration, CancellationToken) Method","text":"<p>Creates an instance of an ICertificateStore with the specified name using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Cryptography.Core.Net.Api.ICertificateStore&gt; Create(string name, Microsoft.Extensions.Configuration.IConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the store to create.</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The configuration of the store to create.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ICertificateStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created ICertificateStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#icertificatestorefactorygetavailablestores-method","title":"ICertificateStoreFactory.GetAvailableStores() Method","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;string&gt; GetAvailableStores();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#icertificatestorefactorytrycreatestring-iconfiguration-cancellationtoken-method","title":"ICertificateStoreFactory.TryCreate(string, IConfiguration, CancellationToken) Method","text":"<p>Tries to create an instance of an ICertificateStore with the specified name using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Cryptography.Core.Net.Api.ICertificateStore&gt;&gt; TryCreate(string name, Microsoft.Extensions.Configuration.IConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the store to create.</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The configuration of the store to create.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ICertificateStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ICertificateStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreRegistration/","title":"ICertificateStoreRegistration","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreRegistration/#icertificatestoreregistration-interface","title":"ICertificateStoreRegistration Interface","text":"C#<pre><code>public interface ICertificateStoreRegistration :\nHAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;string, Microsoft.Extensions.Configuration.IConfiguration, HAKOM.Cryptography.Core.Net.Api.ICertificateStore&gt;\n</code></pre> <p>Implements HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;System.String,Microsoft.Extensions.Configuration.IConfiguration,ICertificateStore&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreRegistration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreRegistration/#icertificatestoreregistrationstorename-property","title":"ICertificateStoreRegistration.StoreName Property","text":"C#<pre><code>string StoreName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICertificateStoreRegistration/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/","title":"ICryptographyService","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservice-interface","title":"ICryptographyService Interface","text":"<p>Provides functions to encrypt and decrypt data, aws well as signing data and verifying signatures.</p> C#<pre><code>public interface ICryptographyService\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicedefault_certificate_name-field","title":"ICryptographyService.DEFAULT_CERTIFICATE_NAME Field","text":"C#<pre><code>const string DEFAULT_CERTIFICATE_NAME = Default;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicedecryptbyte-string-cancellationtoken-method","title":"ICryptographyService.Decrypt(byte[], string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then decrypts the given data with the private key from found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;byte[]&gt; Decrypt(byte[] data, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The encrypted data, which will be decrypted.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the private key, which will be used for the decryption.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Byte[]&gt; A System.Threading.Tasks.Task containing the decrypted System.Byte array.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicedecryptbyte-x509certificate2-method","title":"ICryptographyService.Decrypt(byte[], X509Certificate2) Method","text":"<p>Decrypts the encrypted data with the private key from the given certificate.</p> C#<pre><code>byte[] Decrypt(byte[] data, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_1","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The encrypted data, which will be decrypted.</p> <p></p> <p><code>certificate</code> System.Security.Cryptography.X509Certificates.X509Certificate2</p> <p>The certificate containing the private key, which will be used for the decryption.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_1","title":"Returns","text":"<p>System.Byte[] The decrypted data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicedecryptbase64string-string-cancellationtoken-method","title":"ICryptographyService.DecryptBase64(string, string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then decrypts the given base64String with the private key from found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;byte[]&gt; DecryptBase64(string base64String, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_2","title":"Parameters","text":"<p><code>base64String</code> System.String</p> <p>The encrypted base64 encoded string.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the private key, which will be used for the decryption.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Byte[]&gt; A System.Threading.Tasks.Task containing the decrypted System.Byte array.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyserviceencryptbyte-string-cancellationtoken-method","title":"ICryptographyService.Encrypt(byte[], string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then encrypts the given data with the public key from found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;byte[]&gt; Encrypt(byte[] data, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_3","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The data, which will be encrypted.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the public key, which will be used for the encryption.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Byte[]&gt; A System.Threading.Tasks.Task containing the encrypted System.Byte array.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyserviceencryptbyte-x509certificate2-method","title":"ICryptographyService.Encrypt(byte[], X509Certificate2) Method","text":"<p>Encrypts the given data with the public key from the given certificate.</p> C#<pre><code>byte[] Encrypt(byte[] data, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_4","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The data, which will be encrypted.</p> <p></p> <p><code>certificate</code> System.Security.Cryptography.X509Certificates.X509Certificate2</p> <p>The certificate containing the public key, which will be used for the encryption.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_4","title":"Returns","text":"<p>System.Byte[] A System.Byte array, which represents the encrypted data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyserviceencryptbase64byte-string-cancellationtoken-method","title":"ICryptographyService.EncryptBase64(byte[], string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then encrypts the given data with the public key from found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;string&gt; EncryptBase64(byte[] data, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_5","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The data, which will be encrypted.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the public key, which will be used for the encryption.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.String&gt; A System.Threading.Tasks.Task containing the a base64 encoded representation of the encrypted byte array.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicesignbyte-string-cancellationtoken-method","title":"ICryptographyService.Sign(byte[], string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then signs the given data with the private key from found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;byte[]&gt; Sign(byte[] data, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_6","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The encrypted data, which will be signed.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the private key, which will be used for the signature.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Byte[]&gt; A System.Threading.Tasks.Task containing the signature for the specified data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyservicesignbyte-x509certificate2-method","title":"ICryptographyService.Sign(byte[], X509Certificate2) Method","text":"<p>Signs the encrypted data with the private key from the given certificate.</p> C#<pre><code>byte[] Sign(byte[] data, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_7","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The encrypted data, which will be signed.</p> <p></p> <p><code>certificate</code> System.Security.Cryptography.X509Certificates.X509Certificate2</p> <p>The certificate containing the private key, which will be used for the signature.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_7","title":"Returns","text":"<p>System.Byte[] The RSA signature for the specified data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyserviceverifybyte-byte-string-cancellationtoken-method","title":"ICryptographyService.Verify(byte[], byte[], string, CancellationToken) Method","text":"<p>Tries to load a certificate with the given certificateName then verifies that the given data was signed with the private key coresponding to the public key from the found certificate.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; Verify(byte[] data, byte[] signature, string certificateName=\"Default\", System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_8","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The signed data.</p> <p></p> <p><code>signature</code> System.Byte[]</p> <p>The signature, which will be tested.</p> <p></p> <p><code>certificateName</code> System.String</p> <p>The name of the certificate containing the private key, which will be used for the signature verification.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken used to interrupt the async method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing the verification result: true,             if the data was signed by the entity with the public key from the found certificate.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#icryptographyserviceverifybyte-byte-x509certificate2-method","title":"ICryptographyService.Verify(byte[], byte[], X509Certificate2) Method","text":"<p>Verifies that the given data was signed with the private key coresponding to the public key from the given certificate.</p> C#<pre><code>bool Verify(byte[] data, byte[] signature, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#parameters_9","title":"Parameters","text":"<p><code>data</code> System.Byte[]</p> <p>The signed data.</p> <p></p> <p><code>signature</code> System.Byte[]</p> <p>The signature, which will be tested.</p> <p></p> <p><code>certificate</code> System.Security.Cryptography.X509Certificates.X509Certificate2</p> <p>The certificate containing the public key, which will be used for the signature verification.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/ICryptographyService/#returns_9","title":"Returns","text":"<p>System.Boolean True, if the data was signed by the entity with the public key from the given certificate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/#hakomcryptographycorenetapicertificatestoresexceptions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions Namespace","text":"Classes CertificateNameAlreadyTakenException Is thrown when a Save(string, X509Certificate2, CancellationToken) method invocation tries to save an certificate by a name, that is already taken. CertificateNameNotFoundInConfigurationException Is thrown when a Load(string, CancellationToken),or Delete(string, CancellationToken)method invocation doesn't find a given certificate name in the Microsoft.Extensions.Configuration.IConfiguration. CertificateStoreException Parent exception class for all certificate store exceptions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/","title":"CertificateNameAlreadyTakenException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#certificatenamealreadytakenexception-class","title":"CertificateNameAlreadyTakenException Class","text":"<p>Is thrown when a Save(string, X509Certificate2, CancellationToken) method invocation tries to save an certificate by a name, that is already taken.</p> C#<pre><code>public sealed class CertificateNameAlreadyTakenException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 CertificateNameAlreadyTakenException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#certificatenamealreadytakenexceptionduplicatedname-property","title":"CertificateNameAlreadyTakenException.DuplicatedName Property","text":"<p>The name of the certificate in ICertificateStore that is already taken.</p> C#<pre><code>public string DuplicatedName { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#certificatenamealreadytakenexceptionequivalenthttpstatuscode-property","title":"CertificateNameAlreadyTakenException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameAlreadyTakenException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/","title":"CertificateNameNotFoundInConfigurationException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#certificatenamenotfoundinconfigurationexception-class","title":"CertificateNameNotFoundInConfigurationException Class","text":"<p>Is thrown when a Load(string, CancellationToken), or Delete(string, CancellationToken) method invocation doesn't find a given certificate name in the Microsoft.Extensions.Configuration.IConfiguration.</p> C#<pre><code>public sealed class CertificateNameNotFoundInConfigurationException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 CertificateNameNotFoundInConfigurationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#certificatenamenotfoundinconfigurationexceptionequivalenthttpstatuscode-property","title":"CertificateNameNotFoundInConfigurationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#certificatenamenotfoundinconfigurationexceptionunknowncertificatename-property","title":"CertificateNameNotFoundInConfigurationException.UnknownCertificateName Property","text":"C#<pre><code>public string UnknownCertificateName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateNameNotFoundInConfigurationException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateStoreException/","title":"CertificateStoreException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/Exceptions/CertificateStoreException/#certificatestoreexception-class","title":"CertificateStoreException Class","text":"<p>Parent exception class for all certificate store exceptions</p> C#<pre><code>public abstract class CertificateStoreException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException</p> <p>Derived \u21b3 CertificateNameAlreadyTakenException \u21b3 CertificateNameNotFoundInConfigurationException \u21b3 AllRootPathAlternativesExhaustedException \u21b3 CertificateFileDoesNotExistException \u21b3 CertificateFilenameAlreadyExistsException \u21b3 PasswordWrongOrCertificateIsInvalidException \u21b3 ConfiguredCertificateNotFoundInStoreException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/#hakomcryptographycorenetapicertificatestoresfilesystem-namespace","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem Namespace","text":"Interfaces IPfxSettingsProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/","title":"IPfxSettingsProvider","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#ipfxsettingsprovider-interface","title":"IPfxSettingsProvider Interface","text":"C#<pre><code>public interface IPfxSettingsProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#ipfxsettingsprovidergetfilenamestring-cancellationtoken-method","title":"IPfxSettingsProvider.GetFilename(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;string&gt; GetFilename(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#ipfxsettingsprovidergetpasswordstring-cancellationtoken-method","title":"IPfxSettingsProvider.GetPassword(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;string&gt; GetPassword(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/IPfxSettingsProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/#hakomcryptographycorenetapicertificatestoresfilesystemexceptions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions Namespace","text":"Classes AllRootPathAlternativesExhaustedException Gets thrown when a given certificates relative path could not be resolved because the root path alternatives have all been tried and no combination yielded a valid absolute path for the given certificate. CertificateFileDoesNotExistException Is thrown by the ICertificateStore when a certificate file could not be found. CertificateFilenameAlreadyExistsException Gets thrown when a certificate save operation is being attempted in a location already occupied by a different file. PasswordWrongOrCertificateIsInvalidException"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/","title":"AllRootPathAlternativesExhaustedException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#allrootpathalternativesexhaustedexception-class","title":"AllRootPathAlternativesExhaustedException Class","text":"<p>Gets thrown when a given certificates relative path could not be resolved because  the root path alternatives have all been tried and no combination yielded a valid  absolute path for the given certificate.</p> C#<pre><code>public sealed class AllRootPathAlternativesExhaustedException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 AllRootPathAlternativesExhaustedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#allrootpathalternativesexhaustedexceptioncertificatename-property","title":"AllRootPathAlternativesExhaustedException.CertificateName Property","text":"C#<pre><code>public string CertificateName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#allrootpathalternativesexhaustedexceptionequivalenthttpstatuscode-property","title":"AllRootPathAlternativesExhaustedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/AllRootPathAlternativesExhaustedException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/","title":"CertificateFileDoesNotExistException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#certificatefiledoesnotexistexception-class","title":"CertificateFileDoesNotExistException Class","text":"<p>Is thrown by the ICertificateStore when a certificate file could not be found.</p> C#<pre><code>public sealed class CertificateFileDoesNotExistException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 CertificateFileDoesNotExistException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#certificatefiledoesnotexistexceptionequivalenthttpstatuscode-property","title":"CertificateFileDoesNotExistException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#certificatefiledoesnotexistexceptionfilename-property","title":"CertificateFileDoesNotExistException.FileName Property","text":"<p>The full filename which does not exist.</p> C#<pre><code>public string FileName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFileDoesNotExistException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/","title":"CertificateFilenameAlreadyExistsException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#certificatefilenamealreadyexistsexception-class","title":"CertificateFilenameAlreadyExistsException Class","text":"<p>Gets thrown when a certificate save operation is being attempted in a location already occupied by a different file.</p> C#<pre><code>public sealed class CertificateFilenameAlreadyExistsException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 CertificateFilenameAlreadyExistsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#certificatefilenamealreadyexistsexceptionequivalenthttpstatuscode-property","title":"CertificateFilenameAlreadyExistsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#certificatefilenamealreadyexistsexceptionexistingcertificatefilename-property","title":"CertificateFilenameAlreadyExistsException.ExistingCertificateFilename Property","text":"<p>The full filename which is already occupied.</p> C#<pre><code>public string ExistingCertificateFilename { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/CertificateFilenameAlreadyExistsException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/","title":"PasswordWrongOrCertificateIsInvalidException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.FileSystem.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#passwordwrongorcertificateisinvalidexception-class","title":"PasswordWrongOrCertificateIsInvalidException Class","text":"C#<pre><code>public sealed class PasswordWrongOrCertificateIsInvalidException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 PasswordWrongOrCertificateIsInvalidException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#passwordwrongorcertificateisinvalidexceptioncertificatename-property","title":"PasswordWrongOrCertificateIsInvalidException.CertificateName Property","text":"C#<pre><code>public string CertificateName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#passwordwrongorcertificateisinvalidexceptionequivalenthttpstatuscode-property","title":"PasswordWrongOrCertificateIsInvalidException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/FileSystem/Exceptions/PasswordWrongOrCertificateIsInvalidException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.LocalUser.Exceptions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/#hakomcryptographycorenetapicertificatestoreslocaluserexceptions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.CertificateStores.LocalUser.Exceptions Namespace","text":"Classes ConfiguredCertificateNotFoundInStoreException"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/ConfiguredCertificateNotFoundInStoreException/","title":"ConfiguredCertificateNotFoundInStoreException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.CertificateStores.LocalUser.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/ConfiguredCertificateNotFoundInStoreException/#configuredcertificatenotfoundinstoreexception-class","title":"ConfiguredCertificateNotFoundInStoreException Class","text":"C#<pre><code>public sealed class ConfiguredCertificateNotFoundInStoreException : HAKOM.Cryptography.Core.Net.Api.CertificateStores.Exceptions.CertificateStoreException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateStoreException \ud83e\udc52 ConfiguredCertificateNotFoundInStoreException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/ConfiguredCertificateNotFoundInStoreException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/ConfiguredCertificateNotFoundInStoreException/#configuredcertificatenotfoundinstoreexceptionequivalenthttpstatuscode-property","title":"ConfiguredCertificateNotFoundInStoreException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/CertificateStores/LocalUser/Exceptions/ConfiguredCertificateNotFoundInStoreException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/","title":"HAKOM.Cryptography.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/#hakomcryptographycorenetapiexceptions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.Exceptions Namespace","text":"Classes CertificateNotFoundException Indicates that a certificate was not found in any of the configured stores. InvalidRsaCertificateException Abstract class for Exceptions indicating an invalid RSA certificate, because a key is missing."},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/CertificateNotFoundException/","title":"CertificateNotFoundException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/CertificateNotFoundException/#certificatenotfoundexception-class","title":"CertificateNotFoundException Class","text":"<p>Indicates that a certificate was not found in any of the configured stores.</p> C#<pre><code>public sealed class CertificateNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CertificateNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/CertificateNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/CertificateNotFoundException/#certificatenotfoundexceptionequivalenthttpstatuscode-property","title":"CertificateNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/CertificateNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateException/","title":"InvalidRsaCertificateException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateException/#invalidrsacertificateexception-class","title":"InvalidRsaCertificateException Class","text":"<p>Abstract class for Exceptions indicating an invalid RSA certificate, because a key is missing.</p> C#<pre><code>public abstract class InvalidRsaCertificateException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRsaCertificateException</p> <p>Derived \u21b3 MissingRsaPrivateKeyException \u21b3 MissingRsaPublicKeyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/","title":"HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateExceptions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/#hakomcryptographycorenetapiexceptionsinvalidrsacertificateexceptions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateExceptions Namespace","text":"Classes MissingRsaPrivateKeyException Indicates the private key of the certificate is missing. MissingRsaPublicKeyException Indicates the public key of the certificate is missing."},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPrivateKeyException/","title":"MissingRsaPrivateKeyException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPrivateKeyException/#missingrsaprivatekeyexception-class","title":"MissingRsaPrivateKeyException Class","text":"<p>Indicates the private key of the certificate is missing.</p> C#<pre><code>public sealed class MissingRsaPrivateKeyException : HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRsaCertificateException \ud83e\udc52 MissingRsaPrivateKeyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPrivateKeyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPrivateKeyException/#missingrsaprivatekeyexceptionequivalenthttpstatuscode-property","title":"MissingRsaPrivateKeyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPrivateKeyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPublicKeyException/","title":"MissingRsaPublicKeyException","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPublicKeyException/#missingrsapublickeyexception-class","title":"MissingRsaPublicKeyException Class","text":"<p>Indicates the public key of the certificate is missing.</p> C#<pre><code>public sealed class MissingRsaPublicKeyException : HAKOM.Cryptography.Core.Net.Api.Exceptions.InvalidRsaCertificateException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRsaCertificateException \ud83e\udc52 MissingRsaPublicKeyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPublicKeyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPublicKeyException/#missingrsapublickeyexceptionequivalenthttpstatuscode-property","title":"MissingRsaPublicKeyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Exceptions/InvalidRsaCertificateExceptions/MissingRsaPublicKeyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/","title":"HAKOM.Cryptography.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/#hakomcryptographycorenetapiextensions-namespace","title":"HAKOM.Cryptography.Core.Net.Api.Extensions Namespace","text":"Classes ConfigurationSectionExtensions ContainerExtensions Provides extension methods for registering common typesof cryptography services."},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/","title":"ConfigurationSectionExtensions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#configurationsectionextensions-class","title":"ConfigurationSectionExtensions Class","text":"C#<pre><code>public static class ConfigurationSectionExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ConfigurationSectionExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#configurationsectionextensionsgetsettingswithdecryptionthis-iconfigurationsection-icryptographyservice-method","title":"ConfigurationSectionExtensions.GetSettingsWithDecryption(this IConfigurationSection, ICryptographyService) Method","text":"C#<pre><code>public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt; GetSettingsWithDecryption(this Microsoft.Extensions.Configuration.IConfigurationSection configurationSection, HAKOM.Cryptography.Core.Net.Api.ICryptographyService cryptographyService);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#parameters","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p> <p><code>cryptographyService</code> ICryptographyService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#configurationsectionextensionstrygetvaluewithdecryptionthis-iconfigurationsection-icryptographyservice-method","title":"ConfigurationSectionExtensions.TryGetValueWithDecryption(this IConfigurationSection, ICryptographyService) Method","text":"C#<pre><code>public static System.Threading.Tasks.Task&lt;string?&gt; TryGetValueWithDecryption(this Microsoft.Extensions.Configuration.IConfigurationSection configurationSection, HAKOM.Cryptography.Core.Net.Api.ICryptographyService cryptographyService);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#parameters_1","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p> <p><code>cryptographyService</code> ICryptographyService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ConfigurationSectionExtensions/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Cryptography.Core.Net</p> <p>Namespace: HAKOM.Cryptography.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering common types of cryptography services.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensionsusecertificatestoretstorethis-icontainer-string-method","title":"ContainerExtensions.UseCertificateStore&lt;TStore&gt;(this IContainer, string) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCertificateStore&lt;TStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, string name)\n    where TStore : class, HAKOM.Cryptography.Core.Net.Api.ICertificateStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStore</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensionsusedefaultcryptographyfactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultCryptographyFactories(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultCryptographyFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensionsusedefaultcryptographyservicethis-icontainer-method","title":"ContainerExtensions.UseDefaultCryptographyService(this IContainer) Method","text":"<p>Register the default CryptographyService with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultCryptographyService(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>Container to register the cryptography service with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensionsusefilesystemcertificatesthis-icontainer-method","title":"ContainerExtensions.UseFileSystemCertificates(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseFileSystemCertificates(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#containerextensionsuselocalusercertificatesthis-icontainer-method","title":"ContainerExtensions.UseLocalUserCertificates(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseLocalUserCertificates(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Cryptography/Core/API/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/","title":"HAKOM Dependency Injection","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/","title":"HAKOM.DependencyInjection.Configuration.Net","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/#hakomdependencyinjectionconfigurationnet-assembly","title":"HAKOM.DependencyInjection.Configuration.Net Assembly","text":"Namespaces HAKOM.DependencyInjection.Configuration.Net.Api HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions HAKOM.DependencyInjection.Configuration.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/","title":"HAKOM.DependencyInjection.Configuration.Net.Api","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/#hakomdependencyinjectionconfigurationnetapi-namespace","title":"HAKOM.DependencyInjection.Configuration.Net.Api Namespace","text":"Interfaces IAssemblyLoader Responsible for loading an assembly from the given path. ICustomRegistrationOptions Configures additional dependencies that should be registered with an IContainer on startup.For this to work, the given Assembly should contain a public, static class named as configured in ClassName.That class should define a public static method that takes an IContainer as its first and only parameter and that method should have the same name as configured in RegistrationMethod."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/","title":"IAssemblyLoader","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/#iassemblyloader-interface","title":"IAssemblyLoader Interface","text":"<p>Responsible for loading an assembly from the given path.</p> C#<pre><code>public interface IAssemblyLoader\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/#iassemblyloaderloadstring-string-method","title":"IAssemblyLoader.Load(string, string) Method","text":"<p>Attempts to load an assembly from the given .</p> C#<pre><code>System.Reflection.Assembly Load(string fileName, string? referencesRoot);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/#parameters","title":"Parameters","text":"<p><code>fileName</code> System.String</p> <p>The absolute or relative location of the file to be loaded.</p> <p></p> <p><code>referencesRoot</code> System.String</p> <p>Optionally, an absolute path to a directory in which assemblies referenced by the assembly given in fileName are located.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/IAssemblyLoader/#returns","title":"Returns","text":"<p>System.Reflection.Assembly</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/","title":"ICustomRegistrationOptions","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptions-interface","title":"ICustomRegistrationOptions Interface","text":"<p>Configures additional dependencies that should be registered with an IContainer on startup. For this to work, the given Assembly should contain a public, static class named as configured in ClassName. That class should define a public static method that takes an IContainer as its first and only parameter and that method should have the same name as configured in RegistrationMethod.</p> C#<pre><code>public interface ICustomRegistrationOptions :\nSystem.IEquatable&lt;HAKOM.DependencyInjection.Configuration.Net.Api.ICustomRegistrationOptions&gt;\n</code></pre> <p>Implements System.IEquatable&lt;ICustomRegistrationOptions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptionsassembly-property","title":"ICustomRegistrationOptions.Assembly Property","text":"<p>The absolute or relative path to the .dll file that contains the class specified under ClassName. If the path is relative, the location where the file will be looked for depends on any previously registered instance of IDefaultResourcePathProvider. If there is no IDefaultResourcePathProvider registerd, Default will be used.</p> C#<pre><code>string? Assembly { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptionsclassname-property","title":"ICustomRegistrationOptions.ClassName Property","text":"<p>Fully qualified name of the class that implements the given RegistrationMethod.</p> C#<pre><code>string? ClassName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptionsname-property","title":"ICustomRegistrationOptions.Name Property","text":"<p>The name of this registration. Must be unique across all configured ICustomRegistrationOptions.</p> C#<pre><code>string? Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptionsregistrationmethod-property","title":"ICustomRegistrationOptions.RegistrationMethod Property","text":"<p>Name of the method that should be called with the current IContainer as its first parameter. This value should not be fully qualified, only containing the method name itself.</p> C#<pre><code>string? RegistrationMethod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#property-value_3","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/ICustomRegistrationOptions/#icustomregistrationoptionsvalidate-method","title":"ICustomRegistrationOptions.Validate() Method","text":"<p>Validates if all fields have valid values assigned.</p> C#<pre><code>void Validate();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/","title":"HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/#hakomdependencyinjectionconfigurationnetapiexceptions-namespace","title":"HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions Namespace","text":"Classes AssemblyNotFoundException Indicates that a given assembly from the CustomRegistration-Section in the configuration could not be found in the executing path. FailedToLoadAssemblyException Indicates that there was an issue loading the given assembly. The System.Exception.InnerException should provide more information. IncompleteCustomRegistrationException Indicates a faulty configuration for custom service registrations. RegistrationMethodNotFoundException Indicates that the method given for registration of a type configured in the CustomRegistration section is either missing or does not have the expected parameters."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/AssemblyNotFoundException/","title":"AssemblyNotFoundException","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/AssemblyNotFoundException/#assemblynotfoundexception-class","title":"AssemblyNotFoundException Class","text":"<p>Indicates that a given assembly from the CustomRegistration-Section in the configuration could not be found  in the executing path.</p> C#<pre><code>public sealed class AssemblyNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AssemblyNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/AssemblyNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/AssemblyNotFoundException/#assemblynotfoundexceptionequivalenthttpstatuscode-property","title":"AssemblyNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/AssemblyNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/FailedToLoadAssemblyException/","title":"FailedToLoadAssemblyException","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/FailedToLoadAssemblyException/#failedtoloadassemblyexception-class","title":"FailedToLoadAssemblyException Class","text":"<p>Indicates that there was an issue loading the given assembly. The System.Exception.InnerException should provide more information.</p> C#<pre><code>public sealed class FailedToLoadAssemblyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FailedToLoadAssemblyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/FailedToLoadAssemblyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/FailedToLoadAssemblyException/#failedtoloadassemblyexceptionequivalenthttpstatuscode-property","title":"FailedToLoadAssemblyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/FailedToLoadAssemblyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/","title":"IncompleteCustomRegistrationException","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/#incompletecustomregistrationexception-class","title":"IncompleteCustomRegistrationException Class","text":"<p>Indicates a faulty configuration for custom service registrations.</p> C#<pre><code>public sealed class IncompleteCustomRegistrationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IncompleteCustomRegistrationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/#remarks","title":"Remarks","text":"<p>Make sure none of the required settings is missing or empty.  </p> <p>This exception is identified by error code HK08015</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/#incompletecustomregistrationexceptionequivalenthttpstatuscode-property","title":"IncompleteCustomRegistrationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/IncompleteCustomRegistrationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/","title":"RegistrationMethodNotFoundException","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/#registrationmethodnotfoundexception-class","title":"RegistrationMethodNotFoundException Class","text":"<p>Indicates that the method given for registration of a type configured in the CustomRegistration section is  either missing or does not have the expected parameters.</p> C#<pre><code>public sealed class RegistrationMethodNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RegistrationMethodNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/#remarks","title":"Remarks","text":"<p>Ensure that a public method with that name exists in the class specified in the CustomRegistration section.  </p> <p>This exception is identified by error code HK08017</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/#registrationmethodnotfoundexceptionequivalenthttpstatuscode-property","title":"RegistrationMethodNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Exceptions/RegistrationMethodNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/","title":"HAKOM.DependencyInjection.Configuration.Net.Api.Extensions","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/#hakomdependencyinjectionconfigurationnetapiextensions-namespace","title":"HAKOM.DependencyInjection.Configuration.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Contains IContainer extension methods for adding services via configuration."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.DependencyInjection.Configuration.Net</p> <p>Namespace: HAKOM.DependencyInjection.Configuration.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Contains IContainer extension methods for adding services via configuration.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#containerextensionsuseconfiguredregistrationsthis-icontainer-iconfiguration-method","title":"ContainerExtensions.UseConfiguredRegistrations(this IContainer, IConfiguration) Method","text":"<p>Allows registration of services from external dependencies based on configuration.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguredRegistrations(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer where the custom type registrations should be added.</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The Microsoft.Extensions.Configuration.IConfiguration which contains the section \"CustomRegistrations\".</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer where the custom type registrations are added.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Configuration/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when either the given IContainer or Microsoft.Extensions.Configuration.IConfiguration</p> <p>IncompleteCustomRegistrationException Thrown when the section \"CustomRegistrations\" in the Microsoft.Extensions.Configuration.IConfiguration is incomplete.</p> <p>AssemblyNotFoundException Thrown when the given assembly in the section \"CustomRegistration\" in the Microsoft.Extensions.Configuration.IConfiguration cannot be found.</p> <p>RegistrationMethodNotFoundException Thrown when the given RegistrationMethod in the section \"CustomRegistration\" in the Microsoft.Extensions.Configuration.IConfiguration is not a valid Method in the given class.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/","title":"HAKOM.DependencyInjection.Core.Net","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/#hakomdependencyinjectioncorenet-assembly","title":"HAKOM.DependencyInjection.Core.Net Assembly","text":"Namespaces HAKOM.DependencyInjection.Core.Net.Api HAKOM.DependencyInjection.Core.Net.Api.Exceptions HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions HAKOM.DependencyInjection.Core.Net.Api.Extensions HAKOM.DependencyInjection.Core.Net.Api.Factories HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/","title":"HAKOM.DependencyInjection.Core.Net.Api","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/#hakomdependencyinjectioncorenetapi-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api Namespace","text":"Interfaces IActivatedContainer A dependency injection container used to resolve dependencies. IApplicationContext Used to configure a dependency injection container and activatea registered service to act as the root of an application. IContainer Dependency injection container used to register/resolve services/implementing types IRequiresConfiguration ISharedInstance&lt;TCommon,TShared&gt; Represents a container for an instance of type TSharedthat all activations of TCommon want to share among themselves.The implementation of TCommon should add a dependency to ISharedInstance&lt;TCommon,TShared&gt; to access the shared instancethrough Instance."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/","title":"IActivatedContainer","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/#iactivatedcontainer-interface","title":"IActivatedContainer Interface","text":"<p>A dependency injection container used to resolve dependencies.</p> C#<pre><code>public interface IActivatedContainer :\nSystem.IDisposable\n</code></pre> <p>Derived \u21b3 IContainer</p> <p>Implements System.IDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/#iactivatedcontainerresolvetservice-method","title":"IActivatedContainer.Resolve&lt;TService&gt;() Method","text":"<p>Resolves an instance of the registered implementation for the given type</p> C#<pre><code>TService Resolve&lt;TService&gt;()\n    where TService : notnull;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type to find an implementation for</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IActivatedContainer/#returns","title":"Returns","text":"<p>TService An instance of the registered type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/","title":"IApplicationContext","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontext-interface","title":"IApplicationContext Interface","text":"<p>Used to configure a dependency injection container and activate a registered service to act as the root of an application.</p> C#<pre><code>public interface IApplicationContext\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontextcreateactionicontainer-method","title":"IApplicationContext.Create(Action&lt;IContainer&gt;) Method","text":"<p>Creates an application context using the default container.  </p> C#<pre><code>var app = IApplicationContext.Create((container)=&gt;{  \n\n    container  \n        .Use&lt;ISomeService,ISomeImplementation&gt;();  \n        .Use&lt;ISomeOtherService,ISomeOtherImplementation&gt;();  \n\n});  \n\nvar myApp = app.Start&lt;ISomeService&gt;();  \n</code></pre> C#<pre><code>static HAKOM.DependencyInjection.Core.Net.Api.IApplicationContext Create(System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt; containerConfigurator);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#parameters","title":"Parameters","text":"<p><code>containerConfigurator</code> System.Action&lt;IContainer&gt;</p> <p>Register any dependencies within this action.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#returns","title":"Returns","text":"<p>IApplicationContext The IApplicationContext that can be used to activate any registered type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontextcreatetcontaineractiontcontainer-method","title":"IApplicationContext.Create&lt;TContainer&gt;(Action&lt;TContainer&gt;) Method","text":"<p>Creates an application context based on the given container type. Allows configuration of the container using the given action.</p> C#<pre><code>static HAKOM.DependencyInjection.Core.Net.Api.IApplicationContext Create&lt;TContainer&gt;(System.Action&lt;TContainer&gt; containerConfigurator)\n    where TContainer : class, HAKOM.DependencyInjection.Core.Net.Api.IContainer, new();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#type-parameters","title":"Type parameters","text":"<p><code>TContainer</code></p> <p>The type of container to use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#parameters_1","title":"Parameters","text":"<p><code>containerConfigurator</code> System.Action&lt;TContainer&gt;</p> <p>Register any dependencies within this action.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#returns_1","title":"Returns","text":"<p>IApplicationContext The IApplicationContext that can be used to wire up any registered class.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontextcreatetcontainertcontainer-method","title":"IApplicationContext.Create&lt;TContainer&gt;(TContainer) Method","text":"<p>Creates an application context based on the given container.  </p> C#<pre><code>var container = new AutoFacContainer(); //must implement IContainer  \n\ncontainer  \n    .Use&lt;ISomeService,ISomeImplementation&gt;();  \n    .Use&lt;ISomeOtherService,ISomeOtherImplementation&gt;();  \n\nvar app = IApplicationContext.Create(container);  \n\nvar myApp = app.Start&lt;ISomeService&gt;();  \n</code></pre> C#<pre><code>static HAKOM.DependencyInjection.Core.Net.Api.IApplicationContext Create&lt;TContainer&gt;(TContainer container)\n    where TContainer : class, HAKOM.DependencyInjection.Core.Net.Api.IContainer;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#type-parameters_1","title":"Type parameters","text":"<p><code>TContainer</code></p> <p>The type of container to use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#parameters_2","title":"Parameters","text":"<p><code>container</code> TContainer</p> <p>The container to use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#returns_2","title":"Returns","text":"<p>IApplicationContext The IApplicationContext that can be used to activate any registered type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontextstarttroot-method","title":"IApplicationContext.Start&lt;TRoot&gt;() Method","text":"<p>Tries to instantiate the given type based on all types registered with the app context's DI container.</p> C#<pre><code>TRoot Start&lt;TRoot&gt;()\n    where TRoot : notnull;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#type-parameters_2","title":"Type parameters","text":"<p><code>TRoot</code></p> <p>The type to instantiate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#returns_3","title":"Returns","text":"<p>TRoot The instance of the requested type as resolved by the underlying container.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#iapplicationcontextstarttroottroot-method","title":"IApplicationContext.Start&lt;TRoot&gt;(TRoot) Method","text":"<p>Tries to instantiate the given type based on all types registered with the app context's DI container.</p> C#<pre><code>System.IDisposable Start&lt;TRoot&gt;(out TRoot root)\n    where TRoot : notnull;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#type-parameters_3","title":"Type parameters","text":"<p><code>TRoot</code></p> <p>The type to instantiate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#parameters_3","title":"Parameters","text":"<p><code>root</code> TRoot</p> <p>The instance of the requested type as resolved by the underlying container.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IApplicationContext/#returns_4","title":"Returns","text":"<p>System.IDisposable An System.IDisposable that can be used to dispose of the context along             with its DI container.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/","title":"IContainer","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainer-interface","title":"IContainer Interface","text":"<p>Dependency injection container used to register/resolve services/implementing types</p> C#<pre><code>public interface IContainer :\nHAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer,\nSystem.IDisposable\n</code></pre> <p>Implements IActivatedContainer, System.IDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineractivate-method","title":"IContainer.Activate() Method","text":"<p>Seals the container against additional registrations. May perform additional tasks such as checking against cirular dependencies, etc. Must be called before any call to Resolve&lt;TService&gt;().</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer Activate();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns","title":"Returns","text":"<p>IActivatedContainer The activated IContainer as an IActivatedContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerhasservicetype-method","title":"IContainer.HasService(Type) Method","text":"C#<pre><code>bool HasService(System.Type serviceType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters","title":"Parameters","text":"<p><code>serviceType</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerhasservicetservice-method","title":"IContainer.HasService&lt;TService&gt;() Method","text":"C#<pre><code>bool HasService&lt;TService&gt;();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_2","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainertryresolvesingletonearlytservicetservice-method","title":"IContainer.TryResolveSingletonEarly&lt;TService&gt;(TService) Method","text":"<p>Resolves an already registered singleton service before the container has been activated. There are only very few use cases for this. Use with caution.</p> C#<pre><code>bool TryResolveSingletonEarly&lt;TService&gt;(out TService? service)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_1","title":"Type parameters","text":"<p><code>TService</code></p> <p>The service to resolve</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_1","title":"Parameters","text":"<p><code>service</code> TService</p> <p>The service or null if none could be resolved.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_3","title":"Returns","text":"<p>System.Boolean True if the service was resolved, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainertryresolvesingletonsearlytserviceienumerabletservice-method","title":"IContainer.TryResolveSingletonsEarly&lt;TService&gt;(IEnumerable&lt;TService&gt;) Method","text":"<p>Resolves already registered singleton services of the same type before the container has been activated. There are only very few use cases for this. Use with caution.</p> C#<pre><code>bool TryResolveSingletonsEarly&lt;TService&gt;(out System.Collections.Generic.IEnumerable&lt;TService&gt;? services)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_2","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type of the services to resolve</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_2","title":"Parameters","text":"<p><code>services</code> System.Collections.Generic.IEnumerable&lt;TService&gt;</p> <p>The services or null if none could be resolved.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_4","title":"Returns","text":"<p>System.Boolean True if the services were resolved, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetype-type-bool-method","title":"IContainer.Use(Type, Type, bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use(System.Type service, System.Type implementation, bool skipIfServiceTypeAlreadyRegistered);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_3","title":"Parameters","text":"<p><code>service</code> System.Type</p> <p></p> <p><code>implementation</code> System.Type</p> <p></p> <p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_5","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetype-type-method","title":"IContainer.Use(Type, Type) Method","text":"<p>Registers the given implementation type implementation to be injected into any class  requesting an instance of service in its constructor. The implementation is instantiated every time it is requested.   </p> <p>To reduce potential ocurrences of runtime exceptions, consider using Use&lt;TService,TImplementation&gt;() instead as this uses type constraints to produce compile-time errors in case implementation does not implement service.  </p> <p>This may be useful when registering unbound generics, for example:  registering Class to be used whenever an IInterface is requested:   C#<pre><code>container.Use(typeof(IInterface&lt;&gt;), typeof(Class&lt;&gt;));  \n</code></pre> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use(System.Type service, System.Type implementation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_4","title":"Parameters","text":"<p><code>service</code> System.Type</p> <p></p> <p><code>implementation</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_6","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetservicetimplementation-method","title":"IContainer.Use&lt;TService,TImplementation&gt;() Method","text":"<p>Registers the given implementation type to be injected into any class depending on it. The type is instantiated every time it is requested.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService,TImplementation&gt;()\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_3","title":"Type parameters","text":"<p><code>TService</code></p> <p>The registering type/interface</p> <p></p> <p><code>TImplementation</code></p> <p>The type to be injected</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_7","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetservicetimplementationbool-method","title":"IContainer.Use&lt;TService,TImplementation&gt;(bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService,TImplementation&gt;(bool skipIfServiceTypeAlreadyRegistered)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_4","title":"Type parameters","text":"<p><code>TService</code></p> <p></p> <p><code>TImplementation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_5","title":"Parameters","text":"<p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_8","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetservicetype-bool-method","title":"IContainer.Use&lt;TService&gt;(Type, bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService&gt;(System.Type implementation, bool skipIfServiceTypeAlreadyRegistered)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_5","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_6","title":"Parameters","text":"<p><code>implementation</code> System.Type</p> <p></p> <p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_9","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusetservicetype-method","title":"IContainer.Use&lt;TService&gt;(Type) Method","text":"<p>Registers the given implementation type implementation to be injected into any class  requesting an instance of TService in its constructor. The implementation is instantiated every time it is requested.  To reduce potential ocurrences of runtime exceptions, consider using Use&lt;TService,TImplementation&gt;() instead as this uses type constraints to produce compile-time errors in case implementation does not implement TService.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService&gt;(System.Type implementation)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_6","title":"Type parameters","text":"<p><code>TService</code></p> <p>The registering type/interface</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_7","title":"Parameters","text":"<p><code>implementation</code> System.Type</p> <p>The type to be injected</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_10","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseanddisposesingletontservicetservice-bool-method","title":"IContainer.UseAndDisposeSingleton&lt;TService&gt;(TService, bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAndDisposeSingleton&lt;TService&gt;(TService instance, bool skipIfServiceTypeAlreadyRegistered=false)\n    where TService : class, System.IDisposable;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_7","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_8","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_11","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseanddisposesingletontservicetservice-method","title":"IContainer.UseAndDisposeSingleton&lt;TService&gt;(TService) Method","text":"<p>Registers the given instance to be injected into any class depending on it and makes sure the instance is disposed of along with the container.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAndDisposeSingleton&lt;TService&gt;(TService instance)\n    where TService : class, System.IDisposable;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_8","title":"Type parameters","text":"<p><code>TService</code></p> <p>The registering type/interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_9","title":"Parameters","text":"<p><code>instance</code> TService</p> <p>The instance implementing TService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_12","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseoncetservicetimplementation-method","title":"IContainer.UseOnce&lt;TService,TImplementation&gt;() Method","text":"<p>Registers the given implementation type to be injected into any class depending on it. The type is only instantiated once (having been injected with any dependencies itself) and reused each time it is requested after that.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOnce&lt;TService,TImplementation&gt;()\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_9","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type/interface for which TImplementation is being registered.</p> <p></p> <p><code>TImplementation</code></p> <p>The type to be registered for TService.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_13","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseoncetservicetimplementationbool-method","title":"IContainer.UseOnce&lt;TService,TImplementation&gt;(bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOnce&lt;TService,TImplementation&gt;(bool skipIfServiceTypeAlreadyRegistered)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_10","title":"Type parameters","text":"<p><code>TService</code></p> <p></p> <p><code>TImplementation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_10","title":"Parameters","text":"<p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_14","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseoncetservicefunciactivatedcontainertservice-bool-method","title":"IContainer.UseOnce&lt;TService&gt;(Func&lt;IActivatedContainer,TService&gt;, bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOnce&lt;TService&gt;(System.Func&lt;HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer,TService&gt; factory, bool skipIfServiceTypeAlreadyRegistered)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_11","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_11","title":"Parameters","text":"<p><code>factory</code> System.Func&lt;IActivatedContainer,TService&gt;</p> <p></p> <p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_15","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontaineruseoncetservicefunciactivatedcontainertservice-method","title":"IContainer.UseOnce&lt;TService&gt;(Func&lt;IActivatedContainer,TService&gt;) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOnce&lt;TService&gt;(System.Func&lt;HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer,TService&gt; factory)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_12","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_12","title":"Parameters","text":"<p><code>factory</code> System.Func&lt;IActivatedContainer,TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_16","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusesingletontservicetservice-bool-method","title":"IContainer.UseSingleton&lt;TService&gt;(TService, bool) Method","text":"C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSingleton&lt;TService&gt;(TService instance, bool skipIfServiceTypeAlreadyRegistered)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_13","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_13","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>skipIfServiceTypeAlreadyRegistered</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_17","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#icontainerusesingletontservicetservice-method","title":"IContainer.UseSingleton&lt;TService&gt;(TService) Method","text":"<p>Registers the given instance to be injected into any class depending on it. If TService itself has dependencies to be injected, consider using UseOnce&lt;TService,TImplementation&gt;() instead. If the instance implements System.IDisposable and should be disposed along with the container, consider using UseAndDisposeSingleton&lt;TService&gt;(TService) instead.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSingleton&lt;TService&gt;(TService instance)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#type-parameters_14","title":"Type parameters","text":"<p><code>TService</code></p> <p>The registering type/interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#parameters_14","title":"Parameters","text":"<p><code>instance</code> TService</p> <p>The instance implementing TService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IContainer/#returns_18","title":"Returns","text":"<p>IContainer The IContainer itself</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/","title":"IRequiresConfiguration","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#irequiresconfiguration-interface","title":"IRequiresConfiguration Interface","text":"C#<pre><code>public interface IRequiresConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#irequiresconfigurationconfigurationmethodname-property","title":"IRequiresConfiguration.ConfigurationMethodName Property","text":"C#<pre><code>string ConfigurationMethodName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#irequiresconfigurationgetconfiguredpropertytt-string-method","title":"IRequiresConfiguration.GetConfiguredProperty&lt;T&gt;(T, string) Method","text":"C#<pre><code>T GetConfiguredProperty&lt;T&gt;(T? field, string memberName);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#type-parameters","title":"Type parameters","text":"<p><code>T</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#parameters","title":"Parameters","text":"<p><code>field</code> T</p> <p></p> <p><code>memberName</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/IRequiresConfiguration/#returns","title":"Returns","text":"<p>T</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/","title":"ISharedInstance&lt;TCommon,TShared&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/#isharedinstancetcommontshared-interface","title":"ISharedInstance&lt;TCommon,TShared&gt; Interface","text":"<p>Represents a container for an instance of type TShared that all activations of TCommon want to share among themselves. The implementation of TCommon should add a dependency to  ISharedInstance&lt;TCommon,TShared&gt; to access the shared instance through Instance.</p> C#<pre><code>public interface ISharedInstance&lt;TCommon,TShared&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/#type-parameters","title":"Type parameters","text":"<p><code>TCommon</code></p> <p>The type wanting to share an instance of TShared.</p> <p></p> <p><code>TShared</code></p> <p>The type of object all TCommon want to share.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/#isharedinstanceinstance-property","title":"ISharedInstance.Instance Property <p>Returns the instance of TShared shared across activations of TCommon.</p> C#<pre><code>TShared Instance { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/ISharedInstanceOf2/#property-value","title":"Property Value","text":"<p>TShared</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/#hakomdependencyinjectioncorenetapiexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions Namespace","text":"Classes DependencyInjectionException Base class for all exceptions indicating issues with dependency injection"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionException/","title":"DependencyInjectionException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionException/#dependencyinjectionexception-class","title":"DependencyInjectionException Class","text":"<p>Base class for all exceptions indicating issues with dependency injection</p> C#<pre><code>public abstract class DependencyInjectionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException</p> <p>Derived \u21b3 ContainerRuntimeException \u21b3 TypeRegistrationException \u21b3 TypeRequiresConfigurationAfterInstantiationException \u21b3 TypeResolutionException \u21b3 MultipleDependenciesCouldNotBeResolvedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/#hakomdependencyinjectioncorenetapiexceptionsdependencyinjectionexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions Namespace","text":"Classes ContainerRuntimeException indicates a problem with the life cycle of the dependency injection container itself. TypeRegistrationException Base class for all exceptions indicating that a type could not be registered. TypeRequiresConfigurationAfterInstantiationException TypeResolutionException Base class for all exceptions indicating that a type could not be resolved from the container"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeException/","title":"ContainerRuntimeException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeException/#containerruntimeexception-class","title":"ContainerRuntimeException Class","text":"<p>indicates a problem with the life cycle of the dependency injection container itself.</p> C#<pre><code>public abstract class ContainerRuntimeException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 ContainerRuntimeException</p> <p>Derived \u21b3 ApplicationNotStartedException \u21b3 ContainerAlreadyActivatedException \u21b3 ContainerNotActivatedYetException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeException/#containerruntimeexceptionequivalenthttpstatuscode-property","title":"ContainerRuntimeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationException/","title":"TypeRegistrationException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationException/#typeregistrationexception-class","title":"TypeRegistrationException Class","text":"<p>Base class for all exceptions indicating that a type could not be registered.</p> C#<pre><code>public abstract class TypeRegistrationException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeRegistrationException</p> <p>Derived \u21b3 ImplementingTypeDoesNotImplementRegisteringTypeException \u21b3 RecursiveDependencyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRequiresConfigurationAfterInstantiationException/","title":"TypeRequiresConfigurationAfterInstantiationException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRequiresConfigurationAfterInstantiationException/#typerequiresconfigurationafterinstantiationexception-class","title":"TypeRequiresConfigurationAfterInstantiationException Class","text":"C#<pre><code>public sealed class TypeRequiresConfigurationAfterInstantiationException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeRequiresConfigurationAfterInstantiationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRequiresConfigurationAfterInstantiationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRequiresConfigurationAfterInstantiationException/#typerequiresconfigurationafterinstantiationexceptionequivalenthttpstatuscode-property","title":"TypeRequiresConfigurationAfterInstantiationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRequiresConfigurationAfterInstantiationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionException/","title":"TypeResolutionException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionException/#typeresolutionexception-class","title":"TypeResolutionException Class","text":"<p>Base class for all exceptions indicating that a type could not be resolved from the container</p> C#<pre><code>public abstract class TypeResolutionException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeResolutionException</p> <p>Derived \u21b3 NoSuitableConstructorFoundException \u21b3 TypeNotRegisteredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/#hakomdependencyinjectioncorenetapiexceptionsdependencyinjectionexceptionscontainerruntimeexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions Namespace","text":"Classes ApplicationNotStartedException Thrown when an attempt is made to access the dependency injection container of the application, before the applicationhas been properly activated. ContainerAlreadyActivatedException Thrown when another registration attempt is made after the registration phase is complete. ContainerNotActivatedYetException Thrown when the dependency injection container is not yet activated, but the user tries to make a type-resolution."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/","title":"ApplicationNotStartedException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/#applicationnotstartedexception-class","title":"ApplicationNotStartedException Class","text":"<p>Thrown when an attempt is made to access the dependency injection container of the application, before the application has been properly activated.</p> C#<pre><code>public sealed class ApplicationNotStartedException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 ContainerRuntimeException \ud83e\udc52 ApplicationNotStartedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/#remarks","title":"Remarks","text":"<p>Use the methods in IApplicationContext to create and start the container correctly.  </p> <p>This exception is identified by error code HK08008</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/#applicationnotstartedexceptionactivationmethod-property","title":"ApplicationNotStartedException.ActivationMethod Property","text":"<p>The name of the activation method which has not been called.</p> C#<pre><code>public string ActivationMethod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ApplicationNotStartedException/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerAlreadyActivatedException/","title":"ContainerAlreadyActivatedException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerAlreadyActivatedException/#containeralreadyactivatedexception-class","title":"ContainerAlreadyActivatedException Class","text":"<p>Thrown when another registration attempt is made after the registration phase is complete.</p> C#<pre><code>public sealed class ContainerAlreadyActivatedException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 ContainerRuntimeException \ud83e\udc52 ContainerAlreadyActivatedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerAlreadyActivatedException/#remarks","title":"Remarks","text":"<p>Add the desired registration to the registration phase and restart the application.  </p> <p>This exception is identified by error code HK08011</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/","title":"ContainerNotActivatedYetException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/#containernotactivatedyetexception-class","title":"ContainerNotActivatedYetException Class","text":"<p>Thrown when the dependency injection container is not yet activated, but the user tries to make a type-resolution.</p> C#<pre><code>public sealed class ContainerNotActivatedYetException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.ContainerRuntimeException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 ContainerRuntimeException \ud83e\udc52 ContainerNotActivatedYetException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/#remarks","title":"Remarks","text":"<p>Call the Activate() method to activate the dependency injection container.  </p> <p>This exception is identified by error code HK08009</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/#containernotactivatedyetexceptionactivationmethod-property","title":"ContainerNotActivatedYetException.ActivationMethod Property","text":"<p>The method which has not bee called prior to the resolution attempt.</p> C#<pre><code>public string ActivationMethod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/ContainerRuntimeExceptions/ContainerNotActivatedYetException/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/#hakomdependencyinjectioncorenetapiexceptionsdependencyinjectionexceptionstyperegistrationexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions Namespace","text":"Classes ImplementingTypeDoesNotImplementRegisteringTypeException Indicates that a type cannot be registered because it does not implement the interface/base classfor which registration is attempted. RecursiveDependencyException Indicates that a type cannot be registered because resolving its dependencieswould result in an infinite loop."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/","title":"ImplementingTypeDoesNotImplementRegisteringTypeException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#implementingtypedoesnotimplementregisteringtypeexception-class","title":"ImplementingTypeDoesNotImplementRegisteringTypeException Class","text":"<p>Indicates that a type cannot be registered because it does not implement the interface/base class for which registration is attempted.</p> C#<pre><code>public sealed class ImplementingTypeDoesNotImplementRegisteringTypeException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeRegistrationException \ud83e\udc52 ImplementingTypeDoesNotImplementRegisteringTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#remarks","title":"Remarks","text":"<p>Ensure that the type implements the desired interface or base class and that the registration references both interface and implementation correctly.  </p> <p>This exception is identified by error code HK08003</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#implementingtypedoesnotimplementregisteringtypeexceptionequivalenthttpstatuscode-property","title":"ImplementingTypeDoesNotImplementRegisteringTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#implementingtypedoesnotimplementregisteringtypeexceptionimplementingtype-property","title":"ImplementingTypeDoesNotImplementRegisteringTypeException.ImplementingType Property","text":"<p>The type for which registration has been attempted, but that does not implement the RegisteringType.</p> C#<pre><code>public System.Type? ImplementingType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#property-value_1","title":"Property Value","text":"<p>System.Type</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#implementingtypedoesnotimplementregisteringtypeexceptionregisteringtype-property","title":"ImplementingTypeDoesNotImplementRegisteringTypeException.RegisteringType Property","text":"<p>The type that needs to be implemented by the ImplementingType.</p> C#<pre><code>public System.Type? RegisteringType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/ImplementingTypeDoesNotImplementRegisteringTypeException/#property-value_2","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/","title":"RecursiveDependencyException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#recursivedependencyexception-class","title":"RecursiveDependencyException Class","text":"<p>Indicates that a type cannot be registered because resolving its dependencies would result in an infinite loop.</p> C#<pre><code>public sealed class RecursiveDependencyException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeRegistrationException \ud83e\udc52 RecursiveDependencyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#remarks","title":"Remarks","text":"<p>The exception message should contain the offending type. Ensure that it doesn't have a dependency to an already registered type, that depends on it.  </p> <p>This exception is identified by error code HK08004</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#recursivedependencyexceptionequivalenthttpstatuscode-property","title":"RecursiveDependencyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#recursivedependencyexceptionunresolvedtype-property","title":"RecursiveDependencyException.UnresolvedType Property","text":"<p>The Type lacking a concrete implementation thus failing to resolve.</p> C#<pre><code>public System.Type UnresolvedType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeRegistrationExceptions/RecursiveDependencyException/#property-value_1","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/#hakomdependencyinjectioncorenetapiexceptionsdependencyinjectionexceptionstyperesolutionexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions Namespace","text":"Classes MultipleDependenciesCouldNotBeResolvedException Indicates that multiple types could not be resolved. NoSuitableConstructorFoundException Indicates that the type requested could not be instantiated becausethere is no constructor accepting only registered types and no parameterless constructor. TypeNotRegisteredException Thrown when attempting to resolve a type, which hasn't been registered, from an IActivatedContainer."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/","title":"MultipleDependenciesCouldNotBeResolvedException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#multipledependenciescouldnotberesolvedexception-class","title":"MultipleDependenciesCouldNotBeResolvedException Class","text":"<p>Indicates that multiple types could not be resolved.</p> C#<pre><code>public sealed class MultipleDependenciesCouldNotBeResolvedException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 MultipleDependenciesCouldNotBeResolvedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#remarks","title":"Remarks","text":"<p>See inner exceptions for details on offending types and why they couldn't be resolved.  </p> <p>This exception is identified by error code HK08006</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#multipledependenciescouldnotberesolvedexceptiondependenttype-property","title":"MultipleDependenciesCouldNotBeResolvedException.DependentType Property","text":"<p>The Type that could not be resolved due to the missing dependencies in: InnerExceptions.</p> C#<pre><code>public System.Type? DependentType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#property-value","title":"Property Value","text":"<p>System.Type</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#multipledependenciescouldnotberesolvedexceptionequivalenthttpstatuscode-property","title":"MultipleDependenciesCouldNotBeResolvedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#multipledependenciescouldnotberesolvedexceptioninnerexceptions-property","title":"MultipleDependenciesCouldNotBeResolvedException.InnerExceptions Property","text":"<p>Exceptions for all types which could not be resolved, the dependencies of the DependentType.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;System.Exception&gt;? InnerExceptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/MultipleDependenciesCouldNotBeResolvedException/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Exception&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/","title":"NoSuitableConstructorFoundException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#nosuitableconstructorfoundexception-class","title":"NoSuitableConstructorFoundException Class","text":"<p>Indicates that the type requested could not be instantiated because there is no constructor accepting only registered types and no parameterless constructor.</p> C#<pre><code>public sealed class NoSuitableConstructorFoundException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeResolutionException \ud83e\udc52 NoSuitableConstructorFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#remarks","title":"Remarks","text":"<p>Ensure that everything this type depends on has already been registered or that it has a parameterless constructor, if it doesn't have any dependencies.  </p> <p>This exception is identified by error code HK08001</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#nosuitableconstructorfoundexceptionconstructormissingtype-property","title":"NoSuitableConstructorFoundException.ConstructorMissingType Property","text":"<p>The type for which the constructor is missing.</p> C#<pre><code>public System.Type? ConstructorMissingType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#property-value","title":"Property Value","text":"<p>System.Type</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#nosuitableconstructorfoundexceptionequivalenthttpstatuscode-property","title":"NoSuitableConstructorFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/NoSuitableConstructorFoundException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/","title":"TypeNotRegisteredException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#typenotregisteredexception-class","title":"TypeNotRegisteredException Class","text":"<p>Thrown when attempting to resolve a type, which hasn't been registered, from an IActivatedContainer.</p> C#<pre><code>public sealed class TypeNotRegisteredException : HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DependencyInjectionException \ud83e\udc52 TypeResolutionException \ud83e\udc52 TypeNotRegisteredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#remarks","title":"Remarks","text":"<p>Ensure the desired type is registered before activating the container.  </p> <p>This exception is identified by error code HK08002</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#typenotregisteredexceptionequivalenthttpstatuscode-property","title":"TypeNotRegisteredException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#typenotregisteredexceptionunresolvedtype-property","title":"TypeNotRegisteredException.UnresolvedType Property","text":"<p>The type which could not be resolved</p> C#<pre><code>public System.Type UnresolvedType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Exceptions/DependencyInjectionExceptions/TypeResolutionExceptions/TypeNotRegisteredException/#property-value_1","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/#hakomdependencyinjectioncorenetapiextensions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Functions extending IContainer to register commonly usedservices. ServiceCollectionExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Functions extending IContainer to register commonly used services.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionstryconfigureunderlyingservicecollectionthis-icontainer-actioniservicecollection-funcicontainericontainer-method","title":"ContainerExtensions.TryConfigureUnderlyingServiceCollection(this IContainer, Action&lt;IServiceCollection&gt;, Func&lt;IContainer,IContainer&gt;) Method","text":"<p>If container is HAKOMs default implementation which uses a Microsoft.Extensions.DependencyInjection.ServiceCollection under the hood, this method can be used to register services via available extension methods on Microsoft.Extensions.DependencyInjection.IServiceCollection, allowing the use of common libraries with an IContainer based application.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer TryConfigureUnderlyingServiceCollection(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection?&gt; configureServiceCollection, System.Func&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer,HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt;? otherContainerHandler=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to attempt to register services with.</p> <p></p> <p><code>configureServiceCollection</code> System.Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;</p> <p>An System.Action&lt;&gt; that is called with the Microsoft.Extensions.DependencyInjection.IServiceCollection underlying the given container.</p> <p></p> <p><code>otherContainerHandler</code> System.Func&lt;IContainer,IContainer&gt;</p> <p>Called if container is not HAKOMs default implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for call chaining.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusetservicetimplementationthis-icontainer-funcbool-actiontservice-method","title":"ContainerExtensions.Use&lt;TService,TImplementation&gt;(this IContainer, Func&lt;bool&gt;, Action&lt;TService&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This should be used to register a service with an implementation of Factory&lt;TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;bool&gt; isSupported, System.Action&lt;TService&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type for which the registered type is an implementation.</p> <p></p> <p><code>TImplementation</code></p> <p>The concrete implementation type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>isSupported</code> System.Func&lt;System.Boolean&gt;</p> <p>The code to run in order to determine if the current registration should be instantiated.</p> <p></p> <p><code>initialization</code> System.Action&lt;TService&gt;</p> <p>The code to be run on the activated instance of TImplementation prior to injection.\"/&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusetservicetimplementationthis-icontainer-funcbool-functservicetask-method","title":"ContainerExtensions.Use&lt;TService,TImplementation&gt;(this IContainer, Func&lt;bool&gt;, Func&lt;TService,Task&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This should be used to register a service with an implementation of Factory&lt;TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;bool&gt; isSupported, System.Func&lt;TService,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type for which the registered type is an implementation.</p> <p></p> <p><code>TImplementation</code></p> <p>The concrete implementation type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>isSupported</code> System.Func&lt;System.Boolean&gt;</p> <p>The code to run in order to determine if the current registration should be instantiated.</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,System.Threading.Tasks.Task&gt;</p> <p>The code to be run on the activated instance of TImplementation prior to injection.\"/&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusetservicethis-icontainer-type-functype-funcbool-actiontservice-method","title":"ContainerExtensions.Use&lt;TService&gt;(this IContainer, Type, Func&lt;Type&gt;, Func&lt;bool&gt;, Action&lt;TService&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This should be used to register a service with an implementation of Factory&lt;TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementation, System.Func&lt;System.Type&gt;? finalImplementation=null, System.Func&lt;bool&gt;? isSupported=null, System.Action&lt;TService&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type for which the registered type is an implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>implementation</code> System.Type</p> <p>The implementations type to register.</p> <p></p> <p><code>finalImplementation</code> System.Func&lt;System.Type&gt;</p> <p>A function that returns the type of the implementation to use. This can be used if - under certain circumstances, a type other than implementation should be used.</p> <p></p> <p><code>isSupported</code> System.Func&lt;System.Boolean&gt;</p> <p>The code to run in order to determine if the current registration should be instantiated.</p> <p></p> <p><code>initialization</code> System.Action&lt;TService&gt;</p> <p>The code to be run on the activated instance.\"/&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusetservicethis-icontainer-type-functype-funcbool-functservicetask-method","title":"ContainerExtensions.Use&lt;TService&gt;(this IContainer, Type, Func&lt;Type&gt;, Func&lt;bool&gt;, Func&lt;TService,Task&gt;) Method","text":"<p>Registers an implementation for use with a factory. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code.  </p> <p>This code is run on the activated instance when created by a Factory&lt;TService&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer Use&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementation, System.Func&lt;System.Type&gt; finalImplementation, System.Func&lt;bool&gt; isSupported, System.Func&lt;TService,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TService</code></p> <p>The type for which the registered type is an implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>implementation</code> System.Type</p> <p>The implementations type to register.</p> <p></p> <p><code>finalImplementation</code> System.Func&lt;System.Type&gt;</p> <p>A function that returns the type of the implementation to use. This can be used if - under certain circumstances, a type other than implementation should be used.</p> <p></p> <p><code>isSupported</code> System.Func&lt;System.Boolean&gt;</p> <p>The code to run in order to determine if the current registration should be instantiated.</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,System.Threading.Tasks.Task&gt;</p> <p>The code to be run on the activated instance.\"/&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericimplementationtparametertservicethis-icontainer-type-functypetparameterbool-functservicetypetparametertask-method","title":"ContainerExtensions.UseGenericImplementation&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;Type,TParameter,bool&gt;, Func&lt;TService,Type,TParameter,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericImplementation&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,TParameter,bool&gt; parameterMatcher, System.Func&lt;TService,System.Type,TParameter,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_4","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,TParameter,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,System.Type,TParameter,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericimplementationtservicethis-icontainer-type-functypebool-functservicetypetask-method","title":"ContainerExtensions.UseGenericImplementation&lt;TService&gt;(this IContainer, Type, Func&lt;Type,bool&gt;, Func&lt;TService,Type,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericImplementation&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,bool&gt; parameterMatcher, System.Func&lt;TService,System.Type,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_5","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_6","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,System.Type,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_6","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericimplementationtservicethis-icontainer-type-functypetypebool-functservicetypetypetask-method","title":"ContainerExtensions.UseGenericImplementation&lt;TService&gt;(this IContainer, Type, Func&lt;Type,Type,bool&gt;, Func&lt;TService,Type,Type,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericImplementation&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,System.Type,bool&gt; parameterMatcher, System.Func&lt;TService,System.Type,System.Type,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_6","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_7","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,System.Type,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,System.Type,System.Type,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_7","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusesharedinstancetcommontsharedthis-icontainer-method","title":"ContainerExtensions.UseSharedInstance&lt;TCommon,TShared&gt;(this IContainer) Method","text":"<p>Registers TShared to be activated only once for all dependents of type TCommon. Think of it as a singleton but only for specific types. Make sure to  - register TShared! This is not done for you. - inject ISharedInstance&lt;TCommon,TShared&gt; with TCommon = TCommon and TShared = TShared in TCommon to use   the shared instance instead of a new one.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSharedInstance&lt;TCommon,TShared&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_7","title":"Type parameters","text":"<p><code>TCommon</code></p> <p>The service type of which all activated instances should share one instance of TShared.</p> <p></p> <p><code>TShared</code></p> <p>The service type to be activated only once for each activated TCommon.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_8","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the shared instance with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_8","title":"Returns","text":"<p>IContainer This IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusesyncgenericimplementationtparametertservicethis-icontainer-type-functypetparameterbool-actiontservicetypetparameter-method","title":"ContainerExtensions.UseSyncGenericImplementation&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;Type,TParameter,bool&gt;, Action&lt;TService,Type,TParameter&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSyncGenericImplementation&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,TParameter,bool&gt; parameterMatcher, System.Action&lt;TService,System.Type,TParameter&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_8","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_9","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,TParameter,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,System.Type,TParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_9","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusesyncgenericimplementationtservicethis-icontainer-type-functypebool-actiontservicetype-method","title":"ContainerExtensions.UseSyncGenericImplementation&lt;TService&gt;(this IContainer, Type, Func&lt;Type,bool&gt;, Action&lt;TService,Type&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSyncGenericImplementation&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,bool&gt; parameterMatcher, System.Action&lt;TService,System.Type&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_9","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_10","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,System.Type&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_10","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusesyncgenericimplementationtservicethis-icontainer-type-functypetypebool-actiontservicetypetype-method","title":"ContainerExtensions.UseSyncGenericImplementation&lt;TService&gt;(this IContainer, Type, Func&lt;Type,Type,bool&gt;, Action&lt;TService,Type,Type&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSyncGenericImplementation&lt;TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;System.Type,System.Type,bool&gt; parameterMatcher, System.Action&lt;TService,System.Type,System.Type&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_10","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_11","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;System.Type,System.Type,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,System.Type,System.Type&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_11","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicetimplementationthis-icontainer-functparameterbool-actiontservicetparameter-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;) Method","text":"<p>Same as UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;) but this assumes TService to not require asynchronous initialization. This should be used to register a service with a factory implementing SyncFactory&lt;TParameter,TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_11","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p> <p></p> <p><code>TImplementation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_12","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p>Code to determine if TImplementation is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter&gt;</p> <p>Code to run on the created instance of TImplementation prior to injection. This code must run synchronously. If initialization code should be run asynchronously, consider using UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_12","title":"Returns","text":"<p>IContainer This IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicetimplementationthis-icontainer-functparameterbool-functservicetparametertask-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. Allows to specify code that determines if the specific implementation can be used in a given circumstance depending on the specific value of TParameter. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This is intended to be used when more than one implementation may be registered for the given TService. This should be used to register a service with a factory implementing Factory&lt;TParameter,TService&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_12","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>The type of parameter used prior to instance activation to determine if TImplementation is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TService</code></p> <p>The service type for which TImplementation should be registered.</p> <p></p> <p><code>TImplementation</code></p> <p>The concrete implementation type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_13","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p>Code to determine if TImplementation is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;</p> <p>Code to run on the created instance of TImplementation prior to injection. This code may run asynchronously. If initialization code is not asynchronous, consider using UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_13","title":"Returns","text":"<p>IContainer The IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicethis-icontainer-type-functparameterbool-actiontservicetparameter-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_13","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_14","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_14","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicethis-icontainer-type-functparameterbool-functservicetparametertask-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_14","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_15","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_15","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicethis-icontainer-type-functparametertype-functparameterbool-actiontservicetparameter-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;TParameter,Type&gt;, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;) Method","text":"<p>Same as UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;) but with the support to bind generic types without the requirement of specifying the generic  parameter. This should be used to register a service with a factory implementing  SyncFactory&lt;TParameter,TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter,System.Type&gt; finalImplementation, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_15","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>The type of parameter used prior to instance activation to determine if implementationType is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TService</code></p> <p>The service type for which implementationType should be registered.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_16","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>implementationType</code> System.Type</p> <p>The implementation type to register.</p> <p></p> <p><code>finalImplementation</code> System.Func&lt;TParameter,System.Type&gt;</p> <p>A function that returns the type of the implementation to use.  This can be used if - under certain circumstances, a type other than implementationType  should be used.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p>Code to determine if implementationType is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter&gt;</p> <p>Code to run on the created instance of implementationType prior to injection. This code must run synchronously. If initialization code should be run asynchronously, consider using UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_16","title":"Returns","text":"<p>IContainer This IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparametertparametertservicethis-icontainer-type-functparametertype-functparameterbool-functservicetparametertask-method","title":"ContainerExtensions.UseWithParameter&lt;TParameter,TService&gt;(this IContainer, Type, Func&lt;TParameter,Type&gt;, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;) Method","text":"<p>Same as UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Action&lt;TService,TParameter&gt;) but with the support to bind generic types without the requirement of specifying the generic  parameter. This should be used to register a service with a factory implementing  SyncFactory&lt;TParameter,TService&gt;</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameter&lt;TParameter,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter,System.Type&gt; finalImplementation, System.Func&lt;TParameter,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_16","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>The type of parameter used prior to instance activation to determine if implementationType is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TService</code></p> <p>The service type for which implementationType should be registered.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_17","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>implementationType</code> System.Type</p> <p>The implementation type to register.</p> <p></p> <p><code>finalImplementation</code> System.Func&lt;TParameter,System.Type&gt;</p> <p>A function that returns the type of the implementation to use.  This can be used if - under certain circumstances, a type other than implementationType  should be used.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter,System.Boolean&gt;</p> <p>Code to determine if implementationType is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter,System.Threading.Tasks.Task&gt;</p> <p>Code to run on the created instance of implementationType prior to injection. This code must run synchronously. If initialization code should be run asynchronously, consider using UseWithParameter&lt;TParameter,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter,bool&gt;, Func&lt;TService,TParameter,Task&gt;).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_17","title":"Returns","text":"<p>IContainer This IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicetimplementationthis-icontainer-functparameter1tparameter2bool-actiontservicetparameter1tparameter2-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter1,TParameter2,bool&gt;, Action&lt;TService,TParameter1,TParameter2&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. Allows to specify code that determines if the specific implementation can be used in a given circumstance depending on the specific values of TParameter1 and TParameter2. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This is intended to be used when more than one implementation may be registered for the given TService. This should be used to register a service with a factory implementing Factory&lt;TParameter1,TParameter2,TService&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter1,TParameter2&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_17","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The type of the first parameter used prior to instance activation to determine if TImplementation is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TParameter2</code></p> <p>The type of the second parameter used prior to instance activation to determine if TImplementation is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TService</code></p> <p>The service type for which TImplementation should be registered.</p> <p></p> <p><code>TImplementation</code></p> <p>The concrete implementation type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_18","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p>Code to determine if TImplementation is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter1,TParameter2&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_18","title":"Returns","text":"<p>IContainer This IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicetimplementationthis-icontainer-functparameter1tparameter2bool-functservicetparameter1tparameter2task-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService,TImplementation&gt;(this IContainer, Func&lt;TParameter1,TParameter2,bool&gt;, Func&lt;TService,TParameter1,TParameter2,Task&gt;) Method","text":"<p>Registers an implementing type for use with a factory method. Allows to specify code that determines if the specific implementation can be used in a given circumstance depending on the specific values of TParameter1 and TParameter2. In contrast to Use&lt;TService,TImplementation&gt;(), this allows specifying initialization code. This code is run on each activated instance prior to injection. This is intended to be used when more than one implementation may be registered for the given TService. This should be used to register a service with a factory implementing Factory&lt;TParameter1,TParameter2,TService&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService,TImplementation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class\n    where TImplementation : class, TService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_18","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The type of the first parameter used prior to instance activation to determine if TImplementation is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TParameter2</code></p> <p>The type of the second parameter used prior to instance activation to determine if TImplementation is the correct type to activate in the given circumstance.</p> <p></p> <p><code>TService</code></p> <p>The service type for which TImplementation should be registered.</p> <p></p> <p><code>TImplementation</code></p> <p>The concrete implementation type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_19","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the implementing type with.</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p>Code to determine if TImplementation is appropriate in this circumstance here.</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;</p> <p>The initialization code.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_19","title":"Returns","text":"<p>IContainer This IContainer.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicethis-icontainer-type-functparameter1tparameter2bool-actiontservicetparameter1tparameter2-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this IContainer, Type, Func&lt;TParameter1,TParameter2,bool&gt;, Action&lt;TService,TParameter1,TParameter2&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter1,TParameter2&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_19","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_20","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter1,TParameter2&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_20","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicethis-icontainer-type-functparameter1tparameter2bool-functservicetparameter1tparameter2task-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this IContainer, Type, Func&lt;TParameter1,TParameter2,bool&gt;, Func&lt;TService,TParameter1,TParameter2,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_20","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_21","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_21","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicethis-icontainer-type-functparameter1tparameter2type-functparameter1tparameter2bool-actiontservicetparameter1tparameter2-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this IContainer, Type, Func&lt;TParameter1,TParameter2,Type&gt;, Func&lt;TParameter1,TParameter2,bool&gt;, Action&lt;TService,TParameter1,TParameter2&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter1,TParameter2,System.Type&gt; finalImplementation, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Action&lt;TService,TParameter1,TParameter2&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_21","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_22","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>finalImplementation</code> System.Func&lt;TParameter1,TParameter2,System.Type&gt;</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Action&lt;TService,TParameter1,TParameter2&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_22","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#containerextensionsusewithparameterstparameter1tparameter2tservicethis-icontainer-type-functparameter1tparameter2type-functparameter1tparameter2bool-functservicetparameter1tparameter2task-method","title":"ContainerExtensions.UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this IContainer, Type, Func&lt;TParameter1,TParameter2,Type&gt;, Func&lt;TParameter1,TParameter2,bool&gt;, Func&lt;TService,TParameter1,TParameter2,Task&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseWithParameters&lt;TParameter1,TParameter2,TService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementationType, System.Func&lt;TParameter1,TParameter2,System.Type&gt; finalImplementationType, System.Func&lt;TParameter1,TParameter2,bool&gt; parameterMatcher, System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;? initialization=null)\n    where TService : class;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#type-parameters_22","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#parameters_23","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>implementationType</code> System.Type</p> <p></p> <p><code>finalImplementationType</code> System.Func&lt;TParameter1,TParameter2,System.Type&gt;</p> <p></p> <p><code>parameterMatcher</code> System.Func&lt;TParameter1,TParameter2,System.Boolean&gt;</p> <p></p> <p><code>initialization</code> System.Func&lt;TService,TParameter1,TParameter2,System.Threading.Tasks.Task&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ContainerExtensions/#returns_23","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/","title":"ServiceCollectionExtensions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/#servicecollectionextensions-class","title":"ServiceCollectionExtensions Class","text":"C#<pre><code>public static class ServiceCollectionExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ServiceCollectionExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/#servicecollectionextensionsaddhakomservicesthis-iservicecollection-actionicontainer-method","title":"ServiceCollectionExtensions.AddHakomServices(this IServiceCollection, Action&lt;IContainer&gt;) Method","text":"C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddHakomServices(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt; containerConfigurator);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/#parameters","title":"Parameters","text":"<p><code>services</code> Microsoft.Extensions.DependencyInjection.IServiceCollection</p> <p></p> <p><code>containerConfigurator</code> System.Action&lt;IContainer&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Extensions/ServiceCollectionExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IServiceCollection</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/#hakomdependencyinjectioncorenetapifactories-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories Namespace","text":"Classes Factory&lt;TParameter,TService&gt; Factory&lt;TParameter1,TParameter2,TService&gt; Factory&lt;TService&gt; SyncFactory&lt;TParameter,TService&gt; SyncFactory&lt;TParameter1,TParameter2,TService&gt; SyncFactory&lt;TService&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/","title":"Factory&lt;TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#factorytservice-class","title":"Factory&lt;TService&gt; Class","text":"C#<pre><code>public abstract class Factory&lt;TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 Factory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#factoryienumerable-iactivatedcontainer-constructor","title":"Factory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected Factory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#factorytservicecreatecancellationtoken-method","title":"Factory&lt;TService&gt;.Create(CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;TService&gt; Create(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#factorytservicetrycreatecancellationtoken-method","title":"Factory&lt;TService&gt;.TryCreate(CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt; TryCreate(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/","title":"Factory&lt;TParameter,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factorytparametertservice-class","title":"Factory&lt;TParameter,TService&gt; Class","text":"C#<pre><code>public abstract class Factory&lt;TParameter,TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 Factory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factoryienumerable-iactivatedcontainer-constructor","title":"Factory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected Factory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TParameter,TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TParameter,TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factorytparametertservicecreatetparameter-cancellationtoken-method","title":"Factory&lt;TParameter,TService&gt;.Create(TParameter, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;TService&gt; Create(TParameter parameter, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#parameters_1","title":"Parameters","text":"<p><code>parameter</code> TParameter</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factorytparametertserviceresolutionfailedtfinalservicetparameter-method","title":"Factory&lt;TParameter,TService&gt;.ResolutionFailed&lt;TFinalService&gt;(TParameter) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions.NoMatchingRegistrationException ResolutionFailed&lt;TFinalService&gt;(TParameter parameter);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#parameters_2","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#returns_1","title":"Returns","text":"<p>NoMatchingRegistrationException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factorytparametertserviceresolvedservicedoesnotimplementfinalservicetypetfinalservicetype-method","title":"Factory&lt;TParameter,TService&gt;.ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions.ImplementingTypeDoesNotImplementRegisteringTypeException ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(System.Type resolvedService);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#parameters_3","title":"Parameters","text":"<p><code>resolvedService</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#returns_2","title":"Returns","text":"<p>ImplementingTypeDoesNotImplementRegisteringTypeException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#factorytparametertservicetrycreatetparameter-cancellationtoken-method","title":"Factory&lt;TParameter,TService&gt;.TryCreate(TParameter, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt; TryCreate(TParameter parameter, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#parameters_4","title":"Parameters","text":"<p><code>parameter</code> TParameter</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/","title":"Factory&lt;TParameter1,TParameter2,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factorytparameter1tparameter2tservice-class","title":"Factory&lt;TParameter1,TParameter2,TService&gt; Class","text":"C#<pre><code>public abstract class Factory&lt;TParameter1,TParameter2,TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 Factory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factoryienumerable-iactivatedcontainer-constructor","title":"Factory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected Factory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TParameter1,TParameter2,TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IRegistration&lt;TParameter1,TParameter2,TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factorytparameter1tparameter2tservicecreatetparameter1-tparameter2-cancellationtoken-method","title":"Factory&lt;TParameter1,TParameter2,TService&gt;.Create(TParameter1, TParameter2, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;TService&gt; Create(TParameter1 parameter1, TParameter2 parameter2, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factorytparameter1tparameter2tserviceresolutionfailedtfinalservicetparameter1-tparameter2-method","title":"Factory&lt;TParameter1,TParameter2,TService&gt;.ResolutionFailed&lt;TFinalService&gt;(TParameter1, TParameter2) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions.NoMatchingRegistrationException ResolutionFailed&lt;TFinalService&gt;(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#type-parameters_1","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#parameters_2","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#returns_1","title":"Returns","text":"<p>NoMatchingRegistrationException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factorytparameter1tparameter2tserviceresolvedservicedoesnotimplementfinalservicetypetfinalservicetype-method","title":"Factory&lt;TParameter1,TParameter2,TService&gt;.ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions.ImplementingTypeDoesNotImplementRegisteringTypeException ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(System.Type resolvedService);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#type-parameters_2","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#parameters_3","title":"Parameters","text":"<p><code>resolvedService</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#returns_2","title":"Returns","text":"<p>ImplementingTypeDoesNotImplementRegisteringTypeException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#factorytparameter1tparameter2tservicetrycreatetparameter1-tparameter2-cancellationtoken-method","title":"Factory&lt;TParameter1,TParameter2,TService&gt;.TryCreate(TParameter1, TParameter2, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt; TryCreate(TParameter1 parameter1, TParameter2 parameter2, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#parameters_4","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/FactoryOf3/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/","title":"SyncFactory&lt;TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#syncfactorytservice-class","title":"SyncFactory&lt;TService&gt; Class","text":"C#<pre><code>public abstract class SyncFactory&lt;TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 SyncFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#syncfactoryienumerable-iactivatedcontainer-constructor","title":"SyncFactory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected SyncFactory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#syncfactorytservicecreate-method","title":"SyncFactory&lt;TService&gt;.Create() Method C#<pre><code>public TService Create();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#returns","title":"Returns","text":"<p>TService</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#syncfactorytservicetrycreate-method","title":"SyncFactory&lt;TService&gt;.TryCreate() Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt; TryCreate();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf1/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/","title":"SyncFactory&lt;TParameter,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertservice-class","title":"SyncFactory&lt;TParameter,TService&gt; Class","text":"C#<pre><code>public abstract class SyncFactory&lt;TParameter,TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 SyncFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactoryienumerable-iactivatedcontainer-constructor","title":"SyncFactory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected SyncFactory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TParameter,TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TParameter,TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertservicecreatetparameter-method","title":"SyncFactory&lt;TParameter,TService&gt;.Create(TParameter) Method C#<pre><code>public TService Create(TParameter parameter);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_1","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns","title":"Returns","text":"<p>TService</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertservicegetimplementingtypedoesnotimplementregisteringtypeexceptiontype-type-method","title":"SyncFactory&lt;TParameter,TService&gt;.GetImplementingTypeDoesNotImplementRegisteringTypeException(Type, Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions.ImplementingTypeDoesNotImplementRegisteringTypeException GetImplementingTypeDoesNotImplementRegisteringTypeException(System.Type implementingType, System.Type registeringType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_2","title":"Parameters","text":"<p><code>implementingType</code> System.Type</p> <p></p> <p><code>registeringType</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns_1","title":"Returns","text":"<p>ImplementingTypeDoesNotImplementRegisteringTypeException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertservicegettypenotregisteredexceptiontype-method","title":"SyncFactory&lt;TParameter,TService&gt;.GetTypeNotRegisteredException(Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeResolutionExceptions.TypeNotRegisteredException GetTypeNotRegisteredException(System.Type type);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_3","title":"Parameters","text":"<p><code>type</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns_2","title":"Returns","text":"<p>TypeNotRegisteredException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertserviceresolutionfailedtfinalservicetparameter-method","title":"SyncFactory&lt;TParameter,TService&gt;.ResolutionFailed&lt;TFinalService&gt;(TParameter) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions.NoMatchingRegistrationException ResolutionFailed&lt;TFinalService&gt;(TParameter parameter);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_4","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns_3","title":"Returns","text":"<p>NoMatchingRegistrationException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertserviceresolvedservicedoesnotimplementfinalservicetypetfinalservicetype-method","title":"SyncFactory&lt;TParameter,TService&gt;.ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions.ImplementingTypeDoesNotImplementRegisteringTypeException ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(System.Type resolvedService);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_5","title":"Parameters","text":"<p><code>resolvedService</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns_4","title":"Returns","text":"<p>ImplementingTypeDoesNotImplementRegisteringTypeException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#syncfactorytparametertservicetrycreatetparameter-method","title":"SyncFactory&lt;TParameter,TService&gt;.TryCreate(TParameter) Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt; TryCreate(TParameter parameter);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#parameters_6","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf2/#returns_5","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactorytparameter1tparameter2tservice-class","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt; Class","text":"C#<pre><code>public abstract class SyncFactory&lt;TParameter1,TParameter2,TService&gt;\n    where TService : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p> <p>Inheritance System.Object \ud83e\udc52 SyncFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactoryienumerable-iactivatedcontainer-constructor","title":"SyncFactory(IEnumerable&gt;, IActivatedContainer) Constructor C#<pre><code>protected SyncFactory(System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TParameter1,TParameter2,TService&gt;&gt; registrations, HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer container);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#parameters","title":"Parameters","text":"<p><code>registrations</code> System.Collections.Generic.IEnumerable&lt;HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;TParameter1,TParameter2,TService&gt;&gt;</p> <p></p> <p><code>container</code> IActivatedContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactorytparameter1tparameter2tservicecreatetparameter1-tparameter2-method","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt;.Create(TParameter1, TParameter2) Method C#<pre><code>public TService Create(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#returns","title":"Returns","text":"<p>TService</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactorytparameter1tparameter2tserviceresolutionfailedtfinalservicetparameter1-tparameter2-method","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt;.ResolutionFailed&lt;TFinalService&gt;(TParameter1, TParameter2) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions.NoMatchingRegistrationException ResolutionFailed&lt;TFinalService&gt;(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#type-parameters_1","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#parameters_2","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#returns_1","title":"Returns","text":"<p>NoMatchingRegistrationException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactorytparameter1tparameter2tserviceresolvedservicedoesnotimplementfinalservicetypetfinalservicetype-method","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt;.ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(Type) Method C#<pre><code>protected HAKOM.DependencyInjection.Core.Net.Api.Exceptions.DependencyInjectionExceptions.TypeRegistrationExceptions.ImplementingTypeDoesNotImplementRegisteringTypeException ResolvedServiceDoesNotImplementFinalServiceType&lt;TFinalService&gt;(System.Type resolvedService);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#type-parameters_2","title":"Type parameters","text":"<p><code>TFinalService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#parameters_3","title":"Parameters","text":"<p><code>resolvedService</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#returns_2","title":"Returns","text":"<p>ImplementingTypeDoesNotImplementRegisteringTypeException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#syncfactorytparameter1tparameter2tservicetrycreatetparameter1-tparameter2-method","title":"SyncFactory&lt;TParameter1,TParameter2,TService&gt;.TryCreate(TParameter1, TParameter2) Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt; TryCreate(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#parameters_4","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/SyncFactoryOf3/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/#hakomdependencyinjectioncorenetapifactoriesexceptions-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions Namespace","text":"Classes NoMatchingRegistrationException Thrown when an attempt is made to instantiate a type, that has not been registered, via a factory made to create instances of that type."},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/","title":"NoMatchingRegistrationException","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/#nomatchingregistrationexception-class","title":"NoMatchingRegistrationException Class","text":"<p>Thrown when an attempt is made to instantiate a type, that has not been registered, via a factory made to create instances of that type.</p> C#<pre><code>public sealed class NoMatchingRegistrationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoMatchingRegistrationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/#remarks","title":"Remarks","text":"<p>Ensure that all types and factories have been registered correctly. The exception message should contain further details on the offending type.  </p> <p>This exception is identified by error code HK08012</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/#nomatchingregistrationexceptionequivalenthttpstatuscode-property","title":"NoMatchingRegistrationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Exceptions/NoMatchingRegistrationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/#hakomdependencyinjectioncorenetapifactoriesregistration-namespace","title":"HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration Namespace","text":"Interfaces IRegistration&lt;TParameter,TService&gt; IRegistration&lt;TParameter1,TParameter2,TService&gt; IRegistration&lt;TService&gt; ISyncRegistration&lt;TParameter,TService&gt; ISyncRegistration&lt;TParameter1,TParameter2,TService&gt; ISyncRegistration&lt;TService&gt; Delegates Implementation&lt;TParameter,TService&gt;(TParameter) Implementation&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2) Implementation&lt;TService&gt;() Initialize&lt;TParameter,TService&gt;(TService, TParameter) Initialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2) Initialize&lt;TService&gt;(TService) IsSupported&lt;TService&gt;() SupportsParameter&lt;TParameter,TService&gt;(TParameter) SupportsParameters&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2) SyncInitialize&lt;TParameter,TService&gt;(TService, TParameter) SyncInitialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2) SyncInitialize&lt;TService&gt;(TService)"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/","title":"IRegistration&lt;TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#iregistrationtservice-interface","title":"IRegistration&lt;TService&gt; Interface","text":"C#<pre><code>public interface IRegistration&lt;TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#iregistrationimplementation-property","title":"IRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#iregistrationinitializemethod-property","title":"IRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#iregistrationmatchmethod-property","title":"IRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IsSupported&lt;TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf1/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IsSupported&lt;TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/","title":"IRegistration&lt;TParameter,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#iregistrationtparametertservice-interface","title":"IRegistration&lt;TParameter,TService&gt; Interface","text":"C#<pre><code>public interface IRegistration&lt;TParameter,TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#iregistrationimplementation-property","title":"IRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter,TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#iregistrationinitializemethod-property","title":"IRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TParameter,TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TParameter,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#iregistrationmatchmethod-property","title":"IRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameter&lt;TParameter,TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf2/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameter&lt;TParameter,TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/","title":"IRegistration&lt;TParameter1,TParameter2,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#iregistrationtparameter1tparameter2tservice-interface","title":"IRegistration&lt;TParameter1,TParameter2,TService&gt; Interface","text":"C#<pre><code>public interface IRegistration&lt;TParameter1,TParameter2,TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#iregistrationimplementation-property","title":"IRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter1,TParameter2,TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter1,TParameter2,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#iregistrationinitializemethod-property","title":"IRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TParameter1,TParameter2,TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Initialize&lt;TParameter1,TParameter2,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#iregistrationmatchmethod-property","title":"IRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameters&lt;TParameter1,TParameter2,TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IRegistrationOf3/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameters&lt;TParameter1,TParameter2,TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/","title":"ISyncRegistration&lt;TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#isyncregistrationtservice-interface","title":"ISyncRegistration&lt;TService&gt; Interface","text":"C#<pre><code>public interface ISyncRegistration&lt;TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#isyncregistrationimplementation-property","title":"ISyncRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#isyncregistrationinitializemethod-property","title":"ISyncRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#isyncregistrationmatchmethod-property","title":"ISyncRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IsSupported&lt;TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf1/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.IsSupported&lt;TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/","title":"ISyncRegistration&lt;TParameter,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#isyncregistrationtparametertservice-interface","title":"ISyncRegistration&lt;TParameter,TService&gt; Interface","text":"C#<pre><code>public interface ISyncRegistration&lt;TParameter,TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#isyncregistrationimplementation-property","title":"ISyncRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter,TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#isyncregistrationinitializemethod-property","title":"ISyncRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TParameter,TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TParameter,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#isyncregistrationmatchmethod-property","title":"ISyncRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameter&lt;TParameter,TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf2/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameter&lt;TParameter,TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/","title":"ISyncRegistration&lt;TParameter1,TParameter2,TService&gt;","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#isyncregistrationtparameter1tparameter2tservice-interface","title":"ISyncRegistration&lt;TParameter1,TParameter2,TService&gt; Interface","text":"C#<pre><code>public interface ISyncRegistration&lt;TParameter1,TParameter2,TService&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#isyncregistrationimplementation-property","title":"ISyncRegistration.Implementation Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter1,TParameter2,TService&gt; Implementation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#property-value","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.Implementation&lt;TParameter1,TParameter2,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#isyncregistrationinitializemethod-property","title":"ISyncRegistration.InitializeMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TParameter1,TParameter2,TService&gt; InitializeMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#property-value_1","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SyncInitialize&lt;TParameter1,TParameter2,TService&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#isyncregistrationmatchmethod-property","title":"ISyncRegistration.MatchMethod Property C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameters&lt;TParameter1,TParameter2,TService&gt; MatchMethod { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ISyncRegistrationOf3/#property-value_2","title":"Property Value","text":"<p>HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.SupportsParameters&lt;TParameter1,TParameter2,TService&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf1/","title":"Implementation&lt;TService&gt;()","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf1/#implementationtservice-delegate","title":"Implementation&lt;TService&gt;() Delegate","text":"C#<pre><code>public delegate System.Type Implementation&lt;TService&gt;();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf1/#returns","title":"Returns","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf2/","title":"Implementation&lt;TParameter,TService&gt;(TParameter)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf2/#implementationtparametertservicetparameter-delegate","title":"Implementation&lt;TParameter,TService&gt;(TParameter) Delegate","text":"C#<pre><code>public delegate System.Type Implementation&lt;TParameter,TService&gt;(TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf2/#parameters","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf2/#returns","title":"Returns","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf3/","title":"Implementation&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf3/#implementationtparameter1tparameter2tservicetparameter1-tparameter2-delegate","title":"Implementation&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2) Delegate","text":"C#<pre><code>public delegate System.Type Implementation&lt;TParameter1,TParameter2,TService&gt;(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf3/#parameters","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/ImplementationOf3/#returns","title":"Returns","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf1/","title":"Initialize&lt;TService&gt;(TService)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf1/#initializetservicetservice-delegate","title":"Initialize&lt;TService&gt;(TService) Delegate","text":"C#<pre><code>public delegate System.Threading.Tasks.Task Initialize&lt;TService&gt;(TService instance);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf1/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf2/","title":"Initialize&lt;TParameter,TService&gt;(TService, TParameter)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf2/#initializetparametertservicetservice-tparameter-delegate","title":"Initialize&lt;TParameter,TService&gt;(TService, TParameter) Delegate","text":"C#<pre><code>public delegate System.Threading.Tasks.Task Initialize&lt;TParameter,TService&gt;(TService instance, TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf2/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf3/","title":"Initialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf3/#initializetparameter1tparameter2tservicetservice-tparameter1-tparameter2-delegate","title":"Initialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2) Delegate","text":"C#<pre><code>public delegate System.Threading.Tasks.Task Initialize&lt;TParameter1,TParameter2,TService&gt;(TService instance, TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf3/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/InitializeOf3/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IsSupportedOf1/","title":"IsSupported&lt;TService&gt;()","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IsSupportedOf1/#issupportedtservice-delegate","title":"IsSupported&lt;TService&gt;() Delegate","text":"C#<pre><code>public delegate bool IsSupported&lt;TService&gt;();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IsSupportedOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/IsSupportedOf1/#returns","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParameterOf2/","title":"SupportsParameter&lt;TParameter,TService&gt;(TParameter)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParameterOf2/#supportsparametertparametertservicetparameter-delegate","title":"SupportsParameter&lt;TParameter,TService&gt;(TParameter) Delegate","text":"C#<pre><code>public delegate bool SupportsParameter&lt;TParameter,TService&gt;(TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParameterOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParameterOf2/#parameters","title":"Parameters","text":"<p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParameterOf2/#returns","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParametersOf3/","title":"SupportsParameters&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParametersOf3/#supportsparameterstparameter1tparameter2tservicetparameter1-tparameter2-delegate","title":"SupportsParameters&lt;TParameter1,TParameter2,TService&gt;(TParameter1, TParameter2) Delegate","text":"C#<pre><code>public delegate bool SupportsParameters&lt;TParameter1,TParameter2,TService&gt;(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParametersOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParametersOf3/#parameters","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SupportsParametersOf3/#returns","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf1/","title":"SyncInitialize&lt;TService&gt;(TService)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf1/#syncinitializetservicetservice-delegate","title":"SyncInitialize&lt;TService&gt;(TService) Delegate","text":"C#<pre><code>public delegate void SyncInitialize&lt;TService&gt;(TService instance);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf1/#type-parameters","title":"Type parameters","text":"<p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf1/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf2/","title":"SyncInitialize&lt;TParameter,TService&gt;(TService, TParameter)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf2/#syncinitializetparametertservicetservice-tparameter-delegate","title":"SyncInitialize&lt;TParameter,TService&gt;(TService, TParameter) Delegate","text":"C#<pre><code>public delegate void SyncInitialize&lt;TParameter,TService&gt;(TService instance, TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf2/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>parameter</code> TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf3/","title":"SyncInitialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2)","text":"<p>Assembly: HAKOM.DependencyInjection.Core.Net</p> <p>Namespace: HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf3/#syncinitializetparameter1tparameter2tservicetservice-tparameter1-tparameter2-delegate","title":"SyncInitialize&lt;TParameter1,TParameter2,TService&gt;(TService, TParameter1, TParameter2) Delegate","text":"C#<pre><code>public delegate void SyncInitialize&lt;TParameter1,TParameter2,TService&gt;(TService instance, TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p></p> <p><code>TParameter2</code></p> <p></p> <p><code>TService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/DependencyInjection/Core/API/Factories/Registration/SyncInitializeOf3/#parameters","title":"Parameters","text":"<p><code>instance</code> TService</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p></p> <p><code>parameter2</code> TParameter2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/","title":"HAKOM.Documentation.Http.Net","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/#hakomdocumentationhttpnet-assembly","title":"HAKOM.Documentation.Http.Net Assembly","text":"Namespaces HAKOM.Documentation.Http.Net.Api HAKOM.Documentation.Http.Net.Api.Exceptions HAKOM.Documentation.Http.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/","title":"HAKOM.Documentation.Http.Net.Api","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/#hakomdocumentationhttpnetapi-namespace","title":"HAKOM.Documentation.Http.Net.Api Namespace","text":"Classes CustomSchemaNameAttribute DocumentationController Provides documentation related endpoints. Interfaces IDocumentationBasePath Defines the base path under which automatically generated OpenAPI documents should be hosted. IDocumentationConfiguration Defines how automatically generated OpenAPI documentation should be hosted within a service. IDocumentationFileNamePrefix Defines the name of the generated OpenAPI document. The final document will consist of this suffixed by the APIs version. IDocumentationVersionSeparator Defines the string that should be used in the file names of automatically generated documentation files for separation between the file name and its version."},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/","title":"CustomSchemaNameAttribute","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#customschemanameattribute-class","title":"CustomSchemaNameAttribute Class","text":"C#<pre><code>public sealed class CustomSchemaNameAttribute : System.Attribute\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Attribute \ud83e\udc52 CustomSchemaNameAttribute</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#customschemanameattributestring-constructor","title":"CustomSchemaNameAttribute(string) Constructor","text":"C#<pre><code>public CustomSchemaNameAttribute(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#customschemanameattributename-property","title":"CustomSchemaNameAttribute.Name Property","text":"C#<pre><code>public string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/CustomSchemaNameAttribute/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/","title":"DocumentationController","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontroller-class","title":"DocumentationController Class","text":"<p>Provides documentation related endpoints.</p> C#<pre><code>public sealed class DocumentationController : Microsoft.AspNetCore.Mvc.Controller\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ControllerBase \ud83e\udc52 Microsoft.AspNetCore.Mvc.Controller \ud83e\udc52 DocumentationController</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollerdefault_document_versionkey-field","title":"DocumentationController.DEFAULT_DOCUMENT_VERSIONKEY Field","text":"<p>The key that is used to refer to the default OpenAPI document.</p> C#<pre><code>public const string DEFAULT_DOCUMENT_VERSIONKEY = default;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#remarks","title":"Remarks","text":"<p>The list of available OpenAPI documents returned by GetAvailableDocuments(IDocumentationConfiguration) will always contain an entry with this key. The link under this key is the one that should be used by default and will be the one that the request will be redirected to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetavailabledocumentsidocumentationconfiguration-method","title":"DocumentationController.GetAvailableDocuments(IDocumentationConfiguration) Method","text":"<p>Returns links to all OpenAPI specifications available for this service.</p> C#<pre><code>public System.Collections.Generic.IDictionary&lt;string,System.Uri&gt; GetAvailableDocuments(HAKOM.Documentation.Http.Net.Api.IDocumentationConfiguration documentationConfiguration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#parameters","title":"Parameters","text":"<p><code>documentationConfiguration</code> IDocumentationConfiguration</p> <p>An instance of IDocumentationConfiguration that specifies - among other things - the available versions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns","title":"Returns","text":"<p>System.Collections.Generic.IDictionary&lt;System.String,System.Uri&gt; A dictionary in which each key represents a version number and each value holds the absolute URI to the specification.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetcustomswaggercss-method","title":"DocumentationController.GetCustomSwaggerCss() Method","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.IActionResult GetCustomSwaggerCss();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns_1","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.IActionResult</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetcustomswaggerjs-method","title":"DocumentationController.GetCustomSwaggerJs() Method","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.IActionResult GetCustomSwaggerJs();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns_2","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.IActionResult</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetfavicon16x16-method","title":"DocumentationController.GetFavicon16x16() Method","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.IActionResult GetFavicon16x16();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns_3","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.IActionResult</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetfavicon32x32-method","title":"DocumentationController.GetFavicon32x32() Method","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.IActionResult GetFavicon32x32();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns_4","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.IActionResult</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollergetrocket-method","title":"DocumentationController.GetRocket() Method","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.IActionResult GetRocket();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#returns_5","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.IActionResult</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#documentationcontrollerredirecttodefaultdocumentidocumentationconfiguration-method","title":"DocumentationController.RedirectToDefaultDocument(IDocumentationConfiguration) Method","text":"<p>Redirects to the default OpenAPI specification document for this version.</p> C#<pre><code>public void RedirectToDefaultDocument(HAKOM.Documentation.Http.Net.Api.IDocumentationConfiguration documentationConfiguration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/DocumentationController/#parameters_1","title":"Parameters","text":"<p><code>documentationConfiguration</code> IDocumentationConfiguration</p> <p>An instance of IDocumentationConfiguration that specifies - among other things - the available versions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/","title":"IDocumentationBasePath","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepath-interface","title":"IDocumentationBasePath Interface","text":"<p>Defines the base path under which automatically generated OpenAPI documents should be hosted.</p> C#<pre><code>public interface IDocumentationBasePath\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepathdefault-field","title":"IDocumentationBasePath.DEFAULT Field","text":"<p>The default path base for automatically generated documentation in an HTTP API.</p> C#<pre><code>const string DEFAULT = documentation;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepathvalue-property","title":"IDocumentationBasePath.Value Property","text":"<p>The path to use. Must not start or end with a \"/\".</p> C#<pre><code>string Value { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepathtostring-method","title":"IDocumentationBasePath.ToString() Method","text":"<p>Converts this instance to its string representation which is equal to Value.</p> C#<pre><code>string? ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#returns","title":"Returns","text":"<p>System.String Value</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepathtryvalidate-method","title":"IDocumentationBasePath.TryValidate() Method","text":"<p>Validates the value of this instance.</p> C#<pre><code>bool TryValidate();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#returns_1","title":"Returns","text":"<p>System.Boolean true if successful, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#idocumentationbasepathtryvalidatestring-method","title":"IDocumentationBasePath.TryValidate(string) Method","text":"<p>Validates that the given value does not start or end with a \"/\".</p> C#<pre><code>static bool TryValidate(string value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#parameters","title":"Parameters","text":"<p><code>value</code> System.String</p> <p>The path base to validate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationBasePath/#returns_2","title":"Returns","text":"<p>System.Boolean true if successful, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/","title":"IDocumentationConfiguration","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfiguration-interface","title":"IDocumentationConfiguration Interface","text":"<p>Defines how automatically generated OpenAPI documentation should be hosted within a service.</p> C#<pre><code>public interface IDocumentationConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationbasepath-property","title":"IDocumentationConfiguration.BasePath Property","text":"<p>The path under which the OpenAPI documents should be hosted.</p> C#<pre><code>HAKOM.Documentation.Http.Net.Api.IDocumentationBasePath BasePath { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#property-value","title":"Property Value","text":"<p>IDocumentationBasePath</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationcurrentversion-property","title":"IDocumentationConfiguration.CurrentVersion Property","text":"<p>The current version of the service to be documented.</p> C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion? CurrentVersion { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#property-value_1","title":"Property Value","text":"<p>IVersion</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationfilenameprefix-property","title":"IDocumentationConfiguration.FileNamePrefix Property","text":"<p>The name of the generated document. This will be suffixed with the appropriate version.</p> C#<pre><code>HAKOM.Documentation.Http.Net.Api.IDocumentationFileNamePrefix FileNamePrefix { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#property-value_2","title":"Property Value","text":"<p>IDocumentationFileNamePrefix</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationsupportedversions-property","title":"IDocumentationConfiguration.SupportedVersions Property","text":"<p>A list of all API versions that the service supports.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt;? SupportedVersions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#property-value_3","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;IVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#remarks","title":"Remarks","text":"<p>A separate OpenAPI document will be generated for each one of these.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationversionseparator-property","title":"IDocumentationConfiguration.VersionSeparator Property","text":"<p>A string that separates the FileNamePrefix from the version of the document.</p> C#<pre><code>HAKOM.Documentation.Http.Net.Api.IDocumentationVersionSeparator VersionSeparator { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#property-value_4","title":"Property Value","text":"<p>IDocumentationVersionSeparator</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationgetfilenamefordefaultdocument-method","title":"IDocumentationConfiguration.GetFileNameForDefaultDocument() Method","text":"<p>Gets the full file name for the default document including its extension (but without the BasePath).</p> C#<pre><code>string GetFileNameForDefaultDocument();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#returns","title":"Returns","text":"<p>System.String The file name for the default document.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#idocumentationconfigurationgetfilenamesforversioneddocuments-method","title":"IDocumentationConfiguration.GetFileNamesForVersionedDocuments() Method","text":"<p>Gets the full file names for all the generated documents including the extension (but without the BasePath).</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;(string Version,string FileName)&gt; GetFileNamesForVersionedDocuments();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationConfiguration/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;&lt;System.String,System.String&gt;&gt; The file name for each generated document.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/","title":"IDocumentationFileNamePrefix","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#idocumentationfilenameprefix-interface","title":"IDocumentationFileNamePrefix Interface","text":"<p>Defines the name of the generated OpenAPI document. The final document will consist of this suffixed by the APIs version.</p> C#<pre><code>public interface IDocumentationFileNamePrefix\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#idocumentationfilenameprefixdefault-field","title":"IDocumentationFileNamePrefix.DEFAULT Field","text":"<p>The default prefix to use if nothing else is available/configured.</p> C#<pre><code>const string DEFAULT = openapi;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#idocumentationfilenameprefixvalue-property","title":"IDocumentationFileNamePrefix.Value Property","text":"<p>The actual value to use.</p> C#<pre><code>string Value { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#idocumentationfilenameprefixtostring-method","title":"IDocumentationFileNamePrefix.ToString() Method","text":"<p>Converts this instance to its string representation which is equal to Value.</p> C#<pre><code>string? ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationFileNamePrefix/#returns","title":"Returns","text":"<p>System.String Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/","title":"IDocumentationVersionSeparator","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#idocumentationversionseparator-interface","title":"IDocumentationVersionSeparator Interface","text":"<p>Defines the string that should be used in the file names of automatically generated documentation files for separation between the file name and its version.</p> C#<pre><code>public interface IDocumentationVersionSeparator\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#idocumentationversionseparatordefault-field","title":"IDocumentationVersionSeparator.DEFAULT Field","text":"<p>The default value that should be used if nothing else is specified.</p> C#<pre><code>const string DEFAULT = -;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#idocumentationversionseparatorvalue-property","title":"IDocumentationVersionSeparator.Value Property","text":"<p>The actual value to use.</p> C#<pre><code>string Value { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#idocumentationversionseparatortostring-method","title":"IDocumentationVersionSeparator.ToString() Method","text":"<p>Converts this instance to its string representation which is equal to Value.</p> C#<pre><code>string? ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/IDocumentationVersionSeparator/#returns","title":"Returns","text":"<p>System.String Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/","title":"HAKOM.Documentation.Http.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/#hakomdocumentationhttpnetapiexceptions-namespace","title":"HAKOM.Documentation.Http.Net.Api.Exceptions Namespace","text":"Classes MissingDocumentationConfigurationException Thrown when an attempt is made to configure the routes for automatically generated OpenAPI documents without having configured it first."},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/","title":"MissingDocumentationConfigurationException","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/#missingdocumentationconfigurationexception-class","title":"MissingDocumentationConfigurationException Class","text":"<p>Thrown when an attempt is made to configure the routes for automatically generated OpenAPI documents without having configured it first.</p> C#<pre><code>public sealed class MissingDocumentationConfigurationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MissingDocumentationConfigurationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/#remarks","title":"Remarks","text":"<p>In order to configure the generation of the OpenApi documents, make sure to call AddDocumentation(this IMvcBuilder, string, string, string, string, string, string, Action&lt;SwaggerGenOptions&gt;).  </p> <p>This exception can be identified by its error code HK16003.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/#missingdocumentationconfigurationexceptionequivalenthttpstatuscode-property","title":"MissingDocumentationConfigurationException.EquivalentHttpStatusCode Property","text":"<p>This exception would normally be raised during startup of a service, so there is no status code to respond with as the service will not be in a state to accept requests in the first place.  </p> <p>If the failing service is hosted behind a proxy, that proxy should probably return either a status code 500 (Internal Server Error) or 502 (Bad Gateway).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Exceptions/MissingDocumentationConfigurationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/","title":"HAKOM.Documentation.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/#hakomdocumentationhttpnetapiextensions-namespace","title":"HAKOM.Documentation.Http.Net.Api.Extensions Namespace","text":"Classes MvcBuilderExtensions Contains methods for adding documentation functionality to an MVC framework based web service. SwaggerGenOptionsExtensions Provides extension methods on Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions for non-trivial modification of generated OpenAPI documents. WebApplicationExtension Provides extension methods for adding automatically generated OpenAPI documentation to an MVC framework based HTTP API."},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/","title":"MvcBuilderExtensions","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensions-class","title":"MvcBuilderExtensions Class","text":"<p>Contains methods for adding documentation functionality to an MVC framework based web service.</p> C#<pre><code>public static class MvcBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsdefault_service_title-field","title":"MvcBuilderExtensions.DEFAULT_SERVICE_TITLE Field","text":"<p>The title of the service that will be used in any generated OpenAPI document if no other title is available.</p> C#<pre><code>public const string DEFAULT_SERVICE_TITLE = Untitled Service;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsadddocumentationthis-imvcbuilder-string-string-string-string-string-string-actionswaggergenoptions-method","title":"MvcBuilderExtensions.AddDocumentation(this IMvcBuilder, string, string, string, string, string, string, Action&lt;SwaggerGenOptions&gt;) Method","text":"<p>Adds automatically generated OpenAPI documentation to an HTTP API.</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddDocumentation(this Microsoft.Extensions.DependencyInjection.IMvcBuilder builder, string? title=null, string? description=null, string? fileNamePrefix=null, string? xmlFileNamePattern=null, string versionSeparator=\"-\", string basePath=\"documentation\", System.Action&lt;Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions&gt;? swaggerGenSetup=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>builder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p>The Microsoft.Extensions.DependencyInjection.IMvcBuilder to add the documentation to.</p> <p></p> <p><code>title</code> System.String</p> <p>A title of the API to be used for the service in the OpenAPI document. If null but a singleton service for IServiceInformation has previously been registered, that implementations Title property will be used. If not available, the title will simply fallback to DEFAULT_SERVICE_TITLE.</p> <p></p> <p><code>description</code> System.String</p> <p>A description of the API to be used in the OpenAPI document. If null, but a singleton service for IServiceInformation has previously been registered, that implementations Description property will be used. If not available, the description will simply fallback to an empty string.</p> <p></p> <p><code>fileNamePrefix</code> System.String</p> <p>The file name for the OpenAPI document. This will be suffixed by the APIs version. If null this will be the lower case of the assembly name followed by a hyphen or if the assemblies name is null, the constant \"openapi-\".</p> <p></p> <p><code>xmlFileNamePattern</code> System.String</p> <p>If XML comments should be used in the generation of the document and the generated XML documentation file is not named after the assembly (default behavior in Visual Studio), specify the name of the files here. Relative pathes are based in the working directory of the application.</p> <p></p> <p><code>versionSeparator</code> System.String</p> <p>The string to use in the final file name for the OpenAPI document between fileNamePrefix and the documents version.</p> <p></p> <p><code>basePath</code> System.String</p> <p>The base path under which the documentation should be published.</p> <p></p> <p><code>swaggerGenSetup</code> System.Action&lt;Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions&gt;</p> <p>An action that can be used to customize the documentation. See the official Swashbuckle documentation for details.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder The builder for chaining any additional setup.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#remarks","title":"Remarks","text":"<p>When used, a new endpoint will be added to the API (basePath/) which will redirect to the latest version generated for the API (one service may support multiple versions).  </p> <p>If available, XML comments will be used to generate descriptions in the OpenAPI document.  </p> <p>This uses Swashbuckle to generate the documentation based on the MVC controllers registered with the application.             For more information on how to modify the generated document, please consult the official Swashbuckle documentation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsaddtagdescriptionthis-imvcbuilder-string-string-int-method","title":"MvcBuilderExtensions.AddTagDescription(this IMvcBuilder, string, string, int) Method","text":"<p>Ads a description to tags used to group endpoints in OpenAPI documents.</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddTagDescription(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, string tag, string description, int order=0);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#parameters_1","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p>The Microsoft.Extensions.DependencyInjection.IMvcBuilder used to configure the application for which a specific auto-generated documentation tag should be extended with a description.</p> <p></p> <p><code>tag</code> System.String</p> <p>The tag that this description applies to. When multiple AddTagDescription(this IMvcBuilder, string, string, int) calls are performed with the same tag, the last description added during configuration will be used.</p> <p></p> <p><code>description</code> System.String</p> <p>A short text describing what endpoints grouped by this tag have in common.</p> <p></p> <p><code>order</code> System.Int32</p> <p>When specified, determines the relative order by which the tag is to be sorted. Tags are sorted by order first, then alphabetically by tag.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder The mvcBuilder for chaining of additional setup.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/MvcBuilderExtensions/#remarks_1","title":"Remarks","text":"<p>When adding automatically generated OpenAPI documentation via AddDocumentation(this IMvcBuilder, string, string, string, string, string, string, Action&lt;SwaggerGenOptions&gt;) to an MVC framework based HTTP API, all endpoints are automatically grouped using tags generated based on their namespace. In addition, individual controllers and actions can have tags assigned by using the Microsoft.AspNetCore.Http.TagsAttribute.  </p> <p>In order to add a short description to a tag that explains in a little more detail what the endpoints that are grouped by that particular tag have in common, call this method on the mvcBuilder.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/","title":"SwaggerGenOptionsExtensions","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#swaggergenoptionsextensions-class","title":"SwaggerGenOptionsExtensions Class","text":"<p>Provides extension methods on Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions for non-trivial modification of generated OpenAPI documents.</p> C#<pre><code>public static class SwaggerGenOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 SwaggerGenOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#swaggergenoptionsextensionsaddcustommodelbinderfilterstmodelthis-swaggergenoptions-method","title":"SwaggerGenOptionsExtensions.AddCustomModelBinderFilters&lt;TModel&gt;(this SwaggerGenOptions) Method","text":"<p>Registers Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter instances that cause proper documentation of parameters bound by ICustomModelBinder implementations.</p> C#<pre><code>public static Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions AddCustomModelBinderFilters&lt;TModel&gt;(this Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions swaggerGenOptions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TModel</code></p> <p>The model for which a custom model binder is being used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>swaggerGenOptions</code> Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions</p> <p>The Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions used to configure the creation of the OpenAPI document.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#returns","title":"Returns","text":"<p>Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions The swaggerGenOptions for chaining of additional configuration method calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/SwaggerGenOptionsExtensions/#remarks","title":"Remarks","text":"<p>Whenever an implementation of ICustomModelBinder is used to bind parameters from the route or query to a complex object, the automatically generated OpenAPI specification of these parameters is likely to be wrong.  </p> <p>Therefor, in addition to registering the custom model binder, one should also  call this method with the TModel supported by the binder. This cause operation filters to be registered that will - to the best of their ability - extract information about the models underlying paramters from the binder and document them accordingly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/","title":"WebApplicationExtension","text":"<p>Assembly: HAKOM.Documentation.Http.Net</p> <p>Namespace: HAKOM.Documentation.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#webapplicationextension-class","title":"WebApplicationExtension Class","text":"<p>Provides extension methods for adding automatically generated OpenAPI documentation to an MVC framework based HTTP API.</p> C#<pre><code>public static class WebApplicationExtension\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 WebApplicationExtension</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#webapplicationextensionusedocumentationthis-webapplication-actionswaggeroptions-method","title":"WebApplicationExtension.UseDocumentation(this WebApplication, Action&lt;SwaggerOptions&gt;) Method","text":"<p>Configures the route template that can be used to access to the the OpenApi documentation.</p> C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplication UseDocumentation(this Microsoft.AspNetCore.Builder.WebApplication webApplication, System.Action&lt;Swashbuckle.AspNetCore.Swagger.SwaggerOptions&gt;? additionalConfiguration=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#parameters","title":"Parameters","text":"<p><code>webApplication</code> Microsoft.AspNetCore.Builder.WebApplication</p> <p>The Microsoft.AspNetCore.Builder.WebApplication to add the route template to.</p> <p></p> <p><code>additionalConfiguration</code> System.Action&lt;Swashbuckle.AspNetCore.Swagger.SwaggerOptions&gt;</p> <p>An optional action that may be used to tweak the Swashbuckle.AspNetCore.Swagger.SwaggerOptions used for hosting the documentation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplication The webApplication itself for further configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Documentation/Http/API/Extensions/WebApplicationExtension/#remarks","title":"Remarks","text":"<p>Make sure to call AddDocumentation(this IMvcBuilder, string, string, string, string, string, string, Action&lt;SwaggerGenOptions&gt;) first.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/","title":"HAKOM.ErrorHandling.Core.Net","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/#hakomerrorhandlingcorenet-assembly","title":"HAKOM.ErrorHandling.Core.Net Assembly","text":"Namespaces HAKOM.ErrorHandling.Core.Net.Api HAKOM.ErrorHandling.Core.Net.Api.Exceptions HAKOM.ErrorHandling.Core.Net.Api.Results"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/","title":"HAKOM.ErrorHandling.Core.Net.Api","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/#hakomerrorhandlingcorenetapi-namespace","title":"HAKOM.ErrorHandling.Core.Net.Api Namespace","text":"Classes HakomException Base class for all exceptions thrown by HAKOM software Result Base class for result objects which can represent either the success or the failure of an operation. Result&lt;TValue&gt; Represents the result of an operation that is supposed to return a value of type TValue."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/","title":"HakomException","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexception-class","title":"HakomException Class","text":"<p>Base class for all exceptions thrown by HAKOM software</p> C#<pre><code>public abstract class HakomException : System.Exception\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException</p> <p>Derived \u21b3 ErrorDuringEnumerationException \u21b3 ExceptionIsNotAHakomExceptionException \u21b3 UnexpectedErrorException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionstring-exception-constructor","title":"HakomException(string, Exception) Constructor","text":"<p>Creates a new exception with the given message and root cause.</p> C#<pre><code>protected HakomException(string message, System.Exception innerException);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#parameters","title":"Parameters","text":"<p><code>message</code> System.String</p> <p>A message with additional information</p> <p></p> <p><code>innerException</code> System.Exception</p> <p>The root cause of the exception</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionstring-constructor","title":"HakomException(string) Constructor","text":"<p>Creates new exception with the given message.</p> C#<pre><code>protected HakomException(string message);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#parameters_1","title":"Parameters","text":"<p><code>message</code> System.String</p> <p>A message with additional information</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionexception-constructor","title":"HakomException(Exception) Constructor","text":"<p>Creates a new exception from some exception as the root cause.</p> C#<pre><code>protected HakomException(System.Exception innerException);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#parameters_2","title":"Parameters","text":"<p><code>innerException</code> System.Exception</p> <p>The root cause of the exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptioncode-property","title":"HakomException.Code Property","text":"<p>Gets a unique code that can be used to quickly find documentation on the type of exception that occurred</p> C#<pre><code>public string Code { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptioncodenumber-property","title":"HakomException.CodeNumber Property","text":"C#<pre><code>public int CodeNumber { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#property-value_1","title":"Property Value","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionequivalenthttpstatuscode-property","title":"HakomException.EquivalentHttpStatusCode Property","text":"<p>Override this to provide a proper HTTP status in Webservices.</p> C#<pre><code>protected abstract System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#property-value_2","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionmessage-property","title":"HakomException.Message Property","text":"<p>Gets the description of the exception that occurred including the Code.</p> C#<pre><code>public override string Message { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionrawmessage-property","title":"HakomException.RawMessage Property","text":"<p>Gets the description of the exception that occurred without the Code.</p> C#<pre><code>public string RawMessage { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#property-value_4","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionhttpstatushakomexception-method","title":"HakomException.HttpStatus(HakomException) Method","text":"<p>Returns the HTTP status code for a given HAKOM exception</p> C#<pre><code>public static System.Net.HttpStatusCode HttpStatus(HAKOM.ErrorHandling.Core.Net.Api.HakomException exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#parameters_3","title":"Parameters","text":"<p><code>exception</code> HakomException</p> <p>The exception for which to get the status code</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#returns","title":"Returns","text":"<p>System.Net.HttpStatusCode The status code</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#hakomexceptionhttpstatusexception-method","title":"HakomException.HttpStatus(Exception) Method","text":"<p>Returns the default HTTP status code for an exception</p> C#<pre><code>public static System.Net.HttpStatusCode HttpStatus(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#parameters_4","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The exception for which to get the status code</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/HakomException/#returns_1","title":"Returns","text":"<p>System.Net.HttpStatusCode The status code</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/","title":"Result","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#result-class","title":"Result Class","text":"<p>Base class for result objects which can represent either the success or the failure of an operation.</p> C#<pre><code>public abstract class Result\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Result</p> <p>Derived \u21b3 Failure \u21b3 Success</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultsuccessful-property","title":"Result.Successful Property","text":"<p>Whether or not the operation succeeded.</p> C#<pre><code>public bool Successful { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#property-value","title":"Property Value","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultfailure-method","title":"Result.Failure() Method","text":"<p>Creates a result that represents the failure of an operation.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure Failure();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns","title":"Returns","text":"<p>Failure An instance of Failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultfailureexception-method","title":"Result.Failure(Exception) Method","text":"<p>Creates a result that represents the failure of an operation due to exception.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure Failure(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The System.Exception that caused the failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_1","title":"Returns","text":"<p>Failure An instance of Failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultfailuret-method","title":"Result.Failure&lt;T&gt;() Method","text":"<p>Creates a new instance of Failure&lt;TValue&gt; representing an operation that failed due to an unspecified error.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;T&gt; Failure&lt;T&gt;();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#type-parameters","title":"Type parameters","text":"<p><code>T</code></p> <p>The type of value that the operation would return if it had not failed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;T&gt; An instance of Failure&lt;TValue&gt; representing the failure of an operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultfailuretexception-method","title":"Result.Failure&lt;T&gt;(Exception) Method","text":"<p>Creates a new instance of Failure&lt;TValue&gt; from the given exception, representing an operation that failed due to exception.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;T&gt; Failure&lt;T&gt;(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#type-parameters_1","title":"Type parameters","text":"<p><code>T</code></p> <p>The type of value that the operation would return if it had not failed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters_1","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>An System.Exception representing the cause of the operations failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;T&gt; An instance of Failure&lt;TValue&gt; representing the failure of an operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultgetexceptionornull-method","title":"Result.GetExceptionOrNull() Method","text":"C#<pre><code>protected abstract System.Exception? GetExceptionOrNull();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_4","title":"Returns","text":"<p>System.Exception</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultsuccess-method","title":"Result.Success() Method","text":"<p>Creates a result that represents the result of a successful operation.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Success Success();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_5","title":"Returns","text":"<p>Success An instance of Success.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultsuccesstt-method","title":"Result.Success&lt;T&gt;(T) Method","text":"<p>Creates a new instance of Success&lt;TValue&gt; from the given value, representing an operation that succeeded and returned value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;T&gt; Success&lt;T&gt;(T value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#type-parameters_2","title":"Type parameters","text":"<p><code>T</code></p> <p>The type of value that the operation returned.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters_2","title":"Parameters","text":"<p><code>value</code> T</p> <p>The value returned by the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_6","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;T&gt; An instance of Success&lt;TValue&gt; representing the successful result of an operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultthrowonfailure-method","title":"Result.ThrowOnFailure() Method","text":"C#<pre><code>public void ThrowOnFailure();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resulttrygeterrorexception-method","title":"Result.TryGetError(Exception) Method","text":"C#<pre><code>public bool TryGetError(out System.Exception? error);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters_3","title":"Parameters","text":"<p><code>error</code> System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_7","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultimplicit-operator-resultexception-operator","title":"Result.implicit operator Result(Exception) Operator","text":"<p>Converts an exception to an instance of Result representing failure.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result implicit operator Result(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters_4","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The exception to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_8","title":"Returns","text":"<p>Result</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#resultimplicit-operator-exceptionresult-operator","title":"Result.implicit operator Exception(Result) Operator","text":"<p>Attempts to convert an instance of Result to an exception if the result represents a failed operation. If the result represents success this conversion will yield null.</p> C#<pre><code>public static System.Exception? implicit operator Exception?(HAKOM.ErrorHandling.Core.Net.Api.Result result);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#parameters_5","title":"Parameters","text":"<p><code>result</code> Result</p> <p>The result to attempt to convert to its underlying exception.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Result/#returns_9","title":"Returns","text":"<p>System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/","title":"Result&lt;TValue&gt;","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvalue-class","title":"Result&lt;TValue&gt; Class","text":"<p>Represents the result of an operation that is supposed to return a value of type TValue.</p> C#<pre><code>public abstract class Result&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of value the operation would return if successful.</p> <p>Inheritance System.Object \ud83e\udc52 Result <p>Derived \u21b3 Failure&lt;TValue&gt; \u21b3 Success&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultsuccessful-property","title":"Result.Successful Property <p>Whether or not the operation succeeded.</p> C#<pre><code>public bool Successful { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#property-value","title":"Property Value","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvaluegetexceptionornull-method","title":"Result&lt;TValue&gt;.GetExceptionOrNull() Method C#<pre><code>protected virtual System.Exception? GetExceptionOrNull();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns","title":"Returns","text":"<p>System.Exception</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvaluegetvalueorerrortvalue-hakomexception-method","title":"Result&lt;TValue&gt;.GetValueOrError(TValue, HakomException) Method <p>Get either the value or the error of a Result&lt;TValue&gt;.</p> C#<pre><code>public bool GetValueOrError(out TValue value, out HAKOM.ErrorHandling.Core.Net.Api.HakomException exception);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>Contains the Value of the successful operation, or the default value for TValue if the operation was not successful.</p> <p></p> <p><code>exception</code> HakomException</p> <p>Contains the Error of the failure operation, or the default value for HakomException if the operation was successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_1","title":"Returns","text":"<p>System.Boolean true when the Result instance represents a Success&lt;TValue&gt; and false when it represents an Failure&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#remarks","title":"Remarks","text":"<p>Outputs the value of the Result&lt;TValue&gt; when it is a Success&lt;TValue&gt; or leaves it as default value  when it is a Failure&lt;TValue&gt;.  </p> <p>Does the opposite for exception so that when the Result&lt;TValue&gt; is a Success&lt;TValue&gt; it will be set as default and when its a Failure&lt;TValue&gt; it sets the correct HakomException.  </p> <p>Information about this is provided by the returned System.Boolean (false if exception has been set, true otherwise).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvaluegetvalueorthrow-method","title":"Result&lt;TValue&gt;.GetValueOrThrow() Method <p>Gets either the value of this instance (if it is a Success&lt;TValue&gt;) or throws the exception that caused the result to be a Failure&lt;TValue&gt;.</p> C#<pre><code>public TValue GetValueOrThrow();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_2","title":"Returns","text":"<p>TValue Either the value of the result or nothing but instead throwing the underlying exception.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvaluethrowonfailure-method","title":"Result&lt;TValue&gt;.ThrowOnFailure() Method C#<pre><code>public void ThrowOnFailure();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resulttvaluetrygetvaluetvalue-method","title":"Result&lt;TValue&gt;.TryGetValue(TValue) Method <p>Outputs the value of the Result&lt;TValue&gt; if it is a Success&lt;TValue&gt; or leaves it as default value  when it is a Failure&lt;TValue&gt;. Information about this is provided by the returned System.Boolean.</p> C#<pre><code>public bool TryGetValue(out TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_1","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>Contains the value of the successful operation, or the default value for TValue if the operation was not successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_3","title":"Returns","text":"<p>System.Boolean true when the Result instance represents a Success&lt;TValue&gt; and false otherwise when it             represents an Failure&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultimplicit-operator-resultresult-operator","title":"Result.implicit operator Result(Result) Operator <p>Attempts to convert an instance of Result&lt;TValue&gt; to an instance of Result. if the result represents a failed operation..</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result implicit operator Result(HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; result);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_2","title":"Parameters","text":"<p><code>result</code> HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p>The result to attempt to convert to its underlying exception.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_4","title":"Returns","text":"<p>Result</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultimplicit-operator-resultexception-operator","title":"Result.implicit operator Result(Exception) Operator <p>Converts an exception to an instance of Result&lt;TValue&gt; representing failure.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; implicit operator Result&lt;TValue&gt;(System.Exception exception);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_3","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The exception to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_5","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultimplicit-operator-resulttvalue-operator","title":"Result.implicit operator Result(TValue) Operator <p>Converts a value of type TValue instance of Result&lt;TValue&gt; representing success.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; implicit operator Result&lt;TValue&gt;(TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_4","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_6","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultimplicit-operator-exceptionresult-operator","title":"Result.implicit operator Exception(Result) Operator <p>Attempts to convert an instance of Result&lt;TValue&gt; to an exception if the result represents a failed operation. If the result represents success this conversion will yield null.</p> C#<pre><code>public static System.Exception? implicit operator Exception?(HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; result);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_5","title":"Parameters","text":"<p><code>result</code> HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p>The result to attempt to convert to its underlying exception.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_7","title":"Returns","text":"<p>System.Exception</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#resultimplicit-operator-tvalueresult-operator","title":"Result.implicit operator TValue(Result) Operator <p>Converts an instance of Result&lt;TValue&gt; to its value. If the operation was unsuccessful due to an exception, that exception will be thrown.</p> C#<pre><code>public static TValue implicit operator TValue(HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; result);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#parameters_6","title":"Parameters","text":"<p><code>result</code> HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;</p> <p>The result to convert to its value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/ResultOf1/#returns_8","title":"Returns","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/","title":"HAKOM.ErrorHandling.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/#hakomerrorhandlingcorenetapiexceptions-namespace","title":"HAKOM.ErrorHandling.Core.Net.Api.Exceptions Namespace","text":"Classes ErrorDuringEnumerationException Indicates that an error ocurred while iterating over an enumerator and converting the values to Result or Result&lt;TValue&gt; instances. ExceptionIsNotAHakomExceptionException This exception indicates that an attempt was made to call a method within the ErrorHandlingmodule (Probably one of HAKOM.ErrorHandling.Core.Net.ErrorCodeResolver) with an exception type as a parameterthat was expected to be derived from HakomExceptionbut was not. UnexpectedErrorException"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/","title":"ErrorDuringEnumerationException","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/#errorduringenumerationexception-class","title":"ErrorDuringEnumerationException Class","text":"<p>Indicates that an error ocurred while iterating over an enumerator and converting the values to Result or Result&lt;TValue&gt; instances.</p> C#<pre><code>public sealed class ErrorDuringEnumerationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ErrorDuringEnumerationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/#remarks","title":"Remarks","text":"<p>See the System.Exception.InnerException property for more information that may help in resolving the particular issue.  </p> <p>This error is identified by code HK09004.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/#errorduringenumerationexceptionequivalenthttpstatuscode-property","title":"ErrorDuringEnumerationException.EquivalentHttpStatusCode Property","text":"<p>Returns 500 (Internal Server Error). If this exception is raised while processing a web service request, the response should be returned with this status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ErrorDuringEnumerationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/","title":"ExceptionIsNotAHakomExceptionException","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#exceptionisnotahakomexceptionexception-class","title":"ExceptionIsNotAHakomExceptionException Class","text":"<p>This exception indicates that an attempt was made to call a method within the ErrorHandling module (Probably one of HAKOM.ErrorHandling.Core.Net.ErrorCodeResolver) with an exception type as a parameter that was expected to be derived from HakomException but was not.</p> C#<pre><code>public sealed class ExceptionIsNotAHakomExceptionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ExceptionIsNotAHakomExceptionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#exceptionisnotahakomexceptionexceptionequivalenthttpstatuscode-property","title":"ExceptionIsNotAHakomExceptionException.EquivalentHttpStatusCode Property","text":"<p>When unhandled within an HTTP request,this exception should produce an HTTP status code of 500 (internal server error)</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#exceptionisnotahakomexceptionexceptionexceptiontype-property","title":"ExceptionIsNotAHakomExceptionException.ExceptionType Property","text":"<p>The type of exception that was expected to derive from HakomException.</p> C#<pre><code>public System.Type ExceptionType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/ExceptionIsNotAHakomExceptionException/#property-value_1","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/UnexpectedErrorException/","title":"UnexpectedErrorException","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/UnexpectedErrorException/#unexpectederrorexception-class","title":"UnexpectedErrorException Class","text":"C#<pre><code>public sealed class UnexpectedErrorException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnexpectedErrorException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/UnexpectedErrorException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/UnexpectedErrorException/#unexpectederrorexceptionequivalenthttpstatuscode-property","title":"UnexpectedErrorException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Exceptions/UnexpectedErrorException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/","title":"HAKOM.ErrorHandling.Core.Net.Api.Results","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/#hakomerrorhandlingcorenetapiresults-namespace","title":"HAKOM.ErrorHandling.Core.Net.Api.Results Namespace","text":"Classes Failure Represents the failure of an operation that would normally return void. Failure&lt;TValue&gt; Represents the result of an unsuccessful operation that was supposed to return a value of type TValue. Success Represents the successful completion of an operation returning void. Success&lt;TValue&gt; Represents the result of a successful operation that returned a value of type TValue."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/","title":"Failure","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Results</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#failure-class","title":"Failure Class","text":"<p>Represents the failure of an operation that would normally return void.</p> C#<pre><code>public sealed class Failure : HAKOM.ErrorHandling.Core.Net.Api.Result\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Result \ud83e\udc52 Failure</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#failurehakomexception-constructor","title":"Failure(HakomException) Constructor","text":"<p>Creates a Failure from a HakomException.</p> C#<pre><code>public Failure(HAKOM.ErrorHandling.Core.Net.Api.HakomException error);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#parameters","title":"Parameters","text":"<p><code>error</code> HakomException</p> <p>The HakomException that caused this error.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#failureerror-property","title":"Failure.Error Property","text":"<p>The error that caused the operation to fail.</p> C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.HakomException Error { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#property-value","title":"Property Value","text":"<p>HakomException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#failuregetexceptionornull-method","title":"Failure.GetExceptionOrNull() Method","text":"C#<pre><code>protected override System.Exception? GetExceptionOrNull();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#returns","title":"Returns","text":"<p>System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#failureimplicit-operator-failureexception-operator","title":"Failure.implicit operator Failure(Exception) Operator","text":"<p>Creates an instance of Failure from an exception.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure implicit operator Failure(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#parameters_1","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The System.Exception to create the failure result from. Exceptions that do not derive from HakomException will be wrapped in an UnexpectedErrorException.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Failure/#returns_1","title":"Returns","text":"<p>Failure</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/","title":"Failure&lt;TValue&gt;","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Results</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#failuretvalue-class","title":"Failure&lt;TValue&gt; Class","text":"<p>Represents the result of an unsuccessful operation that was supposed to return a value of type TValue.</p> C#<pre><code>public sealed class Failure&lt;TValue&gt; : HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value that was supposed to be returned by the operation.</p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; \ud83e\udc52 Failure"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#failurehakomexception-constructor","title":"Failure(HakomException) Constructor","text":"<p>Creates a Failure&lt;TValue&gt; from a HakomException.</p> C#<pre><code>public Failure(HAKOM.ErrorHandling.Core.Net.Api.HakomException error);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#parameters","title":"Parameters","text":"<p><code>error</code> HakomException</p> <p>The HakomException that caused this error.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#failureerror-property","title":"Failure.Error Property <p>A HakomException representing the cause of failure.</p> C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.HakomException Error { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#property-value","title":"Property Value","text":"<p>HakomException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#failureimplicit-operator-failureexception-operator","title":"Failure.implicit operator Failure(Exception) Operator <p>Creates an instance of Failure&lt;TValue&gt; from an exception.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TValue&gt; implicit operator Failure&lt;TValue&gt;(System.Exception exception);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#parameters_1","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The System.Exception to create the failure result from. Exceptions that do not derive from HakomException will be wrapped in an UnexpectedErrorException.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#failureimplicit-operator-tvaluefailure-operator","title":"Failure.implicit operator TValue(Failure) Operator <p>Throws the exception that caused the operation to fail.</p> C#<pre><code>public static TValue implicit operator TValue(HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TValue&gt; failure);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#parameters_2","title":"Parameters","text":"<p><code>failure</code> HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TValue&gt;</p> <p>The unsuccessful failure of an operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/FailureOf1/#returns_1","title":"Returns","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/","title":"Success","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Results</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#success-class","title":"Success Class","text":"<p>Represents the successful completion of an operation returning void.</p> C#<pre><code>public sealed class Success : HAKOM.ErrorHandling.Core.Net.Api.Result\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Result \ud83e\udc52 Success</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#success-constructor","title":"Success() Constructor","text":"<p>Creates a Success instance.</p> C#<pre><code>public Success();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#successgetexceptionornull-method","title":"Success.GetExceptionOrNull() Method","text":"C#<pre><code>protected override System.Exception? GetExceptionOrNull();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/Success/#returns","title":"Returns","text":"<p>System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/","title":"Success&lt;TValue&gt;","text":"<p>Assembly: HAKOM.ErrorHandling.Core.Net</p> <p>Namespace: HAKOM.ErrorHandling.Core.Net.Api.Results</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#successtvalue-class","title":"Success&lt;TValue&gt; Class","text":"<p>Represents the result of a successful operation that returned a value of type TValue.</p> C#<pre><code>public sealed class Success&lt;TValue&gt; : HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value returned by the operation.</p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TValue&gt; \ud83e\udc52 Success"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#successtvalue-constructor","title":"Success(TValue) Constructor","text":"<p>Creates a Success&lt;TValue&gt; instance from its value.</p> C#<pre><code>public Success(TValue value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#parameters","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value of the result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#successvalue-property","title":"Success.Value Property <p>The value successfully returned by the operation.</p> C#<pre><code>public TValue Value { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#property-value","title":"Property Value","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#successimplicit-operator-successtvalue-operator","title":"Success.implicit operator Success(TValue) Operator <p>Converts a value to a successful result of that value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;TValue&gt; implicit operator Success&lt;TValue&gt;(TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#parameters_1","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#successimplicit-operator-tvaluesuccess-operator","title":"Success.implicit operator TValue(Success) Operator <p>Converts the successful Result to its value.</p> C#<pre><code>public static TValue implicit operator TValue(HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;TValue&gt; success);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#parameters_2","title":"Parameters","text":"<p><code>success</code> HAKOM.ErrorHandling.Core.Net.Api.Results.Success&lt;TValue&gt;</p> <p>The result of the operation to convert to its value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Core/API/Results/SuccessOf1/#returns_1","title":"Returns","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/","title":"HAKOM.ErrorHandling.Http.Net","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/#hakomerrorhandlinghttpnet-assembly","title":"HAKOM.ErrorHandling.Http.Net Assembly","text":"Namespaces HAKOM.ErrorHandling.Http.Net.Api HAKOM.ErrorHandling.Http.Net.Api.Exceptions HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions HAKOM.ErrorHandling.Http.Net.Api.Extensions HAKOM.ErrorHandling.Http.Net.Api.Serialization.Json.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/","title":"HAKOM.ErrorHandling.Http.Net.Api","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/#hakomerrorhandlinghttpnetapi-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api Namespace","text":"Interfaces IHttpFailureFactory Creates a Failure&lt;TValue&gt; that represent a HTTP response errors."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/","title":"IHttpFailureFactory","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#ihttpfailurefactory-interface","title":"IHttpFailureFactory Interface","text":"<p>Creates a Failure&lt;TValue&gt; that represent a HTTP response errors.</p> C#<pre><code>public interface IHttpFailureFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#ihttpfailurefactorycreatenotfoundtresultstring-string-object-method","title":"IHttpFailureFactory.CreateNotFound&lt;TResult&gt;(string, string, object) Method","text":"<p>Creates a Failure&lt;TValue&gt; representing a 'Not Found' error for a specified resource and identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TResult&gt; CreateNotFound&lt;TResult&gt;(string resource, string identifierType, object identifierValue);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of the result associated with the failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#parameters","title":"Parameters","text":"<p><code>resource</code> System.String</p> <p>The resource that was not found.</p> <p></p> <p><code>identifierType</code> System.String</p> <p>The type of identifier that was used to locate the resource (name, id, ...).</p> <p></p> <p><code>identifierValue</code> System.Object</p> <p>The value of the identifier that was not found.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/IHttpFailureFactory/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Results.Failure&lt;TResult&gt; A Failure&lt;TValue&gt; representing the 'Not Found' error.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/#hakomerrorhandlinghttpnetapiexceptions-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions Namespace","text":"Classes ExtraneousQueryParametersException Indicates that a request was made to a resource with unsupported query parameters HttpRequestFailedException Indicates that some http behavior did not work during a http request. ProblemDetailsResponseException Represents an exception caused by an HTTP response according to https://tools.ietf.org/html/rfc7807"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/","title":"ExtraneousQueryParametersException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/#extraneousqueryparametersexception-class","title":"ExtraneousQueryParametersException Class","text":"<p>Indicates that a request was made to a resource with unsupported query parameters</p> C#<pre><code>public sealed class ExtraneousQueryParametersException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ExtraneousQueryParametersException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/#remarks","title":"Remarks","text":"<p>When encountering this error, make sure you do not pass along query parameters that are not explicitly supported by the endpoint you are trying to access.  </p> <p>When implementing new endpoints that use custom model binders which bind multiple query parameters to complex objects, make sure all of them call SetBoundQueryParameters(this ModelBindingContext, IEnumerable&lt;string&gt;).  </p> <p>This error is identified by code HK09008.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/#extraneousqueryparametersexceptionequivalenthttpstatuscode-property","title":"ExtraneousQueryParametersException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ExtraneousQueryParametersException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedException/","title":"HttpRequestFailedException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedException/#httprequestfailedexception-class","title":"HttpRequestFailedException Class","text":"<p>Indicates that some http behavior did not work during a http request.</p> C#<pre><code>public abstract class HttpRequestFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 HttpRequestFailedException</p> <p>Derived \u21b3 ClientErrorException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/","title":"ProblemDetailsResponseException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#problemdetailsresponseexception-class","title":"ProblemDetailsResponseException Class","text":"<p>Represents an exception caused by an HTTP response according to https://tools.ietf.org/html/rfc7807</p> C#<pre><code>public sealed class ProblemDetailsResponseException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ProblemDetailsResponseException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#problemdetailsresponseexceptionequivalenthttpstatuscode-property","title":"ProblemDetailsResponseException.EquivalentHttpStatusCode Property","text":"<p>The status code of this error for an HTTP request is determined from the supplied error or problem details.  If no status code can be determined, the default status code is 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#problemdetailsresponseexceptionextensions-property","title":"ProblemDetailsResponseException.Extensions Property","text":"<p>Contains any properties included in the response that extend the problem-details object (see https://datatracker.ietf.org/doc/html/rfc7807#section-3.2).</p> C#<pre><code>public System.Collections.Generic.IDictionary&lt;string,object?&gt; Extensions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#problemdetailsresponseexceptiontrygethakomerrorcodestring-method","title":"ProblemDetailsResponseException.TryGetHakomErrorCode(string) Method","text":"<p>If the underlying exception appears to have been a HakomException, this method will return true and set code to the code as reported by the response.</p> C#<pre><code>public bool TryGetHakomErrorCode(out string code);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#parameters","title":"Parameters","text":"<p><code>code</code> System.String</p> <p>If the method returns true, this parameter will contain the code representing the error that was raised by the service.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/ProblemDetailsResponseException/#returns","title":"Returns","text":"<p>System.Boolean True if the response appears to have been caused by a HAKOM error, false if some other unexpected exception caused the error response.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/#hakomerrorhandlinghttpnetapiexceptionshttprequestfailedexceptions-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions Namespace","text":"Classes ClientErrorException Base class for exceptions indicating that an HTTP request failed due to a client error."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorException/","title":"ClientErrorException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorException/#clienterrorexception-class","title":"ClientErrorException Class","text":"<p>Base class for exceptions indicating that an HTTP request failed due to a client error.</p> C#<pre><code>public abstract class ClientErrorException : HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 HttpRequestFailedException \ud83e\udc52 ClientErrorException</p> <p>Derived \u21b3 BadRequestException \u21b3 MultipleErrorsOccurredException \u21b3 NotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/#hakomerrorhandlinghttpnetapiexceptionshttprequestfailedexceptionsclienterrorexceptions-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions Namespace","text":"Classes BadRequestException Indicates that a request was made using incorrect or missing data. MultipleErrorsOccurredException Indicates that the multiple client errors occurred while processing the request. NotFoundException Indicates that the requested resource could not be found."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/","title":"BadRequestException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/#badrequestexception-class","title":"BadRequestException Class","text":"<p>Indicates that a request was made using incorrect or missing data.</p> C#<pre><code>public sealed class BadRequestException : HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 HttpRequestFailedException \ud83e\udc52 ClientErrorException \ud83e\udc52 BadRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK09006.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/#badrequestexceptionequivalenthttpstatuscode-property","title":"BadRequestException.EquivalentHttpStatusCode Property","text":"<p>When thrown while processing an HTTP request, this exception should terminate the request with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/BadRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/","title":"MultipleErrorsOccurredException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/#multipleerrorsoccurredexception-class","title":"MultipleErrorsOccurredException Class","text":"<p>Indicates that the multiple client errors occurred while processing the request.</p> C#<pre><code>public sealed class MultipleErrorsOccurredException : HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 HttpRequestFailedException \ud83e\udc52 ClientErrorException \ud83e\udc52 MultipleErrorsOccurredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK09007.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/#multipleerrorsoccurredexceptionequivalenthttpstatuscode-property","title":"MultipleErrorsOccurredException.EquivalentHttpStatusCode Property","text":"<p>When thrown while processing an HTTP request, this exception should terminate the request with the highest of all the status codes defined by the errors that caused it.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/MultipleErrorsOccurredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/","title":"NotFoundException","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/#notfoundexception-class","title":"NotFoundException Class","text":"<p>Indicates that the requested resource could not be found.</p> C#<pre><code>public sealed class NotFoundException : HAKOM.ErrorHandling.Http.Net.Api.Exceptions.HttpRequestFailedExceptions.ClientErrorException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 HttpRequestFailedException \ud83e\udc52 ClientErrorException \ud83e\udc52 NotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK09005.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/#notfoundexceptionequivalenthttpstatuscode-property","title":"NotFoundException.EquivalentHttpStatusCode Property","text":"<p>Returns the HTTP status code that should be returned by an endpoint that throws this exception.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Exceptions/HttpRequestFailedExceptions/ClientErrorExceptions/NotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/","title":"HAKOM.ErrorHandling.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/#hakomerrorhandlinghttpnetapiextensions-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Registers types used for handling errors in an HTTP/Webservice context. MvcOptionsExtensions Extension methods for adding error-handling features to an application using Microsofts MVC framework. ProblemDetailsServiceExtensions Provides additional methods for writing RFC7807 problem details to HTTP responses. SchemaRepositoryExtensions Provides extension methods to make OpenApi schemas used for error handling available to custom operation filters, etc. WebApplicationBuilderExtensions Adds services for error handling to a web application."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Registers types used for handling errors in an HTTP/Webservice context.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#containerextensionsusehttpfailurefactorythis-icontainer-method","title":"ContainerExtensions.UseHttpFailureFactory(this IContainer) Method","text":"<p>Registers and configures the default implementation of IHttpFailureFactory in the specified container        ///</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseHttpFailureFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the serializer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional calls on it.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#containerextensionsuseresultjsonserializationthis-icontainer-method","title":"ContainerExtensions.UseResultJsonSerialization(this IContainer) Method","text":"<p>Registers types necessary for proper serialization/deserialization of errors.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseResultJsonSerialization(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the serializer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container for chaining additional calls on it.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/","title":"MvcOptionsExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensions-class","title":"MvcOptionsExtensions Class","text":"<p>Extension methods for adding error-handling features to an application using Microsofts MVC framework.</p> C#<pre><code>public static class MvcOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsaddproblemdetailsformatterthis-mvcoptions-method","title":"MvcOptionsExtensions.AddProblemDetailsFormatter(this MvcOptions) Method","text":"<p>Adds RFC7807 compliant formatting of errors to the application.</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions AddProblemDetailsFormatter(this Microsoft.AspNetCore.Mvc.MvcOptions mvcOptions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>mvcOptions</code> Microsoft.AspNetCore.Mvc.MvcOptions</p> <p>The Microsoft.AspNetCore.Mvc.MvcOptions of the application to add error output to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions The mvcOptions themselves for chaining additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#remarks","title":"Remarks","text":"<p>Adds a Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter that can produce RFC7807 compliant application/problem+json responses from intances of - System.Exception (or any type derived thereof), - Microsoft.AspNetCore.Mvc.ProblemDetails (or any type derived thereof), - Failure, - Failure&lt;TValue&gt; </p> <p>This should be added after all other custom output formatters have been added to the Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters collection, otherwise it may have no effect.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsaddsuccessresultformatterthis-mvcoptions-method","title":"MvcOptionsExtensions.AddSuccessResultFormatter(this MvcOptions) Method","text":"<p>Adds implicit Result to Success/Success&lt;TValue&gt;             conversion to the application.</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions AddSuccessResultFormatter(this Microsoft.AspNetCore.Mvc.MvcOptions mvcOptions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#parameters_1","title":"Parameters","text":"<p><code>mvcOptions</code> Microsoft.AspNetCore.Mvc.MvcOptions</p> <p>The Microsoft.AspNetCore.Mvc.MvcOptions of the application to add success conversion to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions The mvcOptions themselves for chaining additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#remarks_1","title":"Remarks","text":"<p>Adds a Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter that can convert into values as application/json responses from intances of - Success, - Success&lt;TValue&gt; </p> <p>This should be added after all other custom output formatters have been added to the Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters collection, otherwise it may have no effect.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsreturnbadrequestonextraneousqueryparametersthis-mvcoptions-method","title":"MvcOptionsExtensions.ReturnBadRequestOnExtraneousQueryParameters(this MvcOptions) Method","text":"<p>Adds a filter to the request pipeline that makes checks if the client passed any query parameters not supported by the endpoint. If so, it short-circuits the rest of the request and responds with a 400 (Bad Request) response.</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions ReturnBadRequestOnExtraneousQueryParameters(this Microsoft.AspNetCore.Mvc.MvcOptions mvcOptions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#parameters_2","title":"Parameters","text":"<p><code>mvcOptions</code> Microsoft.AspNetCore.Mvc.MvcOptions</p> <p>The Microsoft.AspNetCore.Mvc.MvcOptions used to configure the application.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/MvcOptionsExtensions/#returns_2","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions The mvcOptions themselves for chaining additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/","title":"ProblemDetailsServiceExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/#problemdetailsserviceextensions-class","title":"ProblemDetailsServiceExtensions Class","text":"<p>Provides additional methods for writing RFC7807 problem details to HTTP responses.</p> C#<pre><code>public static class ProblemDetailsServiceExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ProblemDetailsServiceExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/#problemdetailsserviceextensionswriteasyncthis-iproblemdetailsservice-httpcontext-hakomexception-method","title":"ProblemDetailsServiceExtensions.WriteAsync(this IProblemDetailsService, HttpContext, HakomException) Method","text":"<p>Writes an RFC7807 problem-details object to an HTTP response based on a HakomException.</p> C#<pre><code>public static System.Threading.Tasks.Task WriteAsync(this Microsoft.AspNetCore.Http.IProblemDetailsService problemDetailsService, Microsoft.AspNetCore.Http.HttpContext httpContext, HAKOM.ErrorHandling.Core.Net.Api.HakomException hakomException);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/#parameters","title":"Parameters","text":"<p><code>problemDetailsService</code> Microsoft.AspNetCore.Http.IProblemDetailsService</p> <p>The Microsoft.AspNetCore.Http.IProblemDetailsService to use for writing.</p> <p></p> <p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The current Microsoft.AspNetCore.Http.HttpContext.</p> <p></p> <p><code>hakomException</code> HakomException</p> <p>The HakomException for which to generate a problem-details response</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/ProblemDetailsServiceExtensions/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the response has been written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/","title":"SchemaRepositoryExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#schemarepositoryextensions-class","title":"SchemaRepositoryExtensions Class","text":"<p>Provides extension methods to make OpenApi schemas used for error handling available to custom operation filters, etc.</p> C#<pre><code>public static class SchemaRepositoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 SchemaRepositoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#schemarepositoryextensionsgetfailureschemathis-schemarepository-ischemagenerator-method","title":"SchemaRepositoryExtensions.GetFailureSchema(this SchemaRepository, ISchemaGenerator) Method","text":"<p>Returns the OpenAPI schema for Failure objects.</p> C#<pre><code>public static Microsoft.OpenApi.Models.OpenApiSchema GetFailureSchema(this Swashbuckle.AspNetCore.SwaggerGen.SchemaRepository schemaRepository, Swashbuckle.AspNetCore.SwaggerGen.ISchemaGenerator generator);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#parameters","title":"Parameters","text":"<p><code>schemaRepository</code> Swashbuckle.AspNetCore.SwaggerGen.SchemaRepository</p> <p>The repository of the current generation context.</p> <p></p> <p><code>generator</code> Swashbuckle.AspNetCore.SwaggerGen.ISchemaGenerator</p> <p>The generator for the current generation context.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#returns","title":"Returns","text":"<p>Microsoft.OpenApi.Models.OpenApiSchema The schema for objects of type Failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#schemarepositoryextensionstrygetproblemdetailsschemathis-schemarepository-openapischema-method","title":"SchemaRepositoryExtensions.TryGetProblemDetailsSchema(this SchemaRepository, OpenApiSchema) Method","text":"<p>Attempts to get the schema for problem details objects to be used in custom error responses.</p> C#<pre><code>public static bool TryGetProblemDetailsSchema(this Swashbuckle.AspNetCore.SwaggerGen.SchemaRepository schemaRepository, out Microsoft.OpenApi.Models.OpenApiSchema schema);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>schemaRepository</code> Swashbuckle.AspNetCore.SwaggerGen.SchemaRepository</p> <p>The schema repository from which to get the schema.</p> <p></p> <p><code>schema</code> Microsoft.OpenApi.Models.OpenApiSchema</p> <p>If successful, the schema for problem details objects that should be returned when an error occurs.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/SchemaRepositoryExtensions/#returns_1","title":"Returns","text":"<p>System.Boolean true if the schema was found, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/","title":"WebApplicationBuilderExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensions-class","title":"WebApplicationBuilderExtensions Class","text":"<p>Adds services for error handling to a web application.</p> C#<pre><code>public static class WebApplicationBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 WebApplicationBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensionsaddhakomerrorhandlingthis-webapplicationbuilder-method","title":"WebApplicationBuilderExtensions.AddHakomErrorHandling(this WebApplicationBuilder) Method","text":"<p>Adds output of Microsoft.AspNetCore.Mvc.ProblemDetails to the application.  </p> <p>This must be added after calling .AddMvc/.AddControllers, because the MVC framework adds additional services which have to be removed for consistent serialization of problem details across the application.  </p> <p>For this to work properly, it requires that serialization is set up, so make sure to add the respective services. Example:  </p> C#<pre><code>builder.Services.AddHakomServices(container=&gt;{  \n  container  \n     .UseSerializerFactory()  \n     .UseSerializationContractTypeProvider()  \n     .UseJsonSerialization()  \n     .UseDefaultJsonSerializer()  \n     .UseResultJsonSerialization();  \n});  \n</code></pre> C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplicationBuilder AddHakomErrorHandling(this Microsoft.AspNetCore.Builder.WebApplicationBuilder builder);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p>The Microsoft.AspNetCore.Builder.WebApplicationBuilder to add error handling capabilities to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Extensions/WebApplicationBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplicationBuilder The builder for chaining additional calls to it.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/","title":"HAKOM.ErrorHandling.Http.Net.Api.Serialization.Json.Extensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/#hakomerrorhandlinghttpnetapiserializationjsonextensions-namespace","title":"HAKOM.ErrorHandling.Http.Net.Api.Serialization.Json.Extensions Namespace","text":"Classes JsonSerializerOptionsExtensions Provides methods for adding HAKOM converters to System.Text.Json.JsonSerializerOptions."},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/","title":"JsonSerializerOptionsExtensions","text":"<p>Assembly: HAKOM.ErrorHandling.Http.Net</p> <p>Namespace: HAKOM.ErrorHandling.Http.Net.Api.Serialization.Json.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#jsonserializeroptionsextensions-class","title":"JsonSerializerOptionsExtensions Class","text":"<p>Provides methods for adding HAKOM converters to System.Text.Json.JsonSerializerOptions.</p> C#<pre><code>public static class JsonSerializerOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 JsonSerializerOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#remarks","title":"Remarks","text":"<p>This only helps with deserializing without spinning up a DI container and using everything inside HAKOM.Serialization.*  See</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#jsonserializeroptionsextensionsadderrorserializationthis-jsonserializeroptions-method","title":"JsonSerializerOptionsExtensions.AddErrorSerialization(this JsonSerializerOptions) Method","text":"<p>Adds converters to System.Text.Json.JsonSerializerOptions to allow for serialization/deserialization of Result, Result&lt;TValue&gt; and HakomException types.</p> C#<pre><code>public static System.Text.Json.JsonSerializerOptions AddErrorSerialization(this System.Text.Json.JsonSerializerOptions options);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>options</code> System.Text.Json.JsonSerializerOptions</p> <p>The System.Text.Json.JsonSerializerOptions to add error serialization to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/ErrorHandling/Http/API/Serialization/Json/Extensions/JsonSerializerOptionsExtensions/#returns","title":"Returns","text":"<p>System.Text.Json.JsonSerializerOptions The options for changing</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/","title":"HAKOM.Http.Core.Net","text":"<p>Assembly: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/#hakomhttpcorenet-assembly","title":"HAKOM.Http.Core.Net Assembly","text":"Namespaces HAKOM.Http.Core.Net HAKOM.Http.Core.Net.Api HAKOM.Http.Core.Net.Api.Exceptions HAKOM.Http.Core.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/","title":"HAKOM.Http.Core.Net.Api","text":"<p>Assembly: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/#hakomhttpcorenetapi-namespace","title":"HAKOM.Http.Core.Net.Api Namespace","text":"Classes Service Base class for HTTP services. Service&lt;TSettingsClass,TSettingsInterface&gt; Interfaces ICorsSettings IHostingSettings IProxySettings IServiceInformation Describes an HTTP API."},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/","title":"ICorsSettings","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettings-interface","title":"ICorsSettings Interface","text":"C#<pre><code>public interface ICorsSettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingscredentials-property","title":"ICorsSettings.Credentials Property","text":"C#<pre><code>bool Credentials { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingsdefaults-property","title":"ICorsSettings.Defaults Property","text":"C#<pre><code>static HAKOM.Http.Core.Net.Api.ICorsSettings Defaults { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_1","title":"Property Value","text":"<p>ICorsSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingsexposedheaders-property","title":"ICorsSettings.ExposedHeaders Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; ExposedHeaders { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingsheaders-property","title":"ICorsSettings.Headers Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; Headers { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_3","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingskey-property","title":"ICorsSettings.Key Property","text":"C#<pre><code>static string Key { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_4","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingsmethods-property","title":"ICorsSettings.Methods Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; Methods { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_5","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingsurls-property","title":"ICorsSettings.Urls Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; Urls { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#property-value_6","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#icorssettingstryreadiconfigurationsection-method","title":"ICorsSettings.TryRead(IConfigurationSection) Method","text":"C#<pre><code>static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Http.Core.Net.Api.ICorsSettings&gt; TryRead(Microsoft.Extensions.Configuration.IConfigurationSection corsSection);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#parameters","title":"Parameters","text":"<p><code>corsSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ICorsSettings/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ICorsSettings&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/","title":"IHostingSettings","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettings-interface","title":"IHostingSettings Interface","text":"C#<pre><code>public interface IHostingSettings\n</code></pre> <p>Derived \u21b3 HostingSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingscorssettings-property","title":"IHostingSettings.CorsSettings Property","text":"C#<pre><code>HAKOM.Http.Core.Net.Api.ICorsSettings CorsSettings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#property-value","title":"Property Value","text":"<p>ICorsSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingsdefaults-property","title":"IHostingSettings.Defaults Property","text":"C#<pre><code>static HAKOM.Http.Core.Net.Api.IHostingSettings Defaults { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#property-value_1","title":"Property Value","text":"<p>IHostingSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingskey-property","title":"IHostingSettings.Key Property","text":"C#<pre><code>static string Key { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingsproxysettings-property","title":"IHostingSettings.ProxySettings Property","text":"C#<pre><code>HAKOM.Http.Core.Net.Api.IProxySettings ProxySettings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#property-value_3","title":"Property Value","text":"<p>IProxySettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingsurls-property","title":"IHostingSettings.Urls Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; Urls { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#property-value_4","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#ihostingsettingstryreadiconfiguration-method","title":"IHostingSettings.TryRead(IConfiguration) Method","text":"C#<pre><code>static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Http.Core.Net.Api.IHostingSettings&gt; TryRead(Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IHostingSettings/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IHostingSettings&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/","title":"IProxySettings","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettings-interface","title":"IProxySettings Interface","text":"C#<pre><code>public interface IProxySettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettingsdefaults-property","title":"IProxySettings.Defaults Property","text":"C#<pre><code>static HAKOM.Http.Core.Net.Api.IProxySettings Defaults { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#property-value","title":"Property Value","text":"<p>IProxySettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettingsforwardedheadersoptions-property","title":"IProxySettings.ForwardedHeadersOptions Property","text":"C#<pre><code>Microsoft.AspNetCore.Builder.ForwardedHeadersOptions ForwardedHeadersOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#property-value_1","title":"Property Value","text":"<p>Microsoft.AspNetCore.Builder.ForwardedHeadersOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettingskey-property","title":"IProxySettings.Key Property","text":"C#<pre><code>static string Key { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettingspathbase-property","title":"IProxySettings.PathBase Property","text":"C#<pre><code>string? PathBase { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#property-value_3","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#iproxysettingstryreadiconfiguration-method","title":"IProxySettings.TryRead(IConfiguration) Method","text":"C#<pre><code>static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Http.Core.Net.Api.IProxySettings&gt; TryRead(Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IProxySettings/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IProxySettings&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/","title":"IServiceInformation","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#iserviceinformation-interface","title":"IServiceInformation Interface","text":"<p>Describes an HTTP API.</p> C#<pre><code>public interface IServiceInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#iserviceinformationdescription-property","title":"IServiceInformation.Description Property","text":"<p>A description summarizing the APIs intended purpose.</p> C#<pre><code>string Description { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#iserviceinformationtitle-property","title":"IServiceInformation.Title Property","text":"<p>The title of the API.</p> C#<pre><code>string Title { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/IServiceInformation/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/","title":"Service","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#service-class","title":"Service Class","text":"<p>Base class for HTTP services.</p> C#<pre><code>public abstract class Service :\nSystem.IAsyncDisposable\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Service</p> <p>Derived \u21b3 Service&lt;TSettingsClass,TSettingsInterface&gt;</p> <p>Implements System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#remarks","title":"Remarks","text":"<p>This class is provided to take some of the common boiler-plate code off the developers hands.  </p> <p>Override any of the virtual methods to modify the services behavior.  </p> <p>The methods are called in the following order: 1. ConfigureBuilder(WebApplicationBuilder) 2. ConfigureHakomServices(IContainer, IConfiguration) 3. ConfigureLogging(ILoggingBuilder) 4. ConfigureMvc(IMvcBuilder) 5. ConfigureApplication(WebApplication)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicedefault_urls-field","title":"Service.DEFAULT_URLS Field","text":"<p>The base URL to host the service under if nothing else is configured.</p> C#<pre><code>public const string DEFAULT_URLS = http://localhost:5000;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfigurationroot-property","title":"Service.ConfigurationRoot Property","text":"<p>The root node of the configuration used.</p> C#<pre><code>protected virtual Microsoft.Extensions.Configuration.IConfiguration ConfigurationRoot { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#property-value","title":"Property Value","text":"<p>Microsoft.Extensions.Configuration.IConfiguration</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicehostingsettings-property","title":"Service.HostingSettings Property","text":"<p>The settings that determine basic/common hosting behavior (URLs, CORS, SSL, etc)</p> C#<pre><code>protected HAKOM.Http.Core.Net.Api.IHostingSettings HostingSettings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#property-value_1","title":"Property Value","text":"<p>IHostingSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicename-property","title":"Service.Name Property","text":"<p>A human-friendly name for the service.</p> C#<pre><code>public abstract string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceserviceconfiguration-property","title":"Service.ServiceConfiguration Property","text":"<p>The configuration section that holds all the settings for the service.</p> C#<pre><code>protected virtual Microsoft.Extensions.Configuration.IConfigurationSection ServiceConfiguration { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#property-value_3","title":"Property Value","text":"<p>Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceurls-property","title":"Service.Urls Property","text":"<p>Once the service is running, this property will return the URLs under which it can be accessed.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;string&gt; Urls { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#property-value_4","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfigureapplicationwebapplication-method","title":"Service.ConfigureApplication(WebApplication) Method","text":"C#<pre><code>protected virtual void ConfigureApplication(Microsoft.AspNetCore.Builder.WebApplication application);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters","title":"Parameters","text":"<p><code>application</code> Microsoft.AspNetCore.Builder.WebApplication</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfigurebuilderwebapplicationbuilder-method","title":"Service.ConfigureBuilder(WebApplicationBuilder) Method","text":"<p>Takes care of setting up configuration, logging, being able to run the service as a daemon/Windows service, and a few other things.</p> C#<pre><code>protected virtual Microsoft.Extensions.DependencyInjection.IMvcBuilder? ConfigureBuilder(Microsoft.AspNetCore.Builder.WebApplicationBuilder builder);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters_1","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p>The Microsoft.AspNetCore.Builder.WebApplicationBuilder used to build the service.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder The instance of Microsoft.Extensions.DependencyInjection.IMvcBuilder used to configure the MVC framework. This will be passed to ConfigureMvc(IMvcBuilder)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#remarks_1","title":"Remarks","text":"<p>When overriding this method, make sure to call the base method!</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfigurehakomservicesicontainer-iconfiguration-method","title":"Service.ConfigureHakomServices(IContainer, IConfiguration) Method","text":"C#<pre><code>protected virtual void ConfigureHakomServices(HAKOM.DependencyInjection.Core.Net.Api.IContainer container, out Microsoft.Extensions.Configuration.IConfiguration? hostConfiguration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>hostConfiguration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfigureloggingiloggingbuilder-method","title":"Service.ConfigureLogging(ILoggingBuilder) Method","text":"C#<pre><code>protected virtual void ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder loggingBuilder);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters_3","title":"Parameters","text":"<p><code>loggingBuilder</code> Microsoft.Extensions.Logging.ILoggingBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#serviceconfiguremvcimvcbuilder-method","title":"Service.ConfigureMvc(IMvcBuilder) Method","text":"C#<pre><code>protected virtual void ConfigureMvc(Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters_4","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicedisposeasync-method","title":"Service.DisposeAsync() Method","text":"C#<pre><code>public System.Threading.Tasks.ValueTask DisposeAsync();\n</code></pre> <p>Implements DisposeAsync()</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.ValueTask</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicerun-method","title":"Service.Run() Method","text":"C#<pre><code>public System.Threading.Tasks.Task Run();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicesetupstring-method","title":"Service.Setup(string[]) Method","text":"<p>Initializes the service.</p> C#<pre><code>public void Setup(string[] args);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#parameters_5","title":"Parameters","text":"<p><code>args</code> System.String[]</p> <p>Command line parameters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#exceptions","title":"Exceptions","text":"<p>System.InvalidOperationException Thrown if no application parts where registered. Make sure to call base.ConfigureMvc from its overridden implementation in order to use controllers from the current assembly or manually add one or more application parts manually (i.e. by calling AddPrefixedApplicationPart(this IMvcBuilder, IEnumerable&lt;TypeInfo&gt;, string, string).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicestart-method","title":"Service.Start() Method","text":"C#<pre><code>public System.Threading.Tasks.Task Start();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#servicestop-method","title":"Service.Stop() Method","text":"C#<pre><code>public System.Threading.Tasks.Task Stop();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Service/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/","title":"Service&lt;TSettingsClass,TSettingsInterface&gt;","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#servicetsettingsclasstsettingsinterface-class","title":"Service&lt;TSettingsClass,TSettingsInterface&gt; Class","text":"C#<pre><code>public abstract class Service&lt;TSettingsClass,TSettingsInterface&gt; : HAKOM.Http.Core.Net.Api.Service,\nSystem.IAsyncDisposable\n    where TSettingsClass : class, TSettingsInterface, HAKOM.Configuration.Core.Net.Api.ISettings&lt;TSettingsClass, TSettingsInterface&gt;\n    where TSettingsInterface : class\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#type-parameters","title":"Type parameters","text":"<p><code>TSettingsClass</code></p> <p></p> <p><code>TSettingsInterface</code></p> <p>Inheritance System.Object \ud83e\udc52 Service \ud83e\udc52 Service <p>Implements System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#servicesettings-property","title":"Service.Settings Property C#<pre><code>protected TSettingsInterface Settings { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#property-value","title":"Property Value","text":"<p>TSettingsInterface</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#servicetsettingsclasstsettingsinterfaceconfigurehakomservicesicontainer-iconfiguration-method","title":"Service&lt;TSettingsClass,TSettingsInterface&gt;.ConfigureHakomServices(IContainer, IConfiguration) Method C#<pre><code>protected override void ConfigureHakomServices(HAKOM.DependencyInjection.Core.Net.Api.IContainer container, out Microsoft.Extensions.Configuration.IConfiguration? hostConfiguration);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/ServiceOf2/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>hostConfiguration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/","title":"HAKOM.Http.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/#hakomhttpcorenetapiexceptions-namespace","title":"HAKOM.Http.Core.Net.Api.Exceptions Namespace","text":"Classes CouldNotReadServiceSettingsException NoDescriptionForAssemblyException This exception is thrown when an attempt is made to register IServiceInformation that is based on an assembly yet that assembly does not contain a System.Reflection.AssemblyDescriptionAttribute. NoTitleForAssemblyException This exception is thrown when an attempt is made to register IServiceInformation that is based on an assembly yet that assembly does not contain a System.Reflection.AssemblyDescriptionAttribute."},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/","title":"CouldNotReadServiceSettingsException","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#couldnotreadservicesettingsexception-class","title":"CouldNotReadServiceSettingsException Class","text":"C#<pre><code>public sealed class CouldNotReadServiceSettingsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotReadServiceSettingsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#couldnotreadservicesettingsexceptionexception-constructor","title":"CouldNotReadServiceSettingsException(Exception) Constructor","text":"C#<pre><code>public CouldNotReadServiceSettingsException(System.Exception innerException);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#parameters","title":"Parameters","text":"<p><code>innerException</code> System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#couldnotreadservicesettingsexceptionequivalenthttpstatuscode-property","title":"CouldNotReadServiceSettingsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/CouldNotReadServiceSettingsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/","title":"NoDescriptionForAssemblyException","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/#nodescriptionforassemblyexception-class","title":"NoDescriptionForAssemblyException Class","text":"<p>This exception is thrown when an attempt is made to register IServiceInformation that is based on an assembly yet that assembly does not contain a System.Reflection.AssemblyDescriptionAttribute.</p> C#<pre><code>public sealed class NoDescriptionForAssemblyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoDescriptionForAssemblyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/#remarks","title":"Remarks","text":"<p>Make sure that the assembly used to setup the service information has a System.Reflection.AssemblyDescriptionAttribute.  </p> <p>This error can be identified by the code HK10001.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/#nodescriptionforassemblyexceptionequivalenthttpstatuscode-property","title":"NoDescriptionForAssemblyException.EquivalentHttpStatusCode Property","text":"<p>A service that throws this exception would normally do so during initial startup. Additional configuration, if not code changes are required to make the service run. Therefor there is no meaningful HTTP status code to return from this. In a deployment scenario where a proxy is put before the failing service, that proxy should probably return an HTTP status code 500 (Internal Server Error) or 502 (Bad Gateway).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoDescriptionForAssemblyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/","title":"NoTitleForAssemblyException","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/#notitleforassemblyexception-class","title":"NoTitleForAssemblyException Class","text":"<p>This exception is thrown when an attempt is made to register IServiceInformation that is based on an assembly yet that assembly does not contain a System.Reflection.AssemblyDescriptionAttribute.</p> C#<pre><code>public sealed class NoTitleForAssemblyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoTitleForAssemblyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/#remarks","title":"Remarks","text":"<p>Make sure that the assembly used to setup the service information has a System.Reflection.AssemblyDescriptionAttribute.  </p> <p>This error can be identified by the code HK10002.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/#notitleforassemblyexceptionequivalenthttpstatuscode-property","title":"NoTitleForAssemblyException.EquivalentHttpStatusCode Property","text":"<p>A service that throws this exception would normally do so during initial startup. Additional configuration, if not code changes are required to make the service run. Therefor there is no meaningful HTTP status code to return from this. In a deployment scenario where a proxy is put before the failing service, that proxy should probably return an HTTP status code 500 (Internal Server Error) or 502 (Bad Gateway).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Exceptions/NoTitleForAssemblyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/","title":"HAKOM.Http.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/#hakomhttpcorenetapiextensions-namespace","title":"HAKOM.Http.Core.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Adds services to an instance of IContainer that are useful for wiring up an HTTP API. HttpContextExtensions Adds methods for passing context between controllers and services within a request pipeline. MvcBuilderExtensions Provides methods to add features to an MVC framework based web service. RequestExtensions WebApplicationBuilderExtensions Provides methods for setting up basic hosting features for an HTTP API WebApplicationExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Adds services to an instance of IContainer that are useful for wiring up an HTTP API.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserviceinformationthis-icontainer-string-string-method","title":"ContainerExtensions.UseServiceInformation(this IContainer, string, string) Method","text":"<p>Registers an instance of IServiceInformation based on the title and description given.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseServiceInformation(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, string title, string description);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the IServiceInformation implementation with.</p> <p></p> <p><code>title</code> System.String</p> <p>The title that should be used by Title.</p> <p></p> <p><code>description</code> System.String</p> <p>The description that should be used by Description.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional setup calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserviceinformationthis-icontainer-assembly-method","title":"ContainerExtensions.UseServiceInformation(this IContainer, Assembly) Method","text":"<p>Registers an instance of IServiceInformation based on the given serviceAssembly.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseServiceInformation(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Reflection.Assembly serviceAssembly);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the IServiceInformation implementation with.</p> <p></p> <p><code>serviceAssembly</code> System.Reflection.Assembly</p> <p>The System.Reflection.Assembly that should be used to get the title and description of the service.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container for chaining additional setup calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserviceinformationttypeinserviceassemblythis-icontainer-method","title":"ContainerExtensions.UseServiceInformation&lt;TTypeInServiceAssembly&gt;(this IContainer) Method","text":"<p>Registers an instance of IServiceInformation based on a type in the services assembly.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseServiceInformation&lt;TTypeInServiceAssembly&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TTypeInServiceAssembly</code></p> <p>A type in the assembly that should ber used to determine title and description of the service.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the IServiceInformation implementation with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The container for chaining additional setup calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/","title":"HttpContextExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#httpcontextextensions-class","title":"HttpContextExtensions Class","text":"<p>Adds methods for passing context between controllers and services within a request pipeline.</p> C#<pre><code>public static class HttpContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 HttpContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#httpcontextextensionsgetendpointmediatypesthis-httpcontext-method","title":"HttpContextExtensions.GetEndpointMediaTypes(this HttpContext) Method","text":"<p>Gets the list of media types that the current endpoint should use in its response, in descending order of their \"q\"-parameter.</p> C#<pre><code>public static System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt; GetEndpointMediaTypes(this Microsoft.AspNetCore.Http.HttpContext httpContext);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#parameters","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext of the current request.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#returns","title":"Returns","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt; The list of media types - usually a subset of the ones specified in the \"Accept\"-header - that the endpoint should attempt to use.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#httpcontextextensionsgetrequestedmediatypesthis-httpcontext-method","title":"HttpContextExtensions.GetRequestedMediaTypes(this HttpContext) Method","text":"<p>Gets the list of media types that were requested by the client.</p> C#<pre><code>public static System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt; GetRequestedMediaTypes(this Microsoft.AspNetCore.Http.HttpContext httpContext);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#parameters_1","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext of the current request.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt; A list of System.Net.Http.Headers.MediaTypeHeaderValues containing all the requested media types, in descending order of their quality (\"q\"-parameter) if given.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#httpcontextextensionssetendpointmediatypesthis-httpcontext-ireadonlylistmediatypeheadervalue-method","title":"HttpContextExtensions.SetEndpointMediaTypes(this HttpContext, IReadOnlyList&lt;MediaTypeHeaderValue&gt;) Method","text":"<p>Allows middleware to set the media types that should be used by the currently selected endpoint (in descending order of their \"q\"-parameter).</p> C#<pre><code>public static void SetEndpointMediaTypes(this Microsoft.AspNetCore.Http.HttpContext httpContext, System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt; mediaTypes);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/HttpContextExtensions/#parameters_2","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext of the current request.</p> <p></p> <p><code>mediaTypes</code> System.Collections.Generic.IReadOnlyList&lt;System.Net.Http.Headers.MediaTypeHeaderValue&gt;</p> <p>The list of media types - usually a subset of the ones specified in the \"Accept\"-header - that the endpoint should attempt to use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/","title":"MvcBuilderExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensions-class","title":"MvcBuilderExtensions Class","text":"<p>Provides methods to add features to an MVC framework based web service.</p> C#<pre><code>public static class MvcBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsaddprefixedapplicationpartthis-imvcbuilder-ienumerabletypeinfo-string-string-method","title":"MvcBuilderExtensions.AddPrefixedApplicationPart(this IMvcBuilder, IEnumerable&lt;TypeInfo&gt;, string, string) Method","text":"<p>Adds the types given in types as controllers to the service under an optional base path.</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddPrefixedApplicationPart(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; types, string? basePath=null, string? name=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p>The Microsoft.Extensions.DependencyInjection.IMvcBuilder used to set up the service.</p> <p></p> <p><code>types</code> System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</p> <p>A list of controller types that should be added to the service.</p> <p></p> <p><code>basePath</code> System.String</p> <p>A path that should be prepended to all the routes the controllers define themselves.</p> <p></p> <p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder The mvcBuilder for chaining additional calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#remarks","title":"Remarks","text":"<p>The basePath parameter can be used to group controllers from one assembly under a specific path.  </p> <p>For example: Consider a controller defined in one of the types that has a [Route(\"items\")] attribute and a method with a [HttpGet(\"{id}\")] attribute. By specifying basePath as \"somemodule\", the controllers action would be exposed under \"/somemodule/items/{id}\" instead of just \"/items/{id}\".  </p> <p>This helps when structuring a complex API that reuses existing controllers and allows avoiding conflicts when combining controllers that define similar route names.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsaddprefixedapplicationpartthis-imvcbuilder-assembly-string-method","title":"MvcBuilderExtensions.AddPrefixedApplicationPart(this IMvcBuilder, Assembly, string) Method","text":"<p>Adds all controllers found in the given assembly to the service under an optional base path.</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddPrefixedApplicationPart(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, System.Reflection.Assembly assembly, string? basePath=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#parameters_1","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p>The Microsoft.Extensions.DependencyInjection.IMvcBuilder used to set up the service.</p> <p></p> <p><code>assembly</code> System.Reflection.Assembly</p> <p>The assembly that contains controllers that should be added to the service.</p> <p></p> <p><code>basePath</code> System.String</p> <p>A path that should be prepended to all the routes the controllers define themselves.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder The mvcBuilder for chaining additional calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/MvcBuilderExtensions/#remarks_1","title":"Remarks","text":"<p>The basePath parameter can be used to group controllers from one assembly under a specific path.  </p> <p>For example: Consider a controller defined in assembly that has a [Route(\"items\")] attribute and a method with a [HttpGet(\"{id}\")] attribute. By specifying basePath as \"somemodule\", the controllers action would be exposed under \"/somemodule/items/{id}\" instead of just \"/items/{id}\".  </p> <p>This helps when structuring a complex API that reuses existing controllers and allows avoiding conflicts when combining controllers that define similar route names.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/","title":"RequestExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/#requestextensions-class","title":"RequestExtensions Class","text":"C#<pre><code>public static class RequestExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 RequestExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/#requestextensionsbaseurlthis-httprequest-method","title":"RequestExtensions.BaseUrl(this HttpRequest) Method","text":"C#<pre><code>public static System.Uri BaseUrl(this Microsoft.AspNetCore.Http.HttpRequest request);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/#parameters","title":"Parameters","text":"<p><code>request</code> Microsoft.AspNetCore.Http.HttpRequest</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/RequestExtensions/#returns","title":"Returns","text":"<p>System.Uri</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/","title":"WebApplicationBuilderExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensions-class","title":"WebApplicationBuilderExtensions Class","text":"<p>Provides methods for setting up basic hosting features for an HTTP API</p> C#<pre><code>public static class WebApplicationBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 WebApplicationBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensionsaddhakomdefaultsttypeinserviceassemblythis-webapplicationbuilder-string-string-actionicontainer-actioniloggingbuilder-actionimvcbuilder-method","title":"WebApplicationBuilderExtensions.AddHakomDefaults&lt;TTypeInServiceAssembly&gt;(this WebApplicationBuilder, string[], string, Action&lt;IContainer&gt;, Action&lt;ILoggingBuilder&gt;, Action&lt;IMvcBuilder&gt;) Method","text":"C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplicationBuilder AddHakomDefaults&lt;TTypeInServiceAssembly&gt;(this Microsoft.AspNetCore.Builder.WebApplicationBuilder builder, string[] args, string name, System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt; configureHakomServices, System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt; configureLogging, System.Action&lt;Microsoft.Extensions.DependencyInjection.IMvcBuilder&gt; configureMvc);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TTypeInServiceAssembly</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p></p> <p><code>args</code> System.String[]</p> <p></p> <p><code>name</code> System.String</p> <p></p> <p><code>configureHakomServices</code> System.Action&lt;IContainer&gt;</p> <p></p> <p><code>configureLogging</code> System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt;</p> <p></p> <p><code>configureMvc</code> System.Action&lt;Microsoft.Extensions.DependencyInjection.IMvcBuilder&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensionsenablerunningasservicethis-webapplicationbuilder-bool-string-method","title":"WebApplicationBuilderExtensions.EnableRunningAsService(this WebApplicationBuilder, bool, string) Method","text":"<p>Registers all services necessary for an HTTP API to be run as a service (a.k.a. daemonized, in the background).</p> C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplicationBuilder EnableRunningAsService(this Microsoft.AspNetCore.Builder.WebApplicationBuilder builder, bool runAsService, string? serviceName=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#parameters_1","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p>The Microsoft.AspNetCore.Builder.WebApplicationBuilder that is used to create the application host.</p> <p></p> <p><code>runAsService</code> System.Boolean</p> <p>Used to control wether to run the application as a service or as a regular command line application.</p> <p></p> <p><code>serviceName</code> System.String</p> <p>A custom name given to the service. This will show up in log messages.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplicationBuilder The builder for chaining additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#remarks","title":"Remarks","text":"<p>Under Microsoft Windows, the API can then be hosted by calling \"sc create\".  </p> <p>Under Linux, the API can be hosted using systemd by creating an apropriate .service file</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensionsenablerunningasservicethis-webapplicationbuilder-string-string-string-string-method","title":"WebApplicationBuilderExtensions.EnableRunningAsService(this WebApplicationBuilder, string[], string, string, string) Method","text":"<p>Registers all services necessary for an HTTP API to be run as a service (daemonized/in the background.).</p> C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplicationBuilder EnableRunningAsService(this Microsoft.AspNetCore.Builder.WebApplicationBuilder builder, string[] args, string shortFlag=\"s\", string flag=\"runAsService\", string? serviceName=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#parameters_2","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p>The Microsoft.AspNetCore.Builder.WebApplicationBuilder that is used to create the application host.</p> <p></p> <p><code>args</code> System.String[]</p> <p>The command line arguments. These will be used to switch between running as a service and running in the console.</p> <p></p> <p><code>shortFlag</code> System.String</p> <p>The short name of the command line argument used to run the application as a service. The default is \"s\", so the service is run as a service when args contains \"-s\".</p> <p></p> <p><code>flag</code> System.String</p> <p>The long name of the command line argument used to run the application as a service. The default is \"runAsService\", so the service is run as a service when args contains \"--runAsService\".</p> <p></p> <p><code>serviceName</code> System.String</p> <p>A custom name given to the service. This will show up in log messages.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#returns_2","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplicationBuilder The builder for chaining additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationBuilderExtensions/#remarks_1","title":"Remarks","text":"<p>Under Microsoft Windows, the API can then be hosted by calling \"sc create\".  </p> <p>Under Linux, the API can be hosted using systemd by creating an apropriate .service file</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/","title":"WebApplicationExtensions","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/#webapplicationextensions-class","title":"WebApplicationExtensions Class","text":"C#<pre><code>public static class WebApplicationExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 WebApplicationExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/#webapplicationextensionsuseconfiguredcorsthis-webapplication-icorssettings-method","title":"WebApplicationExtensions.UseConfiguredCors(this WebApplication, ICorsSettings) Method","text":"C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplication UseConfiguredCors(this Microsoft.AspNetCore.Builder.WebApplication application, HAKOM.Http.Core.Net.Api.ICorsSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/#parameters","title":"Parameters","text":"<p><code>application</code> Microsoft.AspNetCore.Builder.WebApplication</p> <p></p> <p><code>settings</code> ICorsSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/API/Extensions/WebApplicationExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/","title":"HAKOM.Http.Core.Net","text":"<p>Assembly: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/#hakomhttpcorenet-namespace","title":"HAKOM.Http.Core.Net Namespace","text":"Classes HostingSettings"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/","title":"HostingSettings","text":"<p>Assembly: HAKOM.Http.Core.Net</p> <p>Namespace: HAKOM.Http.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#hostingsettings-class","title":"HostingSettings Class","text":"C#<pre><code>public sealed class HostingSettings :\nHAKOM.Http.Core.Net.Api.IHostingSettings\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 HostingSettings</p> <p>Implements IHostingSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#hostingsettingsienumerable-iproxysettings-icorssettings-constructor","title":"HostingSettings(IEnumerable, IProxySettings, ICorsSettings) Constructor C#<pre><code>public HostingSettings(System.Collections.Generic.IEnumerable&lt;string&gt; urls, HAKOM.Http.Core.Net.Api.IProxySettings proxySettings, HAKOM.Http.Core.Net.Api.ICorsSettings corsSettings);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#parameters","title":"Parameters","text":"<p><code>urls</code> System.Collections.Generic.IEnumerable&lt;System.String&gt;</p> <p></p> <p><code>proxySettings</code> IProxySettings</p> <p></p> <p><code>corsSettings</code> ICorsSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#hostingsettingscorssettings-property","title":"HostingSettings.CorsSettings Property C#<pre><code>public HAKOM.Http.Core.Net.Api.ICorsSettings CorsSettings { get; set; }\n</code></pre> <p>Implements CorsSettings</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#property-value","title":"Property Value","text":"<p>ICorsSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#hostingsettingsproxysettings-property","title":"HostingSettings.ProxySettings Property C#<pre><code>public HAKOM.Http.Core.Net.Api.IProxySettings ProxySettings { get; set; }\n</code></pre> <p>Implements ProxySettings</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#property-value_1","title":"Property Value","text":"<p>IProxySettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#hostingsettingsurls-property","title":"HostingSettings.Urls Property C#<pre><code>public System.Collections.Generic.IReadOnlyList&lt;string&gt; Urls { get; set; }\n</code></pre> <p>Implements Urls</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Http/Core/Net/HostingSettings/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/","title":"HAKOM Logging","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/#core-module","title":"Core Module","text":"<p>The core module provides extension methods to register loggers with the HAKOM dependency injection system.</p> <p>The following sets up an ITsm instance for managing time series data to log messages to the console. Logging messages from time series management to console<pre><code>var tsm = ITsm.Create(container)=&gt;{\n    container.UseLogging((loggingBuilder)=&gt;{\n        loggingBuilder\n            .AddConsole((options)=&gt;{\n                //configure console logging here..\n            })\n            // add more providers as needed\n            ;\n    });\n});\n</code></pre> Of course this can be done with any application built on top of HAKOM.DependencyInjection. Adding logging to an application<pre><code>var customApp = IApplicationContext.Create(container)=&gt;{\n    container\n        .Use&lt;ICustomApplication,CustomApplication&gt;()\n        .UseLogging((loggingBuilder)=&gt;{\n            loggingBuilder\n                .AddConsole()\n                .AddFile()\n                // add more providers as needed\n                ;\n        });\n}).Start&lt;ICustomApplication&gt;();\n</code></pre></p> <p>The custom loggers provided by HAKOM, such as the file logger or the database logger can also be used in conjunction with a common IServiceCollection as used by .NET web applications for example</p> <p>Using HAKOM loggers with .NET web applications<pre><code>var builder = WebApplication.CreateBuilder(args);\nbuilder.Logging.ClearProviders();\nbuilder.Logging.AddFile(); // provided by HAKOM.Logging.Core\nbuilder.Logging.AddHakomDatabaseLog(); // provided by HAKOM.Logging.HakomDatabaseLog\n</code></pre> or Using HAKOM loggers with .NET web applications<pre><code>var builder = WebApplication.CreateBuilder();\nbuilder.Host.ConfigureLogging(loggingBuilder =&gt;\n{\n    loggingBuilder.ClearProviders();\n    loggingBuilder.AddFile(); // provided by HAKOM.Logging.Core\n    loggingBuilder.Logging.AddHakomDatabaseLog(); // provided by HAKOM.Logging.HakomDatabaseLog\n});\n</code></pre></p> <p>or, if additional HAKOM services are required:</p> Using HAKOM loggers with .NET web applications<pre><code>var builder = WebApplication.CreateBuilder();\nbuilder.Services.AddHakomServices((container)=&gt;{\n    container\n        .UseLogging(loggingBuilder =&gt;\n        {\n            loggingBuilder.ClearProviders();\n            loggingBuilder.AddFile(); // provided by HAKOM.Logging.Core\n            loggingBuilder.Logging.AddHakomDatabaseLog(); // provided by HAKOM.Logging.HakomDatabaseLog\n        })\n        //register other HAKOM services here\n        ;\n});\n</code></pre> <p>Of course this means that HAKOM applications are also compatible with any other logging provider that supports the Microsoft.Extensions.Logging system. See Microsofts list of third-party logging providers for more information.</p> <p>The following example sets up an ITsm instance to use Serilog for logging.</p> <p>This requires a NuGet reference to Serilog.Extensions.Logging</p> Using serilog with the TSM<pre><code>Log.Logger = new LoggerConfiguration()\n    .Enrich.FromLogContext()\n    .WriteTo.Console()\n    .CreateLogger();\n\nvar tsm = ITsm.Create(container)=&gt;{\n    container.UseLogging((loggingBuilder)=&gt;{\n        loggingBuilder\n            .AddSerilog(dispose:true);\n            .AddFile()\n            // add more providers as needed\n            ;\n    });\n});\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/#hakomdatabaselog-module","title":"HakomDatabaseLog Module","text":"<p>This module provides an implementation to write structured logs into one of the following databases</p> <ul> <li>Oracle</li> <li>PostgreSql</li> <li>Microsoft SQL Server</li> </ul> <p>HAKOM also provides a tool for inspecting these logs as a standard plug-in for the TSM App: Log Monitor</p> <p>Enabling database logs is as simple as adding the following when configuring the Microsoft.Extensions.Logging.ILoggingBuilder:</p> C#<pre><code>loggingBuilder.AddHakomDatabaseLog();\n</code></pre> <p>Note that some additional configuration is necessary for the logger to work correctly. See HakomDatabaseLog for details.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/","title":"HAKOM.Logging.Core.Net","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/#hakomloggingcorenet-assembly","title":"HAKOM.Logging.Core.Net Assembly","text":"<p>This assembly provides basic extension methods for registering logging services with IContainer instances. It also provides an implementation of Microsoft.Extensions.Logging.ILogger that logs to a file on disk.</p> Namespaces HAKOM.Logging.Core.Net.Api.Exceptions This namespace contains exceptions thrown by the module. HAKOM.Logging.Core.Net.Api.Extensions Extension methods for adding logging to IContainer instances. HAKOM.Logging.Core.Net.Api.File HAKOM.Logging.Core.Net.Api.File.Exceptions This namespace contains all the exceptions thrown when an error occurs that relates to file logging. HAKOM.Logging.Core.Net.Api.File.Extensions Extension methods for adding file logging to Microsoft.Extensions.Logging.ILoggingBuilder instances."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/","title":"HAKOM.Logging.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/#hakomloggingcorenetapiexceptions-namespace","title":"HAKOM.Logging.Core.Net.Api.Exceptions Namespace","text":"<p>This namespace contains exceptions thrown by the module.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/#remarks","title":"Remarks","text":"<p>These exceptions should not be thrown by code outside this module.</p> Classes NoConfigurationRegisteredWithContainerException Thrown when attempting to setup logging based on configured settings, without actually having the required Microsoft.Extensions.Configuration.IConfiguration service registered first."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/","title":"NoConfigurationRegisteredWithContainerException","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/#noconfigurationregisteredwithcontainerexception-class","title":"NoConfigurationRegisteredWithContainerException Class","text":"<p>Thrown when attempting to setup logging based on configured settings, without actually having the required Microsoft.Extensions.Configuration.IConfiguration service registered first.</p> C#<pre><code>public sealed class NoConfigurationRegisteredWithContainerException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoConfigurationRegisteredWithContainerException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/#remarks","title":"Remarks","text":"<p>When using UseConfiguredLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, string) to register logging, there must have been a registration of Microsoft.Extensions.Configuration.IConfiguration with the container beforehand.  </p> <p>This exception is identified by error code HK05001</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/#noconfigurationregisteredwithcontainerexceptionequivalenthttpstatuscode-property","title":"NoConfigurationRegisteredWithContainerException.EquivalentHttpStatusCode Property","text":"<p>When unhandled within an HTTP request, this exception should cause the request to fail with an HTTP status code of 500 (internal server error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Exceptions/NoConfigurationRegisteredWithContainerException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/","title":"HAKOM.Logging.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/#hakomloggingcorenetapiextensions-namespace","title":"HAKOM.Logging.Core.Net.Api.Extensions Namespace","text":"<p>Extension methods for adding logging to IContainer instances.</p> Classes ContainerExtensions Extension methods for registering loggers with the dependency injection container."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Extension methods for registering loggers with the  dependency injection container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconfiguredloggingthis-icontainer-actioniloggingbuilder-string-method","title":"ContainerExtensions.UseConfiguredLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, string) Method","text":"<p>Registers loggers based on the contents of the configuration section specified in configurationSection. Allows adding additional loggers in configureAdditionalLoggers.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguredLogging(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt;? configureAdditionalLoggers=null, string configurationSection=\"Logging\");\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the loggers with.</p> <p></p> <p><code>configureAdditionalLoggers</code> System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt;</p> <p>An System.Action&lt;&gt; that can be used to add additional loggers.</p> <p></p> <p><code>configurationSection</code> System.String</p> <p>A System.String specifying which section within the registered Microsoft.Extensions.Configuration.IConfiguration contains the loggers to be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException</p> <p>NoConfigurationRegisteredWithContainerException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#containerextensionsuseloggingthis-icontainer-actioniloggingbuilder-bool-string-method","title":"ContainerExtensions.UseLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, bool, string) Method","text":"<p>Registers loggers configured in configureLoggers. Optionally uses the specified section (configurationSection) within an already registered Microsoft.Extensions.Configuration.IConfiguration to configure the loggers.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseLogging(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt; configureLoggers, bool addConfiguration, string configurationSection=\"Logging\");\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the loggers with.</p> <p></p> <p><code>configureLoggers</code> System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt;</p> <p>Add Microsoft.Extensions.Logging.ILoggerProvider instances in this System.Action&lt;&gt;.</p> <p></p> <p><code>addConfiguration</code> System.Boolean</p> <p>Wether or not to use configuration.</p> <p></p> <p><code>configurationSection</code> System.String</p> <p>The key of the section within the configuration that contains logger configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer to use for chaining of additional registrations.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#containerextensionsuseloggingthis-icontainer-actioniloggingbuilder-iconfigurationsection-method","title":"ContainerExtensions.UseLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, IConfigurationSection) Method","text":"<p>Registers loggers configured in configureLoggers. Optionally instructs the loggers to use the Microsoft.Extensions.Configuration.IConfigurationSection given in configurationSection.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseLogging(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt; configureLoggers, Microsoft.Extensions.Configuration.IConfigurationSection? configurationSection=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the loggers with.</p> <p></p> <p><code>configureLoggers</code> System.Action&lt;Microsoft.Extensions.Logging.ILoggingBuilder&gt;</p> <p>Add Microsoft.Extensions.Logging.ILoggerProvider instances in this System.Action&lt;&gt;.</p> <p></p> <p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p>The Microsoft.Extensions.Configuration.IConfigurationSection loggers             should use for additional options.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer to use for chaining of additional registrations.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/","title":"HAKOM.Logging.Core.Net.Api.File","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/#hakomloggingcorenetapifile-namespace","title":"HAKOM.Logging.Core.Net.Api.File Namespace","text":"Interfaces IFileLoggerOptions Defines a set of options that control how logs are written to a file on disk."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/","title":"IFileLoggerOptions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.File</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptions-interface","title":"IFileLoggerOptions Interface","text":"<p>Defines a set of options that control how logs are written to a file on disk.</p> C#<pre><code>public interface IFileLoggerOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsappend-property","title":"IFileLoggerOptions.Append Property","text":"<p>Defines if existing content should be replaced (false) or appended to (true). Defaults to true.</p> C#<pre><code>bool Append { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsencoding-property","title":"IFileLoggerOptions.Encoding Property","text":"<p>The Encoding to use in the log file. Defaults to System.Text.Encoding.UTF8.</p> C#<pre><code>System.Text.Encoding Encoding { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_1","title":"Property Value","text":"<p>System.Text.Encoding</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsfilenametemplate-property","title":"IFileLoggerOptions.FileNameTemplate Property","text":"<p>A template string that's used to define the name of the log file. The following placeholders can be used: - {timestamp} The date/time at which the file was created. - {host} The name of the machine the process is running on. - {processId} The id of the process that created the file. - {processName} The name of the process that created the file. Defaults to '{host}.{processName}.{timeStamp}.log'.</p> C#<pre><code>string FileNameTemplate { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsfilenametimestampformat-property","title":"IFileLoggerOptions.FileNameTimeStampFormat Property","text":"<p>A format string that's used to format the {timestamp} in FileNameTemplate. Please refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings for details. Defaults to 'yyyyMMdd\\THHmm'.</p> C#<pre><code>string FileNameTimeStampFormat { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsfilenametimestamptype-property","title":"IFileLoggerOptions.FileNameTimeStampType Property","text":"<p>Wether to use local time or UTC as the {timestamp} in the file name. Defaults to System.DateTimeKind.Local.</p> C#<pre><code>System.DateTimeKind FileNameTimeStampType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_4","title":"Property Value","text":"<p>System.DateTimeKind</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsfinalflushgraceperiod-property","title":"IFileLoggerOptions.FinalFlushGracePeriod Property","text":"<p>Defines how long to wait for all remaining messages in the queue to be written to disk before disposing of the logger. Defaults to 1.5ms * QueueSize.</p> C#<pre><code>System.TimeSpan FinalFlushGracePeriod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_5","title":"Property Value","text":"<p>System.TimeSpan</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsloglevel-property","title":"IFileLoggerOptions.LogLevel Property","text":"<p>Sets the minimum Microsoft.Extensions.Logging.LogLevel for which messages should be written to the file. Defaults to Microsoft.Extensions.Logging.LogLevel.Information.</p> C#<pre><code>Microsoft.Extensions.Logging.LogLevel LogLevel { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_6","title":"Property Value","text":"<p>Microsoft.Extensions.Logging.LogLevel</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsmaxfilesize-property","title":"IFileLoggerOptions.MaxFileSize Property","text":"<p>Defines a limit for the size of logfiles (in Kilobytes). Once that limit is exceeded, a new file will be created. Defaults to System.UInt32.MaxValue (4 Gb).</p> C#<pre><code>uint MaxFileSize { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_7","title":"Property Value","text":"<p>System.UInt32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionspath-property","title":"IFileLoggerOptions.Path Property","text":"<p>The path in which the log file(s) should be created. Environment variables may be used, i.e. '%HOMEPATH%\\logs' Defaults to '.';</p> C#<pre><code>string Path { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_8","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionsqueuesize-property","title":"IFileLoggerOptions.QueueSize Property","text":"<p>Defines how many messages can be written to the queue before additional messages have to wait for previous messages to be written to disk. Defaults to 1024.</p> C#<pre><code>int QueueSize { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_9","title":"Property Value","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionstimestampformat-property","title":"IFileLoggerOptions.TimeStampFormat Property","text":"<p>A format string that's used to format the timestamp prepended to each log message. Please refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings for details. Defaults to 'yyyy-MM-dd\\THH\\:mm\\:ss.fffzzz'.</p> C#<pre><code>string TimeStampFormat { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_10","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionstimestamptype-property","title":"IFileLoggerOptions.TimeStampType Property","text":"<p>Wether to use local time or UTC as the timestamp prepended to each log message. Defaults to System.DateTimeKind.Local.</p> C#<pre><code>System.DateTimeKind TimeStampType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_11","title":"Property Value","text":"<p>System.DateTimeKind</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#ifileloggeroptionstimetowaitforopenslot-property","title":"IFileLoggerOptions.TimeToWaitForOpenSlot Property","text":"<p>Defines how long to wait for the queue to be ready for additional messages. If the messages already in the queue are not written to disk fast enough  and a new message cant be written within this time, the message will be lost from the log. If this occurs frequently, consider increasing QueueSize. Defaults to 100us * QueueSize.</p> C#<pre><code>System.TimeSpan TimeToWaitForOpenSlot { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/IFileLoggerOptions/#property-value_12","title":"Property Value","text":"<p>System.TimeSpan</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/","title":"HAKOM.Logging.Core.Net.Api.File.Exceptions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/#hakomloggingcorenetapifileexceptions-namespace","title":"HAKOM.Logging.Core.Net.Api.File.Exceptions Namespace","text":"<p>This namespace contains all the exceptions thrown when an error occurs that relates to file logging.</p> Classes CouldNotOpenFileStreamException Thrown when an attempt was made to log messages to a file that could not be opened for writing. FailedToWriteLogAfterMultipleAttemptsException Thrown when - after multiple attempts - log messages could no longer be written toa file. UnknownEncodingException This exception is thrown when the file logger is configured to use an encodingthat is unknown."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/","title":"CouldNotOpenFileStreamException","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.File.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#couldnotopenfilestreamexception-class","title":"CouldNotOpenFileStreamException Class","text":"<p>Thrown when an attempt was made to log messages to a file that could not be opened for writing.</p> C#<pre><code>public sealed class CouldNotOpenFileStreamException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotOpenFileStreamException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#remarks","title":"Remarks","text":"<p>When file logging is configured to log to a file that cannot be written to, this exception is thrown. Reasons may include - the file being locked by another process - the process having no permission to write to the file/directory  </p> <p>This exception is identified by error code HK05003</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#couldnotopenfilestreamexceptionequivalenthttpstatuscode-property","title":"CouldNotOpenFileStreamException.EquivalentHttpStatusCode Property","text":"<p>When unhandled within an HTTP request, the request should respond with an HTTP status code of 500 (internal server error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#couldnotopenfilestreamexceptionfilename-property","title":"CouldNotOpenFileStreamException.FileName Property","text":"<p>The name of the file which could not be opened.</p> C#<pre><code>public string FileName { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/CouldNotOpenFileStreamException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/","title":"FailedToWriteLogAfterMultipleAttemptsException","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.File.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/#failedtowritelogaftermultipleattemptsexception-class","title":"FailedToWriteLogAfterMultipleAttemptsException Class","text":"<p>Thrown when - after multiple attempts - log messages could no longer be written to a file.</p> C#<pre><code>public sealed class FailedToWriteLogAfterMultipleAttemptsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FailedToWriteLogAfterMultipleAttemptsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/#remarks","title":"Remarks","text":"<p>When a log file - which has previously been successfully opened for writing - cannot be written to, this exception will be thrown.   </p> <p>This may be due to the file being locked for writing by a separate process.             Initially, these failures will be ignored so as to not congest the queue of log messages.             However, if multiple attempts fail, this exception will be thrown.  </p> <p>This exception is identified by error code HK05004</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/#failedtowritelogaftermultipleattemptsexceptionequivalenthttpstatuscode-property","title":"FailedToWriteLogAfterMultipleAttemptsException.EquivalentHttpStatusCode Property","text":"<p>When unhandled within an HTTP request it should respond with an HTTP status code of 500 (internal server error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/FailedToWriteLogAfterMultipleAttemptsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/","title":"UnknownEncodingException","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.File.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#unknownencodingexception-class","title":"UnknownEncodingException Class","text":"<p>This exception is thrown when the file logger is configured to use an encoding that is unknown.</p> C#<pre><code>public sealed class UnknownEncodingException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnknownEncodingException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#remarks","title":"Remarks","text":"<p>When configuring a file logger, a text encoding may be specified for the output file. If the encoding is unknown, this exception will be thrown.  </p> <p>For a list of supported encodings, please consult Microsofts list of encodings supported by .NET </p> <p>This exception is identified by error code HK05002</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#unknownencodingexceptionequivalenthttpstatuscode-property","title":"UnknownEncodingException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown within an HTTP request, the request should return a response with status code 500 (Internal server error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#unknownencodingexceptionunknownencoding-property","title":"UnknownEncodingException.UnknownEncoding Property","text":"<p>The encoding string that is not a valid/known encoding.</p> C#<pre><code>public string UnknownEncoding { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Exceptions/UnknownEncodingException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/","title":"HAKOM.Logging.Core.Net.Api.File.Extensions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/#hakomloggingcorenetapifileextensions-namespace","title":"HAKOM.Logging.Core.Net.Api.File.Extensions Namespace","text":"<p>Extension methods for adding file logging to Microsoft.Extensions.Logging.ILoggingBuilder instances.</p> Classes LoggingBuilderExtensions Defines extension methods on Microsoft.Extensions.Logging.ILoggingBuilder to be used to add file logging."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/","title":"LoggingBuilderExtensions","text":"<p>Assembly: HAKOM.Logging.Core.Net</p> <p>Namespace: HAKOM.Logging.Core.Net.Api.File.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#loggingbuilderextensions-class","title":"LoggingBuilderExtensions Class","text":"<p>Defines extension methods on Microsoft.Extensions.Logging.ILoggingBuilder to be used to add file logging.</p> C#<pre><code>public static class LoggingBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 LoggingBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#loggingbuilderextensionsaddfilethis-iloggingbuilder-actionifileloggeroptions-ifilesystem-method","title":"LoggingBuilderExtensions.AddFile(this ILoggingBuilder, Action&lt;IFileLoggerOptions&gt;, IFileSystem) Method","text":"<p>Add file logging to the builder, using configure to set options.</p> C#<pre><code>public static Microsoft.Extensions.Logging.ILoggingBuilder AddFile(this Microsoft.Extensions.Logging.ILoggingBuilder loggingBuilder, System.Action&lt;HAKOM.Logging.Core.Net.Api.File.IFileLoggerOptions&gt;? configure=null, System.IO.Abstractions.IFileSystem? fileSystem=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>loggingBuilder</code> Microsoft.Extensions.Logging.ILoggingBuilder</p> <p>The Microsoft.Extensions.Logging.ILoggingBuilder to add file logging to.</p> <p></p> <p><code>configure</code> System.Action&lt;IFileLoggerOptions&gt;</p> <p>A System.Action&lt;&gt; that allows you to modify the default options.</p> <p></p> <p><code>fileSystem</code> System.IO.Abstractions.IFileSystem</p> <p>Optional System.IO.Abstractions.IFileSystem implementation to use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.Logging.ILoggingBuilder The fileSystem itself for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when loggingBuilder is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/Core/API/File/Extensions/LoggingBuilderExtensions/#remarks","title":"Remarks","text":"<p>Example:  </p> Program.cs<pre><code>public interface IApplication {  \n    void Run();  \n}  \n\ninternal class Application : IApplication {  \n\n    private readonly ILogger&lt;IApplication&gt; _logger;  \n\n    public Application(ILogger&lt;IApplication&gt; logger) {  \n        _logger = logger;  \n    }  \n\n\n    void Run() {  \n        _logger.LogError(\"There's nothing to do here\");  \n    }  \n}  \n\nvar appContext = IApplicationContext.Create((container)=&gt;   \n  container  \n    .Use&lt;IApplication,Application&gt;();  \n    .UseLogging((loggingBuilder)=&gt;   \n        loggingBuilder.AddFile((options)=&gt;   \n            options.Append = false;  \n            options.FileNameTemplate=\"example-{timestamp}.log\"  \n        }  \n    });  \n}  \n\nvar app = appContext.Start&lt;Application&gt;();  \napp.Run();  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/","title":"HAKOM.Logging.HakomDatabaseLog.Net","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/#hakomlogginghakomdatabaselognet-assembly","title":"HAKOM.Logging.HakomDatabaseLog.Net Assembly","text":"<p>This assembly provides a way to write log messages into a HAKOM database.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/#remarks","title":"Remarks","text":"<p>Some configuration is required to be able to log messages into a database. For basic information on how to configure a HAKOM application, including the various configuration sources like files, environment variables, etc., please refer to the ContainerExtensions in the configuration module.  </p> <p>In order to use HAKOM database logs, there must be at least one repository configured. This is done in the <code>Persistence:Repositories</code> section.  </p> <p>The documentation for IRepositoryConfiguration describes in detail on how to configure repositories.  </p> <p>In addition, the logger must be configured to use one of the repositories in the <code>Logging:HakomDatabase</code> section.  </p> HAKOM.xmlJsonEnvironment VariablesCommandline Parameters Configuration of repository<pre><code>&lt;HAKOM&gt;  \n    &lt;Logging&gt;  \n        &lt;HakomDatabase&gt;  \n            &lt;Repository&gt;ExampleRepository&lt;/Repository&gt;  \n        &lt;/HakomDatabase&gt;  \n    &lt;/Logging&gt;  \n&lt;/HAKOM&gt;  \n</code></pre> Configuration of repository<pre><code>{  \n    \"Logging\" : {  \n        \"HakomDatabase\": {  \n            \"Repository\": \"ExampleRepository\"  \n        }  \n    }  \n}  \n</code></pre> Configuration of repository<pre><code>set HAKOM__Logging__HakomDatabase__Repository=ExampleRepository  \n</code></pre> Configuration of repository linenums=<pre><code>--HAKOM:Logging:HakomDatabase:Repository=ExampleRepository  \n</code></pre> <p>Please ensure that the repository configured here points to a database that supports HAKOM database logs.  </p> <p>Additional settings of the logger are described here: IHakomDatabaseLoggerOptions </p> <p>Finally, add the logger to your logging setup  </p> Adding database logging to an ILoggingBuilder<pre><code>container.UseLogging((loggingBuilder)=&gt;{  \n    loggingBuilder.AddHakomDatabaseLog();  \n});  \n</code></pre> <p>Refer to the ContainerExtensions in the core module for a description of the various methods that can be used to set up logging.  </p> <p>Note that the database logger does not support registration via configuration only like console or file logging, so even when using UseConfiguredLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, string), you must still manually call AddHakomDatabaseLog(this ILoggingBuilder) in the action passed as the second parameter of UseConfiguredLogging(this IContainer, Action&lt;ILoggingBuilder&gt;, string).  </p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/#using-configuration-from-a-different-section","title":"Using configuration from a different section","text":"<p>When using a section for configuring logging that is different from the default (\"Logging\") the configuration of the database logger must be moved to that section as well.  </p> <p>Given the following configuration file  </p> <p>Configuring file and database logging in a custom section.<pre><code>&lt;HAKOM&gt;  \n    &lt;CustomAppConfig&gt;  \n        &lt;LogSettings&gt;  \n            &lt;File&gt;  \n                &lt;LogLevel&gt;Warning&lt;/LogLevel&gt;  \n                &lt;FileNamePattern&gt;customapp.{timestamp}.log&lt;/FileNamePattern&gt;  \n            &lt;/File&gt;  \n            &lt;HakomDatabase&gt;  \n                &lt;LogLevel&gt;Critical&lt;/LogLevel&gt;  \n                &lt;Repository&gt;ExampleRepository&lt;/Repository&gt;  \n            &lt;/HakomDatabase&gt;  \n        &lt;/LogSettings&gt;  \n    &lt;/CustomAppConfig&gt;  \n&lt;/HAKOM&gt;  \n</code></pre>             The following code sets up logging to use the configuration from the section above.  </p> Configuring the database logger with a custom logging section.<pre><code>container.UseConfiguredLogging((loggingBuilder)=&gt;{  \n    loggingBuilder.AddHakomDatabaseLog();  \n}, \"CustomAppConfig:LogSettings\");  \n</code></pre> Namespaces HAKOM.Logging.HakomDatabaseLog.Net.Api HAKOMs implementation of writing structured logs into databases. HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions Exceptions relating to HAKOMs implementation of writing structured logs into a database. HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions Contains extension methods for enabling database logging as well as log-session management. HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence Contains interfaces used to write IHakomDatabaseLogEntry instances intoa database."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/#hakomlogginghakomdatabaselognetapi-namespace","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api Namespace","text":"<p>HAKOMs implementation of writing structured logs into databases.</p> Structs Session Represents a session within the database logs. Interfaces IHakomDatabaseLogEntry Represents a single entry in a HAKOM database log. IHakomDatabaseLoggerOptions Configures the behavior of a HAKOM database logger ISessionFactory Creates Session instances for structured logging in a HAKOM log database."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/","title":"IHakomDatabaseLogEntry","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#ihakomdatabaselogentry-interface","title":"IHakomDatabaseLogEntry Interface","text":"<p>Represents a single entry in a HAKOM database log.</p> C#<pre><code>public interface IHakomDatabaseLogEntry\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#ihakomdatabaselogentryloglevel-property","title":"IHakomDatabaseLogEntry.LogLevel Property","text":"<p>The LogLevel of the entry.</p> C#<pre><code>Microsoft.Extensions.Logging.LogLevel LogLevel { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#property-value","title":"Property Value","text":"<p>Microsoft.Extensions.Logging.LogLevel</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#ihakomdatabaselogentrymessage-property","title":"IHakomDatabaseLogEntry.Message Property","text":"<p>A System.String that contains information about the entry.</p> C#<pre><code>string Message { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#ihakomdatabaselogentrysession-property","title":"IHakomDatabaseLogEntry.Session Property","text":"<p>The Session this entry belongs to.</p> C#<pre><code>HAKOM.Logging.HakomDatabaseLog.Net.Api.Session Session { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#property-value_2","title":"Property Value","text":"<p>Session</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#ihakomdatabaselogentrysource-property","title":"IHakomDatabaseLogEntry.Source Property","text":"<p>A System.String that identifies the source that created the entry.</p> C#<pre><code>string Source { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLogEntry/#property-value_3","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/","title":"IHakomDatabaseLoggerOptions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptions-interface","title":"IHakomDatabaseLoggerOptions Interface","text":"<p>Configures the behavior of a HAKOM database logger</p> C#<pre><code>public interface IHakomDatabaseLoggerOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptionsfinalflushgraceperiod-property","title":"IHakomDatabaseLoggerOptions.FinalFlushGracePeriod Property","text":"<p>How long to allow for the logger to flush the queue into the repository on disposal of the logger.</p> C#<pre><code>System.TimeSpan FinalFlushGracePeriod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#property-value","title":"Property Value","text":"<p>System.TimeSpan</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptionsloglevel-property","title":"IHakomDatabaseLoggerOptions.LogLevel Property","text":"<p>The minimum LogLevel for which to write log entries.</p> C#<pre><code>Microsoft.Extensions.Logging.LogLevel LogLevel { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#property-value_1","title":"Property Value","text":"<p>Microsoft.Extensions.Logging.LogLevel</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptionsqueuesize-property","title":"IHakomDatabaseLoggerOptions.QueueSize Property","text":"<p>Actual writing of the entries is queued on a background process for performance reasons. This option specifies how many log entries that queue should hold.</p> C#<pre><code>int QueueSize { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#property-value_2","title":"Property Value","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptionsrepository-property","title":"IHakomDatabaseLoggerOptions.Repository Property","text":"<p>The repository to log into.</p> C#<pre><code>string Repository { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#ihakomdatabaseloggeroptionstimetowaitforopenslot-property","title":"IHakomDatabaseLoggerOptions.TimeToWaitForOpenSlot Property","text":"<p>How long to wait for the queue to have room for additional messages.</p> C#<pre><code>System.TimeSpan TimeToWaitForOpenSlot { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/IHakomDatabaseLoggerOptions/#property-value_4","title":"Property Value","text":"<p>System.TimeSpan</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/","title":"ISessionFactory","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#isessionfactory-interface","title":"ISessionFactory Interface","text":"<p>Creates Session instances for structured logging in a HAKOM log database.</p> C#<pre><code>public interface ISessionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#isessionfactorycreate-method","title":"ISessionFactory.Create() Method","text":"<p>Creates a new Session.</p> C#<pre><code>HAKOM.Logging.HakomDatabaseLog.Net.Api.Session Create();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#returns","title":"Returns","text":"<p>Session The new Session.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#isessionfactoryinactivesession-method","title":"ISessionFactory.Inactive(Session) Method","text":"<p>Creates a new Session from an existing one and sets its status to inactive (Active = false).</p> C#<pre><code>HAKOM.Logging.HakomDatabaseLog.Net.Api.Session Inactive(HAKOM.Logging.HakomDatabaseLog.Net.Api.Session session);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#parameters","title":"Parameters","text":"<p><code>session</code> Session</p> <p>The Session to inactivate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/ISessionFactory/#returns_1","title":"Returns","text":"<p>Session The inactivated Session.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/","title":"Session","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#session-struct","title":"Session Struct","text":"<p>Represents a session within the database logs.</p> C#<pre><code>public readonly struct Session :\nSystem.IEquatable&lt;HAKOM.Logging.HakomDatabaseLog.Net.Api.Session&gt;\n</code></pre> <p>Implements System.IEquatable&lt;Session&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#remarks","title":"Remarks","text":"<p>Sessions are a special - HAKOM specific - implementation of the concept of \"scopes\" in Microsoft.Extensions.Logging. A session is started by invoking BeginSession(this ILogger) and ends on disposal of the return value of that function.  </p> Starting a Session<pre><code>using (var session = logger.BeginSession()) {// starts the session  \n    logger.LogError(\"Some error\"); // write log messages within the session  \n    logger.LogWarning(\"Some warning\"); //...  \n} // ends the session  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionactive-property","title":"Session.Active Property","text":"<p>Indicates wether the session is still active or has already been ended.</p> C#<pre><code>public bool Active { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionid-property","title":"Session.Id Property","text":"<p>The numeric identifier of the session.</p> C#<pre><code>public int Id { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#property-value_1","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionequalssession-method","title":"Session.Equals(Session) Method","text":"<p>Compares another Session to this one.</p> C#<pre><code>public bool Equals(HAKOM.Logging.HakomDatabaseLog.Net.Api.Session other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#parameters","title":"Parameters","text":"<p><code>other</code> Session</p> <p>The Session to compare with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns","title":"Returns","text":"<p>System.Boolean True if they are the same session, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionequalsobject-method","title":"Session.Equals(object) Method","text":"<p>Indicates whether this instance and a specified object are equal.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#parameters_1","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The object to compare with the current instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns_1","title":"Returns","text":"<p>System.Boolean true if obj and this instance are the same type and represent the same value; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessiongethashcode-method","title":"Session.GetHashCode() Method","text":"<p>Returns the hash code for this instance.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns_2","title":"Returns","text":"<p>System.Int32 A 32-bit signed integer that is the hash code for this instance.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessiontostring-method","title":"Session.ToString() Method","text":"<p>A string representation of this Session object.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns_3","title":"Returns","text":"<p>System.String A string showing the Id and Active status of the session.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionoperator-session-session-operator","title":"Session.operator ==(Session, Session) Operator","text":"<p>Operator overload to compare two Session instances with one another.</p> C#<pre><code>public static bool operator ==(HAKOM.Logging.HakomDatabaseLog.Net.Api.Session left, HAKOM.Logging.HakomDatabaseLog.Net.Api.Session right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#parameters_2","title":"Parameters","text":"<p><code>left</code> Session</p> <p>One of the two Sessions to compare.</p> <p></p> <p><code>right</code> Session</p> <p>The other of the two Sessions to compare.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns_4","title":"Returns","text":"<p>System.Boolean True if they are equal.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#sessionoperator-session-session-operator_1","title":"Session.operator !=(Session, Session) Operator","text":"<p>Operator overload to compare two Session instances with one another.</p> C#<pre><code>public static bool operator !=(HAKOM.Logging.HakomDatabaseLog.Net.Api.Session left, HAKOM.Logging.HakomDatabaseLog.Net.Api.Session right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#parameters_3","title":"Parameters","text":"<p><code>left</code> Session</p> <p>One of the two Sessions to compare.</p> <p></p> <p><code>right</code> Session</p> <p>The other of the two Sessions to compare.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Session/#returns_5","title":"Returns","text":"<p>System.Boolean True if they are not equal.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/#hakomlogginghakomdatabaselognetapiexceptions-namespace","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions Namespace","text":"<p>Exceptions relating to HAKOMs implementation of writing structured logs into a database.</p> Classes CannotLogToSpecifiedRepositoryException Thrown when the repository to log to is not defined in the available configuration. NoRepositoryConfiguredException Thrown when there is no repository configured for the logger to log to. RepositoryConfigurationRequiredForDatabaseLogException Thrown when there is no Persistence:Repositories section in the available configuration. UnknownLogLevelException Thrown when an attempt is made to log using a log level that is unknown"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/","title":"CannotLogToSpecifiedRepositoryException","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#cannotlogtospecifiedrepositoryexception-class","title":"CannotLogToSpecifiedRepositoryException Class","text":"<p>Thrown when the repository to log to is not defined in the available configuration.</p> C#<pre><code>public sealed class CannotLogToSpecifiedRepositoryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CannotLogToSpecifiedRepositoryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#remarks","title":"Remarks","text":"<p>The configuration for database logging must include a \"Repository\" setting (see Repository)             That setting must be equal to the name of a repository configured under Persistence:Repositories.             If there is no configured repository with a matching name, this exception is thrown.  </p> <p>To fix this error, make sure the setting matches a configured repository name, or add a matching repository configuration to HAKOM:TSM:Persistence:Repositories section, or add the missing  </p> <p>This exception is identified by error code HK05007.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#cannotlogtospecifiedrepositoryexceptionequivalenthttpstatuscode-property","title":"CannotLogToSpecifiedRepositoryException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown inside an HTTP request, the request should return a response with HTTP status code 500 (Internal server error)</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#cannotlogtospecifiedrepositoryexceptionrepositoryname-property","title":"CannotLogToSpecifiedRepositoryException.RepositoryName Property","text":"<p>The name of the repository that wasn't found.</p> C#<pre><code>public string RepositoryName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/CannotLogToSpecifiedRepositoryException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/","title":"NoRepositoryConfiguredException","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/#norepositoryconfiguredexception-class","title":"NoRepositoryConfiguredException Class","text":"<p>Thrown when there is no repository configured for the logger to log to.</p> C#<pre><code>public sealed class NoRepositoryConfiguredException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoRepositoryConfiguredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/#remarks","title":"Remarks","text":"<p>Configuration of file logging requires a \"Repository\" setting (see Repository). If this setting is missing or empty, the logger does not know what repository to log to.  </p> <p>Make sure to set the \"Repository\" to a value that corresponds to the name of a configured repository in order to fix this error.  </p> <p>This exception is identified by error code HK05006</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/#norepositoryconfiguredexceptionequivalenthttpstatuscode-property","title":"NoRepositoryConfiguredException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown inside an HTTP request, the request should return a response with HTTP status code 500 (Internal server error)</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/NoRepositoryConfiguredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/","title":"RepositoryConfigurationRequiredForDatabaseLogException","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/#repositoryconfigurationrequiredfordatabaselogexception-class","title":"RepositoryConfigurationRequiredForDatabaseLogException Class","text":"<p>Thrown when there is no Persistence:Repositories section in the available configuration.</p> C#<pre><code>public sealed class RepositoryConfigurationRequiredForDatabaseLogException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RepositoryConfigurationRequiredForDatabaseLogException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/#remarks","title":"Remarks","text":"<p>This indicates that there is no configuration of available repositories to connect to.  </p> <p>Make sure there is at least one repository configured and that the \"Repository\" setting (see Repository) matches exactly one repository name.  </p> <p>This exception is identified by error code HK05008</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/#repositoryconfigurationrequiredfordatabaselogexceptionequivalenthttpstatuscode-property","title":"RepositoryConfigurationRequiredForDatabaseLogException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown inside an HTTP request, the request should return a response with HTTP status code 500 (Internal server error)</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/RepositoryConfigurationRequiredForDatabaseLogException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/","title":"UnknownLogLevelException","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/#unknownloglevelexception-class","title":"UnknownLogLevelException Class","text":"<p>Thrown when an attempt is made to log using a log level that is unknown</p> C#<pre><code>public sealed class UnknownLogLevelException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnknownLogLevelException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/#remarks","title":"Remarks","text":"<p>When calling Microsoft.Extensions.Logging.ILogger.Log&lt;&gt;.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,&lt;&gt;.Exception,System.Func{&lt;&gt;.Exception,System.String}) or any of the \"Log\" extension methods in Microsoft.Extensions.Logging.LoggerExtensions while passing a Microsoft.Extensions.Logging.LogLevel that this database logger does not support, this exception is thrown.  </p> <p>Loggers will usually support all defined Microsoft.Extensions.Logging.LogLevels. Make sure the level is defined by calling System.Enum.IsDefined(System.Type,System.Object).  </p> <p>This exception is identified by error code HK05005.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/#unknownloglevelexceptionequivalenthttpstatuscode-property","title":"UnknownLogLevelException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown inside an HTTP request, the request should return a response with HTTP status code 500 (Internal server error)</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Exceptions/UnknownLogLevelException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/#hakomlogginghakomdatabaselognetapiextensions-namespace","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions Namespace","text":"<p>Contains extension methods for enabling database logging as well as log-session management.</p> Classes ContainerExtensions Provides extension methods to register services required for database logging with an IContainer. LoggerExtensions Adds extension methods to Microsoft.Extensions.Logging.ILogger for database logging specific calls. LoggingBuilderExtensions Provides extension methods to add database logging to a Microsoft.Extensions.Logging.ILoggingBuilder."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods to register services required for database logging with an IContainer.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#containerextensionsusesessionfactorythis-icontainer-method","title":"ContainerExtensions.UseSessionFactory(this IContainer) Method","text":"<p>Registers the default implementation of ISessionFactory with the given container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSessionFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer instance to register the ISessionFactory with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when container is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/","title":"LoggerExtensions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#loggerextensions-class","title":"LoggerExtensions Class","text":"<p>Adds extension methods to Microsoft.Extensions.Logging.ILogger for database logging specific calls.</p> C#<pre><code>public static class LoggerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 LoggerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#loggerextensionsbeginsessionthis-ilogger-method","title":"LoggerExtensions.BeginSession(this ILogger) Method","text":"<p>Calls the BeginScope method on the Microsoft.Extensions.Logging.ILogger  and sets the state to a new instance of Session.</p> C#<pre><code>public static System.IDisposable? BeginSession(this Microsoft.Extensions.Logging.ILogger logger);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#parameters","title":"Parameters","text":"<p><code>logger</code> Microsoft.Extensions.Logging.ILogger</p> <p>The Microsoft.Extensions.Logging.ILogger to start a session for.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#returns","title":"Returns","text":"<p>System.IDisposable The logger for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if logger is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#loggerextensionslogprogressthis-ilogger-string-object-method","title":"LoggerExtensions.LogProgress(this ILogger, string, object[]) Method","text":"<p>Calls Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[]) with Microsoft.Extensions.Logging.LogLevel.None.</p> C#<pre><code>public static void LogProgress(this Microsoft.Extensions.Logging.ILogger logger, string message, params object[]? args);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#parameters_1","title":"Parameters","text":"<p><code>logger</code> Microsoft.Extensions.Logging.ILogger</p> <p>The Microsoft.Extensions.Logging.ILogger to call the underlying method on.</p> <p></p> <p><code>message</code> System.String</p> <p>The message to log.</p> <p></p> <p><code>args</code> System.Object[]</p> <p>Optional array of parameters for the message.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if logger is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/","title":"LoggingBuilderExtensions","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#loggingbuilderextensions-class","title":"LoggingBuilderExtensions Class","text":"<p>Provides extension methods to add database logging to a Microsoft.Extensions.Logging.ILoggingBuilder.</p> C#<pre><code>public static class LoggingBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 LoggingBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#loggingbuilderextensionsaddhakomdatabaselogthis-iloggingbuilder-method","title":"LoggingBuilderExtensions.AddHakomDatabaseLog(this ILoggingBuilder) Method","text":"<p>Adds database logging to the loggingBuilder.</p> C#<pre><code>public static Microsoft.Extensions.Logging.ILoggingBuilder AddHakomDatabaseLog(this Microsoft.Extensions.Logging.ILoggingBuilder loggingBuilder);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>loggingBuilder</code> Microsoft.Extensions.Logging.ILoggingBuilder</p> <p>The Microsoft.Extensions.Logging.ILoggingBuilder to add database logging to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.Logging.ILoggingBuilder The loggingBuilder for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Extensions/LoggingBuilderExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if loggingBuilder is null.</p> <p>RepositoryConfigurationRequiredForDatabaseLogException Thrown if underlying IContainer has not been configured (i.e. via UseConfiguration(this IContainer, Action&lt;IConfigurationBuilder&gt;, bool)).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/#hakomlogginghakomdatabaselognetapipersistence-namespace","title":"HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence Namespace","text":"<p>Contains interfaces used to write IHakomDatabaseLogEntry instances into a database.</p> Interfaces IHakomDatabaseLogStore Used to write log entries into a repository. IHakomDatabaseLogStoreFactory Used to create IHakomDatabaseLogStore instances."},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/","title":"IHakomDatabaseLogStore","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#ihakomdatabaselogstore-interface","title":"IHakomDatabaseLogStore Interface","text":"<p>Used to write log entries into a repository.</p> C#<pre><code>public interface IHakomDatabaseLogStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#ihakomdatabaselogstoresupportsloglevelloglevel-method","title":"IHakomDatabaseLogStore.SupportsLogLevel(LogLevel) Method","text":"<p>Returns whether this IHakomDatabaseLogStore supports the given Microsoft.Extensions.Logging.LogLevel.</p> C#<pre><code>bool SupportsLogLevel(Microsoft.Extensions.Logging.LogLevel logLevel);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#parameters","title":"Parameters","text":"<p><code>logLevel</code> Microsoft.Extensions.Logging.LogLevel</p> <p>The Microsoft.Extensions.Logging.LogLevel to check for support.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#returns","title":"Returns","text":"<p>System.Boolean True if logLevel is supported, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#ihakomdatabaselogstorewriteihakomdatabaselogentry-cancellationtoken-method","title":"IHakomDatabaseLogStore.Write(IHakomDatabaseLogEntry, CancellationToken) Method","text":"<p>Writes the given IHakomDatabaseLogEntry into the repository.</p> C#<pre><code>System.Threading.Tasks.Task Write(HAKOM.Logging.HakomDatabaseLog.Net.Api.IHakomDatabaseLogEntry entry, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#parameters_1","title":"Parameters","text":"<p><code>entry</code> IHakomDatabaseLogEntry</p> <p>The entry to write.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that can be used to attempt to              cancel the write operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the entry has been successfully written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/","title":"IHakomDatabaseLogStoreFactory","text":"<p>Assembly: HAKOM.Logging.HakomDatabaseLog.Net</p> <p>Namespace: HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#ihakomdatabaselogstorefactory-interface","title":"IHakomDatabaseLogStoreFactory Interface","text":"<p>Used to create IHakomDatabaseLogStore instances.</p> C#<pre><code>public interface IHakomDatabaseLogStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#ihakomdatabaselogstorefactorycreatestring-cancellationtoken-method","title":"IHakomDatabaseLogStoreFactory.Create(string, CancellationToken) Method","text":"<p>Creates an instance of IHakomDatabaseLogStore for the specified repository repositoryName/&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence.IHakomDatabaseLogStore&gt; Create(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The name of the repository which the IHakomDatabaseLogStore will be created for.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IHakomDatabaseLogStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IHakomDatabaseLogStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#ihakomdatabaselogstorefactorytrycreatestring-cancellationtoken-method","title":"IHakomDatabaseLogStoreFactory.TryCreate(string, CancellationToken) Method","text":"<p>Tries to create an instance of IHakomDatabaseLogStore for the specified repository repositoryName/&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Logging.HakomDatabaseLog.Net.Api.Persistence.IHakomDatabaseLogStore&gt;&gt; TryCreate(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The name of the repository which the IHakomDatabaseLogStore will be created for.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IHakomDatabaseLogStore&gt;&gt; A Result&lt;TValue&gt; containing a new IHakomDatabaseLogStore instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Logging/HakomDatabaseLog/API/Persistence/IHakomDatabaseLogStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/","title":"HAKOM.Persistence.Core.Net","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/#hakompersistencecorenet-assembly","title":"HAKOM.Persistence.Core.Net Assembly","text":"Namespaces HAKOM.Persistence.Core.Net.Api HAKOM.Persistence.Core.Net.Api.Caching HAKOM.Persistence.Core.Net.Api.Configuration HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions HAKOM.Persistence.Core.Net.Api.Exceptions HAKOM.Persistence.Core.Net.Api.Extensions HAKOM.Persistence.Core.Net.Api.Ordering HAKOM.Persistence.Core.Net.Api.Ordering.Exceptions HAKOM.Persistence.Core.Net.Api.Paging HAKOM.Persistence.Core.Net.Api.References HAKOM.Persistence.Core.Net.Api.References.Serialization.Json HAKOM.Persistence.Core.Net.Api.Storage HAKOM.Persistence.Core.Net.Api.Storage.Configuration HAKOM.Persistence.Core.Net.Api.Storage.Exceptions HAKOM.Persistence.Core.Net.Api.Versioning HAKOM.Persistence.Core.Net.Api.Versioning.Exceptions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/","title":"HAKOM.Persistence.Core.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/#hakompersistencecorenetapi-namespace","title":"HAKOM.Persistence.Core.Net.Api Namespace","text":"Classes Repository Repository&lt;TRepositoryInformation&gt; RepositoryInformation RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; RepositoryStore&lt;TRepository,TRepositoryInformation&gt; RepositoryStore&lt;TRepository&gt; Interfaces IRepository Represents a place for persisting data. This may be a database, a file system, etc. IRepository&lt;TRepositoryInformation&gt; IRepositoryFactory&lt;TRepository&gt; IRepositoryInformation IRepositoryInformationStore IRepositoryInformationStore&lt;TRepositoryInformation&gt; IRepositoryInformationStoreFactory Creates a store used to retrieve information about a repository. IRepositoryStore&lt;TRepository&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/","title":"IRepository","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#irepository-interface","title":"IRepository Interface","text":"<p>Represents a place for persisting data. This may be a database, a file system, etc.</p> C#<pre><code>public interface IRepository\n</code></pre> <p>Derived \u21b3 IRepository&lt;TRepositoryInformation&gt; \u21b3 Repository \u21b3 Repository&lt;TRepositoryInformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#irepositoryname-property","title":"IRepository.Name Property","text":"<p>The name of the repository. This should be unique within a single IApplicationContext, since components accessing repositories usually rely on being able to identify individual repositories by their name.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#irepositoryconfigureirepositoryconfiguration-cancellationtoken-method","title":"IRepository.Configure(IRepositoryConfiguration, CancellationToken) Method","text":"<p>Configures the repository. This could for example, contain information such as connection strings for the underlying database.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#parameters","title":"Parameters","text":"<p><code>configuration</code> IRepositoryConfiguration</p> <p>Configuration that should be used by repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepository/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/","title":"IRepositoryFactory&lt;TRepository&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#irepositoryfactorytrepository-interface","title":"IRepositoryFactory&lt;TRepository&gt; Interface","text":"C#<pre><code>public interface IRepositoryFactory&lt;TRepository&gt;\n    where TRepository : HAKOM.Persistence.Core.Net.Api.IRepository\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepository</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#irepositoryfactorytrepositorycreateirepositoryconfiguration-cancellationtoken-method","title":"IRepositoryFactory&lt;TRepository&gt;.Create(IRepositoryConfiguration, CancellationToken) Method","text":"<p>Creates an instance of an IRepository based on TRepository  using the specified repositoryConfiguration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TRepository&gt; Create(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration repositoryConfiguration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#parameters","title":"Parameters","text":"<p><code>repositoryConfiguration</code> IRepositoryConfiguration</p> <p>The IStorageProvider used to create.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TRepository&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IRepositoryConfiguration.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#irepositoryfactorytrepositorytrycreateirepositoryconfiguration-cancellationtoken-method","title":"IRepositoryFactory&lt;TRepository&gt;.TryCreate(IRepositoryConfiguration, CancellationToken) Method","text":"<p>Tries to create an instance of an IRepository based on TRepository  using the specified repositoryConfiguration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration repositoryConfiguration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>repositoryConfiguration</code> IRepositoryConfiguration</p> <p>The IRepositoryConfiguration used to create.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IRepositoryConfiguration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/","title":"IRepositoryInformation","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#irepositoryinformation-interface","title":"IRepositoryInformation Interface","text":"C#<pre><code>public interface IRepositoryInformation\n</code></pre> <p>Derived \u21b3 RepositoryInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#irepositoryinformationname-property","title":"IRepositoryInformation.Name Property","text":"<p>The name of the repository.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#remarks","title":"Remarks","text":"<p>The name of a repository is usually defined by its specific entry in the repository configuration.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#irepositoryinformationtype-property","title":"IRepositoryInformation.Type Property","text":"<p>The type of repository, i.e. the underlying type of database/driver it uses.</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#remarks_1","title":"Remarks","text":"<p>Example values - oracle - sqlserver - postgresql</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#irepositoryinformationversion-property","title":"IRepositoryInformation.Version Property","text":"<p>The version of the repository.</p> C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion Version { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#property-value_2","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformation/#remarks_2","title":"Remarks","text":"<p>This version describes the data of HAKOM objects it supports, not the version of the underlying database/driver.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/","title":"IRepositoryInformationStore","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#irepositoryinformationstore-interface","title":"IRepositoryInformationStore Interface","text":"C#<pre><code>public interface IRepositoryInformationStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 IRepositoryInformationStore&lt;TRepositoryInformation&gt; \u21b3 RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#irepositoryinformationstoreloadcancellationtoken-method","title":"IRepositoryInformationStore.Load(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformation&gt; Load(System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IRepositoryInformation&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#irepositoryinformationstoretryloadcancellationtoken-method","title":"IRepositoryInformationStore.TryLoad(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformation&gt;&gt; TryLoad(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IRepositoryInformation&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/","title":"IRepositoryInformationStoreFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#irepositoryinformationstorefactory-interface","title":"IRepositoryInformationStoreFactory Interface","text":"<p>Creates a store used to retrieve information about a repository.</p> C#<pre><code>public interface IRepositoryInformationStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#irepositoryinformationstorefactorycreatetrepositoryinformationistorageprovider-cancellationtoken-method","title":"IRepositoryInformationStoreFactory.Create&lt;TRepositoryInformation&gt;(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an IRepositoryInformationStore of the specified TRepositoryInformation using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;&gt; Create&lt;TRepositoryInformation&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#type-parameters","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;&gt; A System.Threading.Tasks.Task of the created store.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#irepositoryinformationstorefactorytrycreatetrepositoryinformationistorageprovider-cancellationtoken-method","title":"IRepositoryInformationStoreFactory.TryCreate&lt;TRepositoryInformation&gt;(IStorageProvider, CancellationToken) Method","text":"<p>Tries to create an instance of an IRepositoryInformationStore of the specified TRepositoryInformation using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;&gt;&gt; TryCreate&lt;TRepositoryInformation&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;&gt;&gt; A System.Threading.Tasks.Task of the created store. May be null</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/","title":"IRepositoryInformationStore&lt;TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#irepositoryinformationstoretrepositoryinformation-interface","title":"IRepositoryInformationStore&lt;TRepositoryInformation&gt; Interface","text":"C#<pre><code>public interface IRepositoryInformationStore&lt;TRepositoryInformation&gt; :\nHAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p> <p>Derived \u21b3 RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;</p> <p>Implements IRepositoryInformationStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#irepositoryinformationstoretrepositoryinformationloadcancellationtoken-method","title":"IRepositoryInformationStore&lt;TRepositoryInformation&gt;.Load(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;TRepositoryInformation&gt; Load(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Load(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TRepositoryInformation&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#irepositoryinformationstoretrepositoryinformationtryloadcancellationtoken-method","title":"IRepositoryInformationStore&lt;TRepositoryInformation&gt;.TryLoad(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt; TryLoad(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryLoad(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryInformationStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/","title":"IRepository&lt;TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#irepositorytrepositoryinformation-interface","title":"IRepository&lt;TRepositoryInformation&gt; Interface","text":"C#<pre><code>public interface IRepository&lt;TRepositoryInformation&gt; :\nHAKOM.Persistence.Core.Net.Api.IRepository\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p> <p>Derived \u21b3 Repository&lt;TRepositoryInformation&gt;</p> <p>Implements IRepository</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#irepositorytrepositoryinformationgetinformationcancellationtoken-method","title":"IRepository&lt;TRepositoryInformation&gt;.GetInformation(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;TRepositoryInformation&gt; GetInformation(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TRepositoryInformation&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#irepositorytrepositoryinformationtrygetinformationcancellationtoken-method","title":"IRepository&lt;TRepositoryInformation&gt;.TryGetInformation(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt; TryGetInformation(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/","title":"IRepositoryStore&lt;TRepository&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepository-interface","title":"IRepositoryStore&lt;TRepository&gt; Interface","text":"C#<pre><code>public interface IRepositoryStore&lt;TRepository&gt;\n    where TRepository : HAKOM.Persistence.Core.Net.Api.IRepository\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepository</code></p> <p>Derived \u21b3 RepositoryStore&lt;TRepository&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositorycountcancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.Count(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;long&gt; Count(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Int64&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositoryfindcancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.Find(CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TRepository&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TRepository&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositoryloadstring-cancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.Load(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;TRepository&gt; Load(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TRepository&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositorytrycountcancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.TryCount(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;long&gt;&gt; TryCount(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int64&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositorytryfindcancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.TryFind(CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters_4","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#irepositorystoretrepositorytryloadstring-cancellationtoken-method","title":"IRepositoryStore&lt;TRepository&gt;.TryLoad(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#parameters_5","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/IRepositoryStoreOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/","title":"Repository","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repository-class","title":"Repository Class","text":"C#<pre><code>public abstract class Repository :\nHAKOM.Persistence.Core.Net.Api.IRepository,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Repository</p> <p>Derived \u21b3 Repository&lt;TRepositoryInformation&gt;</p> <p>Implements IRepository, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositoryistorageproviderfactory-constructor","title":"Repository(IStorageProviderFactory) Constructor","text":"C#<pre><code>protected Repository(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProviderFactory storageProviderFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#parameters","title":"Parameters","text":"<p><code>storageProviderFactory</code> IStorageProviderFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositorydebuggerdisplay-property","title":"Repository.DebuggerDisplay Property","text":"C#<pre><code>protected virtual string DebuggerDisplay { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositoryname-property","title":"Repository.Name Property","text":"C#<pre><code>public string Name { get; }\n</code></pre> <p>Implements Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositoryrepositoryconfiguration-property","title":"Repository.RepositoryConfiguration Property","text":"C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration RepositoryConfiguration { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#property-value_2","title":"Property Value","text":"<p>IRepositoryConfiguration</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositorystorageprovider-property","title":"Repository.StorageProvider Property","text":"C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider StorageProvider { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#property-value_3","title":"Property Value","text":"<p>IStorageProvider</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositorystorageproviderfactory-property","title":"Repository.StorageProviderFactory Property","text":"C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Storage.IStorageProviderFactory StorageProviderFactory { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#property-value_4","title":"Property Value","text":"<p>IStorageProviderFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#repositoryconfigureirepositoryconfiguration-cancellationtoken-method","title":"Repository.Configure(IRepositoryConfiguration, CancellationToken) Method","text":"C#<pre><code>public virtual System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#parameters_1","title":"Parameters","text":"<p><code>configuration</code> IRepositoryConfiguration</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Configure(IRepositoryConfiguration, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Repository/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/","title":"RepositoryInformation","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#repositoryinformation-class","title":"RepositoryInformation Class","text":"C#<pre><code>public abstract class RepositoryInformation :\nHAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 RepositoryInformation</p> <p>Implements IRepositoryInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#repositoryinformationname-property","title":"RepositoryInformation.Name Property","text":"C#<pre><code>public string Name { get; set; }\n</code></pre> <p>Implements Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#repositoryinformationtype-property","title":"RepositoryInformation.Type Property","text":"C#<pre><code>public string Type { get; set; }\n</code></pre> <p>Implements Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#repositoryinformationversion-property","title":"RepositoryInformation.Version Property","text":"C#<pre><code>public HAKOM.Versioning.Core.Net.Api.IVersion Version { get; set; }\n</code></pre> <p>Implements Version</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformation/#property-value_2","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/","title":"RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstoretstorageprovidertrepositoryinformation-class","title":"RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; Class","text":"C#<pre><code>public abstract class RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; : HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt;,\nHAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;,\nHAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p></p> <p><code>TRepositoryInformation</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt; \ud83e\udc52 RepositoryInformationStore <p>Implements HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;, IRepositoryInformationStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstoreirepositoryversionprovider-iversion-icache-constructor","title":"RepositoryInformationStore(IRepositoryVersionProvider, IVersion, ICache) Constructor C#<pre><code>protected RepositoryInformationStore(HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionProvider repositoryVersionProvider, HAKOM.Versioning.Core.Net.Api.IVersion clientVersion, HAKOM.Persistence.Core.Net.Api.Caching.ICache&lt;TRepositoryInformation&gt;? repositoryInformationCache=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#parameters","title":"Parameters","text":"<p><code>repositoryVersionProvider</code> IRepositoryVersionProvider</p> <p></p> <p><code>clientVersion</code> IVersion</p> <p></p> <p><code>repositoryInformationCache</code> HAKOM.Persistence.Core.Net.Api.Caching.ICache&lt;TRepositoryInformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstorerepositorytype-property","title":"RepositoryInformationStore.RepositoryType Property C#<pre><code>protected abstract string RepositoryType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstoretstorageprovidertrepositoryinformationtryfetchinformationiversion-cancellationtoken-method","title":"RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;.TryFetchInformation(IVersion, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt; TryFetchInformation(HAKOM.Versioning.Core.Net.Api.IVersion productVersion, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#parameters_1","title":"Parameters","text":"<p><code>productVersion</code> IVersion</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstoretstorageprovidertrepositoryinformationtryloadcancellationtoken-method","title":"RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;.TryLoad(CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt; TryLoad(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryLoad(CancellationToken), TryLoad(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#explicit-interface-implementations","title":"Explicit Interface Implementations","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#repositoryinformationstoretstorageprovidertrepositoryinformationhakompersistencecorenetapiirepositoryinformationstoretryloadcancellationtoken-method","title":"RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt;.HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore.TryLoad(CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.IRepositoryInformation&gt;&gt; HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore.TryLoad(System.Threading.CancellationToken cancellationToken);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryInformationStoreOf2/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryLoad(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/","title":"Repository&lt;TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#repositorytrepositoryinformation-class","title":"Repository&lt;TRepositoryInformation&gt; Class","text":"C#<pre><code>public abstract class Repository&lt;TRepositoryInformation&gt; : HAKOM.Persistence.Core.Net.Api.Repository,\nHAKOM.Persistence.Core.Net.Api.IRepository&lt;TRepositoryInformation&gt;,\nHAKOM.Persistence.Core.Net.Api.IRepository\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p> <p>Inheritance System.Object \ud83e\udc52 Repository \ud83e\udc52 Repository <p>Implements HAKOM.Persistence.Core.Net.Api.IRepository&lt;TRepositoryInformation&gt;, IRepository</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#repositoryistorageproviderfactory-irepositoryinformationstorefactory-constructor","title":"Repository(IStorageProviderFactory, IRepositoryInformationStoreFactory) Constructor","text":"C#<pre><code>protected Repository(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProviderFactory storageProviderFactory, HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStoreFactory repositoryInformationStoreFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#parameters","title":"Parameters","text":"<p><code>storageProviderFactory</code> IStorageProviderFactory</p> <p></p> <p><code>repositoryInformationStoreFactory</code> IRepositoryInformationStoreFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#repositoryrepositoryinformationstore-property","title":"Repository.RepositoryInformationStore Property C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt; RepositoryInformationStore { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#property-value","title":"Property Value","text":"<p>HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;TRepositoryInformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#repositorytrepositoryinformationconfigureirepositoryconfiguration-cancellationtoken-method","title":"Repository&lt;TRepositoryInformation&gt;.Configure(IRepositoryConfiguration, CancellationToken) Method C#<pre><code>public override System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#parameters_1","title":"Parameters","text":"<p><code>configuration</code> IRepositoryConfiguration</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Configure(IRepositoryConfiguration, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#repositorytrepositoryinformationtrygetinformationcancellationtoken-method","title":"Repository&lt;TRepositoryInformation&gt;.TryGetInformation(CancellationToken) Method C#<pre><code>public abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt; TryGetInformation(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryGetInformation(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepositoryInformation&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/","title":"RepositoryStore&lt;TRepository&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoretrepository-class","title":"RepositoryStore&lt;TRepository&gt; Class","text":"C#<pre><code>public abstract class RepositoryStore&lt;TRepository&gt; :\nHAKOM.Persistence.Core.Net.Api.IRepositoryStore&lt;TRepository&gt;\n    where TRepository : HAKOM.Persistence.Core.Net.Api.IRepository\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TRepository</code></p> <p>Inheritance System.Object \ud83e\udc52 RepositoryStore <p>Derived \u21b3 RepositoryStore&lt;TRepository,TRepositoryInformation&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.IRepositoryStore&lt;TRepository&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoreirepositoryconfigurationprovider-irepositoryfactory-iauthorizationservice-iconfiguration-constructor","title":"RepositoryStore(IRepositoryConfigurationProvider, IRepositoryFactory, IAuthorizationService, IConfiguration) Constructor C#<pre><code>protected RepositoryStore(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfigurationProvider repositoryConfigurationProvider, HAKOM.Persistence.Core.Net.Api.IRepositoryFactory&lt;TRepository&gt; repositoryFactory, HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService authorizationService, Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#parameters","title":"Parameters","text":"<p><code>repositoryConfigurationProvider</code> IRepositoryConfigurationProvider</p> <p></p> <p><code>repositoryFactory</code> HAKOM.Persistence.Core.Net.Api.IRepositoryFactory&lt;TRepository&gt;</p> <p></p> <p><code>authorizationService</code> IAuthorizationService</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoreensurerepositorycompatibility-property","title":"RepositoryStore.EnsureRepositoryCompatibility Property C#<pre><code>protected virtual bool EnsureRepositoryCompatibility { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystorerepositorytypename-property","title":"RepositoryStore.RepositoryTypeName Property C#<pre><code>protected abstract string RepositoryTypeName { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoretrepositorytrycountcancellationtoken-method","title":"RepositoryStore&lt;TRepository&gt;.TryCount(CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;long&gt;&gt; TryCount(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryCount(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int64&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoretrepositorytryensurecompatibilitytrepository-cancellationtoken-method","title":"RepositoryStore&lt;TRepository&gt;.TryEnsureCompatibility(TRepository, CancellationToken) Method C#<pre><code>protected virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryEnsureCompatibility(TRepository repository, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>repository</code> TRepository</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoretrepositorytryfindcancellationtoken-method","title":"RepositoryStore&lt;TRepository&gt;.TryFind(CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryFind(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#repositorystoretrepositorytryloadstring-cancellationtoken-method","title":"RepositoryStore&lt;TRepository&gt;.TryLoad(string, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#parameters_4","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryLoad(string, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TRepository&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/","title":"RepositoryStore&lt;TRepository,TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#repositorystoretrepositorytrepositoryinformation-class","title":"RepositoryStore&lt;TRepository,TRepositoryInformation&gt; Class","text":"C#<pre><code>public abstract class RepositoryStore&lt;TRepository,TRepositoryInformation&gt; : HAKOM.Persistence.Core.Net.Api.RepositoryStore&lt;TRepository&gt;\n    where TRepository : HAKOM.Persistence.Core.Net.Api.IRepository&lt;TRepositoryInformation&gt;\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#type-parameters","title":"Type parameters","text":"<p><code>TRepository</code></p> <p></p> <p><code>TRepositoryInformation</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.RepositoryStore&lt;TRepository&gt; \ud83e\udc52 RepositoryStore"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#repositorystoreirepositoryconfigurationprovider-irepositoryfactory-iauthorizationservice-iconfiguration-iversion-constructor","title":"RepositoryStore(IRepositoryConfigurationProvider, IRepositoryFactory, IAuthorizationService, IConfiguration, IVersion) Constructor C#<pre><code>protected RepositoryStore(HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfigurationProvider repositoryConfigurationProvider, HAKOM.Persistence.Core.Net.Api.IRepositoryFactory&lt;TRepository&gt; repositoryFactory, HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService authorizationService, Microsoft.Extensions.Configuration.IConfiguration configuration, HAKOM.Versioning.Core.Net.Api.IVersion clientVersion);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#parameters","title":"Parameters","text":"<p><code>repositoryConfigurationProvider</code> IRepositoryConfigurationProvider</p> <p></p> <p><code>repositoryFactory</code> HAKOM.Persistence.Core.Net.Api.IRepositoryFactory&lt;TRepository&gt;</p> <p></p> <p><code>authorizationService</code> IAuthorizationService</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p></p> <p><code>clientVersion</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#repositorystoreclientversion-property","title":"RepositoryStore.ClientVersion Property C#<pre><code>protected HAKOM.Versioning.Core.Net.Api.IVersion ClientVersion { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#property-value","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#repositorystoretrepositorytrepositoryinformationtryensurecompatibilitytrepository-cancellationtoken-method","title":"RepositoryStore&lt;TRepository,TRepositoryInformation&gt;.TryEnsureCompatibility(TRepository, CancellationToken) Method C#<pre><code>protected override System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryEnsureCompatibility(TRepository repository, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#parameters_1","title":"Parameters","text":"<p><code>repository</code> TRepository</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#repositorystoretrepositorytrepositoryinformationtryensureversioncompatibilityiversion-method","title":"RepositoryStore&lt;TRepository,TRepositoryInformation&gt;.TryEnsureVersionCompatibility(IVersion) Method C#<pre><code>protected virtual bool TryEnsureVersionCompatibility(HAKOM.Versioning.Core.Net.Api.IVersion repositoryVersion);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#parameters_2","title":"Parameters","text":"<p><code>repositoryVersion</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/RepositoryStoreOf2/#returns_1","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/","title":"HAKOM.Persistence.Core.Net.Api.Caching","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/#hakompersistencecorenetapicaching-namespace","title":"HAKOM.Persistence.Core.Net.Api.Caching Namespace","text":"Classes CacheKeyGenerator&lt;TCacheEntry&gt; Provides a base class for implementations of ICacheKeyGenerator&lt;TCacheEntry&gt;using one or more keys derived from an instance of the type. Interfaces ICache&lt;TCacheEntry&gt; Represents some form of caching that can be used to circumventslower storage media for retrieval of items of a specific type. ICacheKeyGenerator&lt;TCacheEntry&gt; Provides one or more unique keys identifying an item of type TCacheEntryfor use in caching. ILookupKeyCollection&lt;TCacheEntry&gt; Maintains a list of keys that can be used to look up a single entrywithin an ICache&lt;TCacheEntry&gt; and their mapping to a uniqueSystem.Guid."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/","title":"CacheKeyGenerator&lt;TCacheEntry&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Caching</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#cachekeygeneratortcacheentry-class","title":"CacheKeyGenerator&lt;TCacheEntry&gt; Class","text":"<p>Provides a base class for implementations of ICacheKeyGenerator&lt;TCacheEntry&gt; using one or more keys derived from an instance of the type.</p> C#<pre><code>public abstract class CacheKeyGenerator&lt;TCacheEntry&gt; :\nHAKOM.Persistence.Core.Net.Api.Caching.ICacheKeyGenerator&lt;TCacheEntry&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCacheEntry</code></p> <p>Inheritance System.Object \ud83e\udc52 CacheKeyGenerator <p>Implements HAKOM.Persistence.Core.Net.Api.Caching.ICacheKeyGenerator&lt;TCacheEntry&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#cachekeygeneratorkeyseparator-property","title":"CacheKeyGenerator.KeySeparator Property C#<pre><code>protected virtual char KeySeparator { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#property-value","title":"Property Value","text":"<p>System.Char</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#cachekeygeneratortcacheentrygetkeystcacheentry-method","title":"CacheKeyGenerator&lt;TCacheEntry&gt;.GetKeys(TCacheEntry) Method <p>Override this, returning one or more keys that identify the item. For example, if an item is to be identified by its \"id\" property as well as by its \"name\" property, this should return something like new[] {(\"id\", item.Id.ToString()),(\"name\", Item.Name.ToString())}</p> C#<pre><code>protected abstract System.Collections.Generic.IEnumerable&lt;(string KeyName,string KeyValue)&gt; GetKeys(TCacheEntry? item);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#parameters","title":"Parameters","text":"<p><code>item</code> TCacheEntry</p> <p>The item for which keys should be returned</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;&lt;System.String,System.String&gt;&gt; A collection of tuples containing a key which consists of its name and value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#cachekeygeneratortcacheentrygetuniquekeystring-string-method","title":"CacheKeyGenerator&lt;TCacheEntry&gt;.GetUniqueKey(string, string) Method <p>Returns a key based on - The given keyName - The given keyValue</p> C#<pre><code>public string GetUniqueKey(string keyName, string keyValue);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#parameters_1","title":"Parameters","text":"<p><code>keyName</code> System.String</p> <p>The name of the key.</p> <p></p> <p><code>keyValue</code> System.String</p> <p>The value of the key</p> <p>Implements GetUniqueKey(string, string)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#returns_1","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#cachekeygeneratortcacheentrygetuniquekeystcacheentry-method","title":"CacheKeyGenerator&lt;TCacheEntry&gt;.GetUniqueKeys(TCacheEntry) Method <p>Returns all keys that can be used to retrieve an item of type TCacheEntry.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;string&gt; GetUniqueKeys(TCacheEntry? item);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#parameters_2","title":"Parameters","text":"<p><code>item</code> TCacheEntry</p> <p>The item for which to get all keys.</p> <p>Implements GetUniqueKeys(TCacheEntry)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/CacheKeyGeneratorOf1/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt; A list of all the keys that can be used to retrieve the item from the cache.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/","title":"ICacheKeyGenerator&lt;TCacheEntry&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Caching</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#icachekeygeneratortcacheentry-interface","title":"ICacheKeyGenerator&lt;TCacheEntry&gt; Interface","text":"<p>Provides one or more unique keys identifying an item of type TCacheEntry for use in caching.</p> C#<pre><code>public interface ICacheKeyGenerator&lt;TCacheEntry&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCacheEntry</code></p> <p>The type of object for which keys should be provided.</p> <p>Derived \u21b3 CacheKeyGenerator&lt;TCacheEntry&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#icachekeygeneratortcacheentrygetuniquekeystring-string-method","title":"ICacheKeyGenerator&lt;TCacheEntry&gt;.GetUniqueKey(string, string) Method","text":"<p>Returns the key that can be used to retrieve an item based on the given parameters keyName and keyValue.</p> C#<pre><code>string GetUniqueKey(string keyName, string keyValue);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#parameters","title":"Parameters","text":"<p><code>keyName</code> System.String</p> <p>The name of the key, for example \"id\" if the item is identified by its \"id\" property.</p> <p></p> <p><code>keyValue</code> System.String</p> <p>The value of the key for that item.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#returns","title":"Returns","text":"<p>System.String The string identifying the item for retrieval from the cache.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#icachekeygeneratortcacheentrygetuniquekeystcacheentry-method","title":"ICacheKeyGenerator&lt;TCacheEntry&gt;.GetUniqueKeys(TCacheEntry) Method","text":"<p>Returns all keys that can be used to retrieve the item from the cache later on. For example, an item may be identified in the cache by  its \"id\" property as well as by its \"name\". In this case, GetUniqueKeys(TCacheEntry) should return two unique strings: - one that can be used to find the item by its \"id\", - one that can be used to find the item by its \"name\".</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;string&gt; GetUniqueKeys(TCacheEntry? item);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#parameters_1","title":"Parameters","text":"<p><code>item</code> TCacheEntry</p> <p>The item for which keys should be returned.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheKeyGeneratorOf1/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt; A collection of keys used to identify that specific item in the cache.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/","title":"ICache&lt;TCacheEntry&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Caching</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentry-interface","title":"ICache&lt;TCacheEntry&gt; Interface","text":"<p>Represents some form of caching that can be used to circumvent slower storage media for retrieval of items of a specific type.</p> C#<pre><code>public interface ICache&lt;TCacheEntry&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCacheEntry</code></p> <p>The type of objects cached by this instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrydeletestring-string-method","title":"ICache&lt;TCacheEntry&gt;.Delete(string, string) Method","text":"<p>Clears any cached copy identified by the given combination of keyName and keyValue. If none is found, the cache remains untouched.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string keyName, string keyValue);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#parameters","title":"Parameters","text":"<p><code>keyName</code> System.String</p> <p>The name which identifies the type of key used (i.e. \"name\", \"id\", etc).</p> <p></p> <p><code>keyValue</code> System.String</p> <p>The value of the key identifying the item.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once the item has been removed from the cache.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrydeletetcacheentry-method","title":"ICache&lt;TCacheEntry&gt;.Delete(TCacheEntry) Method","text":"<p>Deletes all cached copies of the given item from the cache.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TCacheEntry item);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#parameters_1","title":"Parameters","text":"<p><code>item</code> TCacheEntry</p> <p>The item to remove from the cache.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the item has been removed from the cache.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrydeleteall-method","title":"ICache&lt;TCacheEntry&gt;.DeleteAll() Method","text":"<p>Deletes all items of type TCacheEntry from the cache.</p> C#<pre><code>System.Threading.Tasks.Task DeleteAll();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when all items of type  TCacheEntry have been cleared from the cache.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrygetorcreatestring-string-funcmemorycacheentryoptionstasktcacheentry-memorycacheentryoptions-method","title":"ICache&lt;TCacheEntry&gt;.GetOrCreate(string, string, Func&lt;MemoryCacheEntryOptions,Task&lt;TCacheEntry&gt;&gt;, MemoryCacheEntryOptions) Method","text":"<p>Attempts to retrieve the item from the cache which is identified by the given combination of keyName and keyValue. If none is found, it calls the given factory which should access the actual store for retrieval and adds that item into the cache.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TCacheEntry?&gt; GetOrCreate(string keyName, string keyValue, System.Func&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.Threading.Tasks.Task&lt;TCacheEntry&gt;&gt; factory, Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions? options=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#parameters_2","title":"Parameters","text":"<p><code>keyName</code> System.String</p> <p>The name which identifies the type of key used (i.e. \"name\", \"id\", etc).</p> <p></p> <p><code>keyValue</code> System.String</p> <p>The value of the key identifying the item.</p> <p></p> <p><code>factory</code> System.Func&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.Threading.Tasks.Task&lt;TCacheEntry&gt;&gt;</p> <p>A function used for retrieval of the item in case no cached copy is available. The function receives the default Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions for the item and may adjust these if necessary.</p> <p></p> <p><code>options</code> Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</p> <p>Optional Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions which will be used with the factory, if there is no cached copy. If this is left empty, the new cache entry will never expire and will have to be manually removed with one of the Delete methods.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TCacheEntry&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once the item has been retrieved either from the cache or the underlying storage media.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrysetscopestring-method","title":"ICache&lt;TCacheEntry&gt;.SetScope(string) Method","text":"<p>Sets the scope of the cache. Unless set, all instances of ICache&lt;TCacheEntry&gt; share the same data. Once a scope is set, items are only shared across instances which have their scope set to the same System.String value.</p> C#<pre><code>void SetScope(string scope);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#parameters_3","title":"Parameters","text":"<p><code>scope</code> System.String</p> <p>A string naming the scope for the cache to use.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#icachetcacheentrytrygetorcreatestring-string-funcmemorycacheentryoptionstaskresulttcacheentry-memorycacheentryoptions-method","title":"ICache&lt;TCacheEntry&gt;.TryGetOrCreate(string, string, Func&lt;MemoryCacheEntryOptions,Task&lt;Result&lt;TCacheEntry&gt;&gt;&gt;, MemoryCacheEntryOptions) Method","text":"<p>Attempts to retrieve the item from the cache which is identified by the given combination of keyName and keyValue. If none is found, it calls the given factory which should access the actual store for retrieval and adds that item into the cache.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCacheEntry?&gt;&gt; TryGetOrCreate(string keyName, string keyValue, System.Func&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCacheEntry&gt;&gt;&gt; factory, Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions? options=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#parameters_4","title":"Parameters","text":"<p><code>keyName</code> System.String</p> <p>The name which identifies the type of key used (i.e. \"name\", \"id\", etc).</p> <p></p> <p><code>keyValue</code> System.String</p> <p>The value of the key identifying the item.</p> <p></p> <p><code>factory</code> System.Func&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCacheEntry&gt;&gt;&gt;</p> <p>A function used for retrieval of the item in case no cached copy is available. The function receives the default Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions for the item and may adjust these if necessary.</p> <p></p> <p><code>options</code> Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions</p> <p>Optional Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions which will be used with the factory, if there is no cached copy. If this is left empty, the new cache entry will never expire and will have to be manually removed with one of the Delete methods.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ICacheOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCacheEntry&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; the Result&lt;TValue&gt; holds the retrieved cashed item.Completes once the item has been retrieved either from the cache or the underlying storage media.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/","title":"ILookupKeyCollection&lt;TCacheEntry&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Caching</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentry-interface","title":"ILookupKeyCollection&lt;TCacheEntry&gt; Interface","text":"<p>Maintains a list of keys that can be used to look up a single entry within an ICache&lt;TCacheEntry&gt; and their mapping to a unique System.Guid.</p> C#<pre><code>public interface ILookupKeyCollection&lt;TCacheEntry&gt; :\nSystem.Collections.Generic.IEnumerable&lt;string&gt;,\nSystem.Collections.IEnumerable\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCacheEntry</code></p> <p>The type of entries this collection holds keys for.</p> <p>Implements System.Collections.Generic.IEnumerable&lt;System.String&gt;, System.Collections.IEnumerable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentryaddguid-ienumerablestring-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.Add(Guid, IEnumerable&lt;string&gt;) Method","text":"<p>Adds the given lookupKeys too the collection, mapping them to the given id.</p> C#<pre><code>void Add(System.Guid id, System.Collections.Generic.IEnumerable&lt;string&gt; lookupKeys);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters","title":"Parameters","text":"<p><code>id</code> System.Guid</p> <p>The System.Guid to map the given lookupKeys to.</p> <p></p> <p><code>lookupKeys</code> System.Collections.Generic.IEnumerable&lt;System.String&gt;</p> <p>The keys to add to the collection.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentryremoveienumerablestring-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.Remove(IEnumerable&lt;string&gt;) Method","text":"<p>Attempts to remove all the given keys from the collection.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Guid&gt; Remove(System.Collections.Generic.IEnumerable&lt;string&gt; lookupKeys);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters_1","title":"Parameters","text":"<p><code>lookupKeys</code> System.Collections.Generic.IEnumerable&lt;System.String&gt;</p> <p>The key to remove.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Guid&gt; An System.Collections.Generic.IEnumerable&lt;&gt; containing all the ids mapped to keys removed. Note: the enumeration of the ids returned does not necessarily correspond to the enumeration of the given lookupKeys.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentryremoveall-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.RemoveAll() Method","text":"<p>Removes all the keys from the collection returning all removed ids.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Guid&gt; RemoveAll();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Guid&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentryremoveallfuncstringbool-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.RemoveAll(Func&lt;string,bool&gt;) Method","text":"<p>Removes all keys for which selector returns true.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Guid&gt; RemoveAll(System.Func&lt;string,bool&gt; selector);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters_2","title":"Parameters","text":"<p><code>selector</code> System.Func&lt;System.String,System.Boolean&gt;</p> <p>Function to determine if a key should be removed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Guid&gt; An System.Collections.Generic.IEnumerable&lt;&gt; containing all the ids mapped to keys removed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentryremoveallguid-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.RemoveAll(Guid) Method","text":"<p>Removes all keys mapped to the given id.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;string&gt; RemoveAll(System.Guid id);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters_3","title":"Parameters","text":"<p><code>id</code> System.Guid</p> <p>The id for which to remove all keys.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt; An System.Collections.Generic.IEnumerable&lt;&gt; of all the keys removed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentrytrygetidstring-guid-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.TryGetId(string, Guid) Method","text":"<p>Returns true if the collection contains a key matching the given lookupKey, setting id to the id mapped internally to that key.</p> C#<pre><code>bool TryGetId(string lookupKey, out System.Guid id);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters_4","title":"Parameters","text":"<p><code>lookupKey</code> System.String</p> <p>The key for which to get the id.</p> <p></p> <p><code>id</code> System.Guid</p> <p>The id mapped to the given lookupKey             (defaults to an empty System.Guid if none is found).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns_4","title":"Returns","text":"<p>System.Boolean True if an id for the given lookupKey has been found.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#ilookupkeycollectiontcacheentrytryremovestring-guid-method","title":"ILookupKeyCollection&lt;TCacheEntry&gt;.TryRemove(string, Guid) Method","text":"<p>Attempts to remove the given key from the collection.</p> C#<pre><code>bool TryRemove(string lookupKey, out System.Guid id);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#parameters_5","title":"Parameters","text":"<p><code>lookupKey</code> System.String</p> <p>The key to remove.</p> <p></p> <p><code>id</code> System.Guid</p> <p>If successul, contains the the id the key was mapped to. (defaults to an empty System.Guid if there was no such lookupKey in the collection)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Caching/ILookupKeyCollectionOf1/#returns_5","title":"Returns","text":"<p>System.Boolean True if removal was successful, false otherwise</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/","title":"HAKOM.Persistence.Core.Net.Api.Configuration","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/#hakompersistencecorenetapiconfiguration-namespace","title":"HAKOM.Persistence.Core.Net.Api.Configuration Namespace","text":"Interfaces IRepositoryConfiguration IRepositoryConfigurationProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/","title":"IRepositoryConfiguration","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Configuration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#irepositoryconfiguration-interface","title":"IRepositoryConfiguration Interface","text":"C#<pre><code>public interface IRepositoryConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#irepositoryconfigurationname-property","title":"IRepositoryConfiguration.Name Property","text":"<p>Configured name of repository</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#irepositoryconfigurationprovider-property","title":"IRepositoryConfiguration.Provider Property","text":"C#<pre><code>HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration Provider { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfiguration/#property-value_1","title":"Property Value","text":"<p>IStorageProviderConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/","title":"IRepositoryConfigurationProvider","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Configuration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#irepositoryconfigurationprovider-interface","title":"IRepositoryConfigurationProvider Interface","text":"C#<pre><code>public interface IRepositoryConfigurationProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#irepositoryconfigurationprovidergetstring-cancellationtoken-method","title":"IRepositoryConfigurationProvider.Get(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration&gt; Get(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IRepositoryConfiguration&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#irepositoryconfigurationprovidergetallcancellationtoken-method","title":"IRepositoryConfigurationProvider.GetAll(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration&gt;&gt; GetAll(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,IRepositoryConfiguration&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#irepositoryconfigurationprovidertrygetstring-cancellationtoken-method","title":"IRepositoryConfigurationProvider.TryGet(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration&gt;&gt; TryGet(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#parameters_2","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IRepositoryConfiguration&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#irepositoryconfigurationprovidertrygetallcancellationtoken-method","title":"IRepositoryConfigurationProvider.TryGetAll(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.Persistence.Core.Net.Api.Configuration.IRepositoryConfiguration&gt;&gt;&gt; TryGetAll(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/IRepositoryConfigurationProvider/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,IRepositoryConfiguration&gt;&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/","title":"HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/#hakompersistencecorenetapiconfigurationexceptions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions Namespace","text":"Classes ConfigurationRepositoryNameMissingException The exception that is thrown if the persistence repository section of the configuration has no 'Name' attribute. IncompleteRepositoryConfigurationException Thrown when the repository configuration does not contain a provider and name setting. RepositoryConfigurationSettingMissingException The exception that is thrown if the persistence repository section of the configuration has one or more missing settings."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/","title":"ConfigurationRepositoryNameMissingException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/#configurationrepositorynamemissingexception-class","title":"ConfigurationRepositoryNameMissingException Class","text":"<p>The exception that is thrown if the persistence repository section of the configuration has no 'Name' attribute.</p> C#<pre><code>public sealed class ConfigurationRepositoryNameMissingException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConfigurationRepositoryNameMissingException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/#remarks","title":"Remarks","text":"<p>When using the configuration for the provision of repository information, every repository tag has to have a 'Name' attribute:  </p> <p>This exception is identified by error code HK12039.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/#configurationrepositorynamemissingexceptionequivalenthttpstatuscode-property","title":"ConfigurationRepositoryNameMissingException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/ConfigurationRepositoryNameMissingException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/","title":"IncompleteRepositoryConfigurationException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#incompleterepositoryconfigurationexception-class","title":"IncompleteRepositoryConfigurationException Class","text":"<p>Thrown when the repository configuration does not contain a provider and name setting.</p> C#<pre><code>public sealed class IncompleteRepositoryConfigurationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IncompleteRepositoryConfigurationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#remarks","title":"Remarks","text":"<p>When using the StorageProvider or the IRepositoryConfiguration the configuration must at least contain information about the provider and the name.  </p> <p>This exception is identified by error code HK12013.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#incompleterepositoryconfigurationexceptionequivalenthttpstatuscode-property","title":"IncompleteRepositoryConfigurationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#incompleterepositoryconfigurationexceptionmissingvalue-property","title":"IncompleteRepositoryConfigurationException.MissingValue Property","text":"C#<pre><code>public string MissingValue { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/IncompleteRepositoryConfigurationException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/","title":"RepositoryConfigurationSettingMissingException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Configuration.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#repositoryconfigurationsettingmissingexception-class","title":"RepositoryConfigurationSettingMissingException Class","text":"<p>The exception that is thrown if the persistence repository section of the configuration has one or more missing settings.</p> C#<pre><code>public sealed class RepositoryConfigurationSettingMissingException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RepositoryConfigurationSettingMissingException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#remarks","title":"Remarks","text":"<p>When using the configuration for the provision of repository information, at least the following setting must be provided:  - Type \u2014 Persistence:Repositories:Repository:Provider:Type  </p> <p>This exception is identified by error code HK12015.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#repositoryconfigurationsettingmissingexceptionequivalenthttpstatuscode-property","title":"RepositoryConfigurationSettingMissingException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#repositoryconfigurationsettingmissingexceptionmissingsetting-property","title":"RepositoryConfigurationSettingMissingException.MissingSetting Property","text":"C#<pre><code>public string MissingSetting { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Configuration/Exceptions/RepositoryConfigurationSettingMissingException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/","title":"HAKOM.Persistence.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/#hakompersistencecorenetapiexceptions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Exceptions Namespace","text":"Classes CouldNotInitializeRepositoryException Thrown when a configured repository could not be initialized. RepositoryNotFoundException Thrown when the specified repository name is not found in the configuration. RepositoryUnsupportedException StorageProviderMismatchException Thrown when the type of the specified storage provider does not correspond to the type of the IStore&lt;TStorageProvider&gt;."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/","title":"CouldNotInitializeRepositoryException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/#couldnotinitializerepositoryexception-class","title":"CouldNotInitializeRepositoryException Class","text":"<p>Thrown when a configured repository could not be initialized.</p> C#<pre><code>public sealed class CouldNotInitializeRepositoryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotInitializeRepositoryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/#remarks","title":"Remarks","text":"<p>This may be due to incorrect configuration or an issue with the underlying driver/libraries used to access that type of repository.  </p> <p>Make sure the configuration for that repository is correct and that the type of repository is supported.  </p> <p>This error is identified by code HK12031.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/#couldnotinitializerepositoryexceptionequivalenthttpstatuscode-property","title":"CouldNotInitializeRepositoryException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/CouldNotInitializeRepositoryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/","title":"RepositoryNotFoundException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#repositorynotfoundexception-class","title":"RepositoryNotFoundException Class","text":"<p>Thrown when the specified repository name is not found in the configuration.</p> C#<pre><code>public sealed class RepositoryNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RepositoryNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#remarks","title":"Remarks","text":"<p>When using the Load(string, CancellationToken) one of the HAKOM.Persistence.Repositories.Repository configuration entries must be present where the \"Name\" attribute matches the name of the repository to be loaded.  When using the IRepositoryConfigurationProvider the dictionary's key must match the \"Name\" attribute of one of the HAKOM.Persistence.Repositories.Repository configuration entries.  </p> <p>This exception is identified by error code HK12008.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#repositorynotfoundexceptionequivalenthttpstatuscode-property","title":"RepositoryNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#repositorynotfoundexceptionrepositoryname-property","title":"RepositoryNotFoundException.RepositoryName Property","text":"C#<pre><code>public string RepositoryName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryNotFoundException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryUnsupportedException/","title":"RepositoryUnsupportedException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryUnsupportedException/#repositoryunsupportedexception-class","title":"RepositoryUnsupportedException Class","text":"C#<pre><code>public sealed class RepositoryUnsupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RepositoryUnsupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryUnsupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryUnsupportedException/#repositoryunsupportedexceptionequivalenthttpstatuscode-property","title":"RepositoryUnsupportedException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/RepositoryUnsupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/StorageProviderMismatchException/","title":"StorageProviderMismatchException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/StorageProviderMismatchException/#storageprovidermismatchexception-class","title":"StorageProviderMismatchException Class","text":"<p>Thrown when the type of the specified storage provider does not correspond to the type of the IStore&lt;TStorageProvider&gt;.</p> C#<pre><code>public sealed class StorageProviderMismatchException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 StorageProviderMismatchException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/StorageProviderMismatchException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/StorageProviderMismatchException/#storageprovidermismatchexceptionequivalenthttpstatuscode-property","title":"StorageProviderMismatchException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Exceptions/StorageProviderMismatchException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/","title":"HAKOM.Persistence.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/#hakompersistencecorenetapiextensions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsenablememorycachethis-icontainer-method","title":"ContainerExtensions.EnableMemoryCache(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer EnableMemoryCache(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsuseconfiguredrepositoriesthis-icontainer-method","title":"ContainerExtensions.UseConfiguredRepositories(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguredRepositories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsusememorycachetcacheentrytcachekeygeneratorthis-icontainer-method","title":"ContainerExtensions.UseMemoryCache&lt;TCacheEntry,TCacheKeyGenerator&gt;(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseMemoryCache&lt;TCacheEntry,TCacheKeyGenerator&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TCacheKeyGenerator : class, HAKOM.Persistence.Core.Net.Api.Caching.ICacheKeyGenerator&lt;TCacheEntry&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TCacheEntry</code></p> <p></p> <p><code>TCacheKeyGenerator</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsuserepositoryinformationcachetrepositoryinformationthis-icontainer-method","title":"ContainerExtensions.UseRepositoryInformationCache&lt;TRepositoryInformation&gt;(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRepositoryInformationCache&lt;TRepositoryInformation&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TRepositoryInformation</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsuserepositoryinformationstorefactorythis-icontainer-method","title":"ContainerExtensions.UseRepositoryInformationStoreFactory(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRepositoryInformationStoreFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsuserepositoryversionproviderthis-icontainer-method","title":"ContainerExtensions.UseRepositoryVersionProvider(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRepositoryVersionProvider(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsuserepositoryversionststorageprovidertstorethis-icontainer-method","title":"ContainerExtensions.UseRepositoryVersions&lt;TStorageProvider,TStore&gt;(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRepositoryVersions&lt;TStorageProvider,TStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TStore : class, HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p></p> <p><code>TStore</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_6","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_6","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsusestorageinformationfactorythis-icontainer-method","title":"ContainerExtensions.UseStorageInformationFactory(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseStorageInformationFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_7","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_7","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsusestorageprovidertstorageproviderthis-icontainer-string-method","title":"ContainerExtensions.UseStorageProvider&lt;TStorageProvider&gt;(this IContainer, string[]) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseStorageProvider&lt;TStorageProvider&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, params string[] providerNames)\n    where TStorageProvider : class, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TStorageProvider</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_8","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>providerNames</code> System.String[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_8","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#containerextensionsusestorageproviderfactorythis-icontainer-method","title":"ContainerExtensions.UseStorageProviderFactory(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseStorageProviderFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#parameters_9","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ContainerExtensions/#returns_9","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsrepository_resource_type-field","title":"ResourceFactoryExtensions.REPOSITORY_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of repository resources.</p> C#<pre><code>public const string REPOSITORY_RESOURCE_TYPE = Repository;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsrepositoryresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.RepositoryResource(this IResourceFactory, string) Method","text":"<p>Creates a new repository IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource RepositoryResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to REPOSITORY_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsrepositoryresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.RepositoryResource(this IResourceFactory) Method","text":"<p>Creates a new repository IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource RepositoryResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to REPOSITORY_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/","title":"HAKOM.Persistence.Core.Net.Api.Ordering","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/#hakompersistencecorenetapiordering-namespace","title":"HAKOM.Persistence.Core.Net.Api.Ordering Namespace","text":"Structs Order&lt;TResult&gt; Defines a rule for ordering items of TResult when querying them from a store. Enums Direction"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Direction/","title":"Direction","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Ordering</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Direction/#direction-enum","title":"Direction Enum","text":"C#<pre><code>public enum Direction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Direction/#fields","title":"Fields","text":"<p><code>Ascending</code> 1</p> <p></p> <p><code>Descending</code> 2</p> <p></p> <p><code>Unspecified</code> 0</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/","title":"Order&lt;TResult&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Ordering</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresult-struct","title":"Order&lt;TResult&gt; Struct","text":"<p>Defines a rule for ordering items of TResult when querying them from a store.</p> C#<pre><code>public readonly struct Order&lt;TResult&gt; :\nSystem.IEquatable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data to be ordered.</p> <p>Implements System.IEquatable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#orderdirection-property","title":"Order.Direction Property <p>The direction (ascending or descending) in which the items should be ordered.</p> C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Ordering.Direction Direction { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#property-value","title":"Property Value","text":"<p>Direction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#remarks","title":"Remarks","text":"<p>If set to Unspecified, the order may depend on the store implementation.  </p> <p>For example, if the store is backed by a relational database, the order may depend on existing indexes, some of which may even be generated by the database automatically.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultascending-method","title":"Order&lt;TResult&gt;.Ascending() Method <p>Creates an instance of Order&lt;TResult&gt; with its Direction property set to Ascending.</p> C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; Ascending();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns","title":"Returns","text":"<p>HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; The new Order&lt;TResult&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultbytpropertyexpressionfunctresulttproperty-direction-method","title":"Order&lt;TResult&gt;.By&lt;TProperty&gt;(Expression&lt;Func&lt;TResult,TProperty&gt;&gt;, Direction) Method <p>Creates a new Order&lt;TResult&gt; based on the given expression.</p> C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; By&lt;TProperty&gt;(System.Linq.Expressions.Expression&lt;System.Func&lt;TResult,TProperty&gt;&gt; expression, HAKOM.Persistence.Core.Net.Api.Ordering.Direction direction=HAKOM.Persistence.Core.Net.Api.Ordering.Direction.Unspecified);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TProperty</code></p> <p>The type of the property that</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#parameters","title":"Parameters","text":"<p><code>expression</code> System.Linq.Expressions.Expression&lt;System.Func&lt;TResult,TProperty&gt;&gt;</p> <p></p> <p><code>direction</code> Direction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_1","title":"Returns","text":"<p>HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; A new Order&lt;TResult&gt; based on the given expression and direction.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#exceptions","title":"Exceptions","text":"<p>InvalidOrderExpressionException Thrown when the expression is anything other than a simple property access expression on the delegate parameter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#remarks_1","title":"Remarks","text":"<p>The expression must be a simple property accessing expression.  </p> <p>The following code shows examples of expressions that are valid and examples that are invalid.  </p> Creating orderings<pre><code>Order&lt;SomeType&gt; order;  \n\n// The following are OK:  \norder = new().By(item=&gt;item.MyProperty);  \norder = new().By(item=&gt;item.MyOtherProperty.MyProperty);  \n\n// The following are NOT OK:  \norder = new().By(item=&gt;item.MyMethod());  \norder = new().By(item=&gt;item.MyOtherProperty.MyMethod());  \norder = new().By(item=&gt;32);  \norder = new().By(item=&gt;\"foo\");  \norder = new().By(_=&gt;StaticType.StaticProperty);  \norder = new().By(_=&gt;StaticType.StaticMethod());  \n\npublic class MyType {  \n    public MyProperty {get;}  \n    public string MyMethod() =&gt; \"value\";  \n    public MyType MyOtherProperty {get;}  \n}  \n\npublic static class StaticType {  \n    public static StaticProperty {get;}  \n    public static string StaticMethod() =&gt; \"value\";  \n}  \n</code></pre> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultdescending-method","title":"Order&lt;TResult&gt;.Descending() Method <p>Creates an instance of Order&lt;TResult&gt; with its Direction property set to Descending.</p> C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; Descending();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_2","title":"Returns","text":"<p>HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; The new Order&lt;TResult&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultequalsordertresult-method","title":"Order&lt;TResult&gt;.Equals(Order&lt;TResult&gt;) Method C#<pre><code>public bool Equals(HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; other);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#parameters_1","title":"Parameters","text":"<p><code>other</code> HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_3","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultequalsobject-method","title":"Order&lt;TResult&gt;.Equals(object) Method C#<pre><code>public override bool Equals(object? obj);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_4","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultgetexpression-method","title":"Order&lt;TResult&gt;.GetExpression() Method <p>Returns a string representation of the expression that should be used to order the items.</p> C#<pre><code>public string GetExpression();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_5","title":"Returns","text":"<p>System.String A string representation of the expression.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#exceptions_1","title":"Exceptions","text":"<p>InvalidOrderExpressionException Thrown if the expression used to create this instance is invalid.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#remarks_2","title":"Remarks","text":"<p>Example:  </p> Getting the expression string<pre><code>Order&lt;SomeType&gt; order;  \n\norder = new().By(item=&gt;item.MyProperty);  \nvar expression = order.GetExpression();  \nConsole.WriteLine(expression);// MyProperty  \n\norder = new().By(item=&gt;item.MyOtherProperty.MyProperty);  \nvar expression = order.GetExpression();  \nConsole.WriteLine(expression);// MyOtherProperty.MyProperty  \n\npublic class MyType {  \n    public MyProperty {get;}  \n    public string MyMethod() =&gt; \"value\";  \n    public MyType MyOtherProperty {get;}  \n}  \n</code></pre> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresultgethashcode-method","title":"Order&lt;TResult&gt;.GetHashCode() Method C#<pre><code>public override int GetHashCode();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_6","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresulttostring-method","title":"Order&lt;TResult&gt;.ToString() Method C#<pre><code>public override string ToString();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_7","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#ordertresulttrygetexpression-method","title":"Order&lt;TResult&gt;.TryGetExpression() Method <p>Attempts to return a string representation of the expression that should be used to order the items.</p> C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;string&gt; TryGetExpression();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_8","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.String&gt; A result containing the string representation of the expression to order by.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#remarks_3","title":"Remarks","text":"<p>Example:  </p> Getting the expression string<pre><code>Order&lt;SomeType&gt; order;  \n\norder = new().By(item=&gt;item.MyProperty);  \nvar expression = order.TryGetExpression().GetValueOrThrow();  \nConsole.WriteLine(expression);// MyProperty  \n\norder = new().By(item=&gt;item.MyOtherProperty.MyProperty);  \nvar expression = order.TryGetExpression().GetValueOrThrow();  \nConsole.WriteLine(expression);// MyOtherProperty.MyProperty  \n\npublic class MyType {  \n    public MyProperty {get;}  \n    public string MyMethod() =&gt; \"value\";  \n    public MyType MyOtherProperty {get;}  \n}  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#orderoperator-order-order-operator","title":"Order.operator ==(Order, Order) Operator C#<pre><code>public static bool operator ==(HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; left, HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#parameters_3","title":"Parameters","text":"<p><code>left</code> HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;</p> <p></p> <p><code>right</code> HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_9","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#orderoperator-order-order-operator_1","title":"Order.operator !=(Order, Order) Operator C#<pre><code>public static bool operator !=(HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; left, HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#parameters_4","title":"Parameters","text":"<p><code>left</code> HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;</p> <p></p> <p><code>right</code> HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/OrderOf1/#returns_10","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/","title":"HAKOM.Persistence.Core.Net.Api.Ordering.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/#hakompersistencecorenetapiorderingexceptions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Ordering.Exceptions Namespace","text":"Classes InvalidOrderExpressionException This exception is thrown whenever an attempt is made to create an ordering (Order&lt;TResult&gt;) based on an expression that is not a simple property-accessing expression."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/","title":"InvalidOrderExpressionException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Ordering.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/#invalidorderexpressionexception-class","title":"InvalidOrderExpressionException Class","text":"<p>This exception is thrown whenever an attempt is made to create an ordering (Order&lt;TResult&gt;) based on an expression that is not a simple property-accessing expression.</p> C#<pre><code>public sealed class InvalidOrderExpressionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidOrderExpressionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/#remarks","title":"Remarks","text":"<p>The following is not a valid expression to order by:  </p> <p>C#<pre><code>var ordering = new Order&lt;MyType&gt;().By(st=&gt;st.SomeMethod());  \n```&lt;b&gt;Neither&lt;/b&gt; is this:  \n\n```csharp  \nvar ordering = new Order&lt;MyType&gt;().By(st=&gt;StaticType.StaticMethod());  \n```&lt;b&gt;Nor&lt;/b&gt; this:  \n\n```csharp  \nvar ordering = new Order&lt;MyType&gt;().By(_=&gt;33);  \n```&lt;b&gt;Instead&lt;/b&gt;, orderings should only be created by specifying property accessors. Example:  \n\n```csharp  \nvar ordering = new Order&lt;MyType&gt;().By(mt=&gt;mt.MyProperty);  \n</code></pre> Property access must also be on the type for which the ordering occurs, so this is invalid:  </p> <p>C#<pre><code>var ordering = new Order&lt;MyType&gt;().By(_=&gt;StaticType.StaticProperty);  \n</code></pre> Accessing nested properties is okay:  </p> <p>C#<pre><code>var ordering = new Order&lt;MyType&gt;().By(mt=&gt;mt.MyProperty.AnotherProperty);  \n</code></pre> but please be aware that support for ordering items in a store this way may be limited.  </p> <p>This exception can be identified by code: HK12033.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/#invalidorderexpressionexceptionequivalenthttpstatuscode-property","title":"InvalidOrderExpressionException.EquivalentHttpStatusCode Property","text":"<p>When this occurs during a request against a web service, it is most likely due to the request containing an ordering expression that is not supported and should thus return an error response with HTTP status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Ordering/Exceptions/InvalidOrderExpressionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/","title":"HAKOM.Persistence.Core.Net.Api.Paging","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/#hakompersistencecorenetapipaging-namespace","title":"HAKOM.Persistence.Core.Net.Api.Paging Namespace","text":"Structs Range&lt;TResult&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/","title":"Range&lt;TResult&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Paging</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresult-struct","title":"Range&lt;TResult&gt; Struct","text":"C#<pre><code>public readonly struct Range&lt;TResult&gt; :\nSystem.IEquatable&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>Implements System.IEquatable&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangeend-property","title":"Range.End Property C#<pre><code>public System.Nullable&lt;int&gt; End { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#property-value","title":"Property Value","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangestart-property","title":"Range.Start Property C#<pre><code>public int Start { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#property-value_1","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresultendingatint-method","title":"Range&lt;TResult&gt;.EndingAt(int) Method C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; EndingAt(int end);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters","title":"Parameters","text":"<p><code>end</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns","title":"Returns","text":"<p>HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresultequalsrangetresult-method","title":"Range&lt;TResult&gt;.Equals(Range&lt;TResult&gt;) Method C#<pre><code>public bool Equals(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; other);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_1","title":"Parameters","text":"<p><code>other</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresultequalsobject-method","title":"Range&lt;TResult&gt;.Equals(object) Method C#<pre><code>public override bool Equals(object? obj);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_2","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresultgethashcode-method","title":"Range&lt;TResult&gt;.GetHashCode() Method C#<pre><code>public override int GetHashCode();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_3","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresultstartingatint-method","title":"Range&lt;TResult&gt;.StartingAt(int) Method C#<pre><code>public HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; StartingAt(int start);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_3","title":"Parameters","text":"<p><code>start</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_4","title":"Returns","text":"<p>HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresulttooffsetandlimit-method","title":"Range&lt;TResult&gt;.ToOffsetAndLimit() Method C#<pre><code>public (int,System.Nullable&lt;int&gt;) ToOffsetAndLimit();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_5","title":"Returns","text":"<p>&lt;System.Int32,System.Nullable&lt;System.Int32&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresulttryendingatint-method","title":"Range&lt;TResult&gt;.TryEndingAt(int) Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt; TryEndingAt(int end);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_4","title":"Parameters","text":"<p><code>end</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_6","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangetresulttrystartingatint-method","title":"Range&lt;TResult&gt;.TryStartingAt(int) Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt; TryStartingAt(int start);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_5","title":"Parameters","text":"<p><code>start</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_7","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangeoperator-range-range-operator","title":"Range.operator ==(Range, Range) Operator C#<pre><code>public static bool operator ==(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; left, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_6","title":"Parameters","text":"<p><code>left</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p> <p></p> <p><code>right</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_8","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#rangeoperator-range-range-operator_1","title":"Range.operator !=(Range, Range) Operator C#<pre><code>public static bool operator !=(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; left, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#parameters_7","title":"Parameters","text":"<p><code>left</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p> <p></p> <p><code>right</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Paging/RangeOf1/#returns_9","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/","title":"HAKOM.Persistence.Core.Net.Api.References","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/#hakompersistencecorenetapireferences-namespace","title":"HAKOM.Persistence.Core.Net.Api.References Namespace","text":"Interfaces IReference Represents a reference to a stored object. IReference&lt;TIdentifier,TReferred&gt; Represents a reference to a stored object. Its data may be retrieved from the store at any time by calling the Resolve(CancellationToken) method. IReference&lt;TReferred&gt; Represents a reference to a stored object. Its data may be retrieved from the store at any time by calling the Resolve(CancellationToken) method. IResolvedReference&lt;TReferred&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReference/","title":"IReference","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReference/#ireference-interface","title":"IReference Interface","text":"<p>Represents a reference to a stored object.</p> C#<pre><code>public interface IReference\n</code></pre> <p>Derived \u21b3 IReference&lt;TIdentifier,TReferred&gt; \u21b3 IReference&lt;TReferred&gt; \u21b3 IResolvedReference&lt;TReferred&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReference/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReference/#ireferencestorageinformation-property","title":"IReference.StorageInformation Property","text":"C#<pre><code>HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation StorageInformation { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReference/#property-value","title":"Property Value","text":"<p>IStorageInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/","title":"IReference&lt;TReferred&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#ireferencetreferred-interface","title":"IReference&lt;TReferred&gt; Interface","text":"<p>Represents a reference to a stored object. Its data may be retrieved from the store at any time by calling the Resolve(CancellationToken) method.</p> C#<pre><code>public interface IReference&lt;TReferred&gt; :\nHAKOM.Persistence.Core.Net.Api.References.IReference\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TReferred</code></p> <p>The type of data this reference points to.</p> <p>Derived \u21b3 IReference&lt;TIdentifier,TReferred&gt; \u21b3 IResolvedReference&lt;TReferred&gt;</p> <p>Implements IReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#ireferencetreferredresolvecancellationtoken-method","title":"IReference&lt;TReferred&gt;.Resolve(CancellationToken) Method","text":"<p>Resolves the reference and retrieves the data from the store.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.References.IResolvedReference&lt;TReferred&gt;&gt; Resolve(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.References.IResolvedReference&lt;TReferred&gt;&gt; Returns the resolved reference (data from the store of type TReferred).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#ireferencetreferredtryresolvecancellationtoken-method","title":"IReference&lt;TReferred&gt;.TryResolve(CancellationToken) Method","text":"<p>Resolves the reference and retrieves the data from the store.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.References.IResolvedReference&lt;TReferred&gt;&gt;&gt; TryResolve(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.References.IResolvedReference&lt;TReferred&gt;&gt;&gt; Returns a System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the resolved reference (data from the store of type TReferred).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/","title":"IReference&lt;TIdentifier,TReferred&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/#ireferencetidentifiertreferred-interface","title":"IReference&lt;TIdentifier,TReferred&gt; Interface","text":"<p>Represents a reference to a stored object. Its data may be retrieved from the store at any time by calling the Resolve(CancellationToken) method.</p> C#<pre><code>public interface IReference&lt;TIdentifier,TReferred&gt; :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TReferred&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the unique identifier used to retrieve the objects data from the store.</p> <p></p> <p><code>TReferred</code></p> <p>The type of data this reference points to.</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TReferred&gt;, IReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/#ireferenceidentifier-property","title":"IReference.Identifier Property <p>Gets the identifier of the referred object.</p> C#<pre><code>TIdentifier Identifier { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IReferenceOf2/#property-value","title":"Property Value","text":"<p>TIdentifier</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/","title":"IResolvedReference&lt;TReferred&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/#iresolvedreferencetreferred-interface","title":"IResolvedReference&lt;TReferred&gt; Interface","text":"C#<pre><code>public interface IResolvedReference&lt;TReferred&gt; :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TReferred&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TReferred</code></p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TReferred&gt;, IReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/#iresolvedreferencevalue-property","title":"IResolvedReference.Value Property C#<pre><code>TReferred Value { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/IResolvedReferenceOf1/#property-value","title":"Property Value","text":"<p>TReferred</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/","title":"HAKOM.Persistence.Core.Net.Api.References.Serialization.Json","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/#hakompersistencecorenetapireferencesserializationjson-namespace","title":"HAKOM.Persistence.Core.Net.Api.References.Serialization.Json Namespace","text":"Classes JsonReferenceSerializer&lt;TReferred,TReference&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/","title":"JsonReferenceSerializer&lt;TReferred,TReference&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.References.Serialization.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#jsonreferenceserializertreferredtreference-class","title":"JsonReferenceSerializer&lt;TReferred,TReference&gt; Class","text":"C#<pre><code>public abstract class JsonReferenceSerializer&lt;TReferred,TReference&gt; : HAKOM.Serialization.Core.Net.Api.Json.JsonSerializer&lt;TReference&gt;\n    where TReference : HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TReferred&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#type-parameters","title":"Type parameters","text":"<p><code>TReferred</code></p> <p></p> <p><code>TReference</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Serialization.Core.Net.Api.Serializer&lt;TReference,IJsonSerializationParameters&gt; \ud83e\udc52 HAKOM.Serialization.Core.Net.Api.Json.JsonSerializer&lt;TReference&gt; \ud83e\udc52 JsonReferenceSerializer"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#jsonreferenceserializerijsonserializationparametersfactory-iserializerfactory-concurrentdictionary-ienumerable-ienumerable-constructor","title":"JsonReferenceSerializer(IJsonSerializationParametersFactory, ISerializerFactory, ConcurrentDictionary, IEnumerable, IEnumerable) Constructor C#<pre><code>protected JsonReferenceSerializer(HAKOM.Serialization.Core.Net.Api.Json.IJsonSerializationParametersFactory parameterFactory, HAKOM.Serialization.Core.Net.Api.ISerializerFactory serializerFactory, System.Collections.Concurrent.ConcurrentDictionary&lt;string,System.Text.Json.JsonSerializerOptions&gt; jsonSerializerOptionsCache, System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt; registeredConverters, System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt; registeredTypeInfoResolvers);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#parameters","title":"Parameters","text":"<p><code>parameterFactory</code> IJsonSerializationParametersFactory</p> <p></p> <p><code>serializerFactory</code> ISerializerFactory</p> <p></p> <p><code>jsonSerializerOptionsCache</code> System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,System.Text.Json.JsonSerializerOptions&gt;</p> <p></p> <p><code>registeredConverters</code> System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt;</p> <p></p> <p><code>registeredTypeInfoResolvers</code> System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#jsonreferenceserializertreferredtreferencedeserializestream-cancellationtoken-method","title":"JsonReferenceSerializer&lt;TReferred,TReference&gt;.Deserialize(Stream, CancellationToken) Method C#<pre><code>public override System.Threading.Tasks.Task&lt;TReference?&gt; Deserialize(System.IO.Stream inputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#parameters_1","title":"Parameters","text":"<p><code>inputStream</code> System.IO.Stream</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Deserialize(Stream, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#jsonreferenceserializertreferredtreferencedeserializewithidentifierjsonelement-istorageinformation-cancellationtoken-method","title":"JsonReferenceSerializer&lt;TReferred,TReference&gt;.DeserializeWithIdentifier(JsonElement, IStorageInformation, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt; DeserializeWithIdentifier(System.Text.Json.JsonElement identifier, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation storageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> System.Text.Json.JsonElement</p> <p></p> <p><code>storageInformation</code> IStorageInformation</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#jsonreferenceserializertreferredtreferenceserializetreference-stream-cancellationtoken-method","title":"JsonReferenceSerializer&lt;TReferred,TReference&gt;.Serialize(TReference, Stream, CancellationToken) Method C#<pre><code>public override System.Threading.Tasks.Task Serialize(TReference data, System.IO.Stream outputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#parameters_3","title":"Parameters","text":"<p><code>data</code> TReference</p> <p></p> <p><code>outputStream</code> System.IO.Stream</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/References/Serialization/Json/JsonReferenceSerializerOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/","title":"HAKOM.Persistence.Core.Net.Api.Storage","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/#hakompersistencecorenetapistorage-namespace","title":"HAKOM.Persistence.Core.Net.Api.Storage Namespace","text":"Classes StorageProvider Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt; Store&lt;TStorageProvider&gt; Interfaces IStorageInformation Used to get information about the storage. IStorageInformationFactory Creates a IStorageInformation used for storage specific information and properties. IStorageProvider IStorageProviderFactory IStorageReaderFactory&lt;TStorageReader&gt; IStorageWriterFactory&lt;TStorageWriter&gt; IStore&lt;TStorageProvider&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformation/","title":"IStorageInformation","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformation/#istorageinformation-interface","title":"IStorageInformation Interface","text":"<p>Used to get information about the storage.</p> C#<pre><code>public interface IStorageInformation :\nSystem.IEquatable&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IStorageInformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformation/#istorageinformationrepositoryname-property","title":"IStorageInformation.RepositoryName Property","text":"<p>Gets the repository name of the storage information.</p> C#<pre><code>string RepositoryName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformation/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/","title":"IStorageInformationFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/#istorageinformationfactory-interface","title":"IStorageInformationFactory Interface","text":"<p>Creates a IStorageInformation used for storage specific information and properties.</p> C#<pre><code>public interface IStorageInformationFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/#istorageinformationfactorycreatestring-method","title":"IStorageInformationFactory.Create(string) Method","text":"<p>Creates an instance of IStorageInformation of the Storage from repositoryName.</p> C#<pre><code>HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation Create(string repositoryName);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The name of the repository to create the IStorageInformation from.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageInformationFactory/#returns","title":"Returns","text":"<p>IStorageInformation an instance of IStorageInformation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/","title":"IStorageProvider","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#istorageprovider-interface","title":"IStorageProvider Interface","text":"C#<pre><code>public interface IStorageProvider\n</code></pre> <p>Derived \u21b3 StorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#istorageproviderrepositoryname-property","title":"IStorageProvider.RepositoryName Property","text":"C#<pre><code>string RepositoryName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#istorageproviderconfigurestring-istorageproviderconfiguration-cancellationtoken-method","title":"IStorageProvider.Configure(string, IStorageProviderConfiguration, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task Configure(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/","title":"IStorageProviderFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#istorageproviderfactory-interface","title":"IStorageProviderFactory Interface","text":"C#<pre><code>public interface IStorageProviderFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#istorageproviderfactorycreatestring-istorageproviderconfiguration-cancellationtoken-method","title":"IStorageProviderFactory.Create(string, IStorageProviderConfiguration, CancellationToken) Method","text":"<p>Creates an instance of an IStorageProvider using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt; Create(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the storage provider is created for.</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p>The IStorageProviderConfiguration used for the creation process.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IStorageProvider&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IStorageProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#remarks","title":"Remarks","text":"<p>Ignores any settings from ElevatedSettings.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#istorageproviderfactorycreateelevatedstring-istorageproviderconfiguration-cancellationtoken-method","title":"IStorageProviderFactory.CreateElevated(string, IStorageProviderConfiguration, CancellationToken) Method","text":"<p>Creates an instance of an IStorageProvider using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt; CreateElevated(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the storage provider is created for.</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p>The IStorageProviderConfiguration used for the creation process.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IStorageProvider&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IStorageProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#remarks_1","title":"Remarks","text":"<p>Additionally uses the settings from ElevatedSettings.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#istorageproviderfactorytrycreatestring-istorageproviderconfiguration-cancellationtoken-method","title":"IStorageProviderFactory.TryCreate(string, IStorageProviderConfiguration, CancellationToken) Method","text":"<p>Tries to create an instance of an IStorageProvider using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;&gt; TryCreate(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#parameters_2","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the storage provider is created for.</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p>The IStorageProviderConfiguration used for the creation process.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IStorageProvider&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; that completes with a Result&lt;TValue&gt; with information about whether it could successfully create the IStorageProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#remarks_2","title":"Remarks","text":"<p>Ignores any settings from ElevatedSettings.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#istorageproviderfactorytrycreateelevatedstring-istorageproviderconfiguration-cancellationtoken-method","title":"IStorageProviderFactory.TryCreateElevated(string, IStorageProviderConfiguration, CancellationToken) Method","text":"<p>Tries to create an instance of an IStorageProvider using the specified configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;&gt; TryCreateElevated(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#parameters_3","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the storage provider is created for.</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p>The IStorageProviderConfiguration used for the creation process.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IStorageProvider&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; that completes with a Result&lt;TValue&gt; with information about whether it could successfully create the IStorageProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageProviderFactory/#remarks_3","title":"Remarks","text":"<p>Additionally uses the settings from ElevatedSettings.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/","title":"IStorageReaderFactory&lt;TStorageReader&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#istoragereaderfactorytstoragereader-interface","title":"IStorageReaderFactory&lt;TStorageReader&gt; Interface","text":"C#<pre><code>public interface IStorageReaderFactory&lt;TStorageReader&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStorageReader</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#istoragereaderfactorytstoragereadercreateistorageprovider-cancellationtoken-method","title":"IStorageReaderFactory&lt;TStorageReader&gt;.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an TStorageReader using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TStorageReader&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TStorageReader&gt; A System.Threading.Tasks.Task&lt;&gt; containing the created TStorageReader.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#istoragereaderfactorytstoragereadertrycreateistorageprovider-cancellationtoken-method","title":"IStorageReaderFactory&lt;TStorageReader&gt;.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Tries to create an instance of an TStorageReader using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStorageReader&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStorageReader&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created TStorageReader.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageReaderFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/","title":"IStorageWriterFactory&lt;TStorageWriter&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#istoragewriterfactorytstoragewriter-interface","title":"IStorageWriterFactory&lt;TStorageWriter&gt; Interface","text":"C#<pre><code>public interface IStorageWriterFactory&lt;TStorageWriter&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStorageWriter</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#istoragewriterfactorytstoragewritercreateistorageprovider-cancellationtoken-method","title":"IStorageWriterFactory&lt;TStorageWriter&gt;.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an TStorageWriter using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TStorageWriter&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TStorageWriter&gt; A System.Threading.Tasks.Task&lt;&gt; containing the created TStorageWriter.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#istoragewriterfactorytstoragewritertrycreateistorageprovider-cancellationtoken-method","title":"IStorageWriterFactory&lt;TStorageWriter&gt;.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Tries to create an instance of an TStorageWriter using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStorageWriter&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStorageWriter&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created TStorageWriter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStorageWriterFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/","title":"IStore&lt;TStorageProvider&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#istoretstorageprovider-interface","title":"IStore&lt;TStorageProvider&gt; Interface","text":"C#<pre><code>public interface IStore&lt;TStorageProvider&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>Derived \u21b3 IRepositoryInformationStore \u21b3 IRepositoryInformationStore&lt;TRepositoryInformation&gt; \u21b3 RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; \u21b3 Store&lt;TStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#istorerepositoryname-property","title":"IStore.RepositoryName Property C#<pre><code>string RepositoryName { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#istoretstorageproviderconfiguretstorageprovider-cancellationtoken-method","title":"IStore&lt;TStorageProvider&gt;.Configure(TStorageProvider, CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/IStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/","title":"StorageProvider","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#storageprovider-class","title":"StorageProvider Class","text":"C#<pre><code>public abstract class StorageProvider :\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 StorageProvider</p> <p>Implements IStorageProvider, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#storageproviderconfiguration-property","title":"StorageProvider.Configuration Property","text":"C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration Configuration { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#property-value","title":"Property Value","text":"<p>IStorageProviderConfiguration</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#storageproviderrepositoryname-property","title":"StorageProvider.RepositoryName Property","text":"C#<pre><code>public string RepositoryName { get; }\n</code></pre> <p>Implements RepositoryName</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#storageproviderapplyprovidersettingsireadonlydictionarystringstring-method","title":"StorageProvider.ApplyProviderSettings(IReadOnlyDictionary&lt;string,string&gt;) Method","text":"<p>Configures the storage provider using the given settings. Override this in a derived class. The implementation should return a dictionary of all settings that could not be applied. When possible, implementations should always call   </p> <p>C#<pre><code>settings = await base.ApplyProviderSettings([settings](StorageProvider.md#HAKOM.Persistence.Core.Net.Api.Storage.StorageProvider.ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary_string,string_).settings 'HAKOM.Persistence.Core.Net.Api.Storage.StorageProvider.ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;).settings')).ConfigureAwait(false);  \n</code></pre> first. This allows base implementations to handle common settings without the need for derived implementations to explicitly ignore them (or act on them again). If a derived implementation wants to act on a setting that is dealt with by its base implementation, it can do so before calling base.ApplyProviderSettings(settings).</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt; ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#parameters","title":"Parameters","text":"<p><code>settings</code> System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</p> <p>The settings to apply to the storage provider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt; The remaining settings that could not be applied.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#storageproviderconfigurestring-istorageproviderconfiguration-cancellationtoken-method","title":"StorageProvider.Configure(string, IStorageProviderConfiguration, CancellationToken) Method","text":"C#<pre><code>public virtual System.Threading.Tasks.Task Configure(string repositoryName, HAKOM.Persistence.Core.Net.Api.Storage.Configuration.IStorageProviderConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>configuration</code> IStorageProviderConfiguration</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Configure(string, IStorageProviderConfiguration, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StorageProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/","title":"Store&lt;TStorageProvider&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#storetstorageprovider-class","title":"Store&lt;TStorageProvider&gt; Class","text":"C#<pre><code>public abstract class Store&lt;TStorageProvider&gt; :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;TStorageProvider&gt;,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>Inheritance System.Object \ud83e\udc52 Store <p>Derived \u21b3 RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; \u21b3 Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;TStorageProvider&gt;, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#storerepositoryname-property","title":"Store.RepositoryName Property C#<pre><code>public string RepositoryName { get; }\n</code></pre> <p>Implements RepositoryName</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#storestorageprovider-property","title":"Store.StorageProvider Property C#<pre><code>protected virtual TStorageProvider StorageProvider { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#property-value_1","title":"Property Value","text":"<p>TStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#storetstorageproviderconfigureistorageprovider-cancellationtoken-method","title":"Store&lt;TStorageProvider&gt;.Configure(IStorageProvider, CancellationToken) Method C#<pre><code>public virtual System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#storetstorageproviderconfiguretstorageprovider-cancellationtoken-method","title":"Store&lt;TStorageProvider&gt;.Configure(TStorageProvider, CancellationToken) Method C#<pre><code>public virtual System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Configure(TStorageProvider, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/","title":"Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt;","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storetstorageprovidertstoragereadertstoragewriter-class","title":"Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt; Class","text":"C#<pre><code>public abstract class Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt; : HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt;,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p></p> <p><code>TStorageReader</code></p> <p></p> <p><code>TStorageWriter</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt; \ud83e\udc52 Store <p>Implements IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storetstoragereader-tstoragewriter-constructor","title":"Store(TStorageReader, TStorageWriter) Constructor","text":"C#<pre><code>protected Store(TStorageReader reader, TStorageWriter? writer=default(TStorageWriter?));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#parameters","title":"Parameters","text":"<p><code>reader</code> TStorageReader</p> <p></p> <p><code>writer</code> TStorageWriter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storereader-property","title":"Store.Reader Property C#<pre><code>protected TStorageReader Reader { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#property-value","title":"Property Value","text":"<p>TStorageReader</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storestorageprovider-property","title":"Store.StorageProvider Property C#<pre><code>protected override TStorageProvider StorageProvider { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#property-value_1","title":"Property Value","text":"<p>TStorageProvider</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storesupportsread-property","title":"Store.SupportsRead Property C#<pre><code>public bool SupportsRead { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#property-value_2","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storesupportswrite-property","title":"Store.SupportsWrite Property C#<pre><code>public bool SupportsWrite { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#property-value_3","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storewriter-property","title":"Store.Writer Property C#<pre><code>protected TStorageWriter Writer { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#property-value_4","title":"Property Value","text":"<p>TStorageWriter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#storetstorageprovidertstoragereadertstoragewriterconfiguretstorageprovider-cancellationtoken-method","title":"Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt;.Configure(TStorageProvider, CancellationToken) Method C#<pre><code>public override System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Configure(TStorageProvider, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/StoreOf3/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/","title":"HAKOM.Persistence.Core.Net.Api.Storage.Configuration","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/#hakompersistencecorenetapistorageconfiguration-namespace","title":"HAKOM.Persistence.Core.Net.Api.Storage.Configuration Namespace","text":"Interfaces IStorageProviderConfiguration"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/","title":"IStorageProviderConfiguration","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage.Configuration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#istorageproviderconfiguration-interface","title":"IStorageProviderConfiguration Interface","text":"C#<pre><code>public interface IStorageProviderConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#istorageproviderconfigurationelevatedsettings-property","title":"IStorageProviderConfiguration.ElevatedSettings Property","text":"<p>Optional additional settings to use when the underlying storage should be accessed using elevated privileges.</p> C#<pre><code>System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; ElevatedSettings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#istorageproviderconfigurationsettings-property","title":"IStorageProviderConfiguration.Settings Property","text":"<p>The settings that should be used to connect to the underlying storage system (i.e. the database).</p> C#<pre><code>System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Settings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#istorageproviderconfigurationtype-property","title":"IStorageProviderConfiguration.Type Property","text":"<p>A string that specifies the type of storage that should be used by the IStorageProvider.</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Configuration/IStorageProviderConfiguration/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/","title":"HAKOM.Persistence.Core.Net.Api.Storage.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/#hakompersistencecorenetapistorageexceptions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Storage.Exceptions Namespace","text":"Classes StoreIsReadonlyException Thrown when the Writer of a read-only Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt; is accessed."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/StoreIsReadonlyException/","title":"StoreIsReadonlyException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Storage.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/StoreIsReadonlyException/#storeisreadonlyexception-class","title":"StoreIsReadonlyException Class","text":"<p>Thrown when the Writer of a read-only Store&lt;TStorageProvider,TStorageReader,TStorageWriter&gt; is accessed.</p> C#<pre><code>public sealed class StoreIsReadonlyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 StoreIsReadonlyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/StoreIsReadonlyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/StoreIsReadonlyException/#storeisreadonlyexceptionequivalenthttpstatuscode-property","title":"StoreIsReadonlyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Storage/Exceptions/StoreIsReadonlyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/","title":"HAKOM.Persistence.Core.Net.Api.Versioning","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/#hakompersistencecorenetapiversioning-namespace","title":"HAKOM.Persistence.Core.Net.Api.Versioning Namespace","text":"Interfaces IRepositoryVersion IRepositoryVersionCollection IRepositoryVersionCollectionFactory IRepositoryVersionFactory IRepositoryVersionProvider IRepositoryVersionStore IRepositoryVersionStoreFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/","title":"IRepositoryVersion","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#irepositoryversion-interface","title":"IRepositoryVersion Interface","text":"C#<pre><code>public interface IRepositoryVersion\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#irepositoryversiontype-property","title":"IRepositoryVersion.Type Property","text":"C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#irepositoryversionversion-property","title":"IRepositoryVersion.Version Property","text":"C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion Version { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersion/#property-value_1","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollection/","title":"IRepositoryVersionCollection","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollection/#irepositoryversioncollection-interface","title":"IRepositoryVersionCollection Interface","text":"C#<pre><code>public interface IRepositoryVersionCollection :\nSystem.Collections.Generic.IReadOnlyDictionary&lt;string, HAKOM.Versioning.Core.Net.Api.IVersion&gt;,\nSystem.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string, HAKOM.Versioning.Core.Net.Api.IVersion&gt;&gt;,\nSystem.Collections.IEnumerable,\nSystem.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;string, HAKOM.Versioning.Core.Net.Api.IVersion&gt;&gt;,\nSystem.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersion&gt;\n</code></pre> <p>Implements System.Collections.Generic.IReadOnlyDictionary&lt;System.String,IVersion&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,IVersion&gt;&gt;, System.Collections.IEnumerable, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,IVersion&gt;&gt;, System.Collections.Generic.IEnumerable&lt;IRepositoryVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollection/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollection/#irepositoryversioncollectionrepositoryname-property","title":"IRepositoryVersionCollection.RepositoryName Property","text":"C#<pre><code>string RepositoryName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollection/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/","title":"IRepositoryVersionCollectionFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/#irepositoryversioncollectionfactory-interface","title":"IRepositoryVersionCollectionFactory Interface","text":"C#<pre><code>public interface IRepositoryVersionCollectionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/#irepositoryversioncollectionfactorycreatestring-ienumerableirepositoryversion-method","title":"IRepositoryVersionCollectionFactory.Create(string, IEnumerable&lt;IRepositoryVersion&gt;) Method","text":"C#<pre><code>HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollection Create(string repositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersion&gt; versions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>versions</code> System.Collections.Generic.IEnumerable&lt;IRepositoryVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionCollectionFactory/#returns","title":"Returns","text":"<p>IRepositoryVersionCollection</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/","title":"IRepositoryVersionFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/#irepositoryversionfactory-interface","title":"IRepositoryVersionFactory Interface","text":"C#<pre><code>public interface IRepositoryVersionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/#irepositoryversionfactorycreatestring-iversion-method","title":"IRepositoryVersionFactory.Create(string, IVersion) Method","text":"C#<pre><code>HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersion Create(string type, HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/#parameters","title":"Parameters","text":"<p><code>type</code> System.String</p> <p></p> <p><code>version</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionFactory/#returns","title":"Returns","text":"<p>IRepositoryVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/","title":"IRepositoryVersionProvider","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#irepositoryversionprovider-interface","title":"IRepositoryVersionProvider Interface","text":"C#<pre><code>public interface IRepositoryVersionProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#irepositoryversionprovidergetversionstring-string-cancellationtoken-method","title":"IRepositoryVersionProvider.GetVersion(string, string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt; GetVersion(string repositoryName, string repositoryType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>repositoryType</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IVersion&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#irepositoryversionprovidertrygetversionstring-string-cancellationtoken-method","title":"IRepositoryVersionProvider.TryGetVersion(string, string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt;&gt; TryGetVersion(string repositoryName, string repositoryType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p></p> <p><code>repositoryType</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IVersion&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/","title":"IRepositoryVersionStore","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#irepositoryversionstore-interface","title":"IRepositoryVersionStore Interface","text":"C#<pre><code>public interface IRepositoryVersionStore\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#irepositoryversionstoreconfigureistorageprovider-cancellationtoken-method","title":"IRepositoryVersionStore.Configure(IStorageProvider, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#irepositoryversionstorefindlatestcancellationtoken-method","title":"IRepositoryVersionStore.FindLatest(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollection&gt; FindLatest(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IRepositoryVersionCollection&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#irepositoryversionstoretryfindlatestcancellationtoken-method","title":"IRepositoryVersionStore.TryFindLatest(CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollection&gt;&gt; TryFindLatest(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IRepositoryVersionCollection&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/","title":"IRepositoryVersionStoreFactory","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#irepositoryversionstorefactory-interface","title":"IRepositoryVersionStoreFactory Interface","text":"C#<pre><code>public interface IRepositoryVersionStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#irepositoryversionstorefactorycreateistorageprovider-cancellationtoken-method","title":"IRepositoryVersionStoreFactory.Create(IStorageProvider, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IRepositoryVersionStore&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#irepositoryversionstorefactorytrycreateistorageprovider-cancellationtoken-method","title":"IRepositoryVersionStoreFactory.TryCreate(IStorageProvider, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/IRepositoryVersionStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IRepositoryVersionStore&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/","title":"HAKOM.Persistence.Core.Net.Api.Versioning.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/#hakompersistencecorenetapiversioningexceptions-namespace","title":"HAKOM.Persistence.Core.Net.Api.Versioning.Exceptions Namespace","text":"Classes FailedToRetrieveVersionInformationFromRepositoryException RepositoryTypeNotAvailableException"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/FailedToRetrieveVersionInformationFromRepositoryException/","title":"FailedToRetrieveVersionInformationFromRepositoryException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/FailedToRetrieveVersionInformationFromRepositoryException/#failedtoretrieveversioninformationfromrepositoryexception-class","title":"FailedToRetrieveVersionInformationFromRepositoryException Class","text":"C#<pre><code>public sealed class FailedToRetrieveVersionInformationFromRepositoryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FailedToRetrieveVersionInformationFromRepositoryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/FailedToRetrieveVersionInformationFromRepositoryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/FailedToRetrieveVersionInformationFromRepositoryException/#failedtoretrieveversioninformationfromrepositoryexceptionequivalenthttpstatuscode-property","title":"FailedToRetrieveVersionInformationFromRepositoryException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/FailedToRetrieveVersionInformationFromRepositoryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/RepositoryTypeNotAvailableException/","title":"RepositoryTypeNotAvailableException","text":"<p>Assembly: HAKOM.Persistence.Core.Net</p> <p>Namespace: HAKOM.Persistence.Core.Net.Api.Versioning.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/RepositoryTypeNotAvailableException/#repositorytypenotavailableexception-class","title":"RepositoryTypeNotAvailableException Class","text":"C#<pre><code>public sealed class RepositoryTypeNotAvailableException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RepositoryTypeNotAvailableException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/RepositoryTypeNotAvailableException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/RepositoryTypeNotAvailableException/#repositorytypenotavailableexceptionequivalenthttpstatuscode-property","title":"RepositoryTypeNotAvailableException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Core/API/Versioning/Exceptions/RepositoryTypeNotAvailableException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/","title":"HAKOM.Persistence.FileSystem.Net","text":"<p>Assembly: HAKOM.Persistence.FileSystem.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/#hakompersistencefilesystemnet-assembly","title":"HAKOM.Persistence.FileSystem.Net Assembly","text":"Namespaces HAKOM.Persistence.FileSystem.Net.Api HAKOM.Persistence.FileSystem.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/","title":"HAKOM.Persistence.FileSystem.Net.Api","text":"<p>Assembly: HAKOM.Persistence.FileSystem.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/#hakompersistencefilesystemnetapi-namespace","title":"HAKOM.Persistence.FileSystem.Net.Api Namespace","text":"Interfaces IDefaultResourcePathProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/","title":"IDefaultResourcePathProvider","text":"<p>Assembly: HAKOM.Persistence.FileSystem.Net</p> <p>Namespace: HAKOM.Persistence.FileSystem.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#idefaultresourcepathprovider-interface","title":"IDefaultResourcePathProvider Interface","text":"C#<pre><code>public interface IDefaultResourcePathProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#idefaultresourcepathproviderdefault-property","title":"IDefaultResourcePathProvider.Default Property","text":"C#<pre><code>static HAKOM.Persistence.FileSystem.Net.Api.IDefaultResourcePathProvider Default { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#property-value","title":"Property Value","text":"<p>IDefaultResourcePathProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#idefaultresourcepathproviderfromlocationsstring-method","title":"IDefaultResourcePathProvider.FromLocations(string[]) Method","text":"C#<pre><code>static HAKOM.Persistence.FileSystem.Net.Api.IDefaultResourcePathProvider FromLocations(string[] paths);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#parameters","title":"Parameters","text":"<p><code>paths</code> System.String[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#returns","title":"Returns","text":"<p>IDefaultResourcePathProvider</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#idefaultresourcepathprovidergetpathscancellationtoken-method","title":"IDefaultResourcePathProvider.GetPaths(CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;string&gt; GetPaths(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/IDefaultResourcePathProvider/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/","title":"HAKOM.Persistence.FileSystem.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.FileSystem.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/#hakompersistencefilesystemnetapiextensions-namespace","title":"HAKOM.Persistence.FileSystem.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.FileSystem.Net</p> <p>Namespace: HAKOM.Persistence.FileSystem.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#containerextensionsusedefaultresourcepathsthis-icontainer-string-method","title":"ContainerExtensions.UseDefaultResourcePaths(this IContainer, string[]) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultResourcePaths(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, params string[] paths);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>paths</code> System.String[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#containerextensionsuselocalfilesystemthis-icontainer-method","title":"ContainerExtensions.UseLocalFileSystem(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseLocalFileSystem(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#containerextensionsusestandarddefaultresourcepathsthis-icontainer-method","title":"ContainerExtensions.UseStandardDefaultResourcePaths(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseStandardDefaultResourcePaths(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/FileSystem/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/","title":"HAKOM.Persistence.Http.Net","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/#hakompersistencehttpnet-assembly","title":"HAKOM.Persistence.Http.Net Assembly","text":"Namespaces HAKOM.Persistence.Http.Net.Api.Extensions HAKOM.Persistence.Http.Net.Api.Ordering HAKOM.Persistence.Http.Net.Api.Paging.Exceptions HAKOM.Serialization.Http.Net.Api"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/","title":"HAKOM.Persistence.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/#hakompersistencehttpnetapiextensions-namespace","title":"HAKOM.Persistence.Http.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods for adding services related to using types from the persistence module in HTTP APIs. HttpResponseExtensions Provides extension methods for modifying a controller action response with data relating to types from the persistence module. SwaggerGenOptionsExtensions Provides extension methods for the generation of OpenAPI documentation about types in this module."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for adding services related to using types from the persistence module in HTTP APIs.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#containerextensionsuseordermodelbindertresultthis-icontainer-dictionarystringordertresult-method","title":"ContainerExtensions.UseOrderModelBinder&lt;TResult&gt;(this IContainer, Dictionary&lt;string,Order&lt;TResult&gt;&gt;) Method","text":"<p>Registers a ICustomModelBinder with the container so that Order&lt;TResult&gt; items can be passed to controller actions as query parameters.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOrderModelBinder&lt;TResult&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Collections.Generic.Dictionary&lt;string,HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt; expressionMappings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which orderings should be passable as query parameters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the services with.</p> <p></p> <p><code>expressionMappings</code> System.Collections.Generic.Dictionary&lt;System.String,HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt;</p> <p>A collection of mappings from expression strings to Order&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining of additional service registrations.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#containerextensionsuserangemodelbindertresultthis-icontainer-method","title":"ContainerExtensions.UseRangeModelBinder&lt;TResult&gt;(this IContainer) Method","text":"<p>Registers an implementation of System.ICustomFormatter with the container so that Range&lt;TResult&gt; parameters can be passed to controller actions as range headers.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRangeModelBinder&lt;TResult&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which range parameters should be supported.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>THe IContainer to register the model binder with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container for chaining of additional service registrations.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#containerextensionsusereferenceschemafilterthis-icontainer-method","title":"ContainerExtensions.UseReferenceSchemaFilter(this IContainer) Method","text":"<p>Registers an implementation of Swashbuckle.AspNetCore.SwaggerGen.ISchemaFilter that handles return types derived from IReference.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseReferenceSchemaFilter(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the filter with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The container for chaining of additional service registrations.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/","title":"HttpResponseExtensions","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#httpresponseextensions-class","title":"HttpResponseExtensions Class","text":"<p>Provides extension methods for modifying a controller action response with data relating to types from the persistence module.</p> C#<pre><code>public static class HttpResponseExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 HttpResponseExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#httpresponseextensionstrysetrangetresultthis-httpresponse-rangetresult-nullableint-method","title":"HttpResponseExtensions.TrySetRange&lt;TResult&gt;(this HttpResponse, Range&lt;TResult&gt;, Nullable&lt;int&gt;) Method","text":"<p>Sets the range of the result.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result TrySetRange&lt;TResult&gt;(this Microsoft.AspNetCore.Http.HttpResponse response, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt; range, System.Nullable&lt;int&gt; total=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which a partial range is returned.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#parameters","title":"Parameters","text":"<p><code>response</code> Microsoft.AspNetCore.Http.HttpResponse</p> <p>The Microsoft.AspNetCore.Http.HttpResponse to modify.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;TResult&gt;</p> <p>The range that has been processed.</p> <p></p> <p><code>total</code> System.Nullable&lt;System.Int32&gt;</p> <p>When available the total number of available results that are not being included in the partial result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#returns","title":"Returns","text":"<p>Result A Result indicating wether the response was successfully modified.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#remarks","title":"Remarks","text":"<p>This should be called from within a controller action whenever a Range&lt;TResult&gt; parameter is being processed from range headers.  </p> <p>When processing range request headers, the response should include information about the range returned, such as setting the response status code to 206 (Partial Content) and setting the Content-Range header. Calling this does all of that.  </p> <p>Note that this must be called before any content is returned, i.e. before any return or yield return statements. Otherwise it may fail with a RangeCannotBeSetAfterResponseHasAlreadyStartedException.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#httpresponseextensionstryupdaterangetresultthis-httpresponse-int-int-nullableint-method","title":"HttpResponseExtensions.TryUpdateRange&lt;TResult&gt;(this HttpResponse, int, int, Nullable&lt;int&gt;) Method","text":"<p>Attempts to update the content range header if the response has not started yet.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result TryUpdateRange&lt;TResult&gt;(this Microsoft.AspNetCore.Http.HttpResponse response, int start, int count, System.Nullable&lt;int&gt; total=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which a partial range is returned.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#parameters_1","title":"Parameters","text":"<p><code>response</code> Microsoft.AspNetCore.Http.HttpResponse</p> <p>The Microsoft.AspNetCore.Http.HttpResponse to modify.</p> <p></p> <p><code>start</code> System.Int32</p> <p>The actual start of the range returned.</p> <p></p> <p><code>count</code> System.Int32</p> <p>The number of items returned.</p> <p></p> <p><code>total</code> System.Nullable&lt;System.Int32&gt;</p> <p>When available the total number of available results that are not being included in the partial result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#returns_1","title":"Returns","text":"<p>Result A Result indicating wether the response was successfully update.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/HttpResponseExtensions/#remarks_1","title":"Remarks","text":"<p>TrySetRange&lt;TResult&gt;(this HttpResponse, Range&lt;TResult&gt;, Nullable&lt;int&gt;) should always be called when limiting results. However, when data is streamed (i.e. from a repository), the final range may not be known at this point in time, resulting in an incorrect Content-Range header. For this reason, this method should always be called after streaming. This ensures that - for small ranges where the service buffers the entire result before starting to send response headers, the Content-Range header will be set properly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/","title":"SwaggerGenOptionsExtensions","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#swaggergenoptionsextensions-class","title":"SwaggerGenOptionsExtensions Class","text":"<p>Provides extension methods for the generation of OpenAPI documentation about types in this module.</p> C#<pre><code>public static class SwaggerGenOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 SwaggerGenOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#swaggergenoptionsextensionsaddorderfiltertresultthis-swaggergenoptions-method","title":"SwaggerGenOptionsExtensions.AddOrderFilter&lt;TResult&gt;(this SwaggerGenOptions) Method","text":"<p>Adds a Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter that properly documents query parameters of type Order&lt;TResult&gt;.</p> C#<pre><code>public static Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions AddOrderFilter&lt;TResult&gt;(this Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions options);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which Order&lt;TResult&gt; parameters should be documented.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>options</code> Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#returns","title":"Returns","text":"<p>Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions The options for chaining of additional configuration.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#swaggergenoptionsextensionsaddrangefiltertresultthis-swaggergenoptions-method","title":"SwaggerGenOptionsExtensions.AddRangeFilter&lt;TResult&gt;(this SwaggerGenOptions) Method","text":"<p>Adds a Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter that properly documents range headers.</p> C#<pre><code>public static Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions AddRangeFilter&lt;TResult&gt;(this Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions options);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p> <p>The type of data for which Range&lt;TResult&gt; parameters should be documented.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#parameters_1","title":"Parameters","text":"<p><code>options</code> Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Extensions/SwaggerGenOptionsExtensions/#returns_1","title":"Returns","text":"<p>Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions The options for chaining of additional configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/","title":"HAKOM.Persistence.Http.Net.Api.Ordering","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/#hakompersistencehttpnetapiordering-namespace","title":"HAKOM.Persistence.Http.Net.Api.Ordering Namespace","text":"Interfaces IOrderFromQueryBinder&lt;TResult&gt; Interface for query binder used to bind Order&lt;TResult&gt; items from queries."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/","title":"IOrderFromQueryBinder&lt;TResult&gt;","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Ordering</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#iorderfromquerybindertresult-interface","title":"IOrderFromQueryBinder&lt;TResult&gt; Interface","text":"<p>Interface for query binder used to bind Order&lt;TResult&gt; items from queries.</p> C#<pre><code>public interface IOrderFromQueryBinder&lt;TResult&gt; :\nHAKOM.Serialization.Http.Net.Api.ICustomModelBinder,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>Implements ICustomModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#remarks","title":"Remarks","text":"<p>Used as a dependency by the Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter responsible for generating proper OpenAPI documentation for such paramters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#iorderfromquerybindersupportedorderings-property","title":"IOrderFromQueryBinder.SupportedOrderings Property <p>A mapping between expressions supported for ordering TResult and their respective Order&lt;TResult&gt; implementations.</p> C#<pre><code>System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt; SupportedOrderings { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Ordering/IOrderFromQueryBinderOf1/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/","title":"HAKOM.Persistence.Http.Net.Api.Paging.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/#hakompersistencehttpnetapipagingexceptions-namespace","title":"HAKOM.Persistence.Http.Net.Api.Paging.Exceptions Namespace","text":"Classes InvalidRangeRequestException Indicates that the 'Range' header included in the request contains malformed data. InvalidRangeUnitException Indicates that the 'Range' headers unit is not supported by the accessed endpoint. MultiRangeRequestsNotSupportedException Indicates that the 'Range' header contained multiple ranges. RangeCannotBeSetAfterResponseHasAlreadyStartedException Indicates that an attempt was made to modify the response status code or set range related headers after headers (and possibly data) has already been sent to the client. RangeRequestParameterOutOfBoundsException Indicates that the 'Range' headers parameters are outside of the bounds permitted."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/","title":"InvalidRangeRequestException","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Paging.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/#invalidrangerequestexception-class","title":"InvalidRangeRequestException Class","text":"<p>Indicates that the 'Range' header included in the request contains malformed data.</p> C#<pre><code>public sealed class InvalidRangeRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRangeRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/#remarks","title":"Remarks","text":"<p>Make sure that the 'Range' header includes valid data only.  </p> <p>This error may be identified by code HK12034.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/#invalidrangerequestexceptionequivalenthttpstatuscode-property","title":"InvalidRangeRequestException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs during processing of an HTTP request, the response should be returned with a status code 415 (Requested Range Not Satisfiable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/","title":"InvalidRangeUnitException","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Paging.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/#invalidrangeunitexception-class","title":"InvalidRangeUnitException Class","text":"<p>Indicates that the 'Range' headers unit is not supported by the accessed endpoint.</p> C#<pre><code>public sealed class InvalidRangeUnitException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRangeUnitException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/#remarks","title":"Remarks","text":"<p>Make sure that the 'Range' header refers to a unit acceptable by this endpoint. Inspect the 'Accept-Ranges' header for information about which units are supported  </p> <p>This error may be identified by code HK12035.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/#invalidrangeunitexceptionequivalenthttpstatuscode-property","title":"InvalidRangeUnitException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs during processing of an HTTP request, the response should be returned with a status code 415 (Requested Range Not Satisfiable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/InvalidRangeUnitException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/","title":"MultiRangeRequestsNotSupportedException","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Paging.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/#multirangerequestsnotsupportedexception-class","title":"MultiRangeRequestsNotSupportedException Class","text":"<p>Indicates that the 'Range' header contained multiple ranges.</p> C#<pre><code>public sealed class MultiRangeRequestsNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MultiRangeRequestsNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/#remarks","title":"Remarks","text":"<p>Multi-Range requests, i.e. requests that should return more than one continuous range, are currently not supported. Please make sure to only specify a single range.  </p> <p>This error may be identified by code HK12036.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/#multirangerequestsnotsupportedexceptionequivalenthttpstatuscode-property","title":"MultiRangeRequestsNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs during processing of an HTTP request, the response should be returned with a status code 415 (Requested Range Not Satisfiable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/MultiRangeRequestsNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/","title":"RangeCannotBeSetAfterResponseHasAlreadyStartedException","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Paging.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/#rangecannotbesetafterresponsehasalreadystartedexception-class","title":"RangeCannotBeSetAfterResponseHasAlreadyStartedException Class","text":"<p>Indicates that an attempt was made to modify the response status code or set range related headers after headers (and possibly data) has already been sent to the client.</p> C#<pre><code>public sealed class RangeCannotBeSetAfterResponseHasAlreadyStartedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RangeCannotBeSetAfterResponseHasAlreadyStartedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/#remarks","title":"Remarks","text":"<p>Make sure to call TrySetRange&lt;TResult&gt;(this HttpResponse, Range&lt;TResult&gt;, Nullable&lt;int&gt;)before any calls to return or yield return.  </p> <p>This error can be identified by code HK12037.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/#rangecannotbesetafterresponsehasalreadystartedexceptionequivalenthttpstatuscode-property","title":"RangeCannotBeSetAfterResponseHasAlreadyStartedException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown while processing an HTTP request, the response should be returned with status code 500 (Internal Server Error). This error is most likely due to an implementation issue and will require code changes to be fixed. Report any occurrence of this error to the developers.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeCannotBeSetAfterResponseHasAlreadyStartedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/","title":"RangeRequestParameterOutOfBoundsException","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Persistence.Http.Net.Api.Paging.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/#rangerequestparameteroutofboundsexception-class","title":"RangeRequestParameterOutOfBoundsException Class","text":"<p>Indicates that the 'Range' headers parameters are outside of the bounds permitted.</p> C#<pre><code>public sealed class RangeRequestParameterOutOfBoundsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RangeRequestParameterOutOfBoundsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/#remarks","title":"Remarks","text":"<p>Make sure the range parameters (start/end) are not outside the range from 0 to System.Int32.MaxValue and that the 'end' is greater than the 'start' of the range.  </p> <p>This error may be identified by code HK12038.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/#rangerequestparameteroutofboundsexceptionequivalenthttpstatuscode-property","title":"RangeRequestParameterOutOfBoundsException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs during processing of an HTTP request, the response should be returned with a status code 415 (Requested Range Not Satisfiable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Http/API/Paging/Exceptions/RangeRequestParameterOutOfBoundsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/","title":"HAKOM.Persistence.Sql.Net","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/#hakompersistencesqlnet-assembly","title":"HAKOM.Persistence.Sql.Net Assembly","text":"Namespaces HAKOM.Persistence.Sql.Net.Api HAKOM.Persistence.Sql.Net.Api.Exceptions HAKOM.Persistence.Sql.Net.Api.Versioning"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/","title":"HAKOM.Persistence.Sql.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/#hakompersistencesqlnetapi-namespace","title":"HAKOM.Persistence.Sql.Net.Api Namespace","text":"Classes SqlParameterFactory&lt;TParameter&gt; SqlRepositoryInformationStore&lt;TStorageProvider,TReader,TRepositoryInformation&gt; SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; Base class for SQL-based storage providers. Interfaces IConnectionSemaphoreCollection&lt;TConnection&gt; ISqlParameter ISqlParameter&lt;TNative&gt; ISqlParameterFactory&lt;TParameter&gt; ISqlStorageProvider ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt; ISqlStorageProvider&lt;TReader&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/","title":"IConnectionSemaphoreCollection&lt;TConnection&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#iconnectionsemaphorecollectiontconnection-interface","title":"IConnectionSemaphoreCollection&lt;TConnection&gt; Interface","text":"C#<pre><code>public interface IConnectionSemaphoreCollection&lt;TConnection&gt; :\nSystem.Collections.Generic.IEnumerable&lt;string&gt;,\nSystem.Collections.IEnumerable\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#type-parameters","title":"Type parameters","text":"<p><code>TConnection</code></p> <p>Implements System.Collections.Generic.IEnumerable&lt;System.String&gt;, System.Collections.IEnumerable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#iconnectionsemaphorecollectiontconnectiongetorcreatestring-int-method","title":"IConnectionSemaphoreCollection&lt;TConnection&gt;.GetOrCreate(string, int) Method","text":"C#<pre><code>System.Threading.SemaphoreSlim GetOrCreate(string connectionName, int maxConnections);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#parameters","title":"Parameters","text":"<p><code>connectionName</code> System.String</p> <p></p> <p><code>maxConnections</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/IConnectionSemaphoreCollectionOf1/#returns","title":"Returns","text":"<p>System.Threading.SemaphoreSlim</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameter/","title":"ISqlParameter","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameter/#isqlparameter-interface","title":"ISqlParameter Interface","text":"C#<pre><code>public interface ISqlParameter\n</code></pre> <p>Derived \u21b3 ISqlParameter&lt;TNative&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/","title":"ISqlParameterFactory&lt;TParameter&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#isqlparameterfactorytparameter-interface","title":"ISqlParameterFactory&lt;TParameter&gt; Interface","text":"C#<pre><code>public interface ISqlParameterFactory&lt;TParameter&gt;\n    where TParameter : HAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>Derived \u21b3 SqlParameterFactory&lt;TParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#isqlparameterfactoryparameterprefix-property","title":"ISqlParameterFactory.ParameterPrefix Property C#<pre><code>string ParameterPrefix { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#isqlparameterfactorytparametercreatetvaluestring-tvalue-method","title":"ISqlParameterFactory&lt;TParameter&gt;.Create&lt;TValue&gt;(string, TValue) Method C#<pre><code>TParameter Create&lt;TValue&gt;(string name, TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>value</code> TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterFactoryOf1/#returns","title":"Returns","text":"<p>TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/","title":"ISqlParameter&lt;TNative&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/#isqlparametertnative-interface","title":"ISqlParameter&lt;TNative&gt; Interface","text":"C#<pre><code>public interface ISqlParameter&lt;TNative&gt; :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TNative</code></p> <p>Implements ISqlParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/#isqlparametertnativeconverttonative-method","title":"ISqlParameter&lt;TNative&gt;.ConvertToNative() Method","text":"C#<pre><code>TNative ConvertToNative();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlParameterOf1/#returns","title":"Returns","text":"<p>TNative</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/","title":"ISqlStorageProvider","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#isqlstorageprovider-interface","title":"ISqlStorageProvider Interface","text":"C#<pre><code>public interface ISqlStorageProvider :\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre> <p>Derived \u21b3 ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt; \u21b3 ISqlStorageProvider&lt;TReader&gt; \u21b3 SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;</p> <p>Implements IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#isqlstorageproviderexecutestring-cancellationtoken-method","title":"ISqlStorageProvider.Execute(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;int&gt; Execute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#parameters","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#isqlstorageprovidertryexecutestring-cancellationtoken-method","title":"ISqlStorageProvider.TryExecute(string, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;int&gt;&gt; TryExecute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#parameters_1","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int32&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/","title":"ISqlStorageProvider&lt;TReader&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreader-interface","title":"ISqlStorageProvider&lt;TReader&gt; Interface","text":"C#<pre><code>public interface ISqlStorageProvider&lt;TReader&gt; :\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TReader : System.Data.IDataReader\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TReader</code></p> <p>Derived \u21b3 ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt; \u21b3 SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;</p> <p>Implements ISqlStorageProvider, IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbooltreader-int-bool-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadBool(TReader, int, bool, bool) Method","text":"C#<pre><code>bool ReadBool(TReader reader, int columnIndex, bool nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Boolean</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbooltreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadBool(TReader, int, bool) Method","text":"C#<pre><code>bool ReadBool(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_1","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbooltreader-int-nullablebool-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadBool(TReader, int, Nullable&lt;bool&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;bool&gt; ReadBool(TReader reader, int columnIndex, System.Nullable&lt;bool&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_2","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Boolean&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_2","title":"Returns","text":"<p>System.Nullable&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbytetreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadByte(TReader, int, bool) Method","text":"C#<pre><code>byte ReadByte(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_3","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_3","title":"Returns","text":"<p>System.Byte</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbytetreader-int-byte-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadByte(TReader, int, byte, bool) Method","text":"C#<pre><code>byte ReadByte(TReader reader, int columnIndex, byte nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_4","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Byte</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_4","title":"Returns","text":"<p>System.Byte</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadbytetreader-int-nullablebyte-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadByte(TReader, int, Nullable&lt;byte&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;byte&gt; ReadByte(TReader reader, int columnIndex, System.Nullable&lt;byte&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_5","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Byte&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_5","title":"Returns","text":"<p>System.Nullable&lt;System.Byte&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddatetimetreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDateTime(TReader, int, bool) Method","text":"C#<pre><code>System.DateTime ReadDateTime(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_6","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_6","title":"Returns","text":"<p>System.DateTime</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddatetimetreader-int-datetime-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDateTime(TReader, int, DateTime, bool) Method","text":"C#<pre><code>System.DateTime ReadDateTime(TReader reader, int columnIndex, System.DateTime nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_7","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.DateTime</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_7","title":"Returns","text":"<p>System.DateTime</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddatetimetreader-int-nullabledatetime-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDateTime(TReader, int, Nullable&lt;DateTime&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;System.DateTime&gt; ReadDateTime(TReader reader, int columnIndex, System.Nullable&lt;System.DateTime&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_8","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.DateTime&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_8","title":"Returns","text":"<p>System.Nullable&lt;System.DateTime&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddecimaltreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDecimal(TReader, int, bool) Method","text":"C#<pre><code>decimal ReadDecimal(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_9","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_9","title":"Returns","text":"<p>System.Decimal</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddecimaltreader-int-decimal-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDecimal(TReader, int, decimal, bool) Method","text":"C#<pre><code>decimal ReadDecimal(TReader reader, int columnIndex, decimal nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_10","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Decimal</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_10","title":"Returns","text":"<p>System.Decimal</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreaddecimaltreader-int-nullabledecimal-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadDecimal(TReader, int, Nullable&lt;decimal&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;decimal&gt; ReadDecimal(TReader reader, int columnIndex, System.Nullable&lt;decimal&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_11","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Decimal&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_11","title":"Returns","text":"<p>System.Nullable&lt;System.Decimal&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadinttreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadInt(TReader, int, bool) Method","text":"C#<pre><code>int ReadInt(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_12","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_12","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadinttreader-int-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadInt(TReader, int, int, bool) Method","text":"C#<pre><code>int ReadInt(TReader reader, int columnIndex, int nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_13","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_13","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadinttreader-int-nullableint-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadInt(TReader, int, Nullable&lt;int&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;int&gt; ReadInt(TReader reader, int columnIndex, System.Nullable&lt;int&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_14","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int32&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_14","title":"Returns","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadlongtreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadLong(TReader, int, bool) Method","text":"C#<pre><code>long ReadLong(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_15","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_15","title":"Returns","text":"<p>System.Int64</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadlongtreader-int-long-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadLong(TReader, int, long, bool) Method","text":"C#<pre><code>long ReadLong(TReader reader, int columnIndex, long nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_16","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int64</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_16","title":"Returns","text":"<p>System.Int64</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadlongtreader-int-nullablelong-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadLong(TReader, int, Nullable&lt;long&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;long&gt; ReadLong(TReader reader, int columnIndex, System.Nullable&lt;long&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_17","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int64&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_17","title":"Returns","text":"<p>System.Nullable&lt;System.Int64&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadshorttreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadShort(TReader, int, bool) Method","text":"C#<pre><code>short ReadShort(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_18","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_18","title":"Returns","text":"<p>System.Int16</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadshorttreader-int-short-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadShort(TReader, int, short, bool) Method","text":"C#<pre><code>short ReadShort(TReader reader, int columnIndex, short nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_19","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int16</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_19","title":"Returns","text":"<p>System.Int16</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadshorttreader-int-nullableshort-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadShort(TReader, int, Nullable&lt;short&gt;, bool) Method","text":"C#<pre><code>System.Nullable&lt;short&gt; ReadShort(TReader reader, int columnIndex, System.Nullable&lt;short&gt; nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_20","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int16&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_20","title":"Returns","text":"<p>System.Nullable&lt;System.Int16&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadstringtreader-int-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadString(TReader, int, bool) Method","text":"C#<pre><code>string ReadString(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_21","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_21","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadstringtreader-int-string-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadString(TReader, int, string, bool) Method","text":"C#<pre><code>string ReadString(TReader reader, int columnIndex, string nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_22","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.String</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_22","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderreadstringallowingnulltreader-int-string-bool-method","title":"ISqlStorageProvider&lt;TReader&gt;.ReadStringAllowingNull(TReader, int, string, bool) Method","text":"C#<pre><code>string? ReadStringAllowingNull(TReader reader, int columnIndex, string? nullValue, bool validateColumnType=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_23","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.String</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_23","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselecttresultstring-functreadertasktresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.Select&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_24","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_24","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselecttresultstring-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.Select&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_2","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_25","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_25","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselecttresultstring-functreadertresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.Select&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_3","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_26","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_26","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselecttresultstring-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.Select&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_4","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_27","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_27","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselectfirsttresultstring-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.SelectFirst&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;TResult&gt; SelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_5","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_28","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_28","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreaderselectfirsttresultstring-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.SelectFirst&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;TResult&gt; SelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_6","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_29","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_29","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselecttresultstring-functreadertasktresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_7","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_30","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_30","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselecttresultstring-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_8","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_31","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_31","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselecttresultstring-functreadertresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_9","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_32","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_32","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselecttresultstring-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method","text":"C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_10","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_33","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_33","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselectfirsttresultstring-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelectFirst&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_11","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_34","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_34","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#isqlstorageprovidertreadertryselectfirsttresultstring-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TReader&gt;.TrySelectFirst&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#type-parameters_12","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#parameters_35","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf1/#returns_35","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreader-interface","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt; Interface","text":"C#<pre><code>public interface ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt; :\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TParameter : HAKOM.Persistence.Sql.Net.Api.ISqlParameter\n    where TParameterFactory : HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;TParameter&gt;\n    where TReader : System.Data.IDataReader\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p></p> <p><code>TParameterFactory</code></p> <p></p> <p><code>TReader</code></p> <p>Derived \u21b3 SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;</p> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;, ISqlStorageProvider, IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageproviderescapecharacter-property","title":"ISqlStorageProvider.EscapeCharacter Property C#<pre><code>char EscapeCharacter { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#property-value","title":"Property Value","text":"<p>System.Char</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageproviderordercollation-property","title":"ISqlStorageProvider.OrderCollation Property <p>The collation that's configured to be used when explicitly ordering results by individual columns.</p> C#<pre><code>string? OrderCollation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#remarks","title":"Remarks","text":"<p>May be null indicating no explicit collation should be used.  </p> <p>Note that collation will not be applied by the storage provider. The calling code must modify its queries to add the COLLATE statement to the order by clauses. This property is just to provide access to the configured value (or a sensible default if none is configured).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageproviderparameters-property","title":"ISqlStorageProvider.Parameters Property C#<pre><code>TParameterFactory Parameters { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#property-value_2","title":"Property Value","text":"<p>TParameterFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderexecutestring-cancellationtoken-tparameter-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.Execute(string, CancellationToken, TParameter[]) Method C#<pre><code>System.Threading.Tasks.Task&lt;int&gt; Execute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken), params TParameter[] parameters);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p></p> <p><code>parameters</code> TParameter[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderreplaceorescapewildcardstring-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.ReplaceOrEscapeWildcard(string) Method C#<pre><code>string ReplaceOrEscapeWildcard(string query);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_1","title":"Parameters","text":"<p><code>query</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_1","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselecttresultstring-ienumerabletparameter-functreadertasktresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.Select&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_2","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselecttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.Select&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_2","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_3","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselecttresultstring-ienumerabletparameter-functreadertresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.Select&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_3","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_4","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselecttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.Select&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt; Select&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_4","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_5","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_5","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselectfirsttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.SelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task&lt;TResult&gt; SelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_5","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_6","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreaderselectfirsttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.SelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task&lt;TResult&gt; SelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_6","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_7","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryexecutestring-cancellationtoken-tparameter-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TryExecute(string, CancellationToken, TParameter[]) Method C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;int&gt;&gt; TryExecute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken), params TParameter[] parameters);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_8","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p></p> <p><code>parameters</code> TParameter[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int32&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselecttresultstring-ienumerabletparameter-functreadertasktresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_7","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_9","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_9","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselecttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_8","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_10","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_10","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselecttresultstring-ienumerabletparameter-functreadertresult-bool-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_9","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_11","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_11","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselecttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_10","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_12","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_12","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselectfirsttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_11","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_13","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#isqlstorageprovidertparametertparameterfactorytreadertryselectfirsttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;.TrySelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#type-parameters_12","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#parameters_14","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/ISqlStorageProviderOf3/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/","title":"SqlParameterFactory&lt;TParameter&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#sqlparameterfactorytparameter-class","title":"SqlParameterFactory&lt;TParameter&gt; Class","text":"C#<pre><code>public abstract class SqlParameterFactory&lt;TParameter&gt; :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;TParameter&gt;\n    where TParameter : HAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>Inheritance System.Object \ud83e\udc52 SqlParameterFactory <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;TParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#sqlparameterfactoryparameterprefix-property","title":"SqlParameterFactory.ParameterPrefix Property C#<pre><code>public virtual string ParameterPrefix { get; }\n</code></pre> <p>Implements ParameterPrefix</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#sqlparameterfactorytparameteraddprefixtonamestring-method","title":"SqlParameterFactory&lt;TParameter&gt;.AddPrefixToName(string) Method C#<pre><code>protected string AddPrefixToName(string name);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#returns","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#sqlparameterfactorytparametercreatetvaluestring-tvalue-method","title":"SqlParameterFactory&lt;TParameter&gt;.Create&lt;TValue&gt;(string, TValue) Method C#<pre><code>public abstract TParameter Create&lt;TValue&gt;(string name, TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>value</code> TValue</p> <p>Implements Create&lt;TValue&gt;(string, TValue)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlParameterFactoryOf1/#returns_1","title":"Returns","text":"<p>TParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/","title":"SqlRepositoryInformationStore&lt;TStorageProvider,TReader,TRepositoryInformation&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/#sqlrepositoryinformationstoretstorageprovidertreadertrepositoryinformation-class","title":"SqlRepositoryInformationStore&lt;TStorageProvider,TReader,TRepositoryInformation&gt; Class","text":"C#<pre><code>public abstract class SqlRepositoryInformationStore&lt;TStorageProvider,TReader,TRepositoryInformation&gt; : HAKOM.Persistence.Core.Net.Api.RepositoryInformationStore&lt;TStorageProvider, TRepositoryInformation&gt;\n    where TStorageProvider : HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;\n    where TReader : System.Data.IDataReader\n    where TRepositoryInformation : HAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p></p> <p><code>TReader</code></p> <p></p> <p><code>TRepositoryInformation</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt; \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.RepositoryInformationStore&lt;TStorageProvider,TRepositoryInformation&gt; \ud83e\udc52 SqlRepositoryInformationStore"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/#sqlrepositoryinformationstoreirepositoryversionprovider-iversion-icache-constructor","title":"SqlRepositoryInformationStore(IRepositoryVersionProvider, IVersion, ICache) Constructor C#<pre><code>protected SqlRepositoryInformationStore(HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionProvider repositoryVersionProvider, HAKOM.Versioning.Core.Net.Api.IVersion currentVersion, HAKOM.Persistence.Core.Net.Api.Caching.ICache&lt;TRepositoryInformation&gt;? repositoryInformationCache=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlRepositoryInformationStoreOf3/#parameters","title":"Parameters","text":"<p><code>repositoryVersionProvider</code> IRepositoryVersionProvider</p> <p></p> <p><code>currentVersion</code> IVersion</p> <p></p> <p><code>repositoryInformationCache</code> HAKOM.Persistence.Core.Net.Api.Caching.ICache&lt;TRepositoryInformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactory-class","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; Class","text":"<p>Base class for SQL-based storage providers.</p> C#<pre><code>public abstract class SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; : HAKOM.Persistence.Core.Net.Api.Storage.StorageProvider,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TParameter, TParameterFactory, TReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TConnection : class, System.Data.IDbConnection\n    where TCommand : class, System.Data.IDbCommand\n    where TNativeParameter : class, System.Data.IDbDataParameter\n    where TReader : class, System.Data.IDataReader\n    where TParameter : class, HAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;TNativeParameter&gt;\n    where TParameterFactory : class, HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;TParameter&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters","title":"Type parameters","text":"<p><code>TConnection</code></p> <p></p> <p><code>TCommand</code></p> <p></p> <p><code>TNativeParameter</code></p> <p></p> <p><code>TReader</code></p> <p></p> <p><code>TParameter</code></p> <p></p> <p><code>TParameterFactory</code></p> <p>Inheritance System.Object \ud83e\udc52 StorageProvider \ud83e\udc52 SqlStorageProvider <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;, HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;, ISqlStorageProvider, IStorageProvider, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderdbproviderfactory-tparameterfactory-ilogger-constructor","title":"SqlStorageProvider(DbProviderFactory, TParameterFactory, ILogger&gt;) Constructor C#<pre><code>protected SqlStorageProvider(System.Data.Common.DbProviderFactory providerFactory, TParameterFactory parameterFactory, Microsoft.Extensions.Logging.ILogger&lt;HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;&gt;? logger=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters","title":"Parameters","text":"<p><code>providerFactory</code> System.Data.Common.DbProviderFactory</p> <p></p> <p><code>parameterFactory</code> TParameterFactory</p> <p></p> <p><code>logger</code> Microsoft.Extensions.Logging.ILogger&lt;HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TParameter,TParameterFactory,TReader&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderconnectionstring-property","title":"SqlStorageProvider.ConnectionString Property C#<pre><code>protected string ConnectionString { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderdefaultordercollation-property","title":"SqlStorageProvider.DefaultOrderCollation Property C#<pre><code>protected abstract string? DefaultOrderCollation { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderescapecharacter-property","title":"SqlStorageProvider.EscapeCharacter Property C#<pre><code>public virtual char EscapeCharacter { get; }\n</code></pre> <p>Implements EscapeCharacter</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#property-value_2","title":"Property Value","text":"<p>System.Char</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderordercollation-property","title":"SqlStorageProvider.OrderCollation Property C#<pre><code>public string? OrderCollation { get; set; }\n</code></pre> <p>Implements OrderCollation</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageproviderparameters-property","title":"SqlStorageProvider.Parameters Property C#<pre><code>public TParameterFactory Parameters { get; }\n</code></pre> <p>Implements Parameters</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#property-value_4","title":"Property Value","text":"<p>TParameterFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryapplyprovidersettingsireadonlydictionarystringstring-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ApplyProviderSettings(IReadOnlyDictionary&lt;string,string&gt;) Method <p>Handles common settings for SQL based storage providers. The following are currently handled: - \"MaxDbConnections\" (integer) - controls how many concurrent connections to the database should be opened at most. If derived classes override this, they should call  </p> <p>C#<pre><code>settings = await base.ApplyProviderSettings([settings](SqlStorageProviderOf6.md#HAKOM.Persistence.Sql.Net.Api.SqlStorageProvider_TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory_.ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary_string,string_).settings 'HAKOM.Persistence.Sql.Net.Api.SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;).settings')).ConfigureAwait(false);  \n</code></pre> first. If a derived implementation wants to take over the handling of one of the aforementioned common settings, it can do so before calling the base implementation and then remove the respective key from the dictionary before passing it to base.ApplyProviderSettings.</p> C#<pre><code>protected override System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt; ApplyProviderSettings(System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; settings);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_1","title":"Parameters","text":"<p><code>settings</code> System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</p> <p>The settings to apply</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt; The remaining settings from settings that could not be applied to the storage provider.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryclosetconnection-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.Close(TConnection, CancellationToken) Method <p>Override this method to perform all operations necessary to close down a connection asynchronously.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task Close(TConnection connection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_2","title":"Parameters","text":"<p><code>connection</code> TConnection</p> <p>The  that should be closed</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the  has been closed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryconfigureconnectiontconnection-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ConfigureConnection(TConnection) Method C#<pre><code>protected virtual void ConfigureConnection(TConnection connection);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_3","title":"Parameters","text":"<p><code>connection</code> TConnection</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorycreateconnectionstringbuilder-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.CreateConnectionStringBuilder() Method C#<pre><code>protected abstract System.Data.Common.DbConnectionStringBuilder CreateConnectionStringBuilder();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_2","title":"Returns","text":"<p>System.Data.Common.DbConnectionStringBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryexecutereadertcommand-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ExecuteReader(TCommand, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;TReader&gt; ExecuteReader(TCommand command, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_4","title":"Parameters","text":"<p><code>command</code> TCommand</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TReader&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorygetunexpectederrorduringqueryexceptionstring-exception-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.GetUnexpectedErrorDuringQueryException(string, Exception) Method C#<pre><code>protected static HAKOM.Persistence.Sql.Net.Api.Exceptions.UnexpectedErrorDuringQueryException GetUnexpectedErrorDuringQueryException(string sql, System.Exception innerException);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_5","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>innerException</code> System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_4","title":"Returns","text":"<p>UnexpectedErrorDuringQueryException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryopentconnection-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.Open(TConnection, CancellationToken) Method <p>Override this method to perform all operations necessary to establish a connection asynchronously.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task Open(TConnection connection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_6","title":"Parameters","text":"<p><code>connection</code> TConnection</p> <p>The  that should be opened</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the  has been opened.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorypreparecommandtcommand-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.PrepareCommand(TCommand, CancellationToken) Method <p>Optionally call the provider-specific implementation of Prepare on the  provided. Return a completed System.Threading.Tasks.Task if no preparation of commands is to be performed.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task PrepareCommand(TCommand command, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_7","title":"Parameters","text":"<p><code>command</code> TCommand</p> <p>The  to be prepared.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes when the  has been prepared.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryprepareconnectioncancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.PrepareConnection(CancellationToken) Method C#<pre><code>protected virtual System.Threading.Tasks.Task&lt;TConnection&gt; PrepareConnection(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TConnection&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadtreader-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.Read(TReader, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;bool&gt; Read(TReader reader, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_9","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbooltreader-int-bool-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadBool(TReader, int, bool, bool) Method C#<pre><code>public bool ReadBool(TReader reader, int columnIndex, bool nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_10","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Boolean</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_9","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbooltreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadBool(TReader, int, bool) Method C#<pre><code>public bool ReadBool(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_11","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_10","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbooltreader-int-nullablebool-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadBool(TReader, int, Nullable&lt;bool&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;bool&gt; ReadBool(TReader reader, int columnIndex, System.Nullable&lt;bool&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_12","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Boolean&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_11","title":"Returns","text":"<p>System.Nullable&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbytetreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadByte(TReader, int, bool) Method C#<pre><code>public byte ReadByte(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_13","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_12","title":"Returns","text":"<p>System.Byte</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbytetreader-int-byte-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadByte(TReader, int, byte, bool) Method C#<pre><code>public byte ReadByte(TReader reader, int columnIndex, byte nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_14","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Byte</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_13","title":"Returns","text":"<p>System.Byte</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadbytetreader-int-nullablebyte-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadByte(TReader, int, Nullable&lt;byte&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;byte&gt; ReadByte(TReader reader, int columnIndex, System.Nullable&lt;byte&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_15","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Byte&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_14","title":"Returns","text":"<p>System.Nullable&lt;System.Byte&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddatetimetreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDateTime(TReader, int, bool) Method C#<pre><code>public System.DateTime ReadDateTime(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_16","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_15","title":"Returns","text":"<p>System.DateTime</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddatetimetreader-int-datetime-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDateTime(TReader, int, DateTime, bool) Method C#<pre><code>public System.DateTime ReadDateTime(TReader reader, int columnIndex, System.DateTime nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_17","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.DateTime</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_16","title":"Returns","text":"<p>System.DateTime</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddatetimetreader-int-nullabledatetime-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDateTime(TReader, int, Nullable&lt;DateTime&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;System.DateTime&gt; ReadDateTime(TReader reader, int columnIndex, System.Nullable&lt;System.DateTime&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_18","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.DateTime&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_17","title":"Returns","text":"<p>System.Nullable&lt;System.DateTime&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddecimaltreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDecimal(TReader, int, bool) Method C#<pre><code>public decimal ReadDecimal(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_19","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_18","title":"Returns","text":"<p>System.Decimal</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddecimaltreader-int-decimal-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDecimal(TReader, int, decimal, bool) Method C#<pre><code>public decimal ReadDecimal(TReader reader, int columnIndex, decimal nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_20","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Decimal</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_19","title":"Returns","text":"<p>System.Decimal</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreaddecimaltreader-int-nullabledecimal-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadDecimal(TReader, int, Nullable&lt;decimal&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;decimal&gt; ReadDecimal(TReader reader, int columnIndex, System.Nullable&lt;decimal&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_21","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Decimal&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_20","title":"Returns","text":"<p>System.Nullable&lt;System.Decimal&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadinttreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadInt(TReader, int, bool) Method C#<pre><code>public int ReadInt(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_22","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_21","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadinttreader-int-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadInt(TReader, int, int, bool) Method C#<pre><code>public int ReadInt(TReader reader, int columnIndex, int nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_23","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_22","title":"Returns","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadinttreader-int-nullableint-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadInt(TReader, int, Nullable&lt;int&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;int&gt; ReadInt(TReader reader, int columnIndex, System.Nullable&lt;int&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_24","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int32&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_23","title":"Returns","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadlongtreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadLong(TReader, int, bool) Method C#<pre><code>public long ReadLong(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_25","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_24","title":"Returns","text":"<p>System.Int64</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadlongtreader-int-long-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadLong(TReader, int, long, bool) Method C#<pre><code>public long ReadLong(TReader reader, int columnIndex, long nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_26","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int64</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_25","title":"Returns","text":"<p>System.Int64</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadlongtreader-int-nullablelong-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadLong(TReader, int, Nullable&lt;long&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;long&gt; ReadLong(TReader reader, int columnIndex, System.Nullable&lt;long&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_27","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int64&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_26","title":"Returns","text":"<p>System.Nullable&lt;System.Int64&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadshorttreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadShort(TReader, int, bool) Method C#<pre><code>public short ReadShort(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_28","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_27","title":"Returns","text":"<p>System.Int16</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadshorttreader-int-short-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadShort(TReader, int, short, bool) Method C#<pre><code>public short ReadShort(TReader reader, int columnIndex, short nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_29","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Int16</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_28","title":"Returns","text":"<p>System.Int16</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadshorttreader-int-nullableshort-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadShort(TReader, int, Nullable&lt;short&gt;, bool) Method C#<pre><code>public virtual System.Nullable&lt;short&gt; ReadShort(TReader reader, int columnIndex, System.Nullable&lt;short&gt; nullValue=null, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_30","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.Nullable&lt;System.Int16&gt;</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_29","title":"Returns","text":"<p>System.Nullable&lt;System.Int16&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadstringtreader-int-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadString(TReader, int, bool) Method C#<pre><code>public string ReadString(TReader reader, int columnIndex, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_31","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_30","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadstringtreader-int-string-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadString(TReader, int, string, bool) Method C#<pre><code>public string ReadString(TReader reader, int columnIndex, string nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_32","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.String</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_31","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreadstringallowingnulltreader-int-string-bool-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReadStringAllowingNull(TReader, int, string, bool) Method C#<pre><code>public virtual string? ReadStringAllowingNull(TReader reader, int columnIndex, string? nullValue, bool validateColumnType=true);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_33","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnIndex</code> System.Int32</p> <p></p> <p><code>nullValue</code> System.String</p> <p></p> <p><code>validateColumnType</code> System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_32","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreleaseconnectiontconnection-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReleaseConnection(TConnection, CancellationToken) Method C#<pre><code>protected virtual System.Threading.Tasks.Task ReleaseConnection(TConnection connection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_34","title":"Parameters","text":"<p><code>connection</code> TConnection</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_33","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactoryreplaceorescapewildcardstring-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ReplaceOrEscapeWildcard(string) Method C#<pre><code>public virtual string ReplaceOrEscapeWildcard(string query);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_35","title":"Parameters","text":"<p><code>query</code> System.String</p> <p>Implements ReplaceOrEscapeWildcard(string)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_34","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorythrowcolumnisnullexceptiontresulttreader-int-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.ThrowColumnIsNullException&lt;TResult&gt;(TReader, int) Method C#<pre><code>protected TResult ThrowColumnIsNullException&lt;TResult&gt;(TReader reader, int columnindex);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_1","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_36","title":"Parameters","text":"<p><code>reader</code> TReader</p> <p></p> <p><code>columnindex</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_35","title":"Returns","text":"<p>TResult</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException</p> <p>ColumnIsNullException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytrycreatecommandtconnection-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TryCreateCommand(TConnection) Method C#<pre><code>protected virtual HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCommand&gt; TryCreateCommand(TConnection connection);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_37","title":"Parameters","text":"<p><code>connection</code> TConnection</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_36","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TCommand&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryexecutestring-cancellationtoken-tparameter-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TryExecute(string, CancellationToken, TParameter[]) Method C#<pre><code>public virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;int&gt;&gt; TryExecute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken), params TParameter[] parameters);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_38","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p></p> <p><code>parameters</code> TParameter[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_37","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int32&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryexecutestring-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TryExecute(string, CancellationToken) Method C#<pre><code>public virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;int&gt;&gt; TryExecute(string sql, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_39","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryExecute(string, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_38","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int32&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryhandlefailedconnectionattempttconnection-exception-resulttconnection-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TryHandleFailedConnectionAttempt(TConnection, Exception, Result&lt;TConnection&gt;) Method C#<pre><code>protected virtual bool TryHandleFailedConnectionAttempt(TConnection connection, System.Exception exception, out HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConnection&gt; handledResult);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_40","title":"Parameters","text":"<p><code>connection</code> TConnection</p> <p></p> <p><code>exception</code> System.Exception</p> <p></p> <p><code>handledResult</code> HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConnection&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_39","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryprepareconnectioncancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TryPrepareConnection(CancellationToken) Method C#<pre><code>protected virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConnection&gt;&gt; TryPrepareConnection(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_41","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_40","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConnection&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-ienumerabletparameter-functreadertasktresult-bool-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_2","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_42","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_41","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_3","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_43","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_42","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-ienumerabletparameter-functreadertresult-bool-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_4","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_44","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_43","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_5","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_45","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_44","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-functreadertasktresult-bool-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_6","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_46","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_45","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-functreadertasktresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_7","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_47","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_46","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-functreadertresult-bool-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, bool, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, bool abortOnParseError, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_8","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_48","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>abortOnParseError</code> System.Boolean</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_47","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselecttresultstring-functreadertresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelect&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>public System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelect&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_9","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_49","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_48","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselectfirsttresultstring-ienumerabletparameter-functreadertasktresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_10","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_50","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_49","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselectfirsttresultstring-ienumerabletparameter-functreadertresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelectFirst&lt;TResult&gt;(string, IEnumerable&lt;TParameter&gt;, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Collections.Generic.IEnumerable&lt;TParameter&gt; parameters, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_11","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_51","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parameters</code> System.Collections.Generic.IEnumerable&lt;TParameter&gt;</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_50","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselectfirsttresultstring-functreadertasktresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelectFirst&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_12","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_52","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_51","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#sqlstorageprovidertconnectiontcommandtnativeparametertreadertparametertparameterfactorytryselectfirsttresultstring-functreadertresult-cancellationtoken-method","title":"SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.TrySelectFirst&lt;TResult&gt;(string, Func&lt;TReader,TResult&gt;, CancellationToken) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt; TrySelectFirst&lt;TResult&gt;(string sql, System.Func&lt;TReader,TResult&gt; parser, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#type-parameters_13","title":"Type parameters","text":"<p><code>TResult</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#parameters_53","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>parser</code> System.Func&lt;TReader,TResult&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/SqlStorageProviderOf6/#returns_52","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TResult&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/","title":"HAKOM.Persistence.Sql.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/#hakompersistencesqlnetapiexceptions-namespace","title":"HAKOM.Persistence.Sql.Net.Api.Exceptions Namespace","text":"Classes AttemptingToConnectToSqlDatabaseFailedException The exception that is thrown when no connection to the SQL data base has been established. ColumnIsNullException Thrown when attempting to read null values with not-nullable return types. ConnectionDidNotReturnTheProperCommandTypeException TryCreateCommand(TConnection) is not able to create a command object. InvalidColumnTypeException Thrown if the column type does not match the expected type. NoParserSuppliedException Neither sync nor async parser function was supplied for a select method of: SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;. ParserThrewAnErrorException This exception is thrown when a value from an SQL database (with Select or TrySelect) could not be parsed to the desired object. ProviderFactoryDidNotReturnTheProperConnectionTypeException Thrown if the System.Data.Common.DbProviderFactory returns a connection type which does not match TConnection of SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;. SelectQueryDidNotReturnAnyRowsException Thrown when a call to SelectFirst&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) or similar returned no results. UnexpectedErrorDuringQueryException Thrown when an unexpected error occurred during an SQL query."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/","title":"AttemptingToConnectToSqlDatabaseFailedException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#attemptingtoconnecttosqldatabasefailedexception-class","title":"AttemptingToConnectToSqlDatabaseFailedException Class","text":"<p>The exception that is thrown when no connection to the SQL data base has been established.</p> C#<pre><code>public sealed class AttemptingToConnectToSqlDatabaseFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AttemptingToConnectToSqlDatabaseFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#remarks","title":"Remarks","text":"<p>When using PrepareConnection(CancellationToken) and no connection could be established to the database this exception is thrown. Check the repository settings and whether these settings can be used to connect to the database from the computer running the code.  </p> <p>This exception is identified by error code HK12028.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#attemptingtoconnecttosqldatabasefailedexceptionequivalenthttpstatuscode-property","title":"AttemptingToConnectToSqlDatabaseFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#attemptingtoconnecttosqldatabasefailedexceptionsettings-property","title":"AttemptingToConnectToSqlDatabaseFailedException.Settings Property","text":"<p>The configuration settings that contain information about the connection to which no connection could be established.</p> C#<pre><code>public System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Settings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/AttemptingToConnectToSqlDatabaseFailedException/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/","title":"ColumnIsNullException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/#columnisnullexception-class","title":"ColumnIsNullException Class","text":"<p>Thrown when attempting to read null values with not-nullable return types.</p> C#<pre><code>public sealed class ColumnIsNullException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ColumnIsNullException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/#remarks","title":"Remarks","text":"<p>When using any Read* method in SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; without the \"nullValue\" parameter and an expected not-nullable return value, this exception is thrown if the read value is null.  Either change the expected return value to a nullable type, provide the \"nullValue\" parameter to return a default not-nullable value if the read column is null, or ensure that the column will not return a null value when read.  </p> <p>This exception is identified by error code HK12025.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/#columnisnullexceptionequivalenthttpstatuscode-property","title":"ColumnIsNullException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ColumnIsNullException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/","title":"ConnectionDidNotReturnTheProperCommandTypeException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/#connectiondidnotreturnthepropercommandtypeexception-class","title":"ConnectionDidNotReturnTheProperCommandTypeException Class","text":"<p>TryCreateCommand(TConnection) is not able to create a command object.</p> C#<pre><code>public sealed class ConnectionDidNotReturnTheProperCommandTypeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConnectionDidNotReturnTheProperCommandTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/#remarks","title":"Remarks","text":"<p>When using TryCreateCommand(TConnection) the CreateCommand method of TConnection may not return null.  </p> <p>This exception is identified by error code HK12018.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/#connectiondidnotreturnthepropercommandtypeexceptionequivalenthttpstatuscode-property","title":"ConnectionDidNotReturnTheProperCommandTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ConnectionDidNotReturnTheProperCommandTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/","title":"InvalidColumnTypeException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/#invalidcolumntypeexception-class","title":"InvalidColumnTypeException Class","text":"<p>Thrown if the column type does not match the expected type.</p> C#<pre><code>public sealed class InvalidColumnTypeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidColumnTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/#remarks","title":"Remarks","text":"<p>When using any Read* method in SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; the column type must match the expected type of the read method.  Following table shows which method expects which c# type. If a database does not support this type an overload for that method must be provided for that storage provider.  </p> Method name Expected type <p>This exception is identified by error code HK12010.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/#invalidcolumntypeexceptionequivalenthttpstatuscode-property","title":"InvalidColumnTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/InvalidColumnTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/","title":"NoParserSuppliedException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/#noparsersuppliedexception-class","title":"NoParserSuppliedException Class","text":"<p>Neither sync nor async parser function was supplied for a select method of: SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.</p> C#<pre><code>public sealed class NoParserSuppliedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoParserSuppliedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/#remarks","title":"Remarks","text":"<p>When using a Select method of SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; a parser has to be provided (either sync or async) as a parameter.  </p> <p>This exception is identified by error code HK12019.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/#noparsersuppliedexceptionequivalenthttpstatuscode-property","title":"NoParserSuppliedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/NoParserSuppliedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/","title":"ParserThrewAnErrorException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/#parserthrewanerrorexception-class","title":"ParserThrewAnErrorException Class","text":"<p>This exception is thrown when a value from an SQL database (with Select or TrySelect) could not be parsed to the desired object.</p> C#<pre><code>public sealed class ParserThrewAnErrorException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ParserThrewAnErrorException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/#remarks","title":"Remarks","text":"<p>When using any overload of Select&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) or  TrySelect&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, bool, CancellationToken) and the given parser throws an exception this exception is thrown as a wrapper exception with the exception of the parser as inner exception.  </p> <p>This exception is identified by error code HK12032.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/#parserthrewanerrorexceptionequivalenthttpstatuscode-property","title":"ParserThrewAnErrorException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ParserThrewAnErrorException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/","title":"ProviderFactoryDidNotReturnTheProperConnectionTypeException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/#providerfactorydidnotreturntheproperconnectiontypeexception-class","title":"ProviderFactoryDidNotReturnTheProperConnectionTypeException Class","text":"<p>Thrown if the System.Data.Common.DbProviderFactory returns a connection type which does not match TConnection of SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt;.</p> C#<pre><code>public sealed class ProviderFactoryDidNotReturnTheProperConnectionTypeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ProviderFactoryDidNotReturnTheProperConnectionTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/#remarks","title":"Remarks","text":"<p>The System.Data.Common.DbProviderFactory provided for SqlStorageProvider&lt;TConnection,TCommand,TNativeParameter,TReader,TParameter,TParameterFactory&gt; initialization must return for System.Data.Common.DbProviderFactory.CreateConnection the same type for TConnection as given in the storage provider.  </p> <p>This exception is identified by error code HK12016.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/#providerfactorydidnotreturntheproperconnectiontypeexceptionequivalenthttpstatuscode-property","title":"ProviderFactoryDidNotReturnTheProperConnectionTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/ProviderFactoryDidNotReturnTheProperConnectionTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/","title":"SelectQueryDidNotReturnAnyRowsException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#selectquerydidnotreturnanyrowsexception-class","title":"SelectQueryDidNotReturnAnyRowsException Class","text":"<p>Thrown when a call to SelectFirst&lt;TResult&gt;(string, Func&lt;TReader,Task&lt;TResult&gt;&gt;, CancellationToken) or similar returned no results.</p> C#<pre><code>public sealed class SelectQueryDidNotReturnAnyRowsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SelectQueryDidNotReturnAnyRowsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#remarks","title":"Remarks","text":"<p>Either modify the query to return a result or insert data that matches the query before calling the method again.  </p> <p>This error is identified by error code HK12029.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#selectquerydidnotreturnanyrowsexceptionequivalenthttpstatuscode-property","title":"SelectQueryDidNotReturnAnyRowsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#selectquerydidnotreturnanyrowsexceptionquery-property","title":"SelectQueryDidNotReturnAnyRowsException.Query Property","text":"<p>The query, which caused the problem.</p> C#<pre><code>public string Query { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/SelectQueryDidNotReturnAnyRowsException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/","title":"UnexpectedErrorDuringQueryException","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#unexpectederrorduringqueryexception-class","title":"UnexpectedErrorDuringQueryException Class","text":"<p>Thrown when an unexpected error occurred during an SQL query.</p> C#<pre><code>public sealed class UnexpectedErrorDuringQueryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnexpectedErrorDuringQueryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#remarks","title":"Remarks","text":"<p>This may be due to an error with the database connection or an incorrect query. Inspect the Query and make sure a stable connection can be maintained with the underlying database.  </p> <p>This error is identified by error code HK12030.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#unexpectederrorduringqueryexceptionequivalenthttpstatuscode-property","title":"UnexpectedErrorDuringQueryException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#unexpectederrorduringqueryexceptionquery-property","title":"UnexpectedErrorDuringQueryException.Query Property","text":"<p>The query, which caused the problem.</p> C#<pre><code>public string Query { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Exceptions/UnexpectedErrorDuringQueryException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/","title":"HAKOM.Persistence.Sql.Net.Api.Versioning","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/#hakompersistencesqlnetapiversioning-namespace","title":"HAKOM.Persistence.Sql.Net.Api.Versioning Namespace","text":"Classes SqlRepositoryVersionStore&lt;TStorageProvider,TReader&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/","title":"SqlRepositoryVersionStore&lt;TStorageProvider,TReader&gt;","text":"<p>Assembly: HAKOM.Persistence.Sql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Net.Api.Versioning</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstoretstorageprovidertreader-class","title":"SqlRepositoryVersionStore&lt;TStorageProvider,TReader&gt; Class","text":"C#<pre><code>public abstract class SqlRepositoryVersionStore&lt;TStorageProvider,TReader&gt; : HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt;,\nHAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionStore\n    where TStorageProvider : HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;TReader&gt;\n    where TReader : System.Data.IDataReader\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p></p> <p><code>TReader</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Persistence.Core.Net.Api.Storage.Store&lt;TStorageProvider&gt; \ud83e\udc52 SqlRepositoryVersionStore <p>Implements IRepositoryVersionStore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstoreiversionfactory-irepositoryversionfactory-irepositoryversioncollectionfactory-constructor","title":"SqlRepositoryVersionStore(IVersionFactory, IRepositoryVersionFactory, IRepositoryVersionCollectionFactory) Constructor","text":"C#<pre><code>protected SqlRepositoryVersionStore(HAKOM.Versioning.Core.Net.Api.IVersionFactory versionFactory, HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionFactory repositoryVersionFactory, HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollectionFactory repositoryVersionCollectionFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#parameters","title":"Parameters","text":"<p><code>versionFactory</code> IVersionFactory</p> <p></p> <p><code>repositoryVersionFactory</code> IRepositoryVersionFactory</p> <p></p> <p><code>repositoryVersionCollectionFactory</code> IRepositoryVersionCollectionFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstorelatestversionsquery-property","title":"SqlRepositoryVersionStore.LatestVersionsQuery Property C#<pre><code>protected virtual string LatestVersionsQuery { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstorerepositoryversioncollections-property","title":"SqlRepositoryVersionStore.RepositoryVersionCollections Property C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollectionFactory RepositoryVersionCollections { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#property-value_1","title":"Property Value","text":"<p>IRepositoryVersionCollectionFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstorerepositoryversions-property","title":"SqlRepositoryVersionStore.RepositoryVersions Property C#<pre><code>protected HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionFactory RepositoryVersions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#property-value_2","title":"Property Value","text":"<p>IRepositoryVersionFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstoreversions-property","title":"SqlRepositoryVersionStore.Versions Property C#<pre><code>protected HAKOM.Versioning.Core.Net.Api.IVersionFactory Versions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#property-value_3","title":"Property Value","text":"<p>IVersionFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#sqlrepositoryversionstoretstorageprovidertreadertryfindlatestcancellationtoken-method","title":"SqlRepositoryVersionStore&lt;TStorageProvider,TReader&gt;.TryFindLatest(CancellationToken) Method C#<pre><code>public virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Persistence.Core.Net.Api.Versioning.IRepositoryVersionCollection&gt;&gt; TryFindLatest(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements TryFindLatest(CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/API/Versioning/SqlRepositoryVersionStoreOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IRepositoryVersionCollection&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/","title":"HAKOM.Persistence.Sql.Oracle.Net","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/#hakompersistencesqloraclenet-assembly","title":"HAKOM.Persistence.Sql.Oracle.Net Assembly","text":"Namespaces HAKOM.Persistence.Sql.Oracle.Net.Api HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions HAKOM.Persistence.Sql.Oracle.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/","title":"HAKOM.Persistence.Sql.Oracle.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/#hakompersistencesqloraclenetapi-namespace","title":"HAKOM.Persistence.Sql.Oracle.Net.Api Namespace","text":"Interfaces IOracleParameter IOracleParameterFactory IOracleStorageProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameter/","title":"IOracleParameter","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameter/#ioracleparameter-interface","title":"IOracleParameter Interface","text":"C#<pre><code>public interface IOracleParameter :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Oracle.ManagedDataAccess.Client.OracleParameter&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Oracle.ManagedDataAccess.Client.OracleParameter&gt;, ISqlParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/","title":"IOracleParameterFactory","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#ioracleparameterfactory-interface","title":"IOracleParameterFactory Interface","text":"C#<pre><code>public interface IOracleParameterFactory :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameter&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;IOracleParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#ioracleparameterfactorycreatetvaluestring-tvalue-parameterdirection-oracledbtype-nullabledbtype-method","title":"IOracleParameterFactory.Create&lt;TValue&gt;(string, TValue, ParameterDirection, OracleDbType, Nullable&lt;DbType&gt;) Method","text":"C#<pre><code>HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameter Create&lt;TValue&gt;(string name, TValue value, System.Data.ParameterDirection parameterDirection, Oracle.ManagedDataAccess.Client.OracleDbType oracleDbType, System.Nullable&lt;System.Data.DbType&gt; dbType=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>value</code> TValue</p> <p></p> <p><code>parameterDirection</code> System.Data.ParameterDirection</p> <p></p> <p><code>oracleDbType</code> Oracle.ManagedDataAccess.Client.OracleDbType</p> <p></p> <p><code>dbType</code> System.Nullable&lt;System.Data.DbType&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleParameterFactory/#returns","title":"Returns","text":"<p>IOracleParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/","title":"IOracleStorageProvider","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#ioraclestorageprovider-interface","title":"IOracleStorageProvider Interface","text":"C#<pre><code>public interface IOracleStorageProvider :\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameter, HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameterFactory, Oracle.ManagedDataAccess.Client.OracleDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Oracle.ManagedDataAccess.Client.OracleDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;IOracleParameter,IOracleParameterFactory,Oracle.ManagedDataAccess.Client.OracleDataReader&gt;, HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Oracle.ManagedDataAccess.Client.OracleDataReader&gt;, ISqlStorageProvider, IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#ioraclestorageproviderexecutereturningidstring-string-cancellationtoken-ioracleparameter-method","title":"IOracleStorageProvider.ExecuteReturningId(string, string, CancellationToken, IOracleParameter[]) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;int&gt; ExecuteReturningId(string sql, string idKey, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken), params HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameter[] parameters);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#parameters","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>idKey</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p></p> <p><code>parameters</code> IOracleParameter[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#ioraclestorageprovidertryexecutereturningidstring-string-cancellationtoken-ioracleparameter-method","title":"IOracleStorageProvider.TryExecuteReturningId(string, string, CancellationToken, IOracleParameter[]) Method","text":"C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;int&gt;&gt; TryExecuteReturningId(string sql, string idKey, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken), params HAKOM.Persistence.Sql.Oracle.Net.Api.IOracleParameter[] parameters);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#parameters_1","title":"Parameters","text":"<p><code>sql</code> System.String</p> <p></p> <p><code>idKey</code> System.String</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p></p> <p><code>parameters</code> IOracleParameter[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/IOracleStorageProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int32&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/","title":"HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/#hakompersistencesqloraclenetapiexceptions-namespace","title":"HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions Namespace","text":"Classes ClientAuthenticationProtocolNotSupportedException This error occurs when attempting to connect to an Oracle database that does not support the current authentication protocol version. DBColumnValueIsNeitherIntNorStringException Thrown when the read database column is neither string nor int. InvalidValueForSqlNetAllowedLogonVersionClientException This error occurs when the storage provider setting 'SqlNetAllowedLogonVersionClient' has an incorrect value. OracleException Base class for all Oracle related exceptions."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/","title":"ClientAuthenticationProtocolNotSupportedException","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/#clientauthenticationprotocolnotsupportedexception-class","title":"ClientAuthenticationProtocolNotSupportedException Class","text":"<p>This error occurs when attempting to connect to an Oracle database that does not support the current authentication protocol version.</p> C#<pre><code>public sealed class ClientAuthenticationProtocolNotSupportedException : HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions.OracleException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 OracleException \ud83e\udc52 ClientAuthenticationProtocolNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/#remarks","title":"Remarks","text":"<p>This may be the case if the database is substantially older than the current Oracle client driver being used to connect to it. It can also occur when connecting to a current version of an Oracle database that has outdated authentication settings configured.  </p> <p>In order to specify the version of the authentication protocol that the database supports, configure the 'SqlNetAllowedLogonVersionClient' setting in the storage provider settings.  </p> <p>This error can be identified by its code HK12044.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/#clientauthenticationprotocolnotsupportedexceptionequivalenthttpstatuscode-property","title":"ClientAuthenticationProtocolNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs during an HTTP request, the request should return an HTTP response with status code 500 (internal server error) since the client making the HTTP request will have no way to solve this problem. This will have to be corrected in the HTTP services configuration.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/ClientAuthenticationProtocolNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/","title":"DBColumnValueIsNeitherIntNorStringException","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#dbcolumnvalueisneitherintnorstringexception-class","title":"DBColumnValueIsNeitherIntNorStringException Class","text":"<p>Thrown when the read database column is neither string nor int.</p> C#<pre><code>public sealed class DBColumnValueIsNeitherIntNorStringException : HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions.OracleException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 OracleException \ud83e\udc52 DBColumnValueIsNeitherIntNorStringException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#remarks","title":"Remarks","text":"<p>When using ReadBool(TReader, int, Nullable&lt;bool&gt;, bool) with the IOracleStorageProvider the column to read must be either int or string, where \"0\" is false and everything except \"0\" is true.  </p> <p>This exception is identified by error code HK12023.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#dbcolumnvalueisneitherintnorstringexceptioncolumnname-property","title":"DBColumnValueIsNeitherIntNorStringException.ColumnName Property","text":"<p>The name of the column, which raised the error.</p> C#<pre><code>public string ColumnName { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#dbcolumnvalueisneitherintnorstringexceptionequivalenthttpstatuscode-property","title":"DBColumnValueIsNeitherIntNorStringException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/DBColumnValueIsNeitherIntNorStringException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/","title":"InvalidValueForSqlNetAllowedLogonVersionClientException","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/#invalidvalueforsqlnetallowedlogonversionclientexception-class","title":"InvalidValueForSqlNetAllowedLogonVersionClientException Class","text":"<p>This error occurs when the storage provider setting 'SqlNetAllowedLogonVersionClient' has an incorrect value.</p> C#<pre><code>public sealed class InvalidValueForSqlNetAllowedLogonVersionClientException : HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions.OracleException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 OracleException \ud83e\udc52 InvalidValueForSqlNetAllowedLogonVersionClientException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/#remarks","title":"Remarks","text":"<p>For possible values, refer to the official Oracle documentation for the  enumeration. </p> <p>This error can be identified by its code HK12043.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/#invalidvalueforsqlnetallowedlogonversionclientexceptionequivalenthttpstatuscode-property","title":"InvalidValueForSqlNetAllowedLogonVersionClientException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs during an HTTP request, the request should return an HTTP response with status code 500 (internal server error) since the client making the HTTP request will have no way to solve this problem. This will have to be corrected in the HTTP services configuration.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/InvalidValueForSqlNetAllowedLogonVersionClientException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/OracleException/","title":"OracleException","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/OracleException/#oracleexception-class","title":"OracleException Class","text":"<p>Base class for all Oracle related exceptions.</p> C#<pre><code>public abstract class OracleException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 OracleException</p> <p>Derived \u21b3 ClientAuthenticationProtocolNotSupportedException \u21b3 DBColumnValueIsNeitherIntNorStringException \u21b3 InvalidValueForSqlNetAllowedLogonVersionClientException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Exceptions/OracleException/#remarks","title":"Remarks","text":"<p>Derived exceptions should not be thrown by code outside this module.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/","title":"HAKOM.Persistence.Sql.Oracle.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/#hakompersistencesqloraclenetapiextensions-namespace","title":"HAKOM.Persistence.Sql.Oracle.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.Sql.Oracle.Net</p> <p>Namespace: HAKOM.Persistence.Sql.Oracle.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/#containerextensionsuseoraclethis-icontainer-method","title":"ContainerExtensions.UseOracle(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseOracle(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/Oracle/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/","title":"HAKOM.Persistence.Sql.PostgreSql.Net","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/#hakompersistencesqlpostgresqlnet-assembly","title":"HAKOM.Persistence.Sql.PostgreSql.Net Assembly","text":"Namespaces HAKOM.Persistence.Sql.PostgreSql.Net.Api HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions HAKOM.Persistence.Sql.PostgreSql.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/#hakompersistencesqlpostgresqlnetapi-namespace","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api Namespace","text":"Interfaces IPostgreSqlParameter IPostgreSqlParameterFactory IPostgreSqlStorageProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlParameter/","title":"IPostgreSqlParameter","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlParameter/#ipostgresqlparameter-interface","title":"IPostgreSqlParameter Interface","text":"C#<pre><code>public interface IPostgreSqlParameter :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Npgsql.NpgsqlParameter&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter,\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;System.Data.IDbDataParameter&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Npgsql.NpgsqlParameter&gt;, ISqlParameter, HAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;System.Data.IDbDataParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlParameterFactory/","title":"IPostgreSqlParameterFactory","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlParameterFactory/#ipostgresqlparameterfactory-interface","title":"IPostgreSqlParameterFactory Interface","text":"C#<pre><code>public interface IPostgreSqlParameterFactory :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;HAKOM.Persistence.Sql.PostgreSql.Net.Api.IPostgreSqlParameter&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;IPostgreSqlParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlStorageProvider/","title":"IPostgreSqlStorageProvider","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/IPostgreSqlStorageProvider/#ipostgresqlstorageprovider-interface","title":"IPostgreSqlStorageProvider Interface","text":"C#<pre><code>public interface IPostgreSqlStorageProvider :\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;HAKOM.Persistence.Sql.PostgreSql.Net.Api.IPostgreSqlParameter, HAKOM.Persistence.Sql.PostgreSql.Net.Api.IPostgreSqlParameterFactory, Npgsql.NpgsqlDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Npgsql.NpgsqlDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;IPostgreSqlParameter,IPostgreSqlParameterFactory,Npgsql.NpgsqlDataReader&gt;, HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Npgsql.NpgsqlDataReader&gt;, ISqlStorageProvider, IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/#hakompersistencesqlpostgresqlnetapiexceptions-namespace","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions Namespace","text":"Classes InvalidColumnTypeForBooleanValueException Thrown when the read database column is neither boolean nor integer. PostgreSqlException All PostgreSql related exceptions are thrown within this class."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/","title":"InvalidColumnTypeForBooleanValueException","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#invalidcolumntypeforbooleanvalueexception-class","title":"InvalidColumnTypeForBooleanValueException Class","text":"<p>Thrown when the read database column is neither boolean nor integer.</p> C#<pre><code>public sealed class InvalidColumnTypeForBooleanValueException : HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions.PostgreSqlException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 PostgreSqlException \ud83e\udc52 InvalidColumnTypeForBooleanValueException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#remarks","title":"Remarks","text":"<p>When using ReadBool(TReader, int, Nullable&lt;bool&gt;, bool) with the IPostgreSqlStorageProvider the column to read must be either boolean or integer. It the type is integer, \"0\" is equivalent to false and anything except \"0\" is true.  </p> <p>This exception is identified by error code HK12011.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#invalidcolumntypeforbooleanvalueexceptionactualtype-property","title":"InvalidColumnTypeForBooleanValueException.ActualType Property","text":"C#<pre><code>public System.Type ActualType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#property-value","title":"Property Value","text":"<p>System.Type</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#invalidcolumntypeforbooleanvalueexceptioncolumnname-property","title":"InvalidColumnTypeForBooleanValueException.ColumnName Property","text":"C#<pre><code>public string ColumnName { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#invalidcolumntypeforbooleanvalueexceptionequivalenthttpstatuscode-property","title":"InvalidColumnTypeForBooleanValueException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/InvalidColumnTypeForBooleanValueException/#property-value_2","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/PostgreSqlException/","title":"PostgreSqlException","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/PostgreSqlException/#postgresqlexception-class","title":"PostgreSqlException Class","text":"<p>All PostgreSql related exceptions are thrown within this class.</p> C#<pre><code>public abstract class PostgreSqlException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 PostgreSqlException</p> <p>Derived \u21b3 InvalidColumnTypeForBooleanValueException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Exceptions/PostgreSqlException/#remarks","title":"Remarks","text":"<p>These exceptions should not be thrown by code outside this module.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/#hakompersistencesqlpostgresqlnetapiextensions-namespace","title":"HAKOM.Persistence.Sql.PostgreSql.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.Sql.PostgreSql.Net</p> <p>Namespace: HAKOM.Persistence.Sql.PostgreSql.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/#containerextensionsusepostgresqlthis-icontainer-method","title":"ContainerExtensions.UsePostgreSql(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UsePostgreSql(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/PostgreSql/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/","title":"HAKOM.Persistence.Sql.SqlServer.Net","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/#hakompersistencesqlsqlservernet-assembly","title":"HAKOM.Persistence.Sql.SqlServer.Net Assembly","text":"Namespaces HAKOM.Persistence.Sql.SqlServer.Net.Api HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions HAKOM.Persistence.Sql.SqlServer.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/#hakompersistencesqlsqlservernetapi-namespace","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api Namespace","text":"Interfaces ISqlServerParameter ISqlServerParameterFactory ISqlServerStorageProvider"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameter/","title":"ISqlServerParameter","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameter/#isqlserverparameter-interface","title":"ISqlServerParameter Interface","text":"C#<pre><code>public interface ISqlServerParameter :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Microsoft.Data.SqlClient.SqlParameter&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameter&lt;Microsoft.Data.SqlClient.SqlParameter&gt;, ISqlParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/","title":"ISqlServerParameterFactory","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#isqlserverparameterfactory-interface","title":"ISqlServerParameterFactory Interface","text":"C#<pre><code>public interface ISqlServerParameterFactory :\nHAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;HAKOM.Persistence.Sql.SqlServer.Net.Api.ISqlServerParameter&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;ISqlServerParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#isqlserverparameterfactorycreatetvaluestring-tvalue-string-method","title":"ISqlServerParameterFactory.Create&lt;TValue&gt;(string, TValue, string) Method","text":"C#<pre><code>HAKOM.Persistence.Sql.SqlServer.Net.Api.ISqlServerParameter Create&lt;TValue&gt;(string name, TValue value, string dataTableName);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>value</code> TValue</p> <p></p> <p><code>dataTableName</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#returns","title":"Returns","text":"<p>ISqlServerParameter</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#isqlserverparameterfactorycreatetvaluestring-tvalue-sqldbtype-int-method","title":"ISqlServerParameterFactory.Create&lt;TValue&gt;(string, TValue, SqlDbType, int) Method","text":"C#<pre><code>HAKOM.Persistence.Sql.SqlServer.Net.Api.ISqlServerParameter Create&lt;TValue&gt;(string name, TValue value, System.Data.SqlDbType dbType, int size);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p></p> <p><code>value</code> TValue</p> <p></p> <p><code>dbType</code> System.Data.SqlDbType</p> <p></p> <p><code>size</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerParameterFactory/#returns_1","title":"Returns","text":"<p>ISqlServerParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerStorageProvider/","title":"ISqlServerStorageProvider","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/ISqlServerStorageProvider/#isqlserverstorageprovider-interface","title":"ISqlServerStorageProvider Interface","text":"C#<pre><code>public interface ISqlServerStorageProvider :\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;HAKOM.Persistence.Sql.SqlServer.Net.Api.ISqlServerParameter, HAKOM.Persistence.Sql.SqlServer.Net.Api.ISqlServerParameterFactory, Microsoft.Data.SqlClient.SqlDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Microsoft.Data.SqlClient.SqlDataReader&gt;,\nHAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider,\nHAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre> <p>Implements HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;ISqlServerParameter,ISqlServerParameterFactory,Microsoft.Data.SqlClient.SqlDataReader&gt;, HAKOM.Persistence.Sql.Net.Api.ISqlStorageProvider&lt;Microsoft.Data.SqlClient.SqlDataReader&gt;, ISqlStorageProvider, IStorageProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/#hakompersistencesqlsqlservernetapiexceptions-namespace","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions Namespace","text":"Classes SqlClientFactoryCouldNotBeLoadedException This exception indicates that there was an error loading Microsoft.Data.SqlClient causingSqlClientFactory.Instance to be null. This is most likely a deployment issue. SqlServerException All SQL Server related exceptions are thrown within this class."},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/","title":"SqlClientFactoryCouldNotBeLoadedException","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/#sqlclientfactorycouldnotbeloadedexception-class","title":"SqlClientFactoryCouldNotBeLoadedException Class","text":"<p>This exception indicates that there was an error loading Microsoft.Data.SqlClient causing SqlClientFactory.Instance to be null. This is most likely a deployment issue.</p> C#<pre><code>public sealed class SqlClientFactoryCouldNotBeLoadedException : HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions.SqlServerException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SqlServerException \ud83e\udc52 SqlClientFactoryCouldNotBeLoadedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/#remarks","title":"Remarks","text":"<p>When using UseSqlServer(this IContainer) the SqlClientFactory.Instance may not be null.  </p> <p>This exception is identified by error code HK12026.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/#sqlclientfactorycouldnotbeloadedexceptionequivalenthttpstatuscode-property","title":"SqlClientFactoryCouldNotBeLoadedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlClientFactoryCouldNotBeLoadedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlServerException/","title":"SqlServerException","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlServerException/#sqlserverexception-class","title":"SqlServerException Class","text":"<p>All SQL Server related exceptions are thrown within this class.</p> C#<pre><code>public abstract class SqlServerException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SqlServerException</p> <p>Derived \u21b3 SqlClientFactoryCouldNotBeLoadedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Exceptions/SqlServerException/#remarks","title":"Remarks","text":"<p>These exceptions should not be thrown by code outside this module.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/#hakompersistencesqlsqlservernetapiextensions-namespace","title":"HAKOM.Persistence.Sql.SqlServer.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Persistence.Sql.SqlServer.Net</p> <p>Namespace: HAKOM.Persistence.Sql.SqlServer.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/#containerextensionsusesqlserverthis-icontainer-method","title":"ContainerExtensions.UseSqlServer(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSqlServer(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Persistence/Sql/SqlServer/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/","title":"HAKOM.Security.Core.Net","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/#hakomsecuritycorenet-assembly","title":"HAKOM.Security.Core.Net Assembly","text":"Namespaces HAKOM.Security.Core.Net.Api.Authentication HAKOM.Security.Core.Net.Api.Authentication.Exceptions HAKOM.Security.Core.Net.Api.Authentication.Extensions HAKOM.Security.Core.Net.Api.Authorization HAKOM.Security.Core.Net.Api.Authorization.Exceptions HAKOM.Security.Core.Net.Api.Authorization.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/","title":"HAKOM.Security.Core.Net.Api.Authentication","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/#hakomsecuritycorenetapiauthentication-namespace","title":"HAKOM.Security.Core.Net.Api.Authentication Namespace","text":"Classes ConfigurableIdentityProvider Base class to be used for custom identity providers that can be used by configuration Structs ClaimTransformation Represents a transformation that should be applied to a claim issued by an identity provider. Interfaces IAuthenticationSettings Contains settings necessary for the correct operation of ConfigurableIdentityProviders. IChallengeContext IChallengeContextFactory Used to create instances of IChallengeContext for use in identity providers to handle scenarios where additional information such as credentials need to be provided for authentication. IConfigurableIdentityProvider An IIdentityProvider which can be configured with IIdentityProviderSettings. IIdentityProvider Used to authenticate the user and provide System.Security.Claims.ClaimsIdentity objects. IIdentityProviderFactory Creates IIdentityProviders. IIdentityProviderSettings Settings used to configure IIdentityProvider objects. Enums ChallengeBehavior Describes whether a challenge will be issued during authentication. Delegates ChallengeHandler(object, IChallengeContext, CancellationToken) Used to handle authentication challenge events."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeBehavior/","title":"ChallengeBehavior","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeBehavior/#challengebehavior-enum","title":"ChallengeBehavior Enum","text":"<p>Describes whether a challenge will be issued during authentication.</p> C#<pre><code>public enum ChallengeBehavior\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeBehavior/#fields","title":"Fields","text":"<p><code>Auto</code> 0</p> <p>Lets the identity provider chose whether to challenge for credentials or not.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeBehavior/#remarks","title":"Remarks","text":"<p>For example, an identity provider may challenge for new credentials in order to refresh information about the current identity after some time or may only challenge once and cache the provided credentials.</p> <p></p> <p><code>DoNotChallenge</code> 1</p> <p>Don't challenge for credentials. If authentication requires credentials, it may fail.</p> <p></p> <p><code>ForceChallenge</code> 2</p> <p>Forces the identity provider to issue a challenge for credentials.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeBehavior/#remarks_1","title":"Remarks","text":"<p>This can be used to force the identity provider to prompt for new credentials, i.e. if the application wants to allow switching user in a particular case.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeHandler%28object%2C%20IChallengeContext%2C%20CancellationToken%29/","title":"ChallengeHandler(object, IChallengeContext, CancellationToken)","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeHandler%28object%2C%20IChallengeContext%2C%20CancellationToken%29/#challengehandlerobject-ichallengecontext-cancellationtoken-delegate","title":"ChallengeHandler(object, IChallengeContext, CancellationToken) Delegate","text":"<p>Used to handle authentication challenge events.</p> C#<pre><code>public delegate System.Threading.Tasks.Task ChallengeHandler(object? sender, HAKOM.Security.Core.Net.Api.Authentication.IChallengeContext challengeContext, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeHandler%28object%2C%20IChallengeContext%2C%20CancellationToken%29/#parameters","title":"Parameters","text":"<p><code>sender</code> System.Object</p> <p>The object where the challenge was issued.</p> <p></p> <p><code>challengeContext</code> IChallengeContext</p> <p>The IChallengeContext containing additional data about the challenge.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that may be used to interrupt the challenge event.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ChallengeHandler%28object%2C%20IChallengeContext%2C%20CancellationToken%29/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the completion of the challenge.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/","title":"ClaimTransformation","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformation-struct","title":"ClaimTransformation Struct","text":"<p>Represents a transformation that should be applied to a claim issued by an identity provider.</p> C#<pre><code>public readonly struct ClaimTransformation :\nSystem.IEquatable&lt;HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation&gt;\n</code></pre> <p>Implements System.IEquatable&lt;ClaimTransformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#remarks","title":"Remarks","text":"<p>Claim transformations may be necessary if specific claim values are required that are not directly issued by an identity provider.  </p> <p>An example of this would be mapping opaque group ids assigned by an identity provider to friendly named groups used by an authorization service. So for example, if the authorization service requires the identity to have a 'role' claim with a value 'administrator', but the identity provider only issues a 'group' claim with some GUID to identities within the 'Administrators' group, the application can use a ClaimTransformation to map that claim accordingly:  </p> C#<pre><code>ClaimTransformation administratorClaimTranformation = new() {  \n    RetainOriginal = false,  \n    FromType = \"group\",  \n    FromValue = \"&lt;some-guid&gt;\",  \n    ToType = \"role\",  \n    ToValue = \"administrator\"  \n}  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationfromtype-property","title":"ClaimTransformation.FromType Property","text":"<p>The string to match a claim type by.</p> C#<pre><code>public string FromType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#remarks_1","title":"Remarks","text":"<p>Only claims of this type should be transformed by this rule.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationfromvalue-property","title":"ClaimTransformation.FromValue Property","text":"<p>The string to match a claim value by.</p> C#<pre><code>public string? FromValue { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#remarks_2","title":"Remarks","text":"<p>If null, any claim value with FromType will be transformed. If not null, only claims that match this value will be transformed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationorder-property","title":"ClaimTransformation.Order Property","text":"<p>When multiple claim transformations are applied, order matters as they are applied sequentially to an identity. The order may depend on registration or configuration order of the claim transformations. This property can be used to explicitly specify a relative order.</p> C#<pre><code>public System.Nullable&lt;int&gt; Order { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value_2","title":"Property Value","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationretainoriginal-property","title":"ClaimTransformation.RetainOriginal Property","text":"<p>Specifies whether the claim should be retained as part of the final identity after the transformation has been applied.</p> C#<pre><code>public bool RetainOriginal { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value_3","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationtotype-property","title":"ClaimTransformation.ToType Property","text":"<p>The type of the claim after transformation.</p> C#<pre><code>public string? ToType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value_4","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#remarks_3","title":"Remarks","text":"<p>If null, the type will not be changed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationtovalue-property","title":"ClaimTransformation.ToValue Property","text":"<p>The value of the claim after transformation.</p> C#<pre><code>public string? ToValue { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#property-value_5","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationequalsclaimtransformation-method","title":"ClaimTransformation.Equals(ClaimTransformation) Method","text":"C#<pre><code>public bool Equals(HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#parameters","title":"Parameters","text":"<p><code>other</code> ClaimTransformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationequalsobject-method","title":"ClaimTransformation.Equals(object) Method","text":"<p>Indicates whether this instance and a specified object are equal.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#parameters_1","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The object to compare with the current instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns_1","title":"Returns","text":"<p>System.Boolean true if obj and this instance are the same type and represent the same value; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationgethashcode-method","title":"ClaimTransformation.GetHashCode() Method","text":"<p>Returns the hash code for this instance.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns_2","title":"Returns","text":"<p>System.Int32 A 32-bit signed integer that is the hash code for this instance.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationtryapplyclaim-claim-method","title":"ClaimTransformation.TryApply(Claim, Claim) Method","text":"<p>Tries to apply this transformation to the given claim.</p> C#<pre><code>public bool TryApply(System.Security.Claims.Claim claim, out System.Security.Claims.Claim? transformed);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#parameters_2","title":"Parameters","text":"<p><code>claim</code> System.Security.Claims.Claim</p> <p>The claim to try to apply the transformation to.</p> <p></p> <p><code>transformed</code> System.Security.Claims.Claim</p> <p>The transformed claim. If this is null when the method returns true, the claim should be removed from the identity.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns_3","title":"Returns","text":"<p>System.Boolean true if the transformation has been applied, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationoperator-claimtransformation-claimtransformation-operator","title":"ClaimTransformation.operator ==(ClaimTransformation, ClaimTransformation) Operator","text":"C#<pre><code>public static bool operator ==(HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation left, HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#parameters_3","title":"Parameters","text":"<p><code>left</code> ClaimTransformation</p> <p></p> <p><code>right</code> ClaimTransformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns_4","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#claimtransformationoperator-claimtransformation-claimtransformation-operator_1","title":"ClaimTransformation.operator !=(ClaimTransformation, ClaimTransformation) Operator","text":"C#<pre><code>public static bool operator !=(HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation left, HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#parameters_4","title":"Parameters","text":"<p><code>left</code> ClaimTransformation</p> <p></p> <p><code>right</code> ClaimTransformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ClaimTransformation/#returns_5","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/","title":"ConfigurableIdentityProvider","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovider-class","title":"ConfigurableIdentityProvider Class","text":"<p>Base class to be used for custom identity providers that can be used by configuration</p> C#<pre><code>public abstract class ConfigurableIdentityProvider :\nHAKOM.Security.Core.Net.Api.Authentication.IConfigurableIdentityProvider,\nHAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ConfigurableIdentityProvider</p> <p>Implements IConfigurableIdentityProvider, IIdentityProvider, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityproviderichallengecontextfactory-constructor","title":"ConfigurableIdentityProvider(IChallengeContextFactory) Constructor","text":"<p>Base constructor that should be called by any implementations of this class.</p> C#<pre><code>protected ConfigurableIdentityProvider(HAKOM.Security.Core.Net.Api.Authentication.IChallengeContextFactory challengeContextFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters","title":"Parameters","text":"<p><code>challengeContextFactory</code> IChallengeContextFactory</p> <p>The factory used to create the IChallengeContext passed to challenge handlers.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityproviderclaimtransformations-property","title":"ConfigurableIdentityProvider.ClaimTransformations Property","text":"<p>A list of ClaimTransformations that should be applied to the identity after authentication takes place.</p> C#<pre><code>protected System.Collections.Generic.IReadOnlyList&lt;HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation&gt; ClaimTransformations { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;ClaimTransformation&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#remarks","title":"Remarks","text":"<p>Implementations derived from ConfigurableIdentityProvider do not need to worry about supporting claim transformations.  </p> <p>Instead, they should simply produce an authenticated identity in their implementation of the TryAuthenticate(CancellationToken) and TryAuthenticate(IReadOnlyList&lt;ClaimsIdentity&gt;, CancellationToken) methods. This identity will then have its claims transformed using the configured claim transformations.  </p> <p>IMPORTANT: Note that when overriding the TryAuthenticate(ChallengeBehavior, CancellationToken) method, this is no longer the case and derived implementations must then handle/support configured claims transformations themselves.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidername-property","title":"ConfigurableIdentityProvider.Name Property","text":"<p>Gets the System.String name of this ConfigurableIdentityProvider.</p> C#<pre><code>public virtual string Name { get; }\n</code></pre> <p>Implements Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidertype-property","title":"ConfigurableIdentityProvider.Type Property","text":"<p>Gets the System.String type of this ConfigurableIdentityProvider.</p> C#<pre><code>public virtual string Type { get; }\n</code></pre> <p>Implements Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityproviderconfigureiidentityprovidersettings-method","title":"ConfigurableIdentityProvider.Configure(IIdentityProviderSettings) Method","text":"<p>Configures this instance with the provided settings.</p> C#<pre><code>public virtual void Configure(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters_1","title":"Parameters","text":"<p><code>settings</code> IIdentityProviderSettings</p> <p>The settings to configure the identity provider with.</p> <p>Implements Configure(IIdentityProviderSettings)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#remarks_1","title":"Remarks","text":"<p>It is strongly recommended not to override this method since its default implementation already makes sure that there is consistent naming accross different implementations and that claim transformations are handled properly.  </p> <p>Instead, override TryApplyConfiguration(IConfigurationSection) to extract and apply any additional configuration.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityproviderrequireschallenge-method","title":"ConfigurableIdentityProvider.RequiresChallenge() Method","text":"<p>Returns whether any current authentication attempt requires a challenge.</p> C#<pre><code>protected abstract bool RequiresChallenge();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#returns","title":"Returns","text":"<p>System.Boolean True, if a challenge is required, otherwise false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#remarks_2","title":"Remarks","text":"<p>This method is used by TryAuthenticate(ChallengeBehavior, CancellationToken) when called with Auto to determine if a challenge is required.  </p> <p>Challenges may be required to prompt for additional credentials, refresh information from third parties, etc.  </p> <p>For example: When the derived class requires credentials to be validated periodically against a database, this method may check if the credentials are up to date and if so return false, or true otherwise.  </p> <p>When this method returns true, the Challenged event is fired. Handlers can add System.Security.Claims.ClaimsIdentity intances to its HAKOM.Security.Core.Net.Authentication.ChallengeContext which will then get passed to TryAuthenticate(IReadOnlyList&lt;ClaimsIdentity&gt;, CancellationToken) which the derived class should implement to handle the challenge responses.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidertryapplyconfigurationiconfigurationsection-method","title":"ConfigurableIdentityProvider.TryApplyConfiguration(IConfigurationSection) Method","text":"<p>May be used to read and interpret specific values from the identity providers configuration section.</p> C#<pre><code>protected abstract HAKOM.ErrorHandling.Core.Net.Api.Result TryApplyConfiguration(Microsoft.Extensions.Configuration.IConfigurationSection configurationSection);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters_2","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p>The configuration section that contains all the settings applicable to this identity provider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#returns_1","title":"Returns","text":"<p>Result A Result indicating either success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidertryauthenticatechallengebehavior-cancellationtoken-method","title":"ConfigurableIdentityProvider.TryAuthenticate(ChallengeBehavior, CancellationToken) Method","text":"<p>Attempts to authenticate the user.</p> C#<pre><code>public virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; TryAuthenticate(HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior challengeBehavior=HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior.Auto, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters_3","title":"Parameters","text":"<p><code>challengeBehavior</code> ChallengeBehavior</p> <p>The ChallengeBehavior which decides if a challenge is issued.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationTokenwhich</p> <p>Implements TryAuthenticate(ChallengeBehavior, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result. If the authentication was successful, the result will contain a System.Security.Claims.ClaimsIdentity. If not, it will contain an error.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidertryauthenticateireadonlylistclaimsidentity-cancellationtoken-method","title":"ConfigurableIdentityProvider.TryAuthenticate(IReadOnlyList&lt;ClaimsIdentity&gt;, CancellationToken) Method","text":"<p>Attempts to authenticate the current user/application based on the results returned by any challenge handlers.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; TryAuthenticate(System.Collections.Generic.IReadOnlyList&lt;System.Security.Claims.ClaimsIdentity&gt; challengeResults, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters_4","title":"Parameters","text":"<p><code>challengeResults</code> System.Collections.Generic.IReadOnlyList&lt;System.Security.Claims.ClaimsIdentity&gt;</p> <p>Any identities provided by event handlers invoked by the Challenged event (in order of their registration).</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that may be used to abort the authentication process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt; indicating success or failure of the operation. When successful, the result should contain a System.Security.Claims.ClaimsIdentity that contains all the claims pertaining to the authenticated user/application.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityprovidertryauthenticatecancellationtoken-method","title":"ConfigurableIdentityProvider.TryAuthenticate(CancellationToken) Method","text":"<p>Attempts to authenticate the current user/application.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; TryAuthenticate(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#parameters_5","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that may be used to abort the authentication process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt; indicating success or failure of the operation. When successful, the result should contain a System.Security.Claims.ClaimsIdentity that contains all the claims pertaining to the authenticated user/application.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#remarks_3","title":"Remarks","text":"<p>Called by TryAuthenticate(ChallengeBehavior, CancellationToken) if no challenge has been performed.  </p> <p>This is the primary method for derived implementations to implement in order to define their authentication procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#events","title":"Events","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#configurableidentityproviderchallenged-event","title":"ConfigurableIdentityProvider.Challenged Event","text":"<p>This event will be invoked during authentication, if a challenge is required.</p> C#<pre><code>public event ChallengeHandler? Challenged;\n</code></pre> <p>Implements Challenged</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#event-type","title":"Event Type","text":"<p>ChallengeHandler(object, IChallengeContext, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/ConfigurableIdentityProvider/#remarks_4","title":"Remarks","text":"<p>Implementations should properly document what is required of any handler for a successful challenge.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/","title":"IAuthenticationSettings","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettings-interface","title":"IAuthenticationSettings Interface","text":"<p>Contains settings necessary for the correct operation of ConfigurableIdentityProviders.</p> C#<pre><code>public interface IAuthenticationSettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsauthentication_section-field","title":"IAuthenticationSettings.AUTHENTICATION_SECTION Field","text":"<p>Gets the configuration section for the authentication settings.</p> C#<pre><code>const string AUTHENTICATION_SECTION = Security:Authentication;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsidentity_providers_section-field","title":"IAuthenticationSettings.IDENTITY_PROVIDERS_SECTION Field","text":"<p>Gets the configuration section for the identity providers.</p> C#<pre><code>const string IDENTITY_PROVIDERS_SECTION = IdentityProviders:IdentityProvider;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#field-value_1","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsdefaultidentityprovider-property","title":"IAuthenticationSettings.DefaultIdentityProvider Property","text":"<p>Gets a System.String name of the default IIdentityProvider.</p> C#<pre><code>string? DefaultIdentityProvider { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsidentifierclaimtype-property","title":"IAuthenticationSettings.IdentifierClaimType Property","text":"<p>Gets the type of the claim used to uniquely identify an authenticated entity. If not specified a default will be used.</p> C#<pre><code>string? IdentifierClaimType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsidentityproviders-property","title":"IAuthenticationSettings.IdentityProviders Property","text":"<p>Gets a System.Collections.Generic.IDictionary&lt;&gt; where the keys are IIdentityProvider names and the values are the IIdentityProviderSettings used to configure them.</p> C#<pre><code>System.Collections.Generic.IDictionary&lt;string,HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings&gt; IdentityProviders { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IDictionary&lt;System.String,IIdentityProviderSettings&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#iauthenticationsettingsreadiconfiguration-method","title":"IAuthenticationSettings.Read(IConfiguration) Method","text":"<p>Reads the given configuration and creates new IAuthenticationSettings from it.</p> C#<pre><code>static HAKOM.Security.Core.Net.Api.Authentication.IAuthenticationSettings Read(Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The Microsoft.Extensions.Configuration.IConfiguration which will be used to create the IAuthenticationSettings.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IAuthenticationSettings/#returns","title":"Returns","text":"<p>IAuthenticationSettings A new IAuthenticationSettings object based on the given configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/","title":"IChallengeContext","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#ichallengecontext-interface","title":"IChallengeContext Interface","text":"C#<pre><code>public interface IChallengeContext\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#ichallengecontexterrors-property","title":"IChallengeContext.Errors Property","text":"<p>Gets a System.Collections.Generic.IReadOnlyList&lt;&gt; representing any errors, that may have occurred during the challenge.</p> C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt; Errors { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#ichallengecontextidentities-property","title":"IChallengeContext.Identities Property","text":"<p>A list of all the identities that have been added to this context any challenge handlers.</p> C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.Security.Claims.ClaimsIdentity&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#ichallengecontextaddidentityclaimsidentity-method","title":"IChallengeContext.AddIdentity(ClaimsIdentity) Method","text":"<p>Adds additional information as an instance of System.Security.Claims.ClaimsIdentity to this challenge context.</p> C#<pre><code>void AddIdentity(System.Security.Claims.ClaimsIdentity identity);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#parameters","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The data returned by the challenge handler.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#ichallengecontextfailexception-method","title":"IChallengeContext.Fail(Exception) Method","text":"<p>Adds an error to the Errors list, indicating to subsequent challenge handlers as well as the IIdentityProvider that triggered the challenge event to be invoked that some part of the challenge process has failed.</p> C#<pre><code>void Fail(System.Exception exception);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContext/#parameters_1","title":"Parameters","text":"<p><code>exception</code> System.Exception</p> <p>The error that occurred during the challenge.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContextFactory/","title":"IChallengeContextFactory","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContextFactory/#ichallengecontextfactory-interface","title":"IChallengeContextFactory Interface","text":"<p>Used to create instances of IChallengeContext for use in identity providers to handle scenarios where additional information such as credentials need to be provided for authentication.</p> C#<pre><code>public interface IChallengeContextFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContextFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContextFactory/#ichallengecontextfactorycreate-method","title":"IChallengeContextFactory.Create() Method","text":"<p>Creates an empty IChallengeContext that can be passed to challenge handlers.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authentication.IChallengeContext Create();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IChallengeContextFactory/#returns","title":"Returns","text":"<p>IChallengeContext The newly created instance of IChallengeContext.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IConfigurableIdentityProvider/","title":"IConfigurableIdentityProvider","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IConfigurableIdentityProvider/#iconfigurableidentityprovider-interface","title":"IConfigurableIdentityProvider Interface","text":"<p>An IIdentityProvider which can be configured with IIdentityProviderSettings.</p> C#<pre><code>public interface IConfigurableIdentityProvider :\nHAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider\n</code></pre> <p>Derived \u21b3 ConfigurableIdentityProvider</p> <p>Implements IIdentityProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IConfigurableIdentityProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IConfigurableIdentityProvider/#iconfigurableidentityproviderconfigureiidentityprovidersettings-method","title":"IConfigurableIdentityProvider.Configure(IIdentityProviderSettings) Method","text":"<p>Configures the current IConfigurableIdentityProvider.</p> C#<pre><code>void Configure(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IConfigurableIdentityProvider/#parameters","title":"Parameters","text":"<p><code>settings</code> IIdentityProviderSettings</p> <p>The IIdentityProviderSettings used to configure the identity provider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/","title":"IIdentityProvider","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityprovider-interface","title":"IIdentityProvider Interface","text":"<p>Used to authenticate the user and provide System.Security.Claims.ClaimsIdentity objects.</p> C#<pre><code>public interface IIdentityProvider\n</code></pre> <p>Derived \u21b3 ConfigurableIdentityProvider \u21b3 IConfigurableIdentityProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityprovidername-property","title":"IIdentityProvider.Name Property","text":"<p>Gets the name of the IIdentityProvider.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityprovidertype-property","title":"IIdentityProvider.Type Property","text":"<p>Gets the type of the IIdentityProvider.</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityproviderauthenticatechallengebehavior-cancellationtoken-method","title":"IIdentityProvider.Authenticate(ChallengeBehavior, CancellationToken) Method","text":"<p>Authenticates the user</p> C#<pre><code>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; Authenticate(HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior challengeBehavior=HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior.Auto, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#parameters","title":"Parameters","text":"<p><code>challengeBehavior</code> ChallengeBehavior</p> <p>A ChallengeBehavior object which determines if a challenge will be issued during the authentication.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing the System.Security.Claims.ClaimsIdentity of the user.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityprovidertryauthenticatechallengebehavior-cancellationtoken-method","title":"IIdentityProvider.TryAuthenticate(ChallengeBehavior, CancellationToken) Method","text":"<p>Attempts to authenticate the user.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; TryAuthenticate(HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior challengeBehavior=HAKOM.Security.Core.Net.Api.Authentication.ChallengeBehavior.Auto, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#parameters_1","title":"Parameters","text":"<p><code>challengeBehavior</code> ChallengeBehavior</p> <p>A ChallengeBehavior object which determines if a challenge will be issued during the authentication.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; An awaitable System.Threading.Tasks.Task containing a Result&lt;TValue&gt; containing the System.Security.Claims.ClaimsIdentity of the user if the authentication was successful. If the authentication was unsuccessful, the System.Threading.Tasks.Task will containa Failure().</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#events","title":"Events","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#iidentityproviderchallenged-event","title":"IIdentityProvider.Challenged Event","text":"<p>An event which will be raised, when an identity is challenged.</p> C#<pre><code>event ChallengeHandler? Challenged;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProvider/#event-type","title":"Event Type","text":"<p>ChallengeHandler(object, IChallengeContext, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/","title":"IIdentityProviderFactory","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#iidentityproviderfactory-interface","title":"IIdentityProviderFactory Interface","text":"<p>Creates IIdentityProviders.</p> C#<pre><code>public interface IIdentityProviderFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#iidentityproviderfactorycreateiidentityprovidersettings-method","title":"IIdentityProviderFactory.Create(IIdentityProviderSettings) Method","text":"<p>Creates a new IIdentityProvider based on given settings.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider Create(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#parameters","title":"Parameters","text":"<p><code>settings</code> IIdentityProviderSettings</p> <p>The settings to use for creating the new IIdentityProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#returns","title":"Returns","text":"<p>IIdentityProvider A new IIdentityProvider based on the given settings.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#iidentityproviderfactorytrycreateiidentityprovidersettings-method","title":"IIdentityProviderFactory.TryCreate(IIdentityProviderSettings) Method","text":"<p>Attempts to create a new IIdentityProvider based on given settings.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider&gt; TryCreate(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#parameters_1","title":"Parameters","text":"<p><code>settings</code> IIdentityProviderSettings</p> <p>The settings to use for creating the new IIdentityProvider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IIdentityProvider&gt; A Result&lt;TValue&gt; containing the new IIdentityProvider. If the creation was unsuccessful, the Result&lt;TValue&gt; will contain a HakomException instead.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/","title":"IIdentityProviderSettings","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettings-interface","title":"IIdentityProviderSettings Interface","text":"<p>Settings used to configure IIdentityProvider objects.</p> C#<pre><code>public interface IIdentityProviderSettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsclaimtransformations-property","title":"IIdentityProviderSettings.ClaimTransformations Property","text":"<p>Gets an System.Collections.Generic.IEnumerable&lt;&gt; containing the configured ClaimTransformations for this IIdentityProvider.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation&gt; ClaimTransformations { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;ClaimTransformation&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsconfigurationsection-property","title":"IIdentityProviderSettings.ConfigurationSection Property","text":"<p>Gets the Microsoft.Extensions.Configuration.IConfigurationSection of the IIdentityProvider.</p> C#<pre><code>Microsoft.Extensions.Configuration.IConfigurationSection ConfigurationSection { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_1","title":"Property Value","text":"<p>Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsname-property","title":"IIdentityProviderSettings.Name Property","text":"<p>Gets the name of the IIdentityProvider.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsnameclaimtype-property","title":"IIdentityProviderSettings.NameClaimType Property","text":"<p>Specifies the type by which a claim should be selected to represent the identity's primary name.</p> C#<pre><code>string? NameClaimType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsremoveuntransformedclaims-property","title":"IIdentityProviderSettings.RemoveUntransformedClaims Property","text":"<p>Gets a System.Boolean which decides, if untransformed claims should be removed.</p> C#<pre><code>bool RemoveUntransformedClaims { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_4","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingsroleclaimtype-property","title":"IIdentityProviderSettings.RoleClaimType Property","text":"<p>Specifies the type by which a claim should be selected to represent the identity's roles.</p> C#<pre><code>string? RoleClaimType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_5","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#iidentityprovidersettingstype-property","title":"IIdentityProviderSettings.Type Property","text":"<p>Gets the System.String type of the IIdentityProvider.</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/IIdentityProviderSettings/#property-value_6","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/","title":"HAKOM.Security.Core.Net.Api.Authentication.Exceptions","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/#hakomsecuritycorenetapiauthenticationexceptions-namespace","title":"HAKOM.Security.Core.Net.Api.Authentication.Exceptions Namespace","text":"Classes AuthenticationSectionDoesNotContainAnyIdentityProvidersException Indicates that an attempt was made to use a authentication section without a identity provider in the configuration. ChallengeFailedException Indicates that the current IIdentityProvider issued a challenge and one or more challenge handler returned an error. ConfigurationDoesNotContainAnAuthenticationSectionException Indicates that an attempt was made to use a configuration without an authentication section. CouldNotInitializeIdentityProviderException This error occurs when a configured identityProvider could not be initialized. CurrentWindowsIdentityDoesNotHaveANameException Indicates that the identity returned by Windows as the currently authenticated user does not have a claim representing the users name. EmptyOrMalformedClaimTransformationSectionException Indicates that an attempt was made to use a configuration with an empty or malformed claim transformation section. IdentityHasNoMatchingClaimTypeException Indicates an attempt was made to retrieve a claim of an identity that lacks a corresponding claim of the specified type. IdentityProviderNameNotSpecifiedException Indicates that an attempt was made to get the name of an identity provider but the name was not specified. IdentityProviderNotConfiguredException Indicates that an attempt was made to create a identity provider but it is not configured. IdentityProviderTypeNotSpecifiedException Indicates that an attempt was made to get the type of an identity provider but the type was not specified. InvalidStaticIdentityProviderConfigurationException Indicates that an attempt was made to configure a static identity provider with an invalid identity configuration. MultipleIdentityProvidersConfiguredWithoutDefaultException Indicates that an attempt was made to retrieve the default identity provider among the several given identity providers, but no default was specified. NotAuthenticatedException This error indicates that authentication is required for the current action. SpecifiedDefaultIdentityProviderIsNotConfiguredException Indicates that an attempt was made to retrieve the default identity provider but it specified."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/","title":"AuthenticationSectionDoesNotContainAnyIdentityProvidersException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/#authenticationsectiondoesnotcontainanyidentityprovidersexception-class","title":"AuthenticationSectionDoesNotContainAnyIdentityProvidersException Class","text":"<p>Indicates that an attempt was made to use a authentication section without a identity provider in the configuration.</p> C#<pre><code>public sealed class AuthenticationSectionDoesNotContainAnyIdentityProvidersException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AuthenticationSectionDoesNotContainAnyIdentityProvidersException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/#remarks","title":"Remarks","text":"<p>This exception is thrown when a configuration is used where the authentication section does not contain any identity providers.  </p> <p>This exception is identified by error code HK14004.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/#authenticationsectiondoesnotcontainanyidentityprovidersexceptionequivalenthttpstatuscode-property","title":"AuthenticationSectionDoesNotContainAnyIdentityProvidersException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/AuthenticationSectionDoesNotContainAnyIdentityProvidersException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/","title":"ChallengeFailedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/#challengefailedexception-class","title":"ChallengeFailedException Class","text":"<p>Indicates that the current IIdentityProvider issued a challenge and one or more challenge handler returned an error.</p> C#<pre><code>public sealed class ChallengeFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ChallengeFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/#remarks","title":"Remarks","text":"<p>The cause for this exception depends entirely on the identity provider currently in use and the challenge performed.  </p> <p>This error is identified by its code HK14020.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/#challengefailedexceptionequivalenthttpstatuscode-property","title":"ChallengeFailedException.EquivalentHttpStatusCode Property","text":"<p>When this exception is raised while processing an HTTP request it indicates that the challenge required to successfully authenticate the current user has failed, causing authentication to fail altogether. This may or may not be resolved by the client depending on the authentication method used and wether or not the challenge depends on data provided by the client.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ChallengeFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/","title":"ConfigurationDoesNotContainAnAuthenticationSectionException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/#configurationdoesnotcontainanauthenticationsectionexception-class","title":"ConfigurationDoesNotContainAnAuthenticationSectionException Class","text":"<p>Indicates that an attempt was made to use a configuration without an authentication section.</p> C#<pre><code>public sealed class ConfigurationDoesNotContainAnAuthenticationSectionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConfigurationDoesNotContainAnAuthenticationSectionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/#remarks","title":"Remarks","text":"<p>Make sure that the currently used configuration contains an 'Authentication' section underneath a 'Security' section.  </p> <p>This exception is identified by error code HK14003.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/#configurationdoesnotcontainanauthenticationsectionexceptionequivalenthttpstatuscode-property","title":"ConfigurationDoesNotContainAnAuthenticationSectionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/ConfigurationDoesNotContainAnAuthenticationSectionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/","title":"CouldNotInitializeIdentityProviderException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/#couldnotinitializeidentityproviderexception-class","title":"CouldNotInitializeIdentityProviderException Class","text":"<p>This error occurs when a configured identityProvider could not be initialized.</p> C#<pre><code>public sealed class CouldNotInitializeIdentityProviderException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotInitializeIdentityProviderException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/#remarks","title":"Remarks","text":"<p>Make sure the type of the configured identity provider is correct and a corresponding implementation has been registered using UseConfigurableIdentityProvider&lt;TIdentityProvider&gt;(this IContainer, string).  </p> <p>This error can be identified by its code HK14034.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/#couldnotinitializeidentityproviderexceptionequivalenthttpstatuscode-property","title":"CouldNotInitializeIdentityProviderException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, a response should be returned with HTTP status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CouldNotInitializeIdentityProviderException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/","title":"CurrentWindowsIdentityDoesNotHaveANameException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/#currentwindowsidentitydoesnothaveanameexception-class","title":"CurrentWindowsIdentityDoesNotHaveANameException Class","text":"<p>Indicates that the identity returned by Windows as the currently authenticated user does not have a claim representing the users name.</p> C#<pre><code>public sealed class CurrentWindowsIdentityDoesNotHaveANameException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CurrentWindowsIdentityDoesNotHaveANameException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/#remarks","title":"Remarks","text":"<p>This may indicate an issue with the account that the current process is running under.  </p> <p>When configuring an application to use the current Windows identity for authentication, make sure that the process is run under a valid user account.  </p> <p>This error can be identified by its code HK14019.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/#currentwindowsidentitydoesnothaveanameexceptionequivalenthttpstatuscode-property","title":"CurrentWindowsIdentityDoesNotHaveANameException.EquivalentHttpStatusCode Property","text":"<p>When this exception is thrown while handling an HTTP request, the request should be terminated with a response status 500 (Internal Server Error). This issue is unlikely to be resolved by modifying the original request but instead will require a change in how the handling service has its authentication configured.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/CurrentWindowsIdentityDoesNotHaveANameException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/","title":"EmptyOrMalformedClaimTransformationSectionException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/#emptyormalformedclaimtransformationsectionexception-class","title":"EmptyOrMalformedClaimTransformationSectionException Class","text":"<p>Indicates that an attempt was made to use a configuration with an empty or malformed claim transformation section.</p> C#<pre><code>public sealed class EmptyOrMalformedClaimTransformationSectionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 EmptyOrMalformedClaimTransformationSectionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the claim transformation section of the configuration is malformed or empty.  </p> <p>This exception is identified by error code HK14006.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/#emptyormalformedclaimtransformationsectionexceptionequivalenthttpstatuscode-property","title":"EmptyOrMalformedClaimTransformationSectionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/EmptyOrMalformedClaimTransformationSectionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/","title":"IdentityHasNoMatchingClaimTypeException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#identityhasnomatchingclaimtypeexception-class","title":"IdentityHasNoMatchingClaimTypeException Class","text":"<p>Indicates an attempt was made to retrieve a claim of an identity that lacks a corresponding claim of the specified type.</p> C#<pre><code>public sealed class IdentityHasNoMatchingClaimTypeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentityHasNoMatchingClaimTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#remarks","title":"Remarks","text":"<p>Thrown when a System.Security.Claims.ClaimsIdentity doesn't have a claim of the specified type.  </p> <p>This exception is identified by error code HK14017.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#identityhasnomatchingclaimtypeexceptionequivalenthttpstatuscode-property","title":"IdentityHasNoMatchingClaimTypeException.EquivalentHttpStatusCode Property","text":"<p>Override this to provide a proper HTTP status in Webservices.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#identityhasnomatchingclaimtypeexceptionidentity-property","title":"IdentityHasNoMatchingClaimTypeException.Identity Property","text":"<p>Gets the System.Security.Claims.ClaimsIdentity this exception was thrown for.</p> C#<pre><code>public System.Security.Claims.ClaimsIdentity Identity { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityHasNoMatchingClaimTypeException/#property-value_1","title":"Property Value","text":"<p>System.Security.Claims.ClaimsIdentity</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/","title":"IdentityProviderNameNotSpecifiedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/#identityprovidernamenotspecifiedexception-class","title":"IdentityProviderNameNotSpecifiedException Class","text":"<p>Indicates that an attempt was made to get the name of an identity provider but the name was not specified.</p> C#<pre><code>public sealed class IdentityProviderNameNotSpecifiedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentityProviderNameNotSpecifiedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the name of an identity provider is not specified.  </p> <p>This exception is identified by error code HK14035.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/#identityprovidernamenotspecifiedexceptionequivalenthttpstatuscode-property","title":"IdentityProviderNameNotSpecifiedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNameNotSpecifiedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/","title":"IdentityProviderNotConfiguredException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/#identityprovidernotconfiguredexception-class","title":"IdentityProviderNotConfiguredException Class","text":"<p>Indicates that an attempt was made to create a identity provider but it is not configured.</p> C#<pre><code>public sealed class IdentityProviderNotConfiguredException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentityProviderNotConfiguredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/#remarks","title":"Remarks","text":"<p>This exception is thrown when a identity provider is being created but the settings for this identity provider are not configured.  </p> <p>This exception is identified by error code HK14009.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/#identityprovidernotconfiguredexceptionequivalenthttpstatuscode-property","title":"IdentityProviderNotConfiguredException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderNotConfiguredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/","title":"IdentityProviderTypeNotSpecifiedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/#identityprovidertypenotspecifiedexception-class","title":"IdentityProviderTypeNotSpecifiedException Class","text":"<p>Indicates that an attempt was made to get the type of an identity provider but the type was not specified.</p> C#<pre><code>public sealed class IdentityProviderTypeNotSpecifiedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentityProviderTypeNotSpecifiedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the type of an identity provider is not specified.  </p> <p>This exception is identified by error code HK14005.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/#identityprovidertypenotspecifiedexceptionequivalenthttpstatuscode-property","title":"IdentityProviderTypeNotSpecifiedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/IdentityProviderTypeNotSpecifiedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/","title":"InvalidStaticIdentityProviderConfigurationException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#invalidstaticidentityproviderconfigurationexception-class","title":"InvalidStaticIdentityProviderConfigurationException Class","text":"<p>Indicates that an attempt was made to configure a static identity provider with an invalid identity configuration.</p> C#<pre><code>public sealed class InvalidStaticIdentityProviderConfigurationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidStaticIdentityProviderConfigurationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the IIdentityProviderSettings passed to the Configure(IIdentityProviderSettings) method either don't contain an \"Identity\" section, or it is invalid.  </p> <p>This exception is identified by error code HK14018.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#invalidstaticidentityproviderconfigurationexceptiondetails-property","title":"InvalidStaticIdentityProviderConfigurationException.Details Property","text":"<p>When available, contains additional information about what settings are missing or invalid. Contains an empty string otherwise.</p> C#<pre><code>public string Details { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#invalidstaticidentityproviderconfigurationexceptionequivalenthttpstatuscode-property","title":"InvalidStaticIdentityProviderConfigurationException.EquivalentHttpStatusCode Property","text":"<p>Override this to provide a proper HTTP status in Webservices.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#invalidstaticidentityproviderconfigurationexceptionname-property","title":"InvalidStaticIdentityProviderConfigurationException.Name Property","text":"<p>The name of the configuration entry in the <code>Authentication:IdentityProviders</code> section</p> C#<pre><code>public string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/InvalidStaticIdentityProviderConfigurationException/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/","title":"MultipleIdentityProvidersConfiguredWithoutDefaultException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/#multipleidentityprovidersconfiguredwithoutdefaultexception-class","title":"MultipleIdentityProvidersConfiguredWithoutDefaultException Class","text":"<p>Indicates that an attempt was made to retrieve the default identity provider among the several given identity providers, but no default was specified.</p> C#<pre><code>public sealed class MultipleIdentityProvidersConfiguredWithoutDefaultException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MultipleIdentityProvidersConfiguredWithoutDefaultException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/#remarks","title":"Remarks","text":"<p>This exception is thrown when multiple identity providers are given but no default identity provider is specified.  </p> <p>This exception is identified by error code HK14007.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/#multipleidentityprovidersconfiguredwithoutdefaultexceptionequivalenthttpstatuscode-property","title":"MultipleIdentityProvidersConfiguredWithoutDefaultException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/MultipleIdentityProvidersConfiguredWithoutDefaultException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/","title":"NotAuthenticatedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/#notauthenticatedexception-class","title":"NotAuthenticatedException Class","text":"<p>This error indicates that authentication is required for the current action.</p> C#<pre><code>public sealed class NotAuthenticatedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NotAuthenticatedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/#remarks","title":"Remarks","text":"<p>Make sure the <code>Authentication</code> section of the application configuration is properly set up so that authentication can be performed properly.  </p> <p>This error can be identified by its code HK14010.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/#notauthenticatedexceptionequivalenthttpstatuscode-property","title":"NotAuthenticatedException.EquivalentHttpStatusCode Property","text":"<p>When this error is encountered while processing an HTTP request, the request should be terminated and a response with status code 401 (Unauthorized) should be returned to the client.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/NotAuthenticatedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/","title":"SpecifiedDefaultIdentityProviderIsNotConfiguredException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/#specifieddefaultidentityproviderisnotconfiguredexception-class","title":"SpecifiedDefaultIdentityProviderIsNotConfiguredException Class","text":"<p>Indicates that an attempt was made to retrieve the default identity provider but it specified.</p> C#<pre><code>public sealed class SpecifiedDefaultIdentityProviderIsNotConfiguredException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SpecifiedDefaultIdentityProviderIsNotConfiguredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the default identity provider is not specified.  </p> <p>This exception is identified by error code HK14008.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/#specifieddefaultidentityproviderisnotconfiguredexceptionequivalenthttpstatuscode-property","title":"SpecifiedDefaultIdentityProviderIsNotConfiguredException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (InternalServerError).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Exceptions/SpecifiedDefaultIdentityProviderIsNotConfiguredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/","title":"HAKOM.Security.Core.Net.Api.Authentication.Extensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/#hakomsecuritycorenetapiauthenticationextensions-namespace","title":"HAKOM.Security.Core.Net.Api.Authentication.Extensions Namespace","text":"Classes ClaimsIdentityExtensions Provides extension methods for System.Security.Claims.ClaimsIdentity. ContainerExtensions Provides extension methods for registering security related services with a container."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/","title":"ClaimsIdentityExtensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#claimsidentityextensions-class","title":"ClaimsIdentityExtensions Class","text":"<p>Provides extension methods for System.Security.Claims.ClaimsIdentity.</p> C#<pre><code>public static class ClaimsIdentityExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ClaimsIdentityExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#claimsidentityextensionsdefault_identifier_claim_type-field","title":"ClaimsIdentityExtensions.DEFAULT_IDENTIFIER_CLAIM_TYPE Field","text":"<p>Gets the default System.String claim type used as an identifier.</p> C#<pre><code>public const string DEFAULT_IDENTIFIER_CLAIM_TYPE = sub;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#claimsidentityextensionsgetidentifierthis-claimsidentity-string-method","title":"ClaimsIdentityExtensions.GetIdentifier(this ClaimsIdentity, string) Method","text":"<p>Retrieves the first System.Security.Claims.Claim of the specified type identifierClaimType for the given identity.</p> C#<pre><code>public static System.Security.Claims.Claim GetIdentifier(this System.Security.Claims.ClaimsIdentity identity, string? identifierClaimType=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#parameters","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity whose identifier will be retrieved.</p> <p></p> <p><code>identifierClaimType</code> System.String</p> <p>The type that will be used to find a claim in the identity. If not set the DEFAULT_IDENTIFIER_CLAIM_TYPE will be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#returns","title":"Returns","text":"<p>System.Security.Claims.Claim The System.Security.Claims.Claim used as an identifier for this System.Security.Claims.ClaimsIdentity.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#exceptions","title":"Exceptions","text":"<p>IdentityHasNoMatchingClaimTypeException Thrown when there is no claim of the specified              type identifierClaimType for the given identity.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#claimsidentityextensionstransformthis-claimsidentity-ienumerableclaimtransformation-bool-method","title":"ClaimsIdentityExtensions.Transform(this ClaimsIdentity, IEnumerable&lt;ClaimTransformation&gt;, bool) Method","text":"<p>Transforms the given identity according to the given claimTransformations.</p> C#<pre><code>public static System.Security.Claims.ClaimsIdentity Transform(this System.Security.Claims.ClaimsIdentity identity, System.Collections.Generic.IEnumerable&lt;HAKOM.Security.Core.Net.Api.Authentication.ClaimTransformation&gt; claimTransformations, bool removeUntransformed=false);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#parameters_1","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be transformed.</p> <p></p> <p><code>claimTransformations</code> System.Collections.Generic.IEnumerable&lt;ClaimTransformation&gt;</p> <p>An System.Collections.Generic.IEnumerable&lt;&gt; used for the transformation.</p> <p></p> <p><code>removeUntransformed</code> System.Boolean</p> <p>An optional System.Boolean indicating if untransformed claims should be removed (false by default).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#returns_1","title":"Returns","text":"<p>System.Security.Claims.ClaimsIdentity The transformed System.Security.Claims.ClaimsIdentity.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#claimsidentityextensionstrygetidentifierthis-claimsidentity-string-method","title":"ClaimsIdentityExtensions.TryGetIdentifier(this ClaimsIdentity, string) Method","text":"<p>Tries to retrieve the first System.Security.Claims.Claim of the specified type identifierClaimType for the given identity.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.Claim&gt; TryGetIdentifier(this System.Security.Claims.ClaimsIdentity identity, string? identifierClaimType=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#parameters_2","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity whose identifier will be retrieved.</p> <p></p> <p><code>identifierClaimType</code> System.String</p> <p>The type that will be used to find a claim in the identity. If not set the DEFAULT_IDENTIFIER_CLAIM_TYPE will be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ClaimsIdentityExtensions/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.Claim&gt; A Result holding the System.Security.Claims.Claim used as an identifier for this System.Security.Claims.ClaimsIdentity             or an exception that occurred while attempting to retrieve it.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering security related services with a container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#containerextensionsuseclaimsidentityserializersthis-icontainer-method","title":"ContainerExtensions.UseClaimsIdentitySerializers(this IContainer) Method","text":"<p>Registers ISerializers for handling the serialization of System.Security.Claims.ClaimsIdentity instances.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseClaimsIdentitySerializers(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the serialzier with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining of additional service registrations.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#containerextensionsuseconfigurableidentityprovidertidentityproviderthis-icontainer-string-method","title":"ContainerExtensions.UseConfigurableIdentityProvider&lt;TIdentityProvider&gt;(this IContainer, string) Method","text":"<p>Registers an identity provider implementation that can be used by enabling it in configuration.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfigurableIdentityProvider&lt;TIdentityProvider&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, string type)\n    where TIdentityProvider : class, HAKOM.Security.Core.Net.Api.Authentication.IConfigurableIdentityProvider;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TIdentityProvider</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>type</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#containerextensionsuseconfiguredidentityproviderthis-icontainer-method","title":"ContainerExtensions.UseConfiguredIdentityProvider(this IContainer) Method","text":"<p>Uses one of the identity providers registered with UseConfigurableIdentityProvider&lt;TIdentityProvider&gt;(this IContainer, string).</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguredIdentityProvider(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authentication/Extensions/ContainerExtensions/#remarks","title":"Remarks","text":"<p>TODO-R: proper documentation that someone else understands. Which one depends on the \"DefaultIdentityProvider\" setting under \"Authentication\", or the only one if no default is configured If more than one is configured without a default being specified, an error will be produced.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/","title":"HAKOM.Security.Core.Net.Api.Authorization","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/#hakomsecuritycorenetapiauthorization-namespace","title":"HAKOM.Security.Core.Net.Api.Authorization Namespace","text":"Classes AuthorizationService Base class for authorizations. Nees to be implemented for every module which requires authorization. ConfigurableAuthorizationService Base class for authorization services that can be enabled/used by configuration. Structs AuthorizationResult Represents the result of an authorization request and provides information as to what permissions have been granted and why. AuthorizationRule Represents a rule used to determine what permissions to grant on a resource based on a specific claim. Interfaces IAuthorizationService Used to check if a user has permissions to access or modify specific resources. IAuthorizationServiceFactory Used to create authorization services for controlling access to resources. IAuthorizationServiceSettings Contains onfiguration for a configured authorization service. IAuthorizationSettings Contains configuration about how access to resources should be controlled. IConfigurableAuthorizationService Base interfaces for authorization services that support initialization from configuration. IResource During authorization it will be checked, if the user has Permissions to a IResource. This will be a specific part of a repository. IResourceFactory Used to create IResource objects. Enums Permissions During authorization it will be checked, if the user has permissions to acces or edit data in a IResource. This describes the typesof permissions used in is process."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/","title":"AuthorizationResult","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresult-struct","title":"AuthorizationResult Struct","text":"<p>Represents the result of an authorization request and provides information as to what permissions have been granted and why.</p> C#<pre><code>public readonly struct AuthorizationResult :\nSystem.IEquatable&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;\n</code></pre> <p>Implements System.IEquatable&lt;AuthorizationResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultclaims-property","title":"AuthorizationResult.Claims Property","text":"<p>The claims that were used in determining the permissions.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultpermissions-property","title":"AuthorizationResult.Permissions Property","text":"<p>The permissions granted.</p> C#<pre><code>public HAKOM.Security.Core.Net.Api.Authorization.Permissions Permissions { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#property-value_1","title":"Property Value","text":"<p>Permissions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultequalsauthorizationresult-method","title":"AuthorizationResult.Equals(AuthorizationResult) Method","text":"C#<pre><code>public bool Equals(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#parameters","title":"Parameters","text":"<p><code>other</code> AuthorizationResult</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultequalsobject-method","title":"AuthorizationResult.Equals(object) Method","text":"<p>Indicates whether this instance and a specified object are equal.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#parameters_1","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The object to compare with the current instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#returns_1","title":"Returns","text":"<p>System.Boolean true if obj and this instance are the same type and represent the same value; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultgethashcode-method","title":"AuthorizationResult.GetHashCode() Method","text":"<p>Returns the hash code for this instance.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#returns_2","title":"Returns","text":"<p>System.Int32 A 32-bit signed integer that is the hash code for this instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultoperator-authorizationresult-authorizationresult-operator","title":"AuthorizationResult.operator ==(AuthorizationResult, AuthorizationResult) Operator","text":"C#<pre><code>public static bool operator ==(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult left, HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#parameters_2","title":"Parameters","text":"<p><code>left</code> AuthorizationResult</p> <p></p> <p><code>right</code> AuthorizationResult</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#returns_3","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#authorizationresultoperator-authorizationresult-authorizationresult-operator_1","title":"AuthorizationResult.operator !=(AuthorizationResult, AuthorizationResult) Operator","text":"C#<pre><code>public static bool operator !=(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult left, HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#parameters_3","title":"Parameters","text":"<p><code>left</code> AuthorizationResult</p> <p></p> <p><code>right</code> AuthorizationResult</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationResult/#returns_4","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/","title":"AuthorizationRule","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationrule-struct","title":"AuthorizationRule Struct","text":"<p>Represents a rule used to determine what permissions to grant on a resource based on a specific claim.</p> C#<pre><code>public readonly struct AuthorizationRule :\nSystem.IEquatable&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule&gt;\n</code></pre> <p>Implements System.IEquatable&lt;AuthorizationRule&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleclaim-property","title":"AuthorizationRule.Claim Property","text":"<p>The claim this rule applies to.</p> C#<pre><code>public System.Security.Claims.Claim? Claim { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#property-value","title":"Property Value","text":"<p>System.Security.Claims.Claim</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleowner-property","title":"AuthorizationRule.Owner Property","text":"<p>A claim identifying the owner of the rule.</p> C#<pre><code>public System.Security.Claims.Claim? Owner { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#property-value_1","title":"Property Value","text":"<p>System.Security.Claims.Claim</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#remarks","title":"Remarks","text":"<p>Any identity with that claim should be allowed to alter/invalidate the rule.  </p> <p>If null, the rule is not owned by anyone and cannot be changed/invalidated.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationrulepermissions-property","title":"AuthorizationRule.Permissions Property","text":"<p>The permissions this rule grants.</p> C#<pre><code>public HAKOM.Security.Core.Net.Api.Authorization.Permissions Permissions { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#property-value_2","title":"Property Value","text":"<p>Permissions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleequalsauthorizationrule-method","title":"AuthorizationRule.Equals(AuthorizationRule) Method","text":"C#<pre><code>public bool Equals(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#parameters","title":"Parameters","text":"<p><code>other</code> AuthorizationRule</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleequalsobject-method","title":"AuthorizationRule.Equals(object) Method","text":"<p>Indicates whether this instance and a specified object are equal.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#parameters_1","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The object to compare with the current instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#returns_1","title":"Returns","text":"<p>System.Boolean true if obj and this instance are the same type and represent the same value; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationrulegethashcode-method","title":"AuthorizationRule.GetHashCode() Method","text":"<p>Returns the hash code for this instance.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#returns_2","title":"Returns","text":"<p>System.Int32 A 32-bit signed integer that is the hash code for this instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleoperator-authorizationrule-authorizationrule-operator","title":"AuthorizationRule.operator ==(AuthorizationRule, AuthorizationRule) Operator","text":"C#<pre><code>public static bool operator ==(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule left, HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#parameters_2","title":"Parameters","text":"<p><code>left</code> AuthorizationRule</p> <p></p> <p><code>right</code> AuthorizationRule</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#returns_3","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#authorizationruleoperator-authorizationrule-authorizationrule-operator_1","title":"AuthorizationRule.operator !=(AuthorizationRule, AuthorizationRule) Operator","text":"C#<pre><code>public static bool operator !=(HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule left, HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#parameters_3","title":"Parameters","text":"<p><code>left</code> AuthorizationRule</p> <p></p> <p><code>right</code> AuthorizationRule</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationRule/#returns_4","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/","title":"AuthorizationService","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservice-class","title":"AuthorizationService Class","text":"<p>Base class for authorizations. Nees to be implemented for every module which requires authorization.</p> C#<pre><code>public abstract class AuthorizationService :\nHAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 AuthorizationService</p> <p>Derived \u21b3 ConfigurableAuthorizationService</p> <p>Implements IAuthorizationService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationserviceiidentityprovider-iresourcefactory-constructor","title":"AuthorizationService(IIdentityProvider, IResourceFactory) Constructor","text":"<p>Base constructor. Forces implementing classes to provide an IIdentityProvider and IResourceFactory.</p> C#<pre><code>protected AuthorizationService(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider identityProvider, HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters","title":"Parameters","text":"<p><code>identityProvider</code> IIdentityProvider</p> <p>The IIdentityProvider used to identify the user during authorization, when no System.Security.Claims.ClaimsIdentity was provided.</p> <p></p> <p><code>resourceFactory</code> IResourceFactory</p> <p>A IResourceFactory used to create new IResource objects. Added for ease of use.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicename-property","title":"AuthorizationService.Name Property","text":"<p>The name of the authorization service.</p> C#<pre><code>public abstract string Name { get; }\n</code></pre> <p>Implements Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationserviceresources-property","title":"AuthorizationService.Resources Property","text":"<p>Gets a IResourceFactory which can be used to create new IResource objects.</p> C#<pre><code>public HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory Resources { get; }\n</code></pre> <p>Implements Resources</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#property-value_1","title":"Property Value","text":"<p>IResourceFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetype-property","title":"AuthorizationService.Type Property","text":"<p>The type of the authorization service.</p> C#<pre><code>public abstract string Type { get; }\n</code></pre> <p>Implements Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetryauthorizeiresource-cancellationtoken-method","title":"AuthorizationService.TryAuthorize(IResource, CancellationToken) Method","text":"<p>Attempts to authorize the user for the given resource.</p> C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;&gt; TryAuthorize(HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_1","title":"Parameters","text":"<p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p> <p>Implements TryAuthorize(IResource, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationResult&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt;. If the authorization was successful the Result&lt;TValue&gt; will contain an AuthorizationResult, otherwise a HakomException.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetryauthorizepermissions-iresource-cancellationtoken-method","title":"AuthorizationService.TryAuthorize(Permissions, IResource, CancellationToken) Method","text":"<p>Attempts to authorize the user for the given resource and checks if it has the desired permissions.</p> C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryAuthorize(HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_2","title":"Parameters","text":"<p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p> <p>Implements TryAuthorize(Permissions, IResource, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result which indicates, if the user has the desired permissions for the given resource. Returns a Success if it does and Failure if it doesn't.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetryauthorizeclaimsidentity-iresource-cancellationtoken-method","title":"AuthorizationService.TryAuthorize(ClaimsIdentity, IResource, CancellationToken) Method","text":"<p>Attempts to authorise the given identity for the given resource.</p> C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;&gt; TryAuthorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_3","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p> <p>Implements TryAuthorize(ClaimsIdentity, IResource, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationResult&gt;&gt; A Result&lt;TValue&gt; containing an AuthorizationResult which contains             all permissions the given identity has for the given resource.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetryauthorizeclaimsidentity-permissions-iresource-cancellationtoken-method","title":"AuthorizationService.TryAuthorize(ClaimsIdentity, Permissions, IResource, CancellationToken) Method","text":"<p>Attempts to authorize the given identity for the given resource and checks if it has the desired permissions.</p> C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryAuthorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_4","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p> <p>Implements TryAuthorize(ClaimsIdentity, Permissions, IResource, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A Result indicating, if  the given identity has the desired permissions for the given resource. Returns a Success if it does and Failure if it doesn't.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetrygetauthorizationclaimsidentity-iresource-cancellationtoken-method","title":"AuthorizationService.TryGetAuthorization(ClaimsIdentity, IResource, CancellationToken) Method","text":"<p>Attempts to get the authorization of the given identity for the given resource.</p> C#<pre><code>public virtual System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;&gt; TryGetAuthorization(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_5","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity whose authorization will be retrieved.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which the authorization will be retrieved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationResult&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt;. If successful, the Result&lt;TValue&gt; will contain an AuthorizationResult, otherwise a HakomException.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#authorizationservicetrygetauthorizationrulesiresource-cancellationtoken-method","title":"AuthorizationService.TryGetAuthorizationRules(IResource, CancellationToken) Method","text":"<p>Attempts to return rules for this specific rule as well as any default rules for the given resource type.</p> C#<pre><code>protected abstract System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule&gt;&gt; TryGetAuthorizationRules(HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#parameters_6","title":"Parameters","text":"<p><code>resource</code> IResource</p> <p>The IResource used to determine which rules should be returned.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/AuthorizationService/#returns_5","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationRule&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the rules for this specific rule as well as any default rules for the given resource type. Each Result&lt;TValue&gt; contains either the rule itself or an error.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/","title":"ConfigurableAuthorizationService","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationservice-class","title":"ConfigurableAuthorizationService Class","text":"<p>Base class for authorization services that can be enabled/used by configuration.</p> C#<pre><code>public abstract class ConfigurableAuthorizationService : HAKOM.Security.Core.Net.Api.Authorization.AuthorizationService,\nHAKOM.Security.Core.Net.Api.Authorization.IConfigurableAuthorizationService,\nHAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 AuthorizationService \ud83e\udc52 ConfigurableAuthorizationService</p> <p>Implements IConfigurableAuthorizationService, IAuthorizationService, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationserviceiidentityprovider-iresourcefactory-constructor","title":"ConfigurableAuthorizationService(IIdentityProvider, IResourceFactory) Constructor","text":"<p>Creates a new instance of the authorization service.</p> C#<pre><code>protected ConfigurableAuthorizationService(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider identityProvider, HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#parameters","title":"Parameters","text":"<p><code>identityProvider</code> IIdentityProvider</p> <p>The identity provider that should be used for implicit authentication during authorization.</p> <p></p> <p><code>resourceFactory</code> IResourceFactory</p> <p>A factory used to create instances of IResource against which identities will be authorized.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationservicename-property","title":"ConfigurableAuthorizationService.Name Property","text":"<p>The name of the authorization service as configured.</p> C#<pre><code>public override string Name { get; }\n</code></pre> <p>Implements Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationservicetype-property","title":"ConfigurableAuthorizationService.Type Property","text":"<p>The type of authorization service.</p> C#<pre><code>public override string Type { get; }\n</code></pre> <p>Implements Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationserviceconfigureiauthorizationservicesettings-method","title":"ConfigurableAuthorizationService.Configure(IAuthorizationServiceSettings) Method","text":"<p>Configures the current instance with the given settings.</p> C#<pre><code>public void Configure(HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationServiceSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#parameters_1","title":"Parameters","text":"<p><code>settings</code> IAuthorizationServiceSettings</p> <p>The settings to configure the service with.</p> <p>Implements Configure(IAuthorizationServiceSettings)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#configurableauthorizationservicetryapplyconfigurationiconfigurationsection-method","title":"ConfigurableAuthorizationService.TryApplyConfiguration(IConfigurationSection) Method","text":"<p>Should be overriden by derived types to read and apply any specific settings from the services configuration.</p> C#<pre><code>protected abstract HAKOM.ErrorHandling.Core.Net.Api.Result TryApplyConfiguration(Microsoft.Extensions.Configuration.IConfigurationSection configurationSection);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#parameters_2","title":"Parameters","text":"<p><code>configurationSection</code> Microsoft.Extensions.Configuration.IConfigurationSection</p> <p>The configuration section that contains settings for this instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/ConfigurableAuthorizationService/#returns","title":"Returns","text":"<p>Result A result indicating wether configuration could successfully be applied or not.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/","title":"IAuthorizationService","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservice-interface","title":"IAuthorizationService Interface","text":"<p>Used to check if a user has permissions to access or modify specific resources.</p> C#<pre><code>public interface IAuthorizationService\n</code></pre> <p>Derived \u21b3 AuthorizationService \u21b3 ConfigurableAuthorizationService \u21b3 IConfigurableAuthorizationService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicename-property","title":"IAuthorizationService.Name Property","text":"<p>The name of the authorization service.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationserviceresources-property","title":"IAuthorizationService.Resources Property","text":"<p>Gets an IResourceFactory. Added for ease of use.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory Resources { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#property-value_1","title":"Property Value","text":"<p>IResourceFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicetype-property","title":"IAuthorizationService.Type Property","text":"<p>The type of the authorization service</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationserviceauthorizeiresource-cancellationtoken-method","title":"IAuthorizationService.Authorize(IResource, CancellationToken) Method","text":"<p>Authorizes the user for the given resource.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt; Authorize(HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters","title":"Parameters","text":"<p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;AuthorizationResult&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing an AuthorizationResult which describes all permissions the user has for the given resource.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationserviceauthorizepermissions-iresource-cancellationtoken-method","title":"IAuthorizationService.Authorize(Permissions, IResource, CancellationToken) Method","text":"<p>Authorizes the user for the given resource and checks if it has the desired permissions.</p> C#<pre><code>System.Threading.Tasks.Task Authorize(HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_1","title":"Parameters","text":"<p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task indicating, that the authorization is complete. If the user doesn't have the required permissions, a HakomException will be thrown.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationserviceauthorizeclaimsidentity-iresource-cancellationtoken-method","title":"IAuthorizationService.Authorize(ClaimsIdentity, IResource, CancellationToken) Method","text":"<p>Authorizes the given identity for the given resource.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt; Authorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_2","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;AuthorizationResult&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result which indicates, if the given identity is authorized for the given resource. Returns a Success if it does and Failure if it doesn't.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationserviceauthorizeclaimsidentity-permissions-iresource-cancellationtoken-method","title":"IAuthorizationService.Authorize(ClaimsIdentity, Permissions, IResource, CancellationToken) Method","text":"<p>Authorizes the given identity for the given resource and checks if it has the desired permissions.</p> C#<pre><code>System.Threading.Tasks.Task Authorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_3","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating, that the process was completed. If authorization was unsuccessful or the identity doesn't have the desired permissions, an exception will be thrown.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicetryauthorizeiresource-cancellationtoken-method","title":"IAuthorizationService.TryAuthorize(IResource, CancellationToken) Method","text":"<p>Attempts to authorize the user for the given resource.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;&gt; TryAuthorize(HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_4","title":"Parameters","text":"<p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationResult&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt;. If the authorization was successful the Result&lt;TValue&gt; will contain an AuthorizationResult, otherwise a HakomException.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicetryauthorizepermissions-iresource-cancellationtoken-method","title":"IAuthorizationService.TryAuthorize(Permissions, IResource, CancellationToken) Method","text":"<p>Attempts to authorize the user for the given resource and checks if it has the desired permissions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryAuthorize(HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_5","title":"Parameters","text":"<p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result which indicates, if the user has the desired permissions for the given resource. Returns a Success if it does and Failure if it doesn't.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicetryauthorizeclaimsidentity-iresource-cancellationtoken-method","title":"IAuthorizationService.TryAuthorize(ClaimsIdentity, IResource, CancellationToken) Method","text":"<p>Attempts to authorise the given identity for the given resource.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationResult&gt;&gt; TryAuthorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_6","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationResult&gt;&gt; A Result&lt;TValue&gt; containing an AuthorizationResult which contains             all permissions the given identity has for the given resource.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#iauthorizationservicetryauthorizeclaimsidentity-permissions-iresource-cancellationtoken-method","title":"IAuthorizationService.TryAuthorize(ClaimsIdentity, Permissions, IResource, CancellationToken) Method","text":"<p>Attempts to authorize the given identity for the given resource and checks if it has the desired permissions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryAuthorize(System.Security.Claims.ClaimsIdentity identity, HAKOM.Security.Core.Net.Api.Authorization.Permissions permissions, HAKOM.Security.Core.Net.Api.Authorization.IResource resource, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#parameters_7","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The System.Security.Claims.ClaimsIdentity which will be authorised.</p> <p></p> <p><code>permissions</code> Permissions</p> <p>The Permissions used for the check.</p> <p></p> <p><code>resource</code> IResource</p> <p>The IResource for which permissions will be checked.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationService/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A Result indicating, if  the given identity has the desired permissions for the given resource. Returns a Success if it does and Failure if it doesn't.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/","title":"IAuthorizationServiceFactory","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#iauthorizationservicefactory-interface","title":"IAuthorizationServiceFactory Interface","text":"<p>Used to create authorization services for controlling access to resources.</p> C#<pre><code>public interface IAuthorizationServiceFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#iauthorizationservicefactorycreateiauthorizationservicesettings-method","title":"IAuthorizationServiceFactory.Create(IAuthorizationServiceSettings) Method","text":"<p>Creates a new IAuthorizationService based on given settings.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService Create(HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationServiceSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#parameters","title":"Parameters","text":"<p><code>settings</code> IAuthorizationServiceSettings</p> <p>The settings to use for creating the new IAuthorizationService.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#returns","title":"Returns","text":"<p>IAuthorizationService A new IAuthorizationService based on the given settings.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#iauthorizationservicefactorytrycreateiauthorizationservicesettings-method","title":"IAuthorizationServiceFactory.TryCreate(IAuthorizationServiceSettings) Method","text":"<p>Attempts to create a new IAuthorizationService based on given settings.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService&gt; TryCreate(HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationServiceSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#parameters_1","title":"Parameters","text":"<p><code>settings</code> IAuthorizationServiceSettings</p> <p>The settings to use for creating the new IAuthorizationService.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuthorizationService&gt; A Result&lt;TValue&gt; containing the new IAuthorizationService. If the creation was unsuccessful, the Result&lt;TValue&gt; will contain a HakomException instead.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/","title":"IAuthorizationServiceSettings","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#iauthorizationservicesettings-interface","title":"IAuthorizationServiceSettings Interface","text":"<p>Contains onfiguration for a configured authorization service.</p> C#<pre><code>public interface IAuthorizationServiceSettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#iauthorizationservicesettingsconfigurationsection-property","title":"IAuthorizationServiceSettings.ConfigurationSection Property","text":"<p>The configuration section holding additional configuration values.</p> C#<pre><code>Microsoft.Extensions.Configuration.IConfigurationSection ConfigurationSection { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#property-value","title":"Property Value","text":"<p>Microsoft.Extensions.Configuration.IConfigurationSection</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#iauthorizationservicesettingsname-property","title":"IAuthorizationServiceSettings.Name Property","text":"<p>The name of the configured authorization service.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#iauthorizationservicesettingstype-property","title":"IAuthorizationServiceSettings.Type Property","text":"<p>The type of the configured authorization service.</p> C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationServiceSettings/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/","title":"IAuthorizationSettings","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettings-interface","title":"IAuthorizationSettings Interface","text":"<p>Contains configuration about how access to resources should be controlled.</p> C#<pre><code>public interface IAuthorizationSettings\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettingsauthorization_section-field","title":"IAuthorizationSettings.AUTHORIZATION_SECTION Field","text":"<p>The root key under which authorization should be configured.</p> C#<pre><code>const string AUTHORIZATION_SECTION = Security:Authorization;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettingsauthorization_service_section-field","title":"IAuthorizationSettings.AUTHORIZATION_SERVICE_SECTION Field","text":"<p>The section underneath AUTHORIZATION_SECTION that should contain configuration for one or more authorization services.</p> C#<pre><code>const string AUTHORIZATION_SERVICE_SECTION = AuthorizationServices:AuthorizationService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#field-value_1","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettingsauthorizationservices-property","title":"IAuthorizationSettings.AuthorizationServices Property","text":"<p>Configuration for one or more authorization services.</p> C#<pre><code>System.Collections.Generic.IDictionary&lt;string,HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationServiceSettings&gt; AuthorizationServices { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IDictionary&lt;System.String,IAuthorizationServiceSettings&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettingsdefaultauthorizationservice-property","title":"IAuthorizationSettings.DefaultAuthorizationService Property","text":"<p>The name of the authorization service to use by default.</p> C#<pre><code>string? DefaultAuthorizationService { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#iauthorizationsettingsreadiconfiguration-method","title":"IAuthorizationSettings.Read(IConfiguration) Method","text":"<p>Reads authorization settings from the given configuration.</p> C#<pre><code>static HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationSettings Read(Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#parameters","title":"Parameters","text":"<p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p> <p>The configuration from which the settings should be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IAuthorizationSettings/#returns","title":"Returns","text":"<p>IAuthorizationSettings A new instance of IAuthorizationSettings based on the given configuration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IConfigurableAuthorizationService/","title":"IConfigurableAuthorizationService","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IConfigurableAuthorizationService/#iconfigurableauthorizationservice-interface","title":"IConfigurableAuthorizationService Interface","text":"<p>Base interfaces for authorization services that support initialization from configuration.</p> C#<pre><code>public interface IConfigurableAuthorizationService :\nHAKOM.Security.Core.Net.Api.Authorization.IAuthorizationService\n</code></pre> <p>Derived \u21b3 ConfigurableAuthorizationService</p> <p>Implements IAuthorizationService</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IConfigurableAuthorizationService/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IConfigurableAuthorizationService/#iconfigurableauthorizationserviceconfigureiauthorizationservicesettings-method","title":"IConfigurableAuthorizationService.Configure(IAuthorizationServiceSettings) Method","text":"<p>Initializes the authorization service from the given settings.</p> C#<pre><code>void Configure(HAKOM.Security.Core.Net.Api.Authorization.IAuthorizationServiceSettings settings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IConfigurableAuthorizationService/#parameters","title":"Parameters","text":"<p><code>settings</code> IAuthorizationServiceSettings</p> <p>The settings to use to configure and initialize the authorization service.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/","title":"IResource","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#iresource-interface","title":"IResource Interface","text":"<p>During authorization it will be checked, if the user has Permissions to a IResource. This will be a specific part of a repository.</p> C#<pre><code>public interface IResource\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#iresourceidentifier-property","title":"IResource.Identifier Property","text":"<p>Gets the System.String identifier of this IResource. Used to refer to specific entries in the repository.</p> C#<pre><code>string? Identifier { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#iresourceparent-property","title":"IResource.Parent Property","text":"<p>Gets the parent IResource of this IResource.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResource? Parent { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#property-value_1","title":"Property Value","text":"<p>IResource</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#iresourcetype-property","title":"IResource.Type Property","text":"<p>Gets the System.String type of this IResource. Used to refer to the part of the repository for which authorization is being checked.</p> C#<pre><code>string Type { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#iresourcenewchildiresource-method","title":"IResource.NewChild(IResource) Method","text":"<p>Gets a new child in the IResource hierarchy.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResource NewChild(HAKOM.Security.Core.Net.Api.Authorization.IResource child);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#parameters","title":"Parameters","text":"<p><code>child</code> IResource</p> <p>The child object used for comparison with the IResource used to call this method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#returns","title":"Returns","text":"<p>IResource If the IResource used to call this method doesn't have a type or identifier, the given child will be returned. If the IResource used to call this method is the same object as the given child, it will be returned. Otherwise a new IResource will be created using the properties of the given child.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResource/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Throws an System.ArgumentNullException when the given child is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/","title":"IResourceFactory","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#iresourcefactory-interface","title":"IResourceFactory Interface","text":"<p>Used to create IResource objects.</p> C#<pre><code>public interface IResourceFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#iresourcefactorycreatestring-string-method","title":"IResourceFactory.Create(string, string) Method","text":"<p>Creates a new IResource with the given type and identifier.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResource Create(string type, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#parameters","title":"Parameters","text":"<p><code>type</code> System.String</p> <p>The System.String used to set the Type.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String used to set the Identifier.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#returns","title":"Returns","text":"<p>IResource A new IResource with Type equal to the given type and Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#iresourcefactorycreatestring-method","title":"IResourceFactory.Create(string) Method","text":"<p>Creates a new IResource with the given type.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResource Create(string type);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#parameters_1","title":"Parameters","text":"<p><code>type</code> System.String</p> <p>The System.String used to set the Type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/IResourceFactory/#returns_1","title":"Returns","text":"<p>IResource A new IResource with Type equal to the given type and null Identifier.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Permissions/","title":"Permissions","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Permissions/#permissions-enum","title":"Permissions Enum","text":"<p>During authorization it will be checked, if the user has permissions to acces or edit data in a IResource. This describes the types of permissions used in is process.</p> C#<pre><code>public enum Permissions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Permissions/#fields","title":"Fields","text":"<p><code>All</code> 30</p> <p>A user with all permissions can freely read write and delete data.</p> <p></p> <p><code>Create</code> 2</p> <p>Describes create permissions.</p> <p></p> <p><code>Delete</code> 16</p> <p>Describes delete permissions</p> <p></p> <p><code>None</code> 0</p> <p>No permissions.</p> <p></p> <p><code>Read</code> 4</p> <p>Describes read permissions.</p> <p></p> <p><code>Write</code> 8</p> <p>Describes write permissions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/","title":"HAKOM.Security.Core.Net.Api.Authorization.Exceptions","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/#hakomsecuritycorenetapiauthorizationexceptions-namespace","title":"HAKOM.Security.Core.Net.Api.Authorization.Exceptions Namespace","text":"Classes AuthorizationServiceTypeNotSpecifiedException This error occurs when an authorization service is configured without specifying a type. CouldNotInitializeAuthorizationServiceException This error occurs when a configured authorization service could not be initialized. CouldNotParsePermissionException This error occurs when the configuration of static permissions contains invalid values. MultipleAuthorizationServicesConfiguredWithoutDefaultException This error indicates that multiple authorization services are configured, but none of them is configured as default. SpecifiedDefaultAuthorizationServiceIsNotConfiguredException This error indicates that multiple authorization services are configured, yet the one configured as default is not. UnauthorizedException Indicates that an attempt was made to perform an action while being unauthorized to do so."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/","title":"AuthorizationServiceTypeNotSpecifiedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#authorizationservicetypenotspecifiedexception-class","title":"AuthorizationServiceTypeNotSpecifiedException Class","text":"<p>This error occurs when an authorization service is configured without specifying a type.</p> C#<pre><code>public sealed class AuthorizationServiceTypeNotSpecifiedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AuthorizationServiceTypeNotSpecifiedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#remarks","title":"Remarks","text":"<p>Make sure all authorization services configured specify a type.  </p> <p>This error can be identified by its code HK14...?</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#authorizationservicetypenotspecifiedexceptionauthorizationservicename-property","title":"AuthorizationServiceTypeNotSpecifiedException.AuthorizationServiceName Property","text":"<p>The name of the authorization service that has no type configured.</p> C#<pre><code>public string AuthorizationServiceName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#authorizationservicetypenotspecifiedexceptionequivalenthttpstatuscode-property","title":"AuthorizationServiceTypeNotSpecifiedException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while processing an HTTP request a response with a status code 500 (Internal Server Error) should be returned.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/AuthorizationServiceTypeNotSpecifiedException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/","title":"CouldNotInitializeAuthorizationServiceException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/#couldnotinitializeauthorizationserviceexception-class","title":"CouldNotInitializeAuthorizationServiceException Class","text":"<p>This error occurs when a configured authorization service could not be initialized.</p> C#<pre><code>public sealed class CouldNotInitializeAuthorizationServiceException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotInitializeAuthorizationServiceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/#remarks","title":"Remarks","text":"<p>Make sure the type of the configured authorization service is correct and a corresponding implementation has been registered using UseConfigurableAuthorizationService&lt;TAuthorizationService&gt;(this IContainer, string).  </p> <p>This error can be identified by its code HK14033.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/#couldnotinitializeauthorizationserviceexceptionequivalenthttpstatuscode-property","title":"CouldNotInitializeAuthorizationServiceException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, a response should be returned with HTTP status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotInitializeAuthorizationServiceException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/","title":"CouldNotParsePermissionException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#couldnotparsepermissionexception-class","title":"CouldNotParsePermissionException Class","text":"<p>This error occurs when the configuration of static permissions contains invalid values.</p> C#<pre><code>public sealed class CouldNotParsePermissionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotParsePermissionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#remarks","title":"Remarks","text":"<p>Make sure the configuration for static authorization services contains a 'Permissions' value that is a comma separated list of Permissions names.  </p> <p>This error can be identified by its error code: HK14????.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#couldnotparsepermissionexceptionequivalenthttpstatuscode-property","title":"CouldNotParsePermissionException.EquivalentHttpStatusCode Property","text":"<p>When this error is encountered while processing an HTTP request, the service should respond with a status code 500 (Internal Server Error) as this is not something the client can fix.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#couldnotparsepermissionexceptionunparseablepermission-property","title":"CouldNotParsePermissionException.UnparseablePermission Property","text":"<p>The string that could not be parsed as a valid Permissions value.</p> C#<pre><code>public string UnparseablePermission { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/CouldNotParsePermissionException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/","title":"MultipleAuthorizationServicesConfiguredWithoutDefaultException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/#multipleauthorizationservicesconfiguredwithoutdefaultexception-class","title":"MultipleAuthorizationServicesConfiguredWithoutDefaultException Class","text":"<p>This error indicates that multiple authorization services are configured, but none of them is configured as default.</p> C#<pre><code>public sealed class MultipleAuthorizationServicesConfiguredWithoutDefaultException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MultipleAuthorizationServicesConfiguredWithoutDefaultException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/#remarks","title":"Remarks","text":"<p>When configuring multiple authorization services, make sure one of them is also configured as the default.  </p> <p>This error can be identified by its code: HK14????.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/#multipleauthorizationservicesconfiguredwithoutdefaultexceptionequivalenthttpstatuscode-property","title":"MultipleAuthorizationServicesConfiguredWithoutDefaultException.EquivalentHttpStatusCode Property","text":"<p>When encountered while handling an HTTP request, a service should respond with an HTTP status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/MultipleAuthorizationServicesConfiguredWithoutDefaultException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/","title":"SpecifiedDefaultAuthorizationServiceIsNotConfiguredException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#specifieddefaultauthorizationserviceisnotconfiguredexception-class","title":"SpecifiedDefaultAuthorizationServiceIsNotConfiguredException Class","text":"<p>This error indicates that multiple authorization services are configured, yet the one configured as default is not.</p> C#<pre><code>public sealed class SpecifiedDefaultAuthorizationServiceIsNotConfiguredException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SpecifiedDefaultAuthorizationServiceIsNotConfiguredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#remarks","title":"Remarks","text":"<p>Make sure the authorization service configured as default also has a valid configuration.  </p> <p>This error can be identified by its code: HK14????.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#specifieddefaultauthorizationserviceisnotconfiguredexceptionconfigureddefault-property","title":"SpecifiedDefaultAuthorizationServiceIsNotConfiguredException.ConfiguredDefault Property","text":"<p>The configured default authorization service that's missing a configuration entry.</p> C#<pre><code>public string? ConfiguredDefault { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#specifieddefaultauthorizationserviceisnotconfiguredexceptionequivalenthttpstatuscode-property","title":"SpecifiedDefaultAuthorizationServiceIsNotConfiguredException.EquivalentHttpStatusCode Property","text":"<p>When encountered while handling an HTTP request, a service should respond with an HTTP status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/SpecifiedDefaultAuthorizationServiceIsNotConfiguredException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/","title":"UnauthorizedException","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#unauthorizedexception-class","title":"UnauthorizedException Class","text":"<p>Indicates that an attempt was made to perform an action while being unauthorized to do so.</p> C#<pre><code>public sealed class UnauthorizedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnauthorizedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the actor of the action is unauthorized to do so.  </p> <p>This exception is identified by error code HK14002.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#unauthorizedexceptionequivalenthttpstatuscode-property","title":"UnauthorizedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 403 (Forbidden).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#unauthorizedexceptionobjectidentifier-property","title":"UnauthorizedException.ObjectIdentifier Property","text":"<p>Gets the System.String identifier of the object for which the actor doesn't have authrization.</p> C#<pre><code>public string? ObjectIdentifier { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#unauthorizedexceptionobjecttype-property","title":"UnauthorizedException.ObjectType Property","text":"<p>Gets the System.String type of the object for which the actor doesn't have authorization.</p> C#<pre><code>public string ObjectType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#unauthorizedexceptionrequestedpermissions-property","title":"UnauthorizedException.RequestedPermissions Property","text":"<p>Gets the permissions which the actor doesn't have.</p> C#<pre><code>public System.Nullable&lt;HAKOM.Security.Core.Net.Api.Authorization.Permissions&gt; RequestedPermissions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Exceptions/UnauthorizedException/#property-value_3","title":"Property Value","text":"<p>System.Nullable&lt;Permissions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/","title":"HAKOM.Security.Core.Net.Api.Authorization.Extensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/#hakomsecuritycorenetapiauthorizationextensions-namespace","title":"HAKOM.Security.Core.Net.Api.Authorization.Extensions Namespace","text":"Classes ClaimExtensions Provides extension methods for System.Security.Claims.Claim objects. ContainerExtensions Provides extension methods for registering implementations of interfaces used for authorization with the container."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/","title":"ClaimExtensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/#claimextensions-class","title":"ClaimExtensions Class","text":"<p>Provides extension methods for System.Security.Claims.Claim objects.</p> C#<pre><code>public static class ClaimExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ClaimExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/#claimextensionsmatchesthis-claim-claim-method","title":"ClaimExtensions.Matches(this Claim, Claim) Method","text":"<p>Performs simple comparison of two claims based only on case insensitive comparison of System.Security.Claims.Claim.Type and System.Security.Claims.Claim.Value.</p> C#<pre><code>public static bool Matches(this System.Security.Claims.Claim thisClaim, System.Security.Claims.Claim? otherClaim);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/#parameters","title":"Parameters","text":"<p><code>thisClaim</code> System.Security.Claims.Claim</p> <p>The claim to compare.</p> <p></p> <p><code>otherClaim</code> System.Security.Claims.Claim</p> <p>The claim to compare with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ClaimExtensions/#returns","title":"Returns","text":"<p>System.Boolean true if type and value are the same, false otherwise. Will return false if either thisClaim or otherClaim is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Security.Core.Net</p> <p>Namespace: HAKOM.Security.Core.Net.Api.Authorization.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering implementations of interfaces used for authorization with the container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#containerextensionsuseconfigurableauthorizationservicetauthorizationservicethis-icontainer-string-method","title":"ContainerExtensions.UseConfigurableAuthorizationService&lt;TAuthorizationService&gt;(this IContainer, string) Method","text":"<p>Registers an authorization service implementation that can be used by enabling it in configuration.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfigurableAuthorizationService&lt;TAuthorizationService&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, string type)\n    where TAuthorizationService : class, HAKOM.Security.Core.Net.Api.Authorization.IConfigurableAuthorizationService;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TAuthorizationService</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>type</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#containerextensionsuseconfiguredauthorizationthis-icontainer-method","title":"ContainerExtensions.UseConfiguredAuthorization(this IContainer) Method","text":"<p>Registers the default implementations for all interfaces in the Authorization namespace.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConfiguredAuthorization(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default implementations with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Core/API/Authorization/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/","title":"HAKOM.Security.Http.Net","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/#hakomsecurityhttpnet-assembly","title":"HAKOM.Security.Http.Net Assembly","text":"Namespaces HAKOM.Security.Http.Net.Api.Authentication HAKOM.Security.Http.Net.Api.Authentication.Exceptions HAKOM.Security.Http.Net.Api.Authentication.Extensions HAKOM.Security.Http.Net.Api.Authorization HAKOM.Security.Http.Net.Api.Authorization.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/","title":"HAKOM.Security.Http.Net.Api.Authentication","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/#hakomsecurityhttpnetapiauthentication-namespace","title":"HAKOM.Security.Http.Net.Api.Authentication Namespace","text":"Classes IdentityController IdentityProvidersController Interfaces IConfiguredHttpIdentityProvider IHttpIdentityProviderConfigurator"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/","title":"IConfiguredHttpIdentityProvider","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityprovider-interface","title":"IConfiguredHttpIdentityProvider Interface","text":"C#<pre><code>public interface IConfiguredHttpIdentityProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityprovidername-property","title":"IConfiguredHttpIdentityProvider.Name Property","text":"C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityproviderschemes-property","title":"IConfiguredHttpIdentityProvider.Schemes Property","text":"C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;string&gt; Schemes { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityprovidersettings-property","title":"IConfiguredHttpIdentityProvider.Settings Property","text":"C#<pre><code>HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings Settings { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#property-value_2","title":"Property Value","text":"<p>IIdentityProviderSettings</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityprovidersigninscheme-property","title":"IConfiguredHttpIdentityProvider.SignInScheme Property","text":"C#<pre><code>string SignInScheme { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#iconfiguredhttpidentityprovidertype-property","title":"IConfiguredHttpIdentityProvider.Type Property","text":"C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IConfiguredHttpIdentityProvider/#property-value_4","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/","title":"IHttpIdentityProviderConfigurator","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#ihttpidentityproviderconfigurator-interface","title":"IHttpIdentityProviderConfigurator Interface","text":"C#<pre><code>public interface IHttpIdentityProviderConfigurator\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#ihttpidentityproviderconfiguratortype-property","title":"IHttpIdentityProviderConfigurator.Type Property","text":"C#<pre><code>string Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#ihttpidentityproviderconfiguratorconfigureauthenticationbuilder-iauthenticationsettings-iidentityprovidersettings-method","title":"IHttpIdentityProviderConfigurator.Configure(AuthenticationBuilder, IAuthenticationSettings, IIdentityProviderSettings) Method","text":"C#<pre><code>Microsoft.AspNetCore.Authentication.AuthenticationOptions Configure(Microsoft.AspNetCore.Authentication.AuthenticationBuilder authenticationBuilder, HAKOM.Security.Core.Net.Api.Authentication.IAuthenticationSettings authenticationSettings, HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings providerSettings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#parameters","title":"Parameters","text":"<p><code>authenticationBuilder</code> Microsoft.AspNetCore.Authentication.AuthenticationBuilder</p> <p></p> <p><code>authenticationSettings</code> IAuthenticationSettings</p> <p></p> <p><code>providerSettings</code> IIdentityProviderSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Authentication.AuthenticationOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#ihttpidentityproviderconfiguratortryconfigureauthenticationbuilder-iauthenticationsettings-iidentityprovidersettings-method","title":"IHttpIdentityProviderConfigurator.TryConfigure(AuthenticationBuilder, IAuthenticationSettings, IIdentityProviderSettings) Method","text":"C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;Microsoft.AspNetCore.Authentication.AuthenticationOptions&gt; TryConfigure(Microsoft.AspNetCore.Authentication.AuthenticationBuilder authenticationBuilder, HAKOM.Security.Core.Net.Api.Authentication.IAuthenticationSettings authenticationSettings, HAKOM.Security.Core.Net.Api.Authentication.IIdentityProviderSettings providerSettings);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#parameters_1","title":"Parameters","text":"<p><code>authenticationBuilder</code> Microsoft.AspNetCore.Authentication.AuthenticationBuilder</p> <p></p> <p><code>authenticationSettings</code> IAuthenticationSettings</p> <p></p> <p><code>providerSettings</code> IIdentityProviderSettings</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IHttpIdentityProviderConfigurator/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;Microsoft.AspNetCore.Authentication.AuthenticationOptions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/","title":"IdentityController","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#identitycontroller-class","title":"IdentityController Class","text":"C#<pre><code>public sealed class IdentityController : Microsoft.AspNetCore.Mvc.Controller\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ControllerBase \ud83e\udc52 Microsoft.AspNetCore.Mvc.Controller \ud83e\udc52 IdentityController</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#identitycontrollergetcurrentidentityiidentityprovider-method","title":"IdentityController.GetCurrentIdentity(IIdentityProvider) Method","text":"C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt; GetCurrentIdentity(HAKOM.Security.Core.Net.Api.Authentication.IIdentityProvider identityProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#parameters","title":"Parameters","text":"<p><code>identityProvider</code> IIdentityProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Security.Claims.ClaimsIdentity&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#identitycontrollersignoutienumerableiconfiguredhttpidentityprovider-uri-method","title":"IdentityController.Signout(IEnumerable&lt;IConfiguredHttpIdentityProvider&gt;, Uri) Method","text":"C#<pre><code>public System.Threading.Tasks.Task Signout(System.Collections.Generic.IEnumerable&lt;HAKOM.Security.Http.Net.Api.Authentication.IConfiguredHttpIdentityProvider&gt; configuredHttpIdentityProviders, System.Uri? referrer=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#parameters_1","title":"Parameters","text":"<p><code>configuredHttpIdentityProviders</code> System.Collections.Generic.IEnumerable&lt;IConfiguredHttpIdentityProvider&gt;</p> <p></p> <p><code>referrer</code> System.Uri</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityController/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/","title":"IdentityProvidersController","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontroller-class","title":"IdentityProvidersController Class","text":"C#<pre><code>public sealed class IdentityProvidersController : Microsoft.AspNetCore.Mvc.Controller\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ControllerBase \ud83e\udc52 Microsoft.AspNetCore.Mvc.Controller \ud83e\udc52 IdentityProvidersController</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontrollerienumerable-constructor","title":"IdentityProvidersController(IEnumerable) Constructor C#<pre><code>public IdentityProvidersController(System.Collections.Generic.IEnumerable&lt;HAKOM.Security.Http.Net.Api.Authentication.IConfiguredHttpIdentityProvider&gt; identityProviders);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#parameters","title":"Parameters","text":"<p><code>identityProviders</code> System.Collections.Generic.IEnumerable&lt;IConfiguredHttpIdentityProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontrollergetidentityproviderstring-method","title":"IdentityProvidersController.GetIdentityProvider(string) Method C#<pre><code>public HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Http.Net.Api.Authentication.IConfiguredHttpIdentityProvider&gt; GetIdentityProvider(string identityProviderName);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#parameters_1","title":"Parameters","text":"<p><code>identityProviderName</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConfiguredHttpIdentityProvider&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontrollergetidentityproviders-method","title":"IdentityProvidersController.GetIdentityProviders() Method C#<pre><code>public System.Collections.Generic.IEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Http.Net.Api.Authentication.IConfiguredHttpIdentityProvider&gt;&gt; GetIdentityProviders();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConfiguredHttpIdentityProvider&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontrollersigninstring-uri-method","title":"IdentityProvidersController.SignIn(string, Uri) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; SignIn(string identityProviderName, System.Uri? referrer=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#parameters_2","title":"Parameters","text":"<p><code>identityProviderName</code> System.String</p> <p></p> <p><code>referrer</code> System.Uri</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#identityproviderscontrollersignoutstring-uri-method","title":"IdentityProvidersController.SignOut(string, Uri) Method C#<pre><code>public System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; SignOut(string identityProviderName, System.Uri? referrer=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#parameters_3","title":"Parameters","text":"<p><code>identityProviderName</code> System.String</p> <p></p> <p><code>referrer</code> System.Uri</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/IdentityProvidersController/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/","title":"HAKOM.Security.Http.Net.Api.Authentication.Exceptions","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/#hakomsecurityhttpnetapiauthenticationexceptions-namespace","title":"HAKOM.Security.Http.Net.Api.Authentication.Exceptions Namespace","text":"Classes AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException AuthenticationRequiresHttpContextException IdentityProviderNotFoundException Indicates that an attempt was made to retrieve an identity provider but it was not found. RequestCannotBeAuthenticatedException Indicates that an attempt was made to perform an action that requires to be authenticated."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/","title":"AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#authenticatedschemedoesnotmatchanyconfiguredidentityproviderexception-class","title":"AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException Class","text":"C#<pre><code>public sealed class AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#authenticatedschemedoesnotmatchanyconfiguredidentityproviderexceptionauthenticatedscheme-property","title":"AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException.AuthenticatedScheme Property","text":"C#<pre><code>public string AuthenticatedScheme { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#authenticatedschemedoesnotmatchanyconfiguredidentityproviderexceptionequivalenthttpstatuscode-property","title":"AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticatedSchemeDoesNotMatchAnyConfiguredIdentityProviderException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticationRequiresHttpContextException/","title":"AuthenticationRequiresHttpContextException","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticationRequiresHttpContextException/#authenticationrequireshttpcontextexception-class","title":"AuthenticationRequiresHttpContextException Class","text":"C#<pre><code>public sealed class AuthenticationRequiresHttpContextException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AuthenticationRequiresHttpContextException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticationRequiresHttpContextException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticationRequiresHttpContextException/#authenticationrequireshttpcontextexceptionequivalenthttpstatuscode-property","title":"AuthenticationRequiresHttpContextException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/AuthenticationRequiresHttpContextException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/","title":"IdentityProviderNotFoundException","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#identityprovidernotfoundexception-class","title":"IdentityProviderNotFoundException Class","text":"<p>Indicates that an attempt was made to retrieve an identity provider but it was not found.</p> C#<pre><code>public sealed class IdentityProviderNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentityProviderNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the identity provider was not found.  </p> <p>This exception is identified by error code HK14011.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#identityprovidernotfoundexceptionequivalenthttpstatuscode-property","title":"IdentityProviderNotFoundException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#identityprovidernotfoundexceptionname-property","title":"IdentityProviderNotFoundException.Name Property","text":"C#<pre><code>public string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/IdentityProviderNotFoundException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/","title":"RequestCannotBeAuthenticatedException","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/#requestcannotbeauthenticatedexception-class","title":"RequestCannotBeAuthenticatedException Class","text":"<p>Indicates that an attempt was made to perform an action that requires to be authenticated.</p> C#<pre><code>public sealed class RequestCannotBeAuthenticatedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 RequestCannotBeAuthenticatedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/#remarks","title":"Remarks","text":"<p>This exception is thrown when the actor of the action is not authenticated.  </p> <p>This exception is identified by error code HK14010.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/#requestcannotbeauthenticatedexceptionequivalenthttpstatuscode-property","title":"RequestCannotBeAuthenticatedException.EquivalentHttpStatusCode Property","text":"C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Exceptions/RequestCannotBeAuthenticatedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/","title":"HAKOM.Security.Http.Net.Api.Authentication.Extensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/#hakomsecurityhttpnetapiauthenticationextensions-namespace","title":"HAKOM.Security.Http.Net.Api.Authentication.Extensions Namespace","text":"Classes ContainerExtensions MvcBuilderExtensions WebApplicationBuilderExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/#containerextensionsusehttpcontextidentityproviderthis-icontainer-method","title":"ContainerExtensions.UseHttpContextIdentityProvider(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseHttpContextIdentityProvider(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/","title":"MvcBuilderExtensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#mvcbuilderextensions-class","title":"MvcBuilderExtensions Class","text":"C#<pre><code>public static class MvcBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsdefault_authentication_endpoints_basepath-field","title":"MvcBuilderExtensions.DEFAULT_AUTHENTICATION_ENDPOINTS_BASEPATH Field","text":"C#<pre><code>public const string DEFAULT_AUTHENTICATION_ENDPOINTS_BASEPATH = security/authentication;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsdefault_security_endpoints_basepath-field","title":"MvcBuilderExtensions.DEFAULT_SECURITY_ENDPOINTS_BASEPATH Field","text":"C#<pre><code>public const string DEFAULT_SECURITY_ENDPOINTS_BASEPATH = security;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#field-value_1","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsaddauthenticationendpointsthis-imvcbuilder-string-method","title":"MvcBuilderExtensions.AddAuthenticationEndpoints(this IMvcBuilder, string) Method","text":"C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddAuthenticationEndpoints(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, string basePath=\"security/authentication\");\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p></p> <p><code>basePath</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/MvcBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/","title":"WebApplicationBuilderExtensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensions-class","title":"WebApplicationBuilderExtensions Class","text":"C#<pre><code>public static class WebApplicationBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 WebApplicationBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/#webapplicationbuilderextensionsaddconfiguredhttpidentityprovidersthis-webapplicationbuilder-iconfiguration-method","title":"WebApplicationBuilderExtensions.AddConfiguredHttpIdentityProviders(this WebApplicationBuilder, IConfiguration) Method","text":"C#<pre><code>public static Microsoft.AspNetCore.Builder.WebApplicationBuilder AddConfiguredHttpIdentityProviders(this Microsoft.AspNetCore.Builder.WebApplicationBuilder builder, Microsoft.Extensions.Configuration.IConfiguration configuration);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>builder</code> Microsoft.AspNetCore.Builder.WebApplicationBuilder</p> <p></p> <p><code>configuration</code> Microsoft.Extensions.Configuration.IConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authentication/Extensions/WebApplicationBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Builder.WebApplicationBuilder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/","title":"HAKOM.Security.Http.Net.Api.Authorization","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/#hakomsecurityhttpnetapiauthorization-namespace","title":"HAKOM.Security.Http.Net.Api.Authorization Namespace","text":"Delegates ActionResourceProvider(ActionContext) SyncActionResourceProvider(ActionContext)"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/ActionResourceProvider%28ActionContext%29/","title":"ActionResourceProvider(ActionContext)","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/ActionResourceProvider%28ActionContext%29/#actionresourceprovideractioncontext-delegate","title":"ActionResourceProvider(ActionContext) Delegate","text":"C#<pre><code>public delegate System.Threading.Tasks.Task&lt;HAKOM.Security.Core.Net.Api.Authorization.IResource?&gt; ActionResourceProvider(Microsoft.AspNetCore.Mvc.ActionContext context);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/ActionResourceProvider%28ActionContext%29/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.ActionContext</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/ActionResourceProvider%28ActionContext%29/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IResource&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/SyncActionResourceProvider%28ActionContext%29/","title":"SyncActionResourceProvider(ActionContext)","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/SyncActionResourceProvider%28ActionContext%29/#syncactionresourceprovideractioncontext-delegate","title":"SyncActionResourceProvider(ActionContext) Delegate","text":"C#<pre><code>public delegate HAKOM.Security.Core.Net.Api.Authorization.IResource? SyncActionResourceProvider(Microsoft.AspNetCore.Mvc.ActionContext context);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/SyncActionResourceProvider%28ActionContext%29/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.ActionContext</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/SyncActionResourceProvider%28ActionContext%29/#returns","title":"Returns","text":"<p>IResource</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/","title":"HAKOM.Security.Http.Net.Api.Authorization.Extensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/#hakomsecurityhttpnetapiauthorizationextensions-namespace","title":"HAKOM.Security.Http.Net.Api.Authorization.Extensions Namespace","text":"Classes MvcOptionsExtensions Provides extension methods to configure an MVC framework based application with security related options."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/","title":"MvcOptionsExtensions","text":"<p>Assembly: HAKOM.Security.Http.Net</p> <p>Namespace: HAKOM.Security.Http.Net.Api.Authorization.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#mvcoptionsextensions-class","title":"MvcOptionsExtensions Class","text":"<p>Provides extension methods to configure an MVC framework based application with security related options.</p> C#<pre><code>public static class MvcOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsaddresourceauthorizationfilterthis-mvcoptions-method","title":"MvcOptionsExtensions.AddResourceAuthorizationFilter(this MvcOptions) Method","text":"<p>Adds a filter to the pipeline that authorizes requests for their respective resource.</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions AddResourceAuthorizationFilter(this Microsoft.AspNetCore.Mvc.MvcOptions options);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>options</code> Microsoft.AspNetCore.Mvc.MvcOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Http/API/Authorization/Extensions/MvcOptionsExtensions/#remarks","title":"Remarks","text":"<p>In order to use this, register one or more of these types with the Microsoft.Extensions.DependencyInjection.IServiceCollection underlying the application: - ActionResourceProvider(ActionContext) - SyncActionResourceProvider(ActionContext) These will then be used to determine the requested resource(s) for any called action and - if there are any - make sure the current identity is authorized to access them.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/","title":"HAKOM.Security.Persistence.Net","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/#hakomsecuritypersistencenet-assembly","title":"HAKOM.Security.Persistence.Net Assembly","text":"Namespaces HAKOM.Security.Persistence.Net.Api.Authentication HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions HAKOM.Security.Persistence.Net.Api.Authentication.Extensions HAKOM.Security.Persistence.Net.Api.Authorization HAKOM.Security.Persistence.Net.Api.Authorization.Exceptions HAKOM.Security.Persistence.Net.Api.Authorization.Extensions HAKOM.Security.Persistence.Net.Api.Authorization.Persistence"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/","title":"HAKOM.Security.Persistence.Net.Api.Authentication","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/#hakomsecuritypersistencenetapiauthentication-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authentication Namespace","text":"Interfaces IUserIdentifierCache&lt;TIdentifier&gt; A cache for user identifiers which locally stores known identifiers based on repository and a unique claim value of the user/identity. IUserIdentifierProvider Provides a means to retrieve a unique identifier for a user/application based on its identity. IUserIdentifierProviderFactory Used for creating a new instance of IUserIdentifierProvider."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/","title":"IUserIdentifierCache&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#iuseridentifiercachetidentifier-interface","title":"IUserIdentifierCache&lt;TIdentifier&gt; Interface","text":"<p>A cache for user identifiers which locally stores known identifiers based on repository and a unique claim value of the user/identity.</p> C#<pre><code>public interface IUserIdentifierCache&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of identifier this cache stores.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#remarks","title":"Remarks","text":"<p>This can be used by implementations of IUserIdentifierProvider that would normally access a storage provider to retrieve some identifier</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#iuseridentifiercachetidentifiercacheidentifierstring-claim-tidentifier-method","title":"IUserIdentifierCache&lt;TIdentifier&gt;.CacheIdentifier(string, Claim, TIdentifier) Method","text":"<p>Adds a known identifier to the cache</p> C#<pre><code>void CacheIdentifier(string repositoryName, System.Security.Claims.Claim claim, TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The name of the repository in which the identifier is associated to the given claim value.</p> <p></p> <p><code>claim</code> System.Security.Claims.Claim</p> <p>The claim that uniquely identifies the user.</p> <p></p> <p><code>identifier</code> TIdentifier</p> <p>The identifier to cache.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#iuseridentifiercachetidentifiertrygetcachedidentifierstring-claim-tidentifier-method","title":"IUserIdentifierCache&lt;TIdentifier&gt;.TryGetCachedIdentifier(string, Claim, TIdentifier) Method","text":"<p>Attempts to get an identifier from the local cache (as opposed to retrieving it by querying the storage provider)</p> C#<pre><code>bool TryGetCachedIdentifier(string repositoryName, System.Security.Claims.Claim claim, out TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository for which to get the identifier.</p> <p></p> <p><code>claim</code> System.Security.Claims.Claim</p> <p>The claim identifying the user.</p> <p></p> <p><code>identifier</code> TIdentifier</p> <p>When a value has been previously cached and is not expired, this parameter will hold the cached value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierCacheOf1/#returns","title":"Returns","text":"<p>System.Boolean true if an identifier has been found, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/","title":"IUserIdentifierProvider","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#iuseridentifierprovider-interface","title":"IUserIdentifierProvider Interface","text":"<p>Provides a means to retrieve a unique identifier for a user/application based on its identity.</p> C#<pre><code>public interface IUserIdentifierProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#remarks","title":"Remarks","text":"<p>Some parts of HAKOM software associate persisted data with an individual user/application (i.e. for auditing purposes). Implementations of this interface are used to generate a unique identifier for a given System.Security.Claims.ClaimsIdentity that can be then used in the database.  </p> <p>For example, an implementation may store a unique claim of the identity and return the primary key value of the new record that can then be used to link other data to that individual.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#iuseridentifierproviderconfigureistorageprovider-cancellationtoken-method","title":"IUserIdentifierProvider.Configure(IStorageProvider, CancellationToken) Method","text":"<p>Configures the current instantce with an instance of IStorageProvider.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The storage provider to associate with this instance.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to attempt to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once the operation has finished.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#iuseridentifierprovidergetuseridentifiertidentifierclaimsidentity-cancellationtoken-method","title":"IUserIdentifierProvider.GetUserIdentifier&lt;TIdentifier&gt;(ClaimsIdentity, CancellationToken) Method","text":"<p>Retrieves the user identifier associated with the given System.Security.Claims.ClaimsIdentity.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TIdentifier&gt; GetUserIdentifier&lt;TIdentifier&gt;(System.Security.Claims.ClaimsIdentity identity, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#parameters_1","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The claims identity of the user.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TIdentifier&gt; A System.Threading.Tasks.Task&lt;&gt; of TIdentifier representing the user identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#iuseridentifierprovidertrygetuseridentifiertidentifierclaimsidentity-cancellationtoken-method","title":"IUserIdentifierProvider.TryGetUserIdentifier&lt;TIdentifier&gt;(ClaimsIdentity, CancellationToken) Method","text":"<p>Attempts to retrieve the user identifier associated with the given System.Security.Claims.ClaimsIdentity.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TIdentifier&gt;&gt; TryGetUserIdentifier&lt;TIdentifier&gt;(System.Security.Claims.ClaimsIdentity identity, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#type-parameters_1","title":"Type parameters","text":"<p><code>TIdentifier</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#parameters_2","title":"Parameters","text":"<p><code>identity</code> System.Security.Claims.ClaimsIdentity</p> <p>The claims identity of the user.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TIdentifier&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the TIdentifier  representing the user identifier.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProvider/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/","title":"IUserIdentifierProviderFactory","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#iuseridentifierproviderfactory-interface","title":"IUserIdentifierProviderFactory Interface","text":"<p>Used for creating a new instance of IUserIdentifierProvider.</p> C#<pre><code>public interface IUserIdentifierProviderFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#iuseridentifierproviderfactorycreatestring-cancellationtoken-method","title":"IUserIdentifierProviderFactory.Create(string, CancellationToken) Method","text":"<p>Creates an instance of IUserIdentifierProvider for the given repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Security.Persistence.Net.Api.Authentication.IUserIdentifierProvider&gt; Create(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#parameters","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the users/identities should be associated with.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUserIdentifierProvider&gt; An IUserIdentifierProvider object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#iuseridentifierproviderfactorytrycreatestring-cancellationtoken-method","title":"IUserIdentifierProviderFactory.TryCreate(string, CancellationToken) Method","text":"<p>Attempts to create an instance of IUserIdentifierProvider  for the given repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Persistence.Net.Api.Authentication.IUserIdentifierProvider&gt;&gt; TryCreate(string repositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#parameters_1","title":"Parameters","text":"<p><code>repositoryName</code> System.String</p> <p>The repository the users/identities should be associated with.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUserIdentifierProvider&gt;&gt; A Result&lt;TValue&gt; containing an IUserIdentifierProvider object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/IUserIdentifierProviderFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/","title":"HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/#hakomsecuritypersistencenetapiauthenticationexceptions-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions Namespace","text":"Classes AuthenticationStorageProviderMismatchException THrown when an attempt is made to call Configure(IStorageProvider, CancellationToken) with a storage provider that the instance does not support. IdentifierTypeNotSupportedException This error occurs when an attempt is made to retrieve a user identifier of a type that is not supported by the IUserIdentifierProvider. IncompleteClaimException Thrown when an attempt is made to obtain a user identifier based on a clam that lacks an issuer value or type."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/","title":"AuthenticationStorageProviderMismatchException","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/#authenticationstorageprovidermismatchexception-class","title":"AuthenticationStorageProviderMismatchException Class","text":"<p>THrown when an attempt is made to call Configure(IStorageProvider, CancellationToken) with a storage provider that the instance does not support.</p> C#<pre><code>public sealed class AuthenticationStorageProviderMismatchException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AuthenticationStorageProviderMismatchException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/#remarks","title":"Remarks","text":"<p>This probably means that the user identity provider has been registered incorrectly. Make sure it is registered using the UseIdentifierProvider&lt;TStorageProvider,TUserIdentifierProvider&gt;(this IContainer) method.  </p> <p>This exception is identified by error code HK14021.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/#authenticationstorageprovidermismatchexceptionequivalenthttpstatuscode-property","title":"AuthenticationStorageProviderMismatchException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/AuthenticationStorageProviderMismatchException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/","title":"IdentifierTypeNotSupportedException","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/#identifiertypenotsupportedexception-class","title":"IdentifierTypeNotSupportedException Class","text":"<p>This error occurs when an attempt is made to retrieve a user identifier of a type that is not supported by the IUserIdentifierProvider.</p> C#<pre><code>public sealed class IdentifierTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IdentifierTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>When calling GetUserIdentifier&lt;TIdentifier&gt;(ClaimsIdentity, CancellationToken) with a TIdentifier that is not supported, this exception will be thrown. Make sure to call it only with supported types.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/#identifiertypenotsupportedexceptionequivalenthttpstatuscode-property","title":"IdentifierTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while processing an HTTP request, the request should fail with status 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IdentifierTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/","title":"IncompleteClaimException","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#incompleteclaimexception-class","title":"IncompleteClaimException Class","text":"<p>Thrown when an attempt is made to obtain a user identifier based on a clam that lacks an issuer value or type.</p> C#<pre><code>public sealed class IncompleteClaimException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IncompleteClaimException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#incompleteclaimexceptionclaim-property","title":"IncompleteClaimException.Claim Property","text":"<p>The incomplete claim.</p> C#<pre><code>public System.Security.Claims.Claim Claim { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#property-value","title":"Property Value","text":"<p>System.Security.Claims.Claim</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#incompleteclaimexceptionequivalenthttpstatuscode-property","title":"IncompleteClaimException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Exceptions/IncompleteClaimException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/","title":"HAKOM.Security.Persistence.Net.Api.Authentication.Extensions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/#hakomsecuritypersistencenetapiauthenticationextensions-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authentication.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods for adding services necessary for user authentication."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authentication.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for adding services necessary for user authentication.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#containerextensionsusedefaultidentifierproviderthis-icontainer-method","title":"ContainerExtensions.UseDefaultIdentifierProvider(this IContainer) Method","text":"<p>Registers IUserIdentifierProvider implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultIdentifierProvider(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#containerextensionsuseidentifierprovidertstorageprovidertuseridentifierproviderthis-icontainer-method","title":"ContainerExtensions.UseIdentifierProvider&lt;TStorageProvider,TUserIdentifierProvider&gt;(this IContainer) Method","text":"<p>Registers implementations of IUserIdentifierProvider.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseIdentifierProvider&lt;TStorageProvider,TUserIdentifierProvider&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TUserIdentifierProvider : class, HAKOM.Security.Persistence.Net.Api.Authentication.IUserIdentifierProvider;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider used to access data in storage.</p> <p></p> <p><code>TUserIdentifierProvider</code></p> <p>The type of IUserIdentifierProvider which will be registered.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#containerextensionsuseuseridentifierprovidersthis-icontainer-method","title":"ContainerExtensions.UseUserIdentifierProviders(this IContainer) Method","text":"<p>Registers implementations for authenticating the user.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseUserIdentifierProviders(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the services with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authentication/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/","title":"HAKOM.Security.Persistence.Net.Api.Authorization","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/#hakomsecuritypersistencenetapiauthorization-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authorization Namespace","text":"Interfaces IResourceAuthorizationRules Represents a cached association between a IResource and its corresponding AuthorizationRule rules."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/","title":"IResourceAuthorizationRules","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#iresourceauthorizationrules-interface","title":"IResourceAuthorizationRules Interface","text":"<p>Represents a cached association between a IResource and its corresponding AuthorizationRule rules.</p> C#<pre><code>public interface IResourceAuthorizationRules\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#iresourceauthorizationrulesresource-property","title":"IResourceAuthorizationRules.Resource Property","text":"<p>Gets the IResource to which the Rules rules apply.</p> C#<pre><code>HAKOM.Security.Core.Net.Api.Authorization.IResource Resource { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#property-value","title":"Property Value","text":"<p>IResource</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#iresourceauthorizationrulesrules-property","title":"IResourceAuthorizationRules.Rules Property","text":"<p>Gets the collection of AuthorizationRule rules associated with the Resource.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule&gt; Rules { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/IResourceAuthorizationRules/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;AuthorizationRule&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Exceptions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/#hakomsecuritypersistencenetapiauthorizationexceptions-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Exceptions Namespace","text":"Classes MissingRepositoryIdentifierException This error occurs when attempting to access a resource that requires authorization without that resource being associated to a specific repository. UnknownRepositoryForResourceException This error occurs when attempting to access a resource without it being associated to a specific repository."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/","title":"MissingRepositoryIdentifierException","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/#missingrepositoryidentifierexception-class","title":"MissingRepositoryIdentifierException Class","text":"<p>This error occurs when attempting to access a resource that requires authorization without that resource being associated to a specific repository.</p> C#<pre><code>public sealed class MissingRepositoryIdentifierException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MissingRepositoryIdentifierException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/#remarks","title":"Remarks","text":"<p>When using repository based authorization, rules that control the access to any given resources are retrieved from a repository. This means that every resource must have a repository associated with it (by having a parent with the resource type 'Repository' and the repositories name as its identifier).  </p> <p>Encountering this error means that the resource has a parent with the correct type ('Repository') but no specific identifier, thus the authorization service cannot load the authorization rules for this resource as it does not know where to load them from.  </p> <p>This error can be identified by its code HK14028.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/#missingrepositoryidentifierexceptionequivalenthttpstatuscode-property","title":"MissingRepositoryIdentifierException.EquivalentHttpStatusCode Property","text":"<p>When this error is encountered while processing an HTTP request, the service should respond with an HTTP status 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/MissingRepositoryIdentifierException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/","title":"UnknownRepositoryForResourceException","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#unknownrepositoryforresourceexception-class","title":"UnknownRepositoryForResourceException Class","text":"<p>This error occurs when attempting to access a resource without it being associated to a specific repository.</p> C#<pre><code>public sealed class UnknownRepositoryForResourceException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnknownRepositoryForResourceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#remarks","title":"Remarks","text":"<p>When using repository based authorization, rules that control the access to any given resources are retrieved from a repository. This means that every resource must have a repository associated with it (by having a parent with the resource type 'Repository' and the repositories name as its identifier).  </p> <p>Make sure that the Resource has an appropriate parent resource assigned to it.  </p> <p>This error can be identified by its code HK14027.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#unknownrepositoryforresourceexceptionequivalenthttpstatuscode-property","title":"UnknownRepositoryForResourceException.EquivalentHttpStatusCode Property","text":"<p>When this error is encountered while processing an HTTP request, the service should respond with an HTTP status 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#unknownrepositoryforresourceexceptionresource-property","title":"UnknownRepositoryForResourceException.Resource Property","text":"<p>The resource being accessed.</p> C#<pre><code>public HAKOM.Security.Core.Net.Api.Authorization.IResource Resource { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Exceptions/UnknownRepositoryForResourceException/#property-value_1","title":"Property Value","text":"<p>IResource</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Extensions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/#hakomsecuritypersistencenetapiauthorizationextensions-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods for registering implementations of interfaces used for authorization with the container."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering implementations of interfaces used for authorization with the container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#containerextensionsuseauthorizationrulestoretstorageprovidertauthorizationrulestorethis-icontainer-method","title":"ContainerExtensions.UseAuthorizationRuleStore&lt;TStorageProvider,TAuthorizationRuleStore&gt;(this IContainer) Method","text":"<p>Registers an implementation of IAuthorizationRuleStore.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAuthorizationRuleStore&lt;TStorageProvider,TAuthorizationRuleStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TAuthorizationRuleStore : class, HAKOM.Security.Persistence.Net.Api.Authorization.Persistence.IAuthorizationRuleStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider which this store will use.</p> <p></p> <p><code>TAuthorizationRuleStore</code></p> <p>The implementation of IAuthorizationRuleStore which will be registered.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default implementations with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#containerextensionsuserepositoryauthorizationthis-icontainer-method","title":"ContainerExtensions.UseRepositoryAuthorization(this IContainer) Method","text":"<p>Registers a repository authorization service with the container. The repository authorization service uses an IAuthorizationRuleStore to fetch authorization rules from the repository.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseRepositoryAuthorization(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default implementations with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Persistence","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/#hakomsecuritypersistencenetapiauthorizationpersistence-namespace","title":"HAKOM.Security.Persistence.Net.Api.Authorization.Persistence Namespace","text":"Interfaces IAuthorizationRuleStore Used to find authorization rules. IAuthorizationRuleStoreFactory Used to create IAuthorizationRuleStores."},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/","title":"IAuthorizationRuleStore","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#iauthorizationrulestore-interface","title":"IAuthorizationRuleStore Interface","text":"<p>Used to find authorization rules.</p> C#<pre><code>public interface IAuthorizationRuleStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#iauthorizationrulestorefindauthorizationrulesstring-cancellationtoken-method","title":"IAuthorizationRuleStore.FindAuthorizationRules(string, CancellationToken) Method","text":"<p>Finds all AuthorizationRules for the given resourceType as well as all default rules.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule&gt; FindAuthorizationRules(string? resourceType=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#parameters","title":"Parameters","text":"<p><code>resourceType</code> System.String</p> <p>The resource type by which the results will be filtered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#returns","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;AuthorizationRule&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all default rules and rules for the specified resourceType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#iauthorizationrulestoretryfindauthorizationrulesstring-cancellationtoken-method","title":"IAuthorizationRuleStore.TryFindAuthorizationRules(string, CancellationToken) Method","text":"<p>Attempts to find all AuthorizationRules for the given resourceType as well as all default rules.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Core.Net.Api.Authorization.AuthorizationRule&gt;&gt; TryFindAuthorizationRules(string? resourceType=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#parameters_1","title":"Parameters","text":"<p><code>resourceType</code> System.String</p> <p>The resource type by which the results will be filtered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStore/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;AuthorizationRule&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of Result&lt;TValue&gt; containing all default rules and rules for the specified resourceType, if successful and a Failure otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/","title":"IAuthorizationRuleStoreFactory","text":"<p>Assembly: HAKOM.Security.Persistence.Net</p> <p>Namespace: HAKOM.Security.Persistence.Net.Api.Authorization.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#iauthorizationrulestorefactory-interface","title":"IAuthorizationRuleStoreFactory Interface","text":"<p>Used to create IAuthorizationRuleStores.</p> C#<pre><code>public interface IAuthorizationRuleStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#iauthorizationrulestorefactorycreateistorageprovider-cancellationtoken-method","title":"IAuthorizationRuleStoreFactory.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates a new IAuthorizationRuleStore based on the given storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.Security.Persistence.Net.Api.Authorization.Persistence.IAuthorizationRuleStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider, which will be used to determine which implementation of IAuthorizationRuleStore will be created.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken, which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAuthorizationRuleStore&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing the store.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#iauthorizationrulestorefactorytrycreateistorageprovider-cancellationtoken-method","title":"IAuthorizationRuleStoreFactory.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Attempts to create a new IAuthorizationRuleStore based on the given storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Security.Persistence.Net.Api.Authorization.Persistence.IAuthorizationRuleStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider, which will be used to determine which implementation of IAuthorizationRuleStore will be created.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken, which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Security/Persistence/API/Authorization/Persistence/IAuthorizationRuleStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuthorizationRuleStore&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result&lt;TValue&gt;, if the attempt was successful, or a Failure otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/","title":"HAKOM.Serialization.Core.Net","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/#hakomserializationcorenet-assembly","title":"HAKOM.Serialization.Core.Net Assembly","text":"Namespaces HAKOM.Serialization.Core.Net.Api HAKOM.Serialization.Core.Net.Api.Binary HAKOM.Serialization.Core.Net.Api.Binary.Extensions HAKOM.Serialization.Core.Net.Api.Exceptions HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions.UnsupportedMediaTypeParameterExceptions HAKOM.Serialization.Core.Net.Api.Extensions HAKOM.Serialization.Core.Net.Api.Json HAKOM.Serialization.Core.Net.Api.Json.Extensions HAKOM.Serialization.Core.Net.Api.Parametrization HAKOM.Serialization.Core.Net.Api.Xml"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/","title":"HAKOM.Serialization.Core.Net.Api","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/#hakomserializationcorenetapi-namespace","title":"HAKOM.Serialization.Core.Net.Api Namespace","text":"Classes Serializer&lt;TData,TParameters&gt; Provides a base implementation for custom serializers (ISerializer). Interfaces IMediaTypeMatcher Represents an object that is used to determine wether a specific implementation of ISerializer can be used to serialize/deserialize an object of a given type for the given media type. ISerializationContractTypeProvider Provides serializable contract types/DTOs for types which may not usually be serializable such as interfaces. ISerializer General interface representing an object that can be used to serialize/deserialize an object to a stream. ISerializer&lt;TData&gt; Provides methods for serializing and deserializing TData instances to/from a System.IO.Stream. ISerializerFactory Used to instantiate serializers."},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/","title":"IMediaTypeMatcher","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/#imediatypematcher-interface","title":"IMediaTypeMatcher Interface","text":"<p>Represents an object that is used to determine wether a specific implementation of ISerializer can be used to serialize/deserialize an object of a given type for the given media type.</p> C#<pre><code>public interface IMediaTypeMatcher :\nHAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;System.Type, System.Net.Http.Headers.MediaTypeHeaderValue, HAKOM.Serialization.Core.Net.Api.ISerializer&gt;\n</code></pre> <p>Implements HAKOM.DependencyInjection.Core.Net.Api.Factories.Registration.ISyncRegistration&lt;System.Type,System.Net.Http.Headers.MediaTypeHeaderValue,ISerializer&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/#imediatypematcherismatchtype-mediatypeheadervalue-method","title":"IMediaTypeMatcher.IsMatch(Type, MediaTypeHeaderValue) Method","text":"<p>Returns wether or not the ISerializer associated with this registration is able to serialize/deserialize objects of type for the given mediaType.</p> C#<pre><code>bool IsMatch(System.Type type, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/#parameters","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The System.Type of the object to serialize.</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>The media type that defines how the object should be serialized (i.e. \"application/json\", \"text/plain\", etc.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/IMediaTypeMatcher/#returns","title":"Returns","text":"<p>System.Boolean Returns wether or not the ISerializer supports this combination of mediaType and type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/","title":"ISerializationContractTypeProvider","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#iserializationcontracttypeprovider-interface","title":"ISerializationContractTypeProvider Interface","text":"<p>Provides serializable contract types/DTOs for types which may not usually be serializable such as interfaces.</p> C#<pre><code>public interface ISerializationContractTypeProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#iserializationcontracttypeprovidergetcontracttypetype-method","title":"ISerializationContractTypeProvider.GetContractType(Type) Method","text":"<p>Returns the type to serialize/deserialize an object of type typeToSerialize to/from. The returned type should - have a public parameterless constructor, - contain all serializable properties as public properties including getter and setter methods. - if typeToSerialize is an interface, implement this interface, - if typeToSerialize is a class, derive from this class,</p> C#<pre><code>System.Type GetContractType(System.Type typeToSerialize);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#parameters","title":"Parameters","text":"<p><code>typeToSerialize</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#returns","title":"Returns","text":"<p>System.Type The type to be used in serialization/deserialization</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#iserializationcontracttypeprovidergetcontracttypettypetoserialize-method","title":"ISerializationContractTypeProvider.GetContractType&lt;TTypeToSerialize&gt;() Method","text":"<p>Returns the type to serialize/deserialize an object of type TTypeToSerialize to/from. The returned type should - have a public parameterless constructor, - contain all serializable properties as public properties including getter and setter methods. - if TTypeToSerialize is an interface, implement this interface, - if TTypeToSerialize is a class, derive from this class,</p> C#<pre><code>System.Type GetContractType&lt;TTypeToSerialize&gt;();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#type-parameters","title":"Type parameters","text":"<p><code>TTypeToSerialize</code></p> <p>The type for which to get a serializable type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializationContractTypeProvider/#returns_1","title":"Returns","text":"<p>System.Type The type to be used in serialization/deserialization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/","title":"ISerializer","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializer-interface","title":"ISerializer Interface","text":"<p>General interface representing an object that can be used to serialize/deserialize an object to a stream.</p> C#<pre><code>public interface ISerializer\n</code></pre> <p>Derived \u21b3 ISerializer&lt;TData&gt; \u21b3 Serializer&lt;TData,TParameters&gt; \u21b3 XmlSerializer&lt;TData&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializeroriginalmediatype-property","title":"ISerializer.OriginalMediaType Property","text":"<p>The media type this serializer was initially configured with (see the Configure(MediaTypeHeaderValue) method). May include wildcards etc. i.e. \"/+json\". Must be set by Configure(MediaTypeHeaderValue).</p> C#<pre><code>System.Net.Http.Headers.MediaTypeHeaderValue OriginalMediaType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#property-value","title":"Property Value","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializerparsedmediatype-property","title":"ISerializer.ParsedMediaType Property","text":"<p>The actual media type that's used by the serializer. For example, assuming Configure(MediaTypeHeaderValue) is called with \"/+json\" this serializer may interpret this  as \"application/hal+json;charset=utf-8;indentation=true\". This property should then contain that final media type used.</p> C#<pre><code>System.Net.Http.Headers.MediaTypeHeaderValue ParsedMediaType { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#property-value_1","title":"Property Value","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializerconfiguremediatypeheadervalue-method","title":"ISerializer.Configure(MediaTypeHeaderValue) Method","text":"<p>Configures this instance with a specific media type (i.e. \"application/json\", \"text/html\", etc.). Implementations must use this method to interpret media type parameters, set default values, etc. This method must also set OriginalMediaType to the value of mediaType and ParsedMediaType to the media type containing no wildcards and any default values for parameters used.</p> C#<pre><code>void Configure(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#parameters","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>The media type for this serializer to use.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializerdeserializeasobjectstream-cancellationtoken-method","title":"ISerializer.DeserializeAsObject(Stream, CancellationToken) Method","text":"<p>Asynchronously deserializes an object from the given inputStream.</p> C#<pre><code>System.Threading.Tasks.Task&lt;object?&gt; DeserializeAsObject(System.IO.Stream inputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#parameters_1","title":"Parameters","text":"<p><code>inputStream</code> System.IO.Stream</p> <p>The System.IO.Stream to read data from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the serializer to attempt cancelling the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Object&gt; A System.Threading.Tasks.Task&lt;&gt; that completes when the object has been successfully read from the inputStream.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#iserializerserializeobjectobject-stream-cancellationtoken-method","title":"ISerializer.SerializeObject(object, Stream, CancellationToken) Method","text":"<p>Asynchronously serializes data into the outputStream.</p> C#<pre><code>System.Threading.Tasks.Task SerializeObject(object? data, System.IO.Stream outputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#parameters_2","title":"Parameters","text":"<p><code>data</code> System.Object</p> <p>The object to serialize.</p> <p></p> <p><code>outputStream</code> System.IO.Stream</p> <p>The stream to serialize to.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the serializer to attempt cancelling the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializer/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task Returns a System.Threading.Tasks.Task that completes once all of data has been written to outputStream.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/","title":"ISerializerFactory","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactory-interface","title":"ISerializerFactory Interface","text":"<p>Used to instantiate serializers.</p> C#<pre><code>public interface ISerializerFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorymatchers-property","title":"ISerializerFactory.Matchers Property","text":"<p>List of all known IMediaTypeMatchers. These are used to determine which serializer can be created for what media type/object type.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Serialization.Core.Net.Api.IMediaTypeMatcher&gt; Matchers { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;IMediaTypeMatcher&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorycreatetype-string-method","title":"ISerializerFactory.Create(Type, string) Method","text":"C#<pre><code>HAKOM.Serialization.Core.Net.Api.ISerializer Create(System.Type dataType, string mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters","title":"Parameters","text":"<p><code>dataType</code> System.Type</p> <p></p> <p><code>mediaType</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns","title":"Returns","text":"<p>ISerializer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorycreatetype-mediatypeheadervalue-method","title":"ISerializerFactory.Create(Type, MediaTypeHeaderValue) Method","text":"C#<pre><code>HAKOM.Serialization.Core.Net.Api.ISerializer Create(System.Type dataType, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_1","title":"Parameters","text":"<p><code>dataType</code> System.Type</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_1","title":"Returns","text":"<p>ISerializer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorycreatetdatastring-method","title":"ISerializerFactory.Create&lt;TData&gt;(string) Method","text":"C#<pre><code>HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt; Create&lt;TData&gt;(string mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_2","title":"Parameters","text":"<p><code>mediaType</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_2","title":"Returns","text":"<p>HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorycreatetdatamediatypeheadervalue-method","title":"ISerializerFactory.Create&lt;TData&gt;(MediaTypeHeaderValue) Method","text":"C#<pre><code>HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt; Create&lt;TData&gt;(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TData</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_3","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_3","title":"Returns","text":"<p>HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorytrycreatetype-string-method","title":"ISerializerFactory.TryCreate(Type, string) Method","text":"C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&gt; TryCreate(System.Type dataType, string mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_4","title":"Parameters","text":"<p><code>dataType</code> System.Type</p> <p></p> <p><code>mediaType</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_4","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ISerializer&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorytrycreatetype-mediatypeheadervalue-method","title":"ISerializerFactory.TryCreate(Type, MediaTypeHeaderValue) Method","text":"C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&gt; TryCreate(System.Type dataType, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_5","title":"Parameters","text":"<p><code>dataType</code> System.Type</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_5","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ISerializer&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorytrycreatetdatastring-method","title":"ISerializerFactory.TryCreate&lt;TData&gt;(string) Method","text":"C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;&gt; TryCreate&lt;TData&gt;(string mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#type-parameters_2","title":"Type parameters","text":"<p><code>TData</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_6","title":"Parameters","text":"<p><code>mediaType</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_6","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#iserializerfactorytrycreatetdatamediatypeheadervalue-method","title":"ISerializerFactory.TryCreate&lt;TData&gt;(MediaTypeHeaderValue) Method","text":"<p>Tries to create an instance of ISerializer&lt;TData&gt; for the given mediaType. Will fail if none of the Matchers match the TData/mediaType combination.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;&gt; TryCreate&lt;TData&gt;(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#type-parameters_3","title":"Type parameters","text":"<p><code>TData</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#parameters_7","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#returns_7","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;&gt; A Result&lt;TValue&gt; containing the ISerializer&lt;TData&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/","title":"ISerializer&lt;TData&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#iserializertdata-interface","title":"ISerializer&lt;TData&gt; Interface","text":"<p>Provides methods for serializing and deserializing TData instances to/from a System.IO.Stream.</p> C#<pre><code>public interface ISerializer&lt;TData&gt; :\nHAKOM.Serialization.Core.Net.Api.ISerializer\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p>The type of objects the serializer can serialize/deserialize.</p> <p>Derived \u21b3 Serializer&lt;TData,TParameters&gt; \u21b3 XmlSerializer&lt;TData&gt;</p> <p>Implements ISerializer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#iserializertdatadeserializestream-cancellationtoken-method","title":"ISerializer&lt;TData&gt;.Deserialize(Stream, CancellationToken) Method","text":"<p>Attempts to deserialize an object of type TData from the given inputStream.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TData?&gt; Deserialize(System.IO.Stream inputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#parameters","title":"Parameters","text":"<p><code>inputStream</code> System.IO.Stream</p> <p>The System.IO.Stream to deserialize from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the operation that it should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TData&gt; A task that completes when deserialization is done.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#iserializertdataserializetdata-stream-cancellationtoken-method","title":"ISerializer&lt;TData&gt;.Serialize(TData, Stream, CancellationToken) Method","text":"<p>Serializes the given instance of TData to the outputStream.</p> C#<pre><code>System.Threading.Tasks.Task Serialize(TData data, System.IO.Stream outputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#parameters_1","title":"Parameters","text":"<p><code>data</code> TData</p> <p>The object to serialize.</p> <p></p> <p><code>outputStream</code> System.IO.Stream</p> <p>The System.IO.Stream to serialize to.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the operation that it should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/ISerializerOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A task that completes when data has been serialized.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/","title":"Serializer&lt;TData,TParameters&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparameters-class","title":"Serializer&lt;TData,TParameters&gt; Class","text":"<p>Provides a base implementation for custom serializers (ISerializer).</p> C#<pre><code>public abstract class Serializer&lt;TData,TParameters&gt; :\nHAKOM.Serialization.Core.Net.Api.ISerializer,\nHAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TParameters : HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p>The type of data that this serializer serializes/deserializes.</p> <p></p> <p><code>TParameters</code></p> <p>The type of parameters (ISerializationParameters) that this serializer uses. These are parsed from the media type it is configured with using the Configure(MediaTypeHeaderValue) method.</p> <p>Inheritance System.Object \ud83e\udc52 Serializer <p>Derived \u21b3 JsonSerializer&lt;TData&gt; \u21b3 XmlSerializer&lt;TData&gt;</p> <p>Implements ISerializer, HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializeriserializationparametersfactory-constructor","title":"Serializer(ISerializationParametersFactory) Constructor <p>Instantiates the serializer.</p> C#<pre><code>protected Serializer(HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;TParameters&gt; parametersFactory);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters","title":"Parameters","text":"<p><code>parametersFactory</code> HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;TParameters&gt;</p> <p>The factory that should be used to parse the serializers media type into an object of type TParameters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializerdefaultsubtype-property","title":"Serializer.DefaultSubType Property <p>Specifies which type should be used if the serializer is initialized with a wildcard type. (i.e. if Configure(MediaTypeHeaderValue) is called with \"application/\", the \"\" is then replaced with DefaultSubType so that ParsedMediaType would become, for example: \"application/xml\".).</p> C#<pre><code>protected abstract string DefaultSubType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializerdefaulttype-property","title":"Serializer.DefaultType Property <p>Specifies which type should be used if the serializer is initialized with a wildcard type. (i.e. if Configure(MediaTypeHeaderValue) is called with \"/json\", the \"\" is then replaced with DefaultType so that ParsedMediaType would become, for example: \"application/json\".).</p> C#<pre><code>protected abstract string DefaultType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializeroriginalmediatype-property","title":"Serializer.OriginalMediaType Property <p>The media type this serializer was initially configured with (see the Configure(MediaTypeHeaderValue) method). May include wildcards etc. i.e. \"/+json\". Must be set by Configure(MediaTypeHeaderValue).</p> C#<pre><code>public System.Net.Http.Headers.MediaTypeHeaderValue OriginalMediaType { get; }\n</code></pre> <p>Implements OriginalMediaType</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#property-value_2","title":"Property Value","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializerparameters-property","title":"Serializer.Parameters Property <p>Provides access to the parameters parsed from the media type upon.  </p> <p>This property is set during initialization (Configure(MediaTypeHeaderValue)).</p> C#<pre><code>protected TParameters Parameters { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#property-value_3","title":"Property Value","text":"<p>TParameters</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializerparsedmediatype-property","title":"Serializer.ParsedMediaType Property <p>The actual media type that's used by the serializer. For example, assuming Configure(MediaTypeHeaderValue) is called with \"/+json\" this serializer may interpret this  as \"application/hal+json;charset=utf-8;indentation=true\". This property should then contain that final media type used.</p> C#<pre><code>public System.Net.Http.Headers.MediaTypeHeaderValue ParsedMediaType { get; }\n</code></pre> <p>Implements ParsedMediaType</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#property-value_4","title":"Property Value","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersconfiguremediatypeheadervalue-method","title":"Serializer&lt;TData,TParameters&gt;.Configure(MediaTypeHeaderValue) Method <p>Configures this instance with a specific media type (i.e. \"application/json\", \"text/html\", etc.). Implementations must use this method to interpret media type parameters, set default values, etc. This method must also set OriginalMediaType to the value of mediaType and ParsedMediaType to the media type containing no wildcards and any default values for parameters used.</p> C#<pre><code>public virtual void Configure(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_1","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>The media type for this serializer to use.</p> <p>Implements Configure(MediaTypeHeaderValue)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersdeserializationfailedexceptionstring-exception-method","title":"Serializer&lt;TData,TParameters&gt;.DeserializationFailedException(string, Exception) Method C#<pre><code>protected HAKOM.Serialization.Core.Net.Api.Exceptions.DeserializationFailedException DeserializationFailedException(string message, System.Exception innerException);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_2","title":"Parameters","text":"<p><code>message</code> System.String</p> <p></p> <p><code>innerException</code> System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns","title":"Returns","text":"<p>DeserializationFailedException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersdeserializationfailedexceptionstring-method","title":"Serializer&lt;TData,TParameters&gt;.DeserializationFailedException(string) Method C#<pre><code>protected HAKOM.Serialization.Core.Net.Api.Exceptions.DeserializationFailedException DeserializationFailedException(string message);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_3","title":"Parameters","text":"<p><code>message</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_1","title":"Returns","text":"<p>DeserializationFailedException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersdeserializestream-cancellationtoken-method","title":"Serializer&lt;TData,TParameters&gt;.Deserialize(Stream, CancellationToken) Method C#<pre><code>public abstract System.Threading.Tasks.Task&lt;TData?&gt; Deserialize(System.IO.Stream inputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_4","title":"Parameters","text":"<p><code>inputStream</code> System.IO.Stream</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Deserialize(Stream, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TData&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersdeserializeasobjectstream-cancellationtoken-method","title":"Serializer&lt;TData,TParameters&gt;.DeserializeAsObject(Stream, CancellationToken) Method <p>Asynchronously deserializes an object from the given inputStream.</p> C#<pre><code>public virtual System.Threading.Tasks.Task&lt;object?&gt; DeserializeAsObject(System.IO.Stream inputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_5","title":"Parameters","text":"<p><code>inputStream</code> System.IO.Stream</p> <p>The System.IO.Stream to read data from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the serializer to attempt cancelling the operation.</p> <p>Implements DeserializeAsObject(Stream, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Object&gt; A System.Threading.Tasks.Task&lt;&gt; that completes when the object has been successfully read from the inputStream.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersprocessmediatype-method","title":"Serializer&lt;TData,TParameters&gt;.ProcessMediaType() Method <p>Processes OriginalMediaType and sets ParsedMediaType based on DefaultType, DefaultSubType and the media type parameters parsed using the ISerializationParametersFactory&lt;TParameters&gt; injected into the constructor Serializer(ISerializationParametersFactory&lt;TParameters&gt;).</p> C#<pre><code>protected virtual System.Net.Http.Headers.MediaTypeHeaderValue ProcessMediaType();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_4","title":"Returns","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersserializationfailedexceptionstring-exception-method","title":"Serializer&lt;TData,TParameters&gt;.SerializationFailedException(string, Exception) Method C#<pre><code>protected HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationFailedException SerializationFailedException(string message, System.Exception innerException);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_6","title":"Parameters","text":"<p><code>message</code> System.String</p> <p></p> <p><code>innerException</code> System.Exception</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_5","title":"Returns","text":"<p>SerializationFailedException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersserializationfailedexceptionstring-method","title":"Serializer&lt;TData,TParameters&gt;.SerializationFailedException(string) Method C#<pre><code>protected HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationFailedException SerializationFailedException(string message);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_7","title":"Parameters","text":"<p><code>message</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_6","title":"Returns","text":"<p>SerializationFailedException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersserializetdata-stream-cancellationtoken-method","title":"Serializer&lt;TData,TParameters&gt;.Serialize(TData, Stream, CancellationToken) Method C#<pre><code>public abstract System.Threading.Tasks.Task Serialize(TData data, System.IO.Stream outputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_8","title":"Parameters","text":"<p><code>data</code> TData</p> <p></p> <p><code>outputStream</code> System.IO.Stream</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Implements Serialize(TData, Stream, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#serializertdatatparametersserializeobjectobject-stream-cancellationtoken-method","title":"Serializer&lt;TData,TParameters&gt;.SerializeObject(object, Stream, CancellationToken) Method <p>Asynchronously serializes data into the outputStream.</p> C#<pre><code>public virtual System.Threading.Tasks.Task SerializeObject(object? data, System.IO.Stream outputStream, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#parameters_9","title":"Parameters","text":"<p><code>data</code> System.Object</p> <p>The object to serialize.</p> <p></p> <p><code>outputStream</code> System.IO.Stream</p> <p>The stream to serialize to.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to signal the serializer to attempt cancelling the operation.</p> <p>Implements SerializeObject(object, Stream, CancellationToken)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/SerializerOf2/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task Returns a System.Threading.Tasks.Task that completes once all of data has been written to outputStream.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/","title":"HAKOM.Serialization.Core.Net.Api.Binary","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/#hakomserializationcorenetapibinary-namespace","title":"HAKOM.Serialization.Core.Net.Api.Binary Namespace","text":"Interfaces IBinaryConverter&lt;TValue&gt;"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/","title":"IBinaryConverter&lt;TValue&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Binary</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#ibinaryconvertertvalue-interface","title":"IBinaryConverter&lt;TValue&gt; Interface","text":"C#<pre><code>public interface IBinaryConverter&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#ibinaryconvertertvaluegetbytestvalue-method","title":"IBinaryConverter&lt;TValue&gt;.GetBytes(TValue) Method","text":"C#<pre><code>byte[] GetBytes(TValue value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#parameters","title":"Parameters","text":"<p><code>value</code> TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#returns","title":"Returns","text":"<p>System.Byte[]</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#ibinaryconvertertvaluegetvaluebyte-method","title":"IBinaryConverter&lt;TValue&gt;.GetValue(byte[]) Method","text":"C#<pre><code>TValue GetValue(byte[] bytes);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#parameters_1","title":"Parameters","text":"<p><code>bytes</code> System.Byte[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#returns_1","title":"Returns","text":"<p>TValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#ibinaryconvertertvaluetryreadvaluebyte-int-tvalue-int-method","title":"IBinaryConverter&lt;TValue&gt;.TryReadValue(byte[], int, TValue, int) Method","text":"C#<pre><code>bool TryReadValue(byte[] bytes, int offset, out TValue value, out int bytesRead);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#parameters_2","title":"Parameters","text":"<p><code>bytes</code> System.Byte[]</p> <p></p> <p><code>offset</code> System.Int32</p> <p></p> <p><code>value</code> TValue</p> <p></p> <p><code>bytesRead</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/IBinaryConverterOf1/#returns_2","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/","title":"HAKOM.Serialization.Core.Net.Api.Binary.Extensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/#hakomserializationcorenetapibinaryextensions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Binary.Extensions Namespace","text":"Classes ContainerExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Binary.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/#containerextensionsusedefaultbinaryconvertersthis-icontainer-method","title":"ContainerExtensions.UseDefaultBinaryConverters(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultBinaryConverters(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Binary/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/","title":"HAKOM.Serialization.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/#hakomserializationcorenetapiexceptions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Exceptions Namespace","text":"Classes DeserializationFailedException MediaTypeCouldNotBeParsedException Media type cannot be parsed. NoMatchingSerializerFoundException No serializer could be found for a type. SerializationException Base class for any exception related to serialization/deserialization SerializationFailedException SerializationTypeMismatchException Indicates that the actual type did not match the expected. UnsupportedMediaTypeException Indicates that the media type is not supported by the serializer"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/DeserializationFailedException/","title":"DeserializationFailedException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/DeserializationFailedException/#deserializationfailedexception-class","title":"DeserializationFailedException Class","text":"C#<pre><code>public sealed class DeserializationFailedException : HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 DeserializationFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/DeserializationFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/DeserializationFailedException/#deserializationfailedexceptionequivalenthttpstatuscode-property","title":"DeserializationFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/DeserializationFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/","title":"MediaTypeCouldNotBeParsedException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#mediatypecouldnotbeparsedexception-class","title":"MediaTypeCouldNotBeParsedException Class","text":"<p>Media type cannot be parsed.</p> C#<pre><code>public sealed class MediaTypeCouldNotBeParsedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MediaTypeCouldNotBeParsedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#mediatypecouldnotbeparsedexceptionequivalenthttpstatuscode-property","title":"MediaTypeCouldNotBeParsedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#mediatypecouldnotbeparsedexceptioninvalidmediatype-property","title":"MediaTypeCouldNotBeParsedException.InvalidMediaType Property","text":"<p>The raw string which cannot be parsed into a valid Mediatype.</p> C#<pre><code>public string InvalidMediaType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/MediaTypeCouldNotBeParsedException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/","title":"NoMatchingSerializerFoundException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#nomatchingserializerfoundexception-class","title":"NoMatchingSerializerFoundException Class","text":"<p>No serializer could be found for a type.</p> C#<pre><code>public sealed class NoMatchingSerializerFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoMatchingSerializerFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#nomatchingserializerfoundexceptionequivalenthttpstatuscode-property","title":"NoMatchingSerializerFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#nomatchingserializerfoundexceptionthetypewithmissingserializer-property","title":"NoMatchingSerializerFoundException.TheTypeWithMissingSerializer Property","text":"<p>The type name for which no serializer could be found.</p> C#<pre><code>public string TheTypeWithMissingSerializer { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/NoMatchingSerializerFoundException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationException/","title":"SerializationException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationException/#serializationexception-class","title":"SerializationException Class","text":"<p>Base class for any exception related to serialization/deserialization</p> C#<pre><code>public abstract class SerializationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException</p> <p>Derived \u21b3 DeserializationFailedException \u21b3 SerializationFailedException \u21b3 SerializationTypeMismatchException \u21b3 UnsupportedMediaTypeException \u21b3 UnsupportedMediaTypeParameterException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationFailedException/","title":"SerializationFailedException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationFailedException/#serializationfailedexception-class","title":"SerializationFailedException Class","text":"C#<pre><code>public sealed class SerializationFailedException : HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 SerializationFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationFailedException/#serializationfailedexceptionequivalenthttpstatuscode-property","title":"SerializationFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/","title":"SerializationTypeMismatchException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#serializationtypemismatchexception-class","title":"SerializationTypeMismatchException Class","text":"<p>Indicates that the actual type did not match the expected.</p> C#<pre><code>public sealed class SerializationTypeMismatchException : HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 SerializationTypeMismatchException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#serializationtypemismatchexceptionactualtype-property","title":"SerializationTypeMismatchException.ActualType Property","text":"C#<pre><code>public string? ActualType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#serializationtypemismatchexceptionequivalenthttpstatuscode-property","title":"SerializationTypeMismatchException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 406 (Not Acceptable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#serializationtypemismatchexceptionexpectedtype-property","title":"SerializationTypeMismatchException.ExpectedType Property","text":"C#<pre><code>public string? ExpectedType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/SerializationTypeMismatchException/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeException/","title":"UnsupportedMediaTypeException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeException/#unsupportedmediatypeexception-class","title":"UnsupportedMediaTypeException Class","text":"<p>Indicates that the media type is not supported by the serializer</p> C#<pre><code>public sealed class UnsupportedMediaTypeException : HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 UnsupportedMediaTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeException/#unsupportedmediatypeexceptionequivalenthttpstatuscode-property","title":"UnsupportedMediaTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 406 (Not Acceptable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/","title":"HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/#hakomserializationcorenetapiexceptionsunsupportedmediatypeexceptions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions Namespace","text":"Classes UnsupportedMediaTypeParameterException Base class for all exceptions indicating that one or more parameters of the mediatype are unsupported"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterException/","title":"UnsupportedMediaTypeParameterException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterException/#unsupportedmediatypeparameterexception-class","title":"UnsupportedMediaTypeParameterException Class","text":"<p>Base class for all exceptions indicating that one or more parameters of the media type are unsupported</p> C#<pre><code>public abstract class UnsupportedMediaTypeParameterException : HAKOM.Serialization.Core.Net.Api.Exceptions.SerializationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 UnsupportedMediaTypeParameterException</p> <p>Derived \u21b3 UnsupportedEncodingException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterException/#unsupportedmediatypeparameterexceptionequivalenthttpstatuscode-property","title":"UnsupportedMediaTypeParameterException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 406 (Not Acceptable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterExceptions/","title":"HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions.UnsupportedMediaTypeParameterExceptions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterExceptions/#hakomserializationcorenetapiexceptionsunsupportedmediatypeexceptionsunsupportedmediatypeparameterexceptions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions.UnsupportedMediaTypeParameterExceptions Namespace","text":"Classes UnsupportedEncodingException Indicates that the encoding/character set specified in the media type isnot supported"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterExceptions/UnsupportedEncodingException/","title":"UnsupportedEncodingException","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions.UnsupportedMediaTypeParameterExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Exceptions/UnsupportedMediaTypeExceptions/UnsupportedMediaTypeParameterExceptions/UnsupportedEncodingException/#unsupportedencodingexception-class","title":"UnsupportedEncodingException Class","text":"<p>Indicates that the encoding/character set specified in the media type is not supported</p> C#<pre><code>public sealed class UnsupportedEncodingException : HAKOM.Serialization.Core.Net.Api.Exceptions.UnsupportedMediaTypeExceptions.UnsupportedMediaTypeParameterException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 SerializationException \ud83e\udc52 UnsupportedMediaTypeParameterException \ud83e\udc52 UnsupportedEncodingException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/","title":"HAKOM.Serialization.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/#hakomserializationcorenetapiextensions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods on IContainer for registering types used in serialization. StringExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods on IContainer for registering types used in serialization.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusedefaultjsonserializerthis-icontainer-method","title":"ContainerExtensions.UseDefaultJsonSerializer(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultJsonSerializer(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericjsonserializerforgenericdatathis-icontainer-type-type-predicatetype-predicatetype-functypetypetype-predicateicollectionnamevalueheadervalue-method","title":"ContainerExtensions.UseGenericJsonSerializerForGenericData(this IContainer, Type, Type, Predicate&lt;Type&gt;, Predicate&lt;Type[]&gt;, Func&lt;Type,Type[],Type&gt;, Predicate&lt;ICollection&lt;NameValueHeaderValue&gt;&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericJsonSerializerForGenericData(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type serializerType, System.Type dataType, System.Predicate&lt;System.Type&gt;? dataTypeMatcher=null, System.Predicate&lt;System.Type[]&gt;? dataTypeGenericArgumentsMatcher=null, System.Func&lt;System.Type,System.Type[],System.Type&gt;? implementation=null, System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;? parameterMatcher=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>serializerType</code> System.Type</p> <p></p> <p><code>dataType</code> System.Type</p> <p></p> <p><code>dataTypeMatcher</code> System.Predicate&lt;System.Type&gt;</p> <p></p> <p><code>dataTypeGenericArgumentsMatcher</code> System.Predicate&lt;System.Type[]&gt;</p> <p></p> <p><code>implementation</code> System.Func&lt;System.Type,System.Type[],System.Type&gt;</p> <p></p> <p><code>parameterMatcher</code> System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericserializerthis-icontainer-type-predicatetype-predicatestring-predicatestring-predicateicollectionnamevalueheadervalue-method","title":"ContainerExtensions.UseGenericSerializer(this IContainer, Type, Predicate&lt;Type&gt;, Predicate&lt;string&gt;, Predicate&lt;string&gt;, Predicate&lt;ICollection&lt;NameValueHeaderValue&gt;&gt;) Method","text":"<p>Registers a generic implementation of ISerializer with the container that supports more than one data type.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericSerializer(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type serializerType, System.Predicate&lt;System.Type&gt;? dataTypeMatcher=null, System.Predicate&lt;string&gt;? typeMatcher=null, System.Predicate&lt;string&gt;? subTypeMatcher=null, System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;? parameterMatcher=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the serializer with.</p> <p></p> <p><code>serializerType</code> System.Type</p> <p>The type of serializer. The type must implement ISerializer&lt;TData&gt;.</p> <p></p> <p><code>dataTypeMatcher</code> System.Predicate&lt;System.Type&gt;</p> <p>Optional delegate to check if a type is supported. If null, its assumed that all types of objects are supported.</p> <p></p> <p><code>typeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p> <p></p> <p><code>subTypeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p> <p></p> <p><code>parameterMatcher</code> System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The container itself for call chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusegenericserializerforgenericdatathis-icontainer-type-type-predicatetype-predicatetype-functypetypetype-predicatestring-predicatestring-predicateicollectionnamevalueheadervalue-method","title":"ContainerExtensions.UseGenericSerializerForGenericData(this IContainer, Type, Type, Predicate&lt;Type&gt;, Predicate&lt;Type[]&gt;, Func&lt;Type,Type[],Type&gt;, Predicate&lt;string&gt;, Predicate&lt;string&gt;, Predicate&lt;ICollection&lt;NameValueHeaderValue&gt;&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseGenericSerializerForGenericData(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type serializerType, System.Type dataType, System.Predicate&lt;System.Type&gt;? dataTypeMatcher=null, System.Predicate&lt;System.Type[]&gt;? dataTypeGenericArgumentsMatcher=null, System.Func&lt;System.Type,System.Type[],System.Type&gt;? implementation=null, System.Predicate&lt;string&gt;? typeMatcher=null, System.Predicate&lt;string&gt;? subTypeMatcher=null, System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;? parameterMatcher=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>serializerType</code> System.Type</p> <p></p> <p><code>dataType</code> System.Type</p> <p></p> <p><code>dataTypeMatcher</code> System.Predicate&lt;System.Type&gt;</p> <p></p> <p><code>dataTypeGenericArgumentsMatcher</code> System.Predicate&lt;System.Type[]&gt;</p> <p></p> <p><code>implementation</code> System.Func&lt;System.Type,System.Type[],System.Type&gt;</p> <p></p> <p><code>typeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p></p> <p><code>subTypeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p></p> <p><code>parameterMatcher</code> System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsoncontractserializertdatatcontractthis-icontainer-method","title":"ContainerExtensions.UseJsonContractSerializer&lt;TData,TContract&gt;(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonContractSerializer&lt;TData,TContract&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TContract : TData;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TContract</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsonserializationthis-icontainer-method","title":"ContainerExtensions.UseJsonSerialization(this IContainer) Method","text":"<p>Registers various factories and default serializers with the container to enable serializing objects to JSON.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonSerialization(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the services with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsonserializertdatatcontracttdatafactorythis-icontainer-factorycalltdatatcontracttdatafactory-contractcreatortdata-method","title":"ContainerExtensions.UseJsonSerializer&lt;TData,TContract,TDataFactory&gt;(this IContainer, FactoryCall&lt;TData,TContract,TDataFactory&gt;, ContractCreator&lt;TData&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonSerializer&lt;TData,TContract,TDataFactory&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, HAKOM.Serialization.Core.Net.Api.Json.FactoryCall&lt;TData,TContract,TDataFactory&gt; factoryCall, HAKOM.Serialization.Core.Net.Api.Json.ContractCreator&lt;TData&gt; contractCreator);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TContract</code></p> <p></p> <p><code>TDataFactory</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_6","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>factoryCall</code> HAKOM.Serialization.Core.Net.Api.Json.FactoryCall&lt;TData,TContract,TDataFactory&gt;</p> <p></p> <p><code>contractCreator</code> HAKOM.Serialization.Core.Net.Api.Json.ContractCreator&lt;TData&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_6","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsonserializertdatatdatafactorythis-icontainer-factorycalltdatatdatatdatafactory-method","title":"ContainerExtensions.UseJsonSerializer&lt;TData,TDataFactory&gt;(this IContainer, FactoryCall&lt;TData,TData,TDataFactory&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonSerializer&lt;TData,TDataFactory&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, HAKOM.Serialization.Core.Net.Api.Json.FactoryCall&lt;TData,TData,TDataFactory&gt; factoryCall);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TDataFactory</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_7","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>factoryCall</code> HAKOM.Serialization.Core.Net.Api.Json.FactoryCall&lt;TData,TData,TDataFactory&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_7","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsonserializertdatatserializerthis-icontainer-predicatetype-method","title":"ContainerExtensions.UseJsonSerializer&lt;TData,TSerializer&gt;(this IContainer, Predicate&lt;Type&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonSerializer&lt;TData,TSerializer&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Predicate&lt;System.Type&gt;? dataTypeMatcher=null)\n    where TSerializer : HAKOM.Serialization.Core.Net.Api.Json.JsonSerializer&lt;TData&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TSerializer</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_8","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>dataTypeMatcher</code> System.Predicate&lt;System.Type&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_8","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusejsonserializertdatatvaluethis-icontainer-functdatatvalue-functvaluetdata-method","title":"ContainerExtensions.UseJsonSerializer&lt;TData,TValue&gt;(this IContainer, Func&lt;TData,TValue&gt;, Func&lt;TValue,TData&gt;) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseJsonSerializer&lt;TData,TValue&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Func&lt;TData,TValue&gt; getValueFromData, System.Func&lt;TValue,TData&gt; createDataFromValue)\n    where TData : struct, System.ValueType, System.ValueType\n    where TValue : struct, System.ValueType, System.ValueType;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters_4","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_9","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p></p> <p><code>getValueFromData</code> System.Func&lt;TData,TValue&gt;</p> <p></p> <p><code>createDataFromValue</code> System.Func&lt;TValue,TData&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_9","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserializationcontracttypeproviderthis-icontainer-method","title":"ContainerExtensions.UseSerializationContractTypeProvider(this IContainer) Method","text":"<p>Registers the default implementation of ISerializationContractTypeProvider with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSerializationContractTypeProvider(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_10","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ISerializationContractTypeProvider with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_10","title":"Returns","text":"<p>IContainer The container itself for call chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#exceptions_2","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserializertdatatserializerthis-icontainer-predicatetype-predicatestring-predicatestring-predicateicollectionnamevalueheadervalue-method","title":"ContainerExtensions.UseSerializer&lt;TData,TSerializer&gt;(this IContainer, Predicate&lt;Type&gt;, Predicate&lt;string&gt;, Predicate&lt;string&gt;, Predicate&lt;ICollection&lt;NameValueHeaderValue&gt;&gt;) Method","text":"<p>Registers a serializer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSerializer&lt;TData,TSerializer&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Predicate&lt;System.Type&gt;? dataTypeMatcher=null, System.Predicate&lt;string&gt;? typeMatcher=null, System.Predicate&lt;string&gt;? subTypeMatcher=null, System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;? parameterMatcher=null)\n    where TSerializer : class, HAKOM.Serialization.Core.Net.Api.ISerializer, HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#type-parameters_5","title":"Type parameters","text":"<p><code>TData</code></p> <p>The type of data the serializer can serialize/deserialize.</p> <p></p> <p><code>TSerializer</code></p> <p>The type of the serializer.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_11","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the serializer with.</p> <p></p> <p><code>dataTypeMatcher</code> System.Predicate&lt;System.Type&gt;</p> <p>Used to determine if a specific type can be used with this serializer.</p> <p></p> <p><code>typeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p> <p></p> <p><code>subTypeMatcher</code> System.Predicate&lt;System.String&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p> <p></p> <p><code>parameterMatcher</code> System.Predicate&lt;System.Collections.Generic.ICollection&lt;System.Net.Http.Headers.NameValueHeaderValue&gt;&gt;</p> <p>Used to determine if a media type can be used with this serializer.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_11","title":"Returns","text":"<p>IContainer The container itself for call chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#exceptions_3","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsuseserializerfactorythis-icontainer-method","title":"ContainerExtensions.UseSerializerFactory(this IContainer) Method","text":"<p>Registers the default implementation of ISerializerFactory with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseSerializerFactory(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_12","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ISerializerFactory with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_12","title":"Returns","text":"<p>IContainer The container itself for call chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#exceptions_4","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#containerextensionsusexmlserializationthis-icontainer-method","title":"ContainerExtensions.UseXmlSerialization(this IContainer) Method","text":"C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseXmlSerialization(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#parameters_13","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/ContainerExtensions/#returns_13","title":"Returns","text":"<p>IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/","title":"StringExtensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#stringextensions-class","title":"StringExtensions Class","text":"C#<pre><code>public static class StringExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 StringExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#stringextensionsconverttocamelcasethis-string-method","title":"StringExtensions.ConvertToCamelCase(this string) Method","text":"C#<pre><code>public static string ConvertToCamelCase(this string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#returns","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#stringextensionsconverttopascalcasethis-string-method","title":"StringExtensions.ConvertToPascalCase(this string) Method","text":"C#<pre><code>public static string ConvertToPascalCase(this string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#returns_1","title":"Returns","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#stringextensionsconverttosnakecasethis-string-method","title":"StringExtensions.ConvertToSnakeCase(this string) Method","text":"C#<pre><code>public static string ConvertToSnakeCase(this string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#parameters_2","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Extensions/StringExtensions/#returns_2","title":"Returns","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/","title":"HAKOM.Serialization.Core.Net.Api.Json","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/#hakomserializationcorenetapijson-namespace","title":"HAKOM.Serialization.Core.Net.Api.Json Namespace","text":"Classes JsonSerializer&lt;TData&gt; Interfaces IJsonSerializationParameters IJsonSerializationParametersFactory IJsonSerializerCustomization Enums JsonPropertyCasing Delegates ContractCreator&lt;TData&gt;(Type, TData) FactoryCall&lt;TData,TContract,TDataFactory&gt;(TContract, TDataFactory) FactoryCall&lt;TData,TContract&gt;(TContract)"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/ContractCreatorOf1/","title":"ContractCreator&lt;TData&gt;(Type, TData)","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/ContractCreatorOf1/#contractcreatortdatatype-tdata-delegate","title":"ContractCreator&lt;TData&gt;(Type, TData) Delegate","text":"C#<pre><code>public delegate object? ContractCreator&lt;TData&gt;(System.Type contractType, TData data);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/ContractCreatorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/ContractCreatorOf1/#parameters","title":"Parameters","text":"<p><code>contractType</code> System.Type</p> <p></p> <p><code>data</code> TData</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/ContractCreatorOf1/#returns","title":"Returns","text":"<p>System.Object</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf2/","title":"FactoryCall&lt;TData,TContract&gt;(TContract)","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf2/#factorycalltdatatcontracttcontract-delegate","title":"FactoryCall&lt;TData,TContract&gt;(TContract) Delegate","text":"C#<pre><code>public delegate TData? FactoryCall&lt;TData,TContract&gt;(TContract? data);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf2/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TContract</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf2/#parameters","title":"Parameters","text":"<p><code>data</code> TContract</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf2/#returns","title":"Returns","text":"<p>TData</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf3/","title":"FactoryCall&lt;TData,TContract,TDataFactory&gt;(TContract, TDataFactory)","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf3/#factorycalltdatatcontracttdatafactorytcontract-tdatafactory-delegate","title":"FactoryCall&lt;TData,TContract,TDataFactory&gt;(TContract, TDataFactory) Delegate","text":"C#<pre><code>public delegate TData? FactoryCall&lt;TData,TContract,TDataFactory&gt;(TContract? data, TDataFactory factory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf3/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p></p> <p><code>TContract</code></p> <p></p> <p><code>TDataFactory</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf3/#parameters","title":"Parameters","text":"<p><code>data</code> TContract</p> <p></p> <p><code>factory</code> TDataFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/FactoryCallOf3/#returns","title":"Returns","text":"<p>TData</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/","title":"IJsonSerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#ijsonserializationparameters-interface","title":"IJsonSerializationParameters Interface","text":"C#<pre><code>public interface IJsonSerializationParameters :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ITextSerializationParameters,\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre> <p>Implements ITextSerializationParameters, ISerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#ijsonserializationparameterscasing-property","title":"IJsonSerializationParameters.Casing Property","text":"C#<pre><code>HAKOM.Serialization.Core.Net.Api.Json.JsonPropertyCasing Casing { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#property-value","title":"Property Value","text":"<p>JsonPropertyCasing</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#ijsonserializationparametersindentation-property","title":"IJsonSerializationParameters.Indentation Property","text":"C#<pre><code>bool Indentation { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParameters/#property-value_1","title":"Property Value","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParametersFactory/","title":"IJsonSerializationParametersFactory","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializationParametersFactory/#ijsonserializationparametersfactory-interface","title":"IJsonSerializationParametersFactory Interface","text":"C#<pre><code>public interface IJsonSerializationParametersFactory :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;HAKOM.Serialization.Core.Net.Api.Json.IJsonSerializationParameters&gt;\n</code></pre> <p>Implements HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;IJsonSerializationParameters&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/","title":"IJsonSerializerCustomization","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#ijsonserializercustomization-interface","title":"IJsonSerializerCustomization Interface","text":"C#<pre><code>public interface IJsonSerializerCustomization\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#ijsonserializercustomizationconverterfactories-property","title":"IJsonSerializerCustomization.ConverterFactories Property","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverterFactory&gt; ConverterFactories { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverterFactory&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#ijsonserializercustomizationconverterfactoryignoredtypes-property","title":"IJsonSerializerCustomization.ConverterFactoryIgnoredTypes Property","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Type&gt; ConverterFactoryIgnoredTypes { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#ijsonserializercustomizationoptionscache-property","title":"IJsonSerializerCustomization.OptionsCache Property","text":"C#<pre><code>System.Collections.Concurrent.ConcurrentDictionary&lt;string,System.Text.Json.JsonSerializerOptions&gt; OptionsCache { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#property-value_2","title":"Property Value","text":"<p>System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,System.Text.Json.JsonSerializerOptions&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#ijsonserializercustomizationtypeinforesolvers-property","title":"IJsonSerializerCustomization.TypeInfoResolvers Property","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt; TypeInfoResolvers { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/IJsonSerializerCustomization/#property-value_3","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonPropertyCasing/","title":"JsonPropertyCasing","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonPropertyCasing/#jsonpropertycasing-enum","title":"JsonPropertyCasing Enum","text":"C#<pre><code>public enum JsonPropertyCasing\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonPropertyCasing/#fields","title":"Fields","text":"<p><code>Camel</code> 1</p> <p></p> <p><code>Pascal</code> 0</p> <p></p> <p><code>Snake</code> 2</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/","title":"JsonSerializer&lt;TData&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdata-class","title":"JsonSerializer&lt;TData&gt; Class","text":"C#<pre><code>public abstract class JsonSerializer&lt;TData&gt; : HAKOM.Serialization.Core.Net.Api.Serializer&lt;TData, HAKOM.Serialization.Core.Net.Api.Json.IJsonSerializationParameters&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Serialization.Core.Net.Api.Serializer&lt;TData,IJsonSerializationParameters&gt; \ud83e\udc52 JsonSerializer"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerijsonserializationparametersfactory-iserializerfactory-concurrentdictionary-ienumerable-ienumerable-constructor","title":"JsonSerializer(IJsonSerializationParametersFactory, ISerializerFactory, ConcurrentDictionary, IEnumerable, IEnumerable) Constructor C#<pre><code>protected JsonSerializer(HAKOM.Serialization.Core.Net.Api.Json.IJsonSerializationParametersFactory parameterFactory, HAKOM.Serialization.Core.Net.Api.ISerializerFactory serializerFactory, System.Collections.Concurrent.ConcurrentDictionary&lt;string,System.Text.Json.JsonSerializerOptions&gt; jsonSerializerOptionsCache, System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt; registeredConverters, System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt; registeredTypeInfoResolvers);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters","title":"Parameters","text":"<p><code>parameterFactory</code> IJsonSerializationParametersFactory</p> <p></p> <p><code>serializerFactory</code> ISerializerFactory</p> <p></p> <p><code>jsonSerializerOptionsCache</code> System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,System.Text.Json.JsonSerializerOptions&gt;</p> <p></p> <p><code>registeredConverters</code> System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt;</p> <p></p> <p><code>registeredTypeInfoResolvers</code> System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerdefaultsubtype-property","title":"JsonSerializer.DefaultSubType Property C#<pre><code>protected override string DefaultSubType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerdefaulttype-property","title":"JsonSerializer.DefaultType Property C#<pre><code>protected override string DefaultType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerjsonserializeroptions-property","title":"JsonSerializer.JsonSerializerOptions Property C#<pre><code>protected System.Text.Json.JsonSerializerOptions JsonSerializerOptions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value_2","title":"Property Value","text":"<p>System.Text.Json.JsonSerializerOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerjsonserializeroptionscache-property","title":"JsonSerializer.JsonSerializerOptionsCache Property C#<pre><code>protected System.Collections.Concurrent.ConcurrentDictionary&lt;string,System.Text.Json.JsonSerializerOptions&gt; JsonSerializerOptionsCache { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value_3","title":"Property Value","text":"<p>System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,System.Text.Json.JsonSerializerOptions&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializerserializerfactory-property","title":"JsonSerializer.SerializerFactory Property C#<pre><code>protected HAKOM.Serialization.Core.Net.Api.ISerializerFactory SerializerFactory { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value_4","title":"Property Value","text":"<p>ISerializerFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializeruseoptionscache-property","title":"JsonSerializer.UseOptionsCache Property C#<pre><code>protected virtual bool UseOptionsCache { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#property-value_5","title":"Property Value","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdataconfiguremediatypeheadervalue-method","title":"JsonSerializer&lt;TData&gt;.Configure(MediaTypeHeaderValue) Method C#<pre><code>public override void Configure(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_1","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>Implements Configure(MediaTypeHeaderValue)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatacreateserializeroptionsmediatypeheadervalue-method","title":"JsonSerializer&lt;TData&gt;.CreateSerializerOptions(MediaTypeHeaderValue) Method C#<pre><code>protected virtual System.Text.Json.JsonSerializerOptions CreateSerializerOptions(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_2","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns","title":"Returns","text":"<p>System.Text.Json.JsonSerializerOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatadeserializechildtchildjsonelement-method","title":"JsonSerializer&lt;TData&gt;.DeserializeChild&lt;TChild&gt;(JsonElement) Method C#<pre><code>protected TChild? DeserializeChild&lt;TChild&gt;(System.Text.Json.JsonElement childElement);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TChild</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_3","title":"Parameters","text":"<p><code>childElement</code> System.Text.Json.JsonElement</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns_1","title":"Returns","text":"<p>TChild</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatagetconvertersmediatypeheadervalue-method","title":"JsonSerializer&lt;TData&gt;.GetConverters(MediaTypeHeaderValue) Method C#<pre><code>protected virtual System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt; GetConverters(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_4","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Text.Json.Serialization.JsonConverter&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatagetignoredchildrentypes-method","title":"JsonSerializer&lt;TData&gt;.GetIgnoredChildrenTypes() Method C#<pre><code>protected virtual System.Type[] GetIgnoredChildrenTypes();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns_3","title":"Returns","text":"<p>System.Type[]</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatagetorcreateserializeroptionsmediatypeheadervalue-method","title":"JsonSerializer&lt;TData&gt;.GetOrCreateSerializerOptions(MediaTypeHeaderValue) Method C#<pre><code>protected virtual System.Text.Json.JsonSerializerOptions GetOrCreateSerializerOptions(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_5","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns_4","title":"Returns","text":"<p>System.Text.Json.JsonSerializerOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#jsonserializertdatawritedatatodocumenttdata-method","title":"JsonSerializer&lt;TData&gt;.WriteDataToDocument(TData) Method C#<pre><code>public virtual System.Text.Json.JsonDocument WriteDataToDocument(TData? data);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#parameters_6","title":"Parameters","text":"<p><code>data</code> TData</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/JsonSerializerOf1/#returns_5","title":"Returns","text":"<p>System.Text.Json.JsonDocument</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/","title":"HAKOM.Serialization.Core.Net.Api.Json.Extensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/#hakomserializationcorenetapijsonextensions-namespace","title":"HAKOM.Serialization.Core.Net.Api.Json.Extensions Namespace","text":"Classes JsonSerializerOptionsExtensions Provides methods to add HAKOM serialization to System.Text.Json.JsonSerializerOptions."},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/","title":"JsonSerializerOptionsExtensions","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Json.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#jsonserializeroptionsextensions-class","title":"JsonSerializerOptionsExtensions Class","text":"<p>Provides methods to add HAKOM serialization to System.Text.Json.JsonSerializerOptions.</p> C#<pre><code>public static class JsonSerializerOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 JsonSerializerOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#jsonserializeroptionsextensionsaddhakomserializersthis-jsonserializeroptions-iserializerfactory-type-method","title":"JsonSerializerOptionsExtensions.AddHakomSerializers(this JsonSerializerOptions, ISerializerFactory, Type[]) Method","text":"<p>Adds a converter that allows JSON serialization using ISerializer/ISerializer&lt;TData&gt; implementations.</p> C#<pre><code>public static System.Text.Json.JsonSerializerOptions AddHakomSerializers(this System.Text.Json.JsonSerializerOptions options, HAKOM.Serialization.Core.Net.Api.ISerializerFactory serializerFactory, params System.Type[] typesToIgnore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>options</code> System.Text.Json.JsonSerializerOptions</p> <p>The System.Text.Json.JsonSerializerOptions to add HAKOM serializers to.</p> <p></p> <p><code>serializerFactory</code> ISerializerFactory</p> <p>The ISerializerFactory that should be used to create serializers.</p> <p></p> <p><code>typesToIgnore</code> System.Type[]</p> <p>An optional list of System.Type for which HAKOM serializers should not be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#returns","title":"Returns","text":"<p>System.Text.Json.JsonSerializerOptions The options for chaining of additional extension methods.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#jsonserializeroptionsextensionsaddhakomserializersthis-jsonserializeroptions-actionicontainer-method","title":"JsonSerializerOptionsExtensions.AddHakomSerializers(this JsonSerializerOptions, Action&lt;IContainer&gt;) Method","text":"<p>Adds a converter that allows JSON serialization using ISerializer/ISerializer&lt;TData&gt; implementations.</p> C#<pre><code>public static System.Text.Json.JsonSerializerOptions AddHakomSerializers(this System.Text.Json.JsonSerializerOptions options, System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt; configureContainer);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#parameters_1","title":"Parameters","text":"<p><code>options</code> System.Text.Json.JsonSerializerOptions</p> <p>The System.Text.Json.JsonSerializerOptions to add HAKOM serializers to.</p> <p></p> <p><code>configureContainer</code> System.Action&lt;IContainer&gt;</p> <p>A method to add services to the IContainer used to create the required ISerializerFactory and any ISerializers.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#returns_1","title":"Returns","text":"<p>System.Text.Json.JsonSerializerOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Json/Extensions/JsonSerializerOptionsExtensions/#remarks","title":"Remarks","text":"<p>This spins up a dependency-injection container with everything that's needed for serialization using HAKOM serializers. Use configureContainer to add any additional services like logging, configuration, etc. or to register additional serializers using the methods provided by ContainerExtensions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/","title":"HAKOM.Serialization.Core.Net.Api.Parametrization","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/#hakomserializationcorenetapiparametrization-namespace","title":"HAKOM.Serialization.Core.Net.Api.Parametrization Namespace","text":"Classes SerializationParameters SerializationParametersFactory&lt;TParameters&gt; TextSerializationParameters TextSerializationParametersFactory&lt;TParameters&gt; Interfaces ISerializationParameters ISerializationParametersFactory&lt;TParameters&gt; ITextSerializationParameters ITextSerializationParametersFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/","title":"ISerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#iserializationparameters-interface","title":"ISerializationParameters Interface","text":"C#<pre><code>public interface ISerializationParameters\n</code></pre> <p>Derived \u21b3 IJsonSerializationParameters \u21b3 ITextSerializationParameters \u21b3 SerializationParameters \u21b3 TextSerializationParameters \u21b3 IXmlSerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#iserializationparameterstimezone-property","title":"ISerializationParameters.TimeZone Property","text":"C#<pre><code>string TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#iserializationparametersversion-property","title":"ISerializationParameters.Version Property","text":"C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion? Version { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#property-value_1","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#iserializationparameterstoheadervalues-method","title":"ISerializationParameters.ToHeaderValues() Method","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; ToHeaderValues();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParameters/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/","title":"ISerializationParametersFactory&lt;TParameters&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#iserializationparametersfactorytparameters-interface","title":"ISerializationParametersFactory&lt;TParameters&gt; Interface","text":"C#<pre><code>public interface ISerializationParametersFactory&lt;TParameters&gt;\n    where TParameters : HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameters</code></p> <p>Derived \u21b3 IJsonSerializationParametersFactory \u21b3 ITextSerializationParametersFactory \u21b3 SerializationParametersFactory&lt;TParameters&gt; \u21b3 IXmlSerializationParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#iserializationparametersfactorytparameterscreatemediatypeheadervalue-method","title":"ISerializationParametersFactory&lt;TParameters&gt;.Create(MediaTypeHeaderValue) Method","text":"C#<pre><code>TParameters Create(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#parameters","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ISerializationParametersFactoryOf1/#returns","title":"Returns","text":"<p>TParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/","title":"ITextSerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#itextserializationparameters-interface","title":"ITextSerializationParameters Interface","text":"C#<pre><code>public interface ITextSerializationParameters :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre> <p>Derived \u21b3 IJsonSerializationParameters \u21b3 TextSerializationParameters \u21b3 IXmlSerializationParameters</p> <p>Implements ISerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#itextserializationparameterscharset-property","title":"ITextSerializationParameters.Charset Property","text":"C#<pre><code>System.Text.Encoding Charset { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#property-value","title":"Property Value","text":"<p>System.Text.Encoding</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#itextserializationparameterstimeformat-property","title":"ITextSerializationParameters.TimeFormat Property","text":"C#<pre><code>string TimeFormat { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParameters/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParametersFactory/","title":"ITextSerializationParametersFactory","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/ITextSerializationParametersFactory/#itextserializationparametersfactory-interface","title":"ITextSerializationParametersFactory Interface","text":"C#<pre><code>public interface ITextSerializationParametersFactory :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;HAKOM.Serialization.Core.Net.Api.Parametrization.ITextSerializationParameters&gt;\n</code></pre> <p>Implements HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;ITextSerializationParameters&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/","title":"SerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#serializationparameters-class","title":"SerializationParameters Class","text":"C#<pre><code>public abstract class SerializationParameters :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 SerializationParameters</p> <p>Derived \u21b3 TextSerializationParameters</p> <p>Implements ISerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#serializationparametersstring-iversion-constructor","title":"SerializationParameters(string, IVersion) Constructor","text":"C#<pre><code>protected SerializationParameters(string timeZone, HAKOM.Versioning.Core.Net.Api.IVersion? version=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#parameters","title":"Parameters","text":"<p><code>timeZone</code> System.String</p> <p></p> <p><code>version</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#serializationparameterstimezone-property","title":"SerializationParameters.TimeZone Property","text":"C#<pre><code>public string TimeZone { get; set; }\n</code></pre> <p>Implements TimeZone</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#serializationparametersversion-property","title":"SerializationParameters.Version Property","text":"C#<pre><code>public HAKOM.Versioning.Core.Net.Api.IVersion? Version { get; set; }\n</code></pre> <p>Implements Version</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#property-value_1","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#serializationparameterstoheadervalues-method","title":"SerializationParameters.ToHeaderValues() Method","text":"C#<pre><code>public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; ToHeaderValues();\n</code></pre> <p>Implements ToHeaderValues()</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParameters/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/","title":"SerializationParametersFactory&lt;TParameters&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#serializationparametersfactorytparameters-class","title":"SerializationParametersFactory&lt;TParameters&gt; Class","text":"C#<pre><code>public abstract class SerializationParametersFactory&lt;TParameters&gt; :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;TParameters&gt;\n    where TParameters : HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameters</code></p> <p>Inheritance System.Object \ud83e\udc52 SerializationParametersFactory <p>Derived \u21b3 TextSerializationParametersFactory&lt;TParameters&gt;</p> <p>Implements HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;TParameters&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#serializationparametersfactoryiversionfactory-iversion-constructor","title":"SerializationParametersFactory(IVersionFactory, IVersion) Constructor","text":"C#<pre><code>protected SerializationParametersFactory(HAKOM.Versioning.Core.Net.Api.IVersionFactory? versionFactory=null, HAKOM.Versioning.Core.Net.Api.IVersion? currentVersion=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#parameters","title":"Parameters","text":"<p><code>versionFactory</code> IVersionFactory</p> <p></p> <p><code>currentVersion</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#serializationparametersfactorytparameterscreatestring-iversion-mediatypeheadervalue-method","title":"SerializationParametersFactory&lt;TParameters&gt;.Create(string, IVersion, MediaTypeHeaderValue) Method","text":"C#<pre><code>protected abstract TParameters Create(string timeZone, HAKOM.Versioning.Core.Net.Api.IVersion? version, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>timeZone</code> System.String</p> <p></p> <p><code>version</code> IVersion</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#returns","title":"Returns","text":"<p>TParameters</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#serializationparametersfactorytparameterscreatemediatypeheadervalue-method","title":"SerializationParametersFactory&lt;TParameters&gt;.Create(MediaTypeHeaderValue) Method","text":"C#<pre><code>public TParameters Create(System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>Implements Create(MediaTypeHeaderValue)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/SerializationParametersFactoryOf1/#returns_1","title":"Returns","text":"<p>TParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/","title":"TextSerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#textserializationparameters-class","title":"TextSerializationParameters Class","text":"C#<pre><code>public abstract class TextSerializationParameters : HAKOM.Serialization.Core.Net.Api.Parametrization.SerializationParameters,\nHAKOM.Serialization.Core.Net.Api.Parametrization.ITextSerializationParameters,\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 SerializationParameters \ud83e\udc52 TextSerializationParameters</p> <p>Implements ITextSerializationParameters, ISerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#textserializationparametersencoding-string-string-iversion-constructor","title":"TextSerializationParameters(Encoding, string, string, IVersion) Constructor","text":"C#<pre><code>protected TextSerializationParameters(System.Text.Encoding charset, string timeFormat, string timeZone, HAKOM.Versioning.Core.Net.Api.IVersion? version=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#parameters","title":"Parameters","text":"<p><code>charset</code> System.Text.Encoding</p> <p></p> <p><code>timeFormat</code> System.String</p> <p></p> <p><code>timeZone</code> System.String</p> <p></p> <p><code>version</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#textserializationparameterscharset-property","title":"TextSerializationParameters.Charset Property","text":"C#<pre><code>public System.Text.Encoding Charset { get; set; }\n</code></pre> <p>Implements Charset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#property-value","title":"Property Value","text":"<p>System.Text.Encoding</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#textserializationparameterstimeformat-property","title":"TextSerializationParameters.TimeFormat Property","text":"C#<pre><code>public string TimeFormat { get; set; }\n</code></pre> <p>Implements TimeFormat</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#textserializationparameterstoheadervalues-method","title":"TextSerializationParameters.ToHeaderValues() Method","text":"C#<pre><code>public override System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; ToHeaderValues();\n</code></pre> <p>Implements ToHeaderValues()</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParameters/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/","title":"TextSerializationParametersFactory&lt;TParameters&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Parametrization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#textserializationparametersfactorytparameters-class","title":"TextSerializationParametersFactory&lt;TParameters&gt; Class","text":"C#<pre><code>public abstract class TextSerializationParametersFactory&lt;TParameters&gt; : HAKOM.Serialization.Core.Net.Api.Parametrization.SerializationParametersFactory&lt;TParameters&gt;\n    where TParameters : HAKOM.Serialization.Core.Net.Api.Parametrization.ITextSerializationParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameters</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Serialization.Core.Net.Api.Parametrization.SerializationParametersFactory&lt;TParameters&gt; \ud83e\udc52 TextSerializationParametersFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#textserializationparametersfactoryiversionfactory-iversion-constructor","title":"TextSerializationParametersFactory(IVersionFactory, IVersion) Constructor","text":"C#<pre><code>protected TextSerializationParametersFactory(HAKOM.Versioning.Core.Net.Api.IVersionFactory? versionFactory=null, HAKOM.Versioning.Core.Net.Api.IVersion? currentVersion=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#parameters","title":"Parameters","text":"<p><code>versionFactory</code> IVersionFactory</p> <p></p> <p><code>currentVersion</code> IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#textserializationparametersfactorytparameterscreatestring-iversion-mediatypeheadervalue-method","title":"TextSerializationParametersFactory&lt;TParameters&gt;.Create(string, IVersion, MediaTypeHeaderValue) Method","text":"C#<pre><code>protected override TParameters Create(string timeZone, HAKOM.Versioning.Core.Net.Api.IVersion? version, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>timeZone</code> System.String</p> <p></p> <p><code>version</code> IVersion</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#returns","title":"Returns","text":"<p>TParameters</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#textserializationparametersfactorytparameterscreateencoding-string-string-iversion-mediatypeheadervalue-method","title":"TextSerializationParametersFactory&lt;TParameters&gt;.Create(Encoding, string, string, IVersion, MediaTypeHeaderValue) Method","text":"C#<pre><code>protected abstract TParameters Create(System.Text.Encoding encoding, string timeFormat, string timeZone, HAKOM.Versioning.Core.Net.Api.IVersion? version, System.Net.Http.Headers.MediaTypeHeaderValue mediaType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>encoding</code> System.Text.Encoding</p> <p></p> <p><code>timeFormat</code> System.String</p> <p></p> <p><code>timeZone</code> System.String</p> <p></p> <p><code>version</code> IVersion</p> <p></p> <p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Parametrization/TextSerializationParametersFactoryOf1/#returns_1","title":"Returns","text":"<p>TParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/","title":"HAKOM.Serialization.Core.Net.Api.Xml","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/#hakomserializationcorenetapixml-namespace","title":"HAKOM.Serialization.Core.Net.Api.Xml Namespace","text":"Classes XmlSerializer&lt;TData&gt; Interfaces IXmlSerializationParameters IXmlSerializationParametersFactory"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/IXmlSerializationParameters/","title":"IXmlSerializationParameters","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Xml</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/IXmlSerializationParameters/#ixmlserializationparameters-interface","title":"IXmlSerializationParameters Interface","text":"C#<pre><code>public interface IXmlSerializationParameters :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ITextSerializationParameters,\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParameters\n</code></pre> <p>Implements ITextSerializationParameters, ISerializationParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/IXmlSerializationParametersFactory/","title":"IXmlSerializationParametersFactory","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Xml</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/IXmlSerializationParametersFactory/#ixmlserializationparametersfactory-interface","title":"IXmlSerializationParametersFactory Interface","text":"C#<pre><code>public interface IXmlSerializationParametersFactory :\nHAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;HAKOM.Serialization.Core.Net.Api.Xml.IXmlSerializationParameters&gt;\n</code></pre> <p>Implements HAKOM.Serialization.Core.Net.Api.Parametrization.ISerializationParametersFactory&lt;IXmlSerializationParameters&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/","title":"XmlSerializer&lt;TData&gt;","text":"<p>Assembly: HAKOM.Serialization.Core.Net</p> <p>Namespace: HAKOM.Serialization.Core.Net.Api.Xml</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#xmlserializertdata-class","title":"XmlSerializer&lt;TData&gt; Class","text":"C#<pre><code>public abstract class XmlSerializer&lt;TData&gt; : HAKOM.Serialization.Core.Net.Api.Serializer&lt;TData, HAKOM.Serialization.Core.Net.Api.Xml.IXmlSerializationParameters&gt;,\nHAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;,\nHAKOM.Serialization.Core.Net.Api.ISerializer\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#type-parameters","title":"Type parameters","text":"<p><code>TData</code></p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Serialization.Core.Net.Api.Serializer&lt;TData,IXmlSerializationParameters&gt; \ud83e\udc52 XmlSerializer <p>Implements HAKOM.Serialization.Core.Net.Api.ISerializer&lt;TData&gt;, ISerializer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#xmlserializerixmlserializationparametersfactory-constructor","title":"XmlSerializer(IXmlSerializationParametersFactory) Constructor","text":"C#<pre><code>protected XmlSerializer(HAKOM.Serialization.Core.Net.Api.Xml.IXmlSerializationParametersFactory parametersFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#parameters","title":"Parameters","text":"<p><code>parametersFactory</code> IXmlSerializationParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#xmlserializerdefaultsubtype-property","title":"XmlSerializer.DefaultSubType Property C#<pre><code>protected override string DefaultSubType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#xmlserializerdefaulttype-property","title":"XmlSerializer.DefaultType Property C#<pre><code>protected override string DefaultType { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Core/API/Xml/XmlSerializerOf1/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/","title":"HAKOM.Serialization.Http.Net","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/#hakomserializationhttpnet-assembly","title":"HAKOM.Serialization.Http.Net Assembly","text":"Namespaces HAKOM.Serialization.Http.Net.Api HAKOM.Serialization.Http.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/","title":"HAKOM.Serialization.Http.Net.Api","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/#hakomserializationhttpnetapi-namespace","title":"HAKOM.Serialization.Http.Net.Api Namespace","text":"Classes CustomReferenceFromRouteBinder&lt;TReference,TStore&gt; Base class for model binders that bind route/path parameters to complex types implementing IReference, i.e. objects that refer to items stored in a repository."},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/","title":"CustomModelFromQueryBinder&lt;TModel&gt;","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybindertmodel-class","title":"CustomModelFromQueryBinder&lt;TModel&gt; Class","text":"C#<pre><code>public abstract class CustomModelFromQueryBinder&lt;TModel&gt; :\nHAKOM.Serialization.Http.Net.Api.ICustomModelFromQueryBinder,\nHAKOM.Serialization.Http.Net.Api.ICustomModelBinder,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TModel</code></p> <p>Inheritance System.Object \ud83e\udc52 CustomModelFromQueryBinder <p>Implements ICustomModelFromQueryBinder, ICustomModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybinderparameters-property","title":"CustomModelFromQueryBinder.Parameters Property C#<pre><code>public abstract System.Collections.Generic.IEnumerable&lt;HAKOM.Serialization.Http.Net.Api.QueryParameter&gt; Parameters { get; }\n</code></pre> <p>Implements Parameters</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;QueryParameter&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybinderprefix-property","title":"CustomModelFromQueryBinder.Prefix Property C#<pre><code>public virtual string? Prefix { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybindertmodelbindmodelmodelbindingcontext-cancellationtoken-method","title":"CustomModelFromQueryBinder&lt;TModel&gt;.BindModel(ModelBindingContext, CancellationToken) Method C#<pre><code>protected abstract System.Threading.Tasks.Task BindModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#parameters","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybindertmodelbindmodelasyncmodelbindingcontext-method","title":"CustomModelFromQueryBinder&lt;TModel&gt;.BindModelAsync(ModelBindingContext) Method C#<pre><code>public System.Threading.Tasks.Task BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#parameters_1","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>Implements BindModelAsync(ModelBindingContext)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#custommodelfromquerybindertmodelcanbindtype-bindingsource-method","title":"CustomModelFromQueryBinder&lt;TModel&gt;.CanBind(Type, BindingSource) Method C#<pre><code>public virtual bool CanBind(System.Type modelType, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? bindingSource);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#parameters_2","title":"Parameters","text":"<p><code>modelType</code> System.Type</p> <p></p> <p><code>bindingSource</code> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource</p> <p>Implements CanBind(Type, BindingSource)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromQueryBinderOf1/#returns_2","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/","title":"CustomModelFromRouteBinder&lt;TModel&gt;","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#custommodelfromroutebindertmodel-class","title":"CustomModelFromRouteBinder&lt;TModel&gt; Class","text":"C#<pre><code>public abstract class CustomModelFromRouteBinder&lt;TModel&gt; :\nHAKOM.Serialization.Http.Net.Api.ICustomModelBinder,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TModel</code></p> <p>Inheritance System.Object \ud83e\udc52 CustomModelFromRouteBinder <p>Implements ICustomModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#custommodelfromroutebindertmodelbindmodelmodelbindingcontext-cancellationtoken-method","title":"CustomModelFromRouteBinder&lt;TModel&gt;.BindModel(ModelBindingContext, CancellationToken) Method","text":"C#<pre><code>protected abstract System.Threading.Tasks.Task BindModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#parameters","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#custommodelfromroutebindertmodelbindmodelasyncmodelbindingcontext-method","title":"CustomModelFromRouteBinder&lt;TModel&gt;.BindModelAsync(ModelBindingContext) Method","text":"C#<pre><code>public System.Threading.Tasks.Task BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#parameters_1","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>Implements BindModelAsync(ModelBindingContext)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#custommodelfromroutebindertmodelcanbindtype-bindingsource-method","title":"CustomModelFromRouteBinder&lt;TModel&gt;.CanBind(Type, BindingSource) Method","text":"C#<pre><code>public virtual bool CanBind(System.Type modelType, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? bindingSource);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#parameters_2","title":"Parameters","text":"<p><code>modelType</code> System.Type</p> <p></p> <p><code>bindingSource</code> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource</p> <p>Implements CanBind(Type, BindingSource)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomModelFromRouteBinderOf1/#returns_2","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt;","text":"<p>Assembly: HAKOM.Persistence.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#customreferencefromroutebindertreferencetstore-class","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt; Class","text":"<p>Base class for model binders that bind route/path parameters to complex types implementing IReference, i.e. objects that refer to items stored in a repository.</p> C#<pre><code>public abstract class CustomReferenceFromRouteBinder&lt;TReference,TStore&gt; : HAKOM.Serialization.Http.Net.Api.CustomModelFromRouteBinder&lt;TReference&gt;\n    where TReference : HAKOM.Persistence.Core.Net.Api.References.IReference\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#type-parameters","title":"Type parameters","text":"<p><code>TReference</code></p> <p>The specific implementation type the binder can handle.</p> <p></p> <p><code>TStore</code></p> <p>The store used to look up the reference.</p> <p>Inheritance System.Object \ud83e\udc52 HAKOM.Serialization.Http.Net.Api.CustomModelFromRouteBinder&lt;TReference&gt; \ud83e\udc52 CustomReferenceFromRouteBinder"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#remarks","title":"Remarks","text":"<p>Instead of having every controller action parse string parameters from path parameters that should resolve to an item stored in the database, a custom model binder can be used to do this in one central place.  </p> <p>Deriving from this abstract class means less boiler-plate code has to be written in the specific binder. This also ensures that error handling, etc. is done in a consistent way.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#customreferencefromroutebindertreferencetstorebindmodelmodelbindingcontext-cancellationtoken-method","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt;.BindModel(ModelBindingContext, CancellationToken) Method","text":"<p>Virtual implementation of the actual binding.</p> C#<pre><code>protected override System.Threading.Tasks.Task BindModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#parameters","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>The context in which the model is being bound, i.e. the current request and information about it and its parameters.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used by the method to cancel the ongoing operation. This should be used to prevent unneccessary work when the underlying request has been aborted for some reason.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A task that completes when binding has completed. This does not indicate success. Instead, the Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result property of bindingContext will be set accordingly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#remarks_1","title":"Remarks","text":"<p>This method takes care of calling the other abstract methods and producing appropriate (and consistent) error handling accross implementations.  </p> <p>Implementations should probably not override this.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#customreferencefromroutebindertreferencetstoregetrequiredstoremodelbindingcontext-cancellationtoken-method","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt;.GetRequiredStore(ModelBindingContext, CancellationToken) Method","text":"<p>Override this and return an instance of TStore in the result.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStore&gt;&gt; GetRequiredStore(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#parameters_1","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>The context in which the model is being bound, i.e. the current request and information about it and its parameters.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used by the method to cancel the ongoing operation. This should be used to prevent unneccessary work when the underlying request has been aborted for some reason.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TStore&gt;&gt; A task that completes with an instance of Result&lt;TValue&gt; which indicates either successful initialization of the store, or a failure that occurred when initialization was attempted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#remarks_2","title":"Remarks","text":"<p>When the implementation returns successfully, the store will be passed to either TryCreateReferenceFromId(string, TStore, ModelBindingContext, CancellationToken) or TryCreateReferenceFromName(string, TStore, ModelBindingContext, CancellationToken) depending on the format of the path value (i.e. depending if it is prefixed with \"id:\").  </p> <p>When the implementation returns with a Failure&lt;TValue&gt;, the request will be terminated with an appropriate error message.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#customreferencefromroutebindertreferencetstoretrycreatereferencefromidstring-tstore-modelbindingcontext-cancellationtoken-method","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt;.TryCreateReferenceFromId(string, TStore, ModelBindingContext, CancellationToken) Method","text":"<p>Override this and return the instance of TReference that should be bound to the parameter value.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt; TryCreateReferenceFromId(string id, TStore store, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#parameters_2","title":"Parameters","text":"<p><code>id</code> System.String</p> <p>The identifier of the item within the store.</p> <p></p> <p><code>store</code> TStore</p> <p>The store in which the item resides.</p> <p></p> <p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>The context in which the model is being bound, i.e. the current request and information about it and its parameters.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used by the method to cancel the ongoing operation. This should be used to prevent unneccessary work when the underlying request has been aborted for some reason.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt; A task that completes with an instance of Result&lt;TValue&gt; which indicates either successful creation of the reference, or a failure that occurred when creation was attempted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#remarks_3","title":"Remarks","text":"<p>It is up to the implementation to decide wether or not to return an already resolved reference, allowing the implementation to defer error handling to the controller action, for example if the store does not contain an item with that identifier. This is to reduce overhead in actions that do not actually require the item to be loaded.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#customreferencefromroutebindertreferencetstoretrycreatereferencefromnamestring-tstore-modelbindingcontext-cancellationtoken-method","title":"CustomReferenceFromRouteBinder&lt;TReference,TStore&gt;.TryCreateReferenceFromName(string, TStore, ModelBindingContext, CancellationToken) Method","text":"<p>Override this and return the instance of TReference that should be bound to the parameter value.</p> C#<pre><code>protected abstract System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt; TryCreateReferenceFromName(string name, TStore store, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#parameters_3","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name the item is identified by within the store.</p> <p></p> <p><code>store</code> TStore</p> <p>The store in which the item resides.</p> <p></p> <p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>The context in which the model is being bound, i.e. the current request and information about it and its parameters.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used by the method to cancel the ongoing operation. This should be used to prevent unneccessary work when the underlying request has been aborted for some reason.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TReference&gt;&gt; A task that completes with an instance of Result&lt;TValue&gt; which indicates either successful creation of the reference, or a failure that occurred when creation was attempted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/CustomReferenceFromRouteBinderOf2/#remarks_4","title":"Remarks","text":"<p>It is up to the implementation to decide wether or not to return an already resolved reference, allowing the implementation to defer error handling to the controller action, for example if the store does not contain an item with that name. This is to reduce overhead in actions that do not actually require the item to be loaded.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/","title":"FromPrefixedQueryAttribute","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#fromprefixedqueryattribute-class","title":"FromPrefixedQueryAttribute Class","text":"C#<pre><code>public sealed class FromPrefixedQueryAttribute : System.Attribute,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IBindingSourceMetadata,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelNameProvider,\nMicrosoft.AspNetCore.Http.Metadata.IFromQueryMetadata\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Attribute \ud83e\udc52 FromPrefixedQueryAttribute</p> <p>Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelNameProvider, Microsoft.AspNetCore.Http.Metadata.IFromQueryMetadata</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#fromprefixedqueryattributestring-constructor","title":"FromPrefixedQueryAttribute(string) Constructor","text":"C#<pre><code>public FromPrefixedQueryAttribute(string prefix);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#parameters","title":"Parameters","text":"<p><code>prefix</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#fromprefixedqueryattributebindingsource-property","title":"FromPrefixedQueryAttribute.BindingSource Property","text":"C#<pre><code>public Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? BindingSource { get; }\n</code></pre> <p>Implements BindingSource</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#property-value","title":"Property Value","text":"<p>Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#fromprefixedqueryattributename-property","title":"FromPrefixedQueryAttribute.Name Property","text":"C#<pre><code>public string? Name { get; set; }\n</code></pre> <p>Implements Name, Name</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#fromprefixedqueryattributeprefix-property","title":"FromPrefixedQueryAttribute.Prefix Property","text":"C#<pre><code>public string Prefix { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/FromPrefixedQueryAttribute/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/","title":"ICustomModelBinder","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/#icustommodelbinder-interface","title":"ICustomModelBinder Interface","text":"C#<pre><code>public interface ICustomModelBinder :\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n</code></pre> <p>Derived \u21b3 CustomModelFromQueryBinder&lt;TModel&gt; \u21b3 CustomModelFromRouteBinder&lt;TModel&gt; \u21b3 ICustomModelFromQueryBinder \u21b3 StructModelBinder&lt;TModel&gt;</p> <p>Implements Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/#icustommodelbindercanbindtype-bindingsource-method","title":"ICustomModelBinder.CanBind(Type, BindingSource) Method","text":"C#<pre><code>bool CanBind(System.Type modelType, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? bindingSource);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/#parameters","title":"Parameters","text":"<p><code>modelType</code> System.Type</p> <p></p> <p><code>bindingSource</code> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelBinder/#returns","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelFromQueryBinder/","title":"ICustomModelFromQueryBinder","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelFromQueryBinder/#icustommodelfromquerybinder-interface","title":"ICustomModelFromQueryBinder Interface","text":"C#<pre><code>public interface ICustomModelFromQueryBinder :\nHAKOM.Serialization.Http.Net.Api.ICustomModelBinder,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n</code></pre> <p>Derived \u21b3 CustomModelFromQueryBinder&lt;TModel&gt;</p> <p>Implements ICustomModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelFromQueryBinder/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelFromQueryBinder/#icustommodelfromquerybinderparameters-property","title":"ICustomModelFromQueryBinder.Parameters Property","text":"C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Serialization.Http.Net.Api.QueryParameter&gt; Parameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/ICustomModelFromQueryBinder/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;QueryParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/PrefixedQueryBindingSource/","title":"PrefixedQueryBindingSource","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/PrefixedQueryBindingSource/#prefixedquerybindingsource-class","title":"PrefixedQueryBindingSource Class","text":"C#<pre><code>public sealed class PrefixedQueryBindingSource : Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource \ud83e\udc52 PrefixedQueryBindingSource</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/PrefixedQueryBindingSource/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/PrefixedQueryBindingSource/#prefixedquerybindingsourceprefix-property","title":"PrefixedQueryBindingSource.Prefix Property","text":"C#<pre><code>public string Prefix { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/PrefixedQueryBindingSource/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/","title":"QueryParameter","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameter-struct","title":"QueryParameter Struct","text":"C#<pre><code>public readonly struct QueryParameter :\nSystem.IEquatable&lt;HAKOM.Serialization.Http.Net.Api.QueryParameter&gt;\n</code></pre> <p>Implements System.IEquatable&lt;QueryParameter&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameterdescription-property","title":"QueryParameter.Description Property","text":"C#<pre><code>public string Description { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparametername-property","title":"QueryParameter.Name Property","text":"C#<pre><code>public string Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameterrequired-property","title":"QueryParameter.Required Property","text":"C#<pre><code>public bool Required { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#property-value_2","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparametertype-property","title":"QueryParameter.Type Property","text":"C#<pre><code>public System.Type Type { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#property-value_3","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameterequalsqueryparameter-method","title":"QueryParameter.Equals(QueryParameter) Method","text":"C#<pre><code>public bool Equals(HAKOM.Serialization.Http.Net.Api.QueryParameter other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#parameters","title":"Parameters","text":"<p><code>other</code> QueryParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameterequalsobject-method","title":"QueryParameter.Equals(object) Method","text":"C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#parameters_1","title":"Parameters","text":"<p><code>obj</code> System.Object</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparametergethashcode-method","title":"QueryParameter.GetHashCode() Method","text":"C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#returns_2","title":"Returns","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameteroperator-queryparameter-queryparameter-operator","title":"QueryParameter.operator ==(QueryParameter, QueryParameter) Operator","text":"C#<pre><code>public static bool operator ==(HAKOM.Serialization.Http.Net.Api.QueryParameter left, HAKOM.Serialization.Http.Net.Api.QueryParameter right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#parameters_2","title":"Parameters","text":"<p><code>left</code> QueryParameter</p> <p></p> <p><code>right</code> QueryParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#returns_3","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#queryparameteroperator-queryparameter-queryparameter-operator_1","title":"QueryParameter.operator !=(QueryParameter, QueryParameter) Operator","text":"C#<pre><code>public static bool operator !=(HAKOM.Serialization.Http.Net.Api.QueryParameter left, HAKOM.Serialization.Http.Net.Api.QueryParameter right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#parameters_3","title":"Parameters","text":"<p><code>left</code> QueryParameter</p> <p></p> <p><code>right</code> QueryParameter</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/QueryParameter/#returns_4","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/","title":"StructModelBinder&lt;TModel&gt;","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#structmodelbindertmodel-class","title":"StructModelBinder&lt;TModel&gt; Class","text":"C#<pre><code>public abstract class StructModelBinder&lt;TModel&gt; :\nHAKOM.Serialization.Http.Net.Api.ICustomModelBinder,\nMicrosoft.AspNetCore.Mvc.ModelBinding.IModelBinder\n    where TModel : struct, System.ValueType, System.ValueType\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TModel</code></p> <p>Inheritance System.Object \ud83e\udc52 StructModelBinder <p>Implements ICustomModelBinder, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#structmodelbindertmodelbindmodelasyncmodelbindingcontext-method","title":"StructModelBinder&lt;TModel&gt;.BindModelAsync(ModelBindingContext) Method","text":"C#<pre><code>public System.Threading.Tasks.Task BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#parameters","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p>Implements BindModelAsync(ModelBindingContext)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#structmodelbindertmodelcanbindtype-bindingsource-method","title":"StructModelBinder&lt;TModel&gt;.CanBind(Type, BindingSource) Method","text":"C#<pre><code>public virtual bool CanBind(System.Type modelType, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? bindingSource);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#parameters_1","title":"Parameters","text":"<p><code>modelType</code> System.Type</p> <p></p> <p><code>bindingSource</code> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource</p> <p>Implements CanBind(Type, BindingSource)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#structmodelbindertmodeltryparsestring-method","title":"StructModelBinder&lt;TModel&gt;.TryParse(string) Method","text":"C#<pre><code>protected abstract HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TModel&gt; TryParse(string value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#parameters_2","title":"Parameters","text":"<p><code>value</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/StructModelBinderOf1/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TModel&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/","title":"HAKOM.Serialization.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/#hakomserializationhttpnetapiextensions-namespace","title":"HAKOM.Serialization.Http.Net.Api.Extensions Namespace","text":"Classes HttpContextExtensions InputFormatterContextExtensions ModelBindingContextExtensions MvcOptionsExtensions Allows using HAKOM formatters with the Microsoft.AspNetCore.Mvc framework. OutputFormatterCanWriteContextExtensions OutputFormatterWriteContextExtensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/","title":"HttpContextExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#httpcontextextensions-class","title":"HttpContextExtensions Class","text":"C#<pre><code>public static class HttpContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 HttpContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionssetserializerthis-httpcontext-iserializer-method","title":"HttpContextExtensions.SetSerializer(this HttpContext, ISerializer) Method","text":"C#<pre><code>public static void SetSerializer(this Microsoft.AspNetCore.Http.HttpContext httpContext, HAKOM.Serialization.Core.Net.Api.ISerializer serializer);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#parameters","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p></p> <p><code>serializer</code> ISerializer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetqueryparametersboundforparameterthis-httpcontext-parameterdescriptor-ienumerablestring-method","title":"HttpContextExtensions.TryGetQueryParametersBoundForParameter(this HttpContext, ParameterDescriptor, IEnumerable&lt;string&gt;) Method","text":"C#<pre><code>public static bool TryGetQueryParametersBoundForParameter(this Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor parameterDescriptor, out System.Collections.Generic.IEnumerable&lt;string&gt; boundParameters);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#parameters_1","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p></p> <p><code>parameterDescriptor</code> Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor</p> <p></p> <p><code>boundParameters</code> System.Collections.Generic.IEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#returns","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetserializerthis-httpcontext-iserializer-method","title":"HttpContextExtensions.TryGetSerializer(this HttpContext, ISerializer) Method","text":"C#<pre><code>public static bool TryGetSerializer(this Microsoft.AspNetCore.Http.HttpContext httpContext, out HAKOM.Serialization.Core.Net.Api.ISerializer serializer);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#parameters_2","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p></p> <p><code>serializer</code> ISerializer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/HttpContextExtensions/#returns_1","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/","title":"InputFormatterContextExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#inputformattercontextextensions-class","title":"InputFormatterContextExtensions Class","text":"C#<pre><code>public static class InputFormatterContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 InputFormatterContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#inputformattercontextextensionsreadthis-inputformattercontext-method","title":"InputFormatterContextExtensions.Read(this InputFormatterContext) Method","text":"C#<pre><code>public static System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt; Read(this Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#inputformattercontextextensionstrysetserializerthis-inputformattercontext-method","title":"InputFormatterContextExtensions.TrySetSerializer(this InputFormatterContext) Method","text":"C#<pre><code>public static bool TrySetSerializer(this Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#parameters_1","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/InputFormatterContextExtensions/#returns_1","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/ModelBindingContextExtensions/","title":"ModelBindingContextExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/ModelBindingContextExtensions/#modelbindingcontextextensions-class","title":"ModelBindingContextExtensions Class","text":"C#<pre><code>public static class ModelBindingContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ModelBindingContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/ModelBindingContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/ModelBindingContextExtensions/#modelbindingcontextextensionssetboundqueryparametersthis-modelbindingcontext-ienumerablestring-method","title":"ModelBindingContextExtensions.SetBoundQueryParameters(this ModelBindingContext, IEnumerable&lt;string&gt;) Method","text":"C#<pre><code>public static void SetBoundQueryParameters(this Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, System.Collections.Generic.IEnumerable&lt;string&gt; queryParameters);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/ModelBindingContextExtensions/#parameters","title":"Parameters","text":"<p><code>bindingContext</code> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext</p> <p></p> <p><code>queryParameters</code> System.Collections.Generic.IEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/","title":"MvcOptionsExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensions-class","title":"MvcOptionsExtensions Class","text":"<p>Allows using HAKOM formatters with the Microsoft.AspNetCore.Mvc framework.</p> C#<pre><code>public static class MvcOptionsExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcOptionsExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#remarks","title":"Remarks","text":"<p>Usage:  </p> C#"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsaddhakomformattersthis-mvcoptions-bool-method","title":"MvcOptionsExtensions.AddHakomFormatters(this MvcOptions, bool) Method","text":"<p>Adds HAKOM input and output formatters to the given mvcOptions.</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions AddHakomFormatters(this Microsoft.AspNetCore.Mvc.MvcOptions mvcOptions, bool clearExistingFormatters=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#parameters","title":"Parameters","text":"<p><code>mvcOptions</code> Microsoft.AspNetCore.Mvc.MvcOptions</p> <p>The Microsoft.AspNetCore.Mvc.MvcOptions to add the formatters to.</p> <p></p> <p><code>clearExistingFormatters</code> System.Boolean</p> <p>Wether or not to clear previously added Input/OutputFormatters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#returns","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions The modified mvcOptions for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if mvcOptions is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#mvcoptionsextensionsaddhakommodelbindersthis-mvcoptions-method","title":"MvcOptionsExtensions.AddHakomModelBinders(this MvcOptions) Method","text":"<p>Adds the ability to use ICustomModelBinder implementations with the MVC framework</p> C#<pre><code>public static Microsoft.AspNetCore.Mvc.MvcOptions AddHakomModelBinders(this Microsoft.AspNetCore.Mvc.MvcOptions mvcOptions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#parameters_1","title":"Parameters","text":"<p><code>mvcOptions</code> Microsoft.AspNetCore.Mvc.MvcOptions</p> <p>The Microsoft.AspNetCore.Mvc.MvcOptions to configure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.AspNetCore.Mvc.MvcOptions The mvcOptions for chaining additional configuration calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/MvcOptionsExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if mvcOptions is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/","title":"OutputFormatterCanWriteContextExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/#outputformattercanwritecontextextensions-class","title":"OutputFormatterCanWriteContextExtensions Class","text":"C#<pre><code>public static class OutputFormatterCanWriteContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 OutputFormatterCanWriteContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/#outputformattercanwritecontextextensionstrysetserializerthis-outputformattercanwritecontext-type-method","title":"OutputFormatterCanWriteContextExtensions.TrySetSerializer(this OutputFormatterCanWriteContext, Type) Method","text":"C#<pre><code>public static bool TrySetSerializer(this Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context, System.Type? type=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext</p> <p></p> <p><code>type</code> System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterCanWriteContextExtensions/#returns","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/","title":"OutputFormatterWriteContextExtensions","text":"<p>Assembly: HAKOM.Serialization.Http.Net</p> <p>Namespace: HAKOM.Serialization.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#outputformatterwritecontextextensions-class","title":"OutputFormatterWriteContextExtensions Class","text":"C#<pre><code>public static class OutputFormatterWriteContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 OutputFormatterWriteContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#outputformatterwritecontextextensionstryserializethis-outputformatterwritecontext-object-method","title":"OutputFormatterWriteContextExtensions.TrySerialize(this OutputFormatterWriteContext, object) Method","text":"C#<pre><code>public static System.Threading.Tasks.Task&lt;bool&gt; TrySerialize(this Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context, object? value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext</p> <p></p> <p><code>value</code> System.Object</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#outputformatterwritecontextextensionstryserializethis-outputformatterwritecontext-method","title":"OutputFormatterWriteContextExtensions.TrySerialize(this OutputFormatterWriteContext) Method","text":"C#<pre><code>public static System.Threading.Tasks.Task&lt;bool&gt; TrySerialize(this Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#parameters_1","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Serialization/Http/API/Extensions/OutputFormatterWriteContextExtensions/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/","title":"HAKOM.TSM.Net","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/#hakomtsmnet-assembly","title":"HAKOM.TSM.Net Assembly","text":"Namespaces HAKOM.TSM.Net.Api HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions HAKOM.TSM.Net.Api.Attributes HAKOM.TSM.Net.Api.Attributes.Extensions HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes HAKOM.TSM.Net.Api.Attributes.Nodes HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References HAKOM.TSM.Net.Api.Attributes.Persistence HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions HAKOM.TSM.Net.Api.Attributes.Persistence.References HAKOM.TSM.Net.Api.Calculation HAKOM.TSM.Net.Api.Calculation.Aggregation HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions HAKOM.TSM.Net.Api.Calculation.Exceptions HAKOM.TSM.Net.Api.Calculation.Extensions HAKOM.TSM.Net.Api.Calculation.Formulas HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions HAKOM.TSM.Net.Api.Data HAKOM.TSM.Net.Api.Data.Extensions HAKOM.TSM.Net.Api.Data.Persistence.Attributes HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions HAKOM.TSM.Net.Api.Data.Persistence.Exceptions HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql HAKOM.TSM.Net.Api.Data.TimeSeries HAKOM.TSM.Net.Api.Data.TimeSeries.Compression HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions HAKOM.TSM.Net.Api.Data.TimeSeries.Math HAKOM.TSM.Net.Api.Extensions HAKOM.TSM.Net.Api.Flags HAKOM.TSM.Net.Api.Flags.Extensions HAKOM.TSM.Net.Api.Formulas HAKOM.TSM.Net.Api.Formulas.Exceptions HAKOM.TSM.Net.Api.Formulas.Extensions HAKOM.TSM.Net.Api.Persistence HAKOM.TSM.Net.Api.Persistence.Exceptions HAKOM.TSM.Net.Api.Persistence.References.Exceptions HAKOM.TSM.Net.Api.Quotations HAKOM.TSM.Net.Api.Quotations.Extensions HAKOM.TSM.Net.Api.Serialization.Exceptions HAKOM.TSM.Net.Api.Time.DateTimes HAKOM.TSM.Net.Api.Time.Extensions HAKOM.TSM.Net.Api.Time.Extensions.Exceptions HAKOM.TSM.Net.Api.Time.Intervals HAKOM.TSM.Net.Api.Time.Intervals.Exceptions HAKOM.TSM.Net.Api.Time.Intervals.Extensions HAKOM.TSM.Net.Api.Time.Periods HAKOM.TSM.Net.Api.Time.Periods.Exceptions HAKOM.TSM.Net.Api.Time.Serialization HAKOM.TSM.Net.Api.Time.Serialization.Exceptions HAKOM.TSM.Net.Api.Time.TimeBases HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions HAKOM.TSM.Net.Api.Time.TimeBases.Extensions HAKOM.TSM.Net.Api.Time.TimeZones HAKOM.TSM.Net.Api.TimeSeries HAKOM.TSM.Net.Api.TimeSeries.Exceptions HAKOM.TSM.Net.Api.TimeSeries.Extensions HAKOM.TSM.Net.Api.TimeSeries.Persistence HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions HAKOM.TSM.Net.Api.TimeSeries.Persistence.References HAKOM.TSM.Net.Api.TimeSeries.Persistence.Sql HAKOM.TSM.Net.Api.Units HAKOM.TSM.Net.Api.Units.Exceptions HAKOM.TSM.Net.Api.Units.Extensions HAKOM.TSM.Net.Api.Units.Persistence HAKOM.TSM.Net.Api.Units.Persistence.Exceptions HAKOM.TSM.Net.Api.Units.Persistence.References HAKOM.TSM.Net.Api.Units.Persistence.Sql"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/","title":"HAKOM.TSM.Net.Api","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/#hakomtsmnetapi-namespace","title":"HAKOM.TSM.Net.Api Namespace","text":"Interfaces IEnumeration&lt;TStruct,TValue&gt; Base interface for enumeration types such as FunctionType, IntervalTransformationMethod, etc. IEnumeration&lt;TStruct&gt; Marker interface to characterize a struct of type TStruct as an enumeration-like data type. IEnumerationPropertyProvider&lt;TStruct&gt; Provides additional properties mapped to specific values of enumeration-like structs (i.e. Flag, FunctionType, etc.). ITsm Provides access to time series management functions."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf1/","title":"IEnumeration&lt;TStruct&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf1/#ienumerationtstruct-interface","title":"IEnumeration&lt;TStruct&gt; Interface","text":"<p>Marker interface to characterize a struct of type TStruct as an enumeration-like data type.</p> C#<pre><code>public interface IEnumeration&lt;TStruct&gt;\n    where TStruct : struct, System.ValueType, System.ValueType\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStruct</code></p> <p>The type to mark as an enumeration-like data structure.</p> <p>Derived \u21b3 CompressionMode \u21b3 Flag \u21b3 IEnumeration&lt;TStruct,TValue&gt; \u21b3 QuotationBehavior \u21b3 IntervalTransformationMethod \u21b3 IntervalType \u21b3 TimeBase \u21b3 FunctionType</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf1/#remarks","title":"Remarks","text":"<p>Commonly used enums are somewhat limited in several ways, i.e. it is not possible to add methods to them, extend them without code changes, specify an optimized data type for their backing value, etc.  </p> <p>HAKOM applications uses special structs in these cases instead. A few examples of this can be found here:   </p> <ul> <li>Flag </li> <li>IntervalType </li> <li>FunctionType </li> <li>QuotationBehavior</li> </ul>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/","title":"IEnumeration&lt;TStruct,TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#ienumerationtstructtvalue-interface","title":"IEnumeration&lt;TStruct,TValue&gt; Interface","text":"<p>Base interface for enumeration types such as FunctionType, IntervalTransformationMethod, etc.</p> C#<pre><code>public interface IEnumeration&lt;TStruct,TValue&gt; :\nHAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt;\n    where TStruct : struct, HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct, TValue&gt;, System.ValueType, System.ValueType\n    where TValue : System.Numerics.INumber&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStruct</code></p> <p>The type of struct that implements the enumeration.</p> <p></p> <p><code>TValue</code></p> <p>The type of the value.</p> <p>Derived \u21b3 CompressionMode \u21b3 Flag \u21b3 QuotationBehavior \u21b3 IntervalTransformationMethod \u21b3 IntervalType \u21b3 TimeBase \u21b3 FunctionType</p> <p>Implements HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#ienumerationvalue-property","title":"IEnumeration.Value Property <p>The value of the enumeration type.</p> C#<pre><code>TValue Value { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#property-value","title":"Property Value","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#ienumerationtstructtvaluecreatetvalue-method","title":"IEnumeration&lt;TStruct,TValue&gt;.Create(TValue) Method <p>Creates an instance of TStruct with the given value.</p> C#<pre><code>static TStruct Create(TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#parameters","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value to create the TStruct with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationOf2/#returns","title":"Returns","text":"<p>TStruct The newly created TStruct.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/","title":"IEnumerationPropertyProvider&lt;TStruct&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#ienumerationpropertyprovidertstruct-interface","title":"IEnumerationPropertyProvider&lt;TStruct&gt; Interface","text":"<p>Provides additional properties mapped to specific values of enumeration-like structs (i.e. Flag, FunctionType, etc.).</p> C#<pre><code>public interface IEnumerationPropertyProvider&lt;TStruct&gt;\n    where TStruct : struct, HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt;, System.IEquatable&lt;TStruct&gt;, System.ValueType, System.ValueType\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStruct</code></p> <p>The enumeration-like type for which this instance provides additional properties.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#remarks","title":"Remarks","text":"<p>IEnumeration&lt;TStruct&gt; implementing types are used to represent data similarly to the way how an enum works, but with added functionality and sometimes even the ability to extend them via configuration. Under the hood, these types are still represented by a single value (i.e. System.Byte, System.Int32, etc.) to keep their memory footprint as small as possible.             In order to add properties to these values without attaching them to each instance of the TStruct, implementations of this interface may be used to map TStruct values to additional information, for example a human-readable string representation, etc.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#ienumerationpropertyprovidermappedproperties-property","title":"IEnumerationPropertyProvider.MappedProperties Property <p>Gets all property values mapped to specific values of TStruct.</p> C#<pre><code>System.Collections.Generic.IReadOnlyDictionary&lt;TStruct,object&gt; MappedProperties { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;TStruct,System.Object&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#ienumerationpropertyproviderpropertyname-property","title":"IEnumerationPropertyProvider.PropertyName Property <p>The name of the property for which this instance provides values.</p> C#<pre><code>string PropertyName { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#ienumerationpropertyprovidertstructtrygetpropertyienumerationtstruct-object-method","title":"IEnumerationPropertyProvider&lt;TStruct&gt;.TryGetProperty(IEnumeration&lt;TStruct&gt;, object) Method <p>Attempts to get the value of an additional property that has been mapped to a specific value of TStruct.</p> C#<pre><code>bool TryGetProperty(HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt; value, out object property);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#parameters","title":"Parameters","text":"<p><code>value</code> HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct&gt;</p> <p>The TStruct value to look up the property value for</p> <p></p> <p><code>property</code> System.Object</p> <p>The mapped property.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#returns","title":"Returns","text":"<p>System.Boolean true if there is a mapped property value for the given value of TStruct, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#ienumerationpropertyprovidertstructtrygetpropertytstruct-object-method","title":"IEnumerationPropertyProvider&lt;TStruct&gt;.TryGetProperty(TStruct, object) Method <p>Attempts to get the value of an additional property that has been mapped to a specific value of TStruct.</p> C#<pre><code>bool TryGetProperty(TStruct value, out object property);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#parameters_1","title":"Parameters","text":"<p><code>value</code> TStruct</p> <p>The TStruct value to look up the property value for</p> <p></p> <p><code>property</code> System.Object</p> <p>The mapped property.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/IEnumerationPropertyProviderOf1/#returns_1","title":"Returns","text":"<p>System.Boolean true if there is a mapped property value for the given value of TStruct, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/","title":"ITsm","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsm-interface","title":"ITsm Interface","text":"<p>Provides access to time series management functions.</p> C#<pre><code>public interface ITsm\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmattributes-property","title":"ITsm.Attributes Property","text":"<p>Factory for creating attributes.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.IAttributeFactory Attributes { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value","title":"Property Value","text":"<p>IAttributeFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmattributetypes-property","title":"ITsm.AttributeTypes Property","text":"<p>Factory for creating attribute types.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.IAttributeTypeFactory AttributeTypes { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_1","title":"Property Value","text":"<p>IAttributeTypeFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmcalculator-property","title":"ITsm.Calculator Property","text":"<p>Used to make formula calculations and aggregations.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.ICalculator Calculator { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_2","title":"Property Value","text":"<p>ICalculator</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmconstantunitconversions-property","title":"ITsm.ConstantUnitConversions Property","text":"<p>Factory for creating unit conversions used for constant conversion of time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.IConstantUnitConversionFactory ConstantUnitConversions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_3","title":"Property Value","text":"<p>IConstantUnitConversionFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmcontainer-property","title":"ITsm.Container Property","text":"<p>May be used to resolve registered services from the IContainer that this instance of ITsm was created from.</p> C#<pre><code>HAKOM.DependencyInjection.Core.Net.Api.IActivatedContainer Container { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_4","title":"Property Value","text":"<p>IActivatedContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmdataconverter-property","title":"ITsm.DataConverter Property","text":"<p>Factory for creating data conversions used in time series to handle unit conversions.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverterFactory DataConverter { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_5","title":"Property Value","text":"<p>IDataConverterFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmdataoperation-property","title":"ITsm.DataOperation Property","text":"<p>Factory for creating data operations used in time series to handle mathematical operations on a time series value.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperationFactory DataOperation { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_6","title":"Property Value","text":"<p>IDataOperationFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmdatatransformer-property","title":"ITsm.DataTransformer Property","text":"<p>Factory for creating data transformations used in time series to handle interval changes.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformerFactory DataTransformer { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_7","title":"Property Value","text":"<p>IDataTransformerFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmflagnames-property","title":"ITsm.FlagNames Property","text":"<p>Used for obtaining the names of flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.IFlagNameProvider FlagNames { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_8","title":"Property Value","text":"<p>IFlagNameProvider</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmflagpriorities-property","title":"ITsm.FlagPriorities Property","text":"<p>Used for finding preferred flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider FlagPriorities { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_9","title":"Property Value","text":"<p>IFlagPriorityProvider</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmformulas-property","title":"ITsm.Formulas Property","text":"<p>Factory for creating formulas which are used to generate/derive time series data based on functions rather than explicitly defined data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormulaFactory Formulas { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_10","title":"Property Value","text":"<p>IFormulaFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmintervals-property","title":"ITsm.Intervals Property","text":"<p>Factory for creating information that configures the base interval of a time series (i.e. 15 min, 2 hour, etc).</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory Intervals { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_11","title":"Property Value","text":"<p>IIntervalFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmnodes-property","title":"ITsm.Nodes Property","text":"<p>Factory for creating nodes</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory Nodes { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_12","title":"Property Value","text":"<p>INodeFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmrepositories-property","title":"ITsm.Repositories Property","text":"<p>Provides access to all configured repositories used to store time series and related data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryStore Repositories { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_13","title":"Property Value","text":"<p>ITsmRepositoryStore</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmserializers-property","title":"ITsm.Serializers Property","text":"<p>Factory for creating serializers.</p> C#<pre><code>HAKOM.Serialization.Core.Net.Api.ISerializerFactory Serializers { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_14","title":"Property Value","text":"<p>ISerializerFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmtimedependentunitconversions-property","title":"ITsm.TimeDependentUnitConversions Property","text":"<p>Factory for creating unit conversions used for time dependent conversion of time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversionFactory TimeDependentUnitConversions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_15","title":"Property Value","text":"<p>ITimeDependentUnitConversionFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmtimeseries-property","title":"ITsm.TimeSeries Property","text":"<p>Factory for creating time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesFactory TimeSeries { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_16","title":"Property Value","text":"<p>ITimeSeriesFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmtimeseriesdata-property","title":"ITsm.TimeSeriesData Property","text":"<p>Factory for creating time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory TimeSeriesData { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_17","title":"Property Value","text":"<p>ITimeSeriesDataFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmtimezones-property","title":"ITsm.TimeZones Property","text":"<p>Factory for creating time zones used in time series interval transformations  to handle daylight saving time changes.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory TimeZones { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_18","title":"Property Value","text":"<p>ITimeZoneFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmunits-property","title":"ITsm.Units Property","text":"<p>Factory for creating units used for time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.IUnitFactory Units { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#property-value_19","title":"Property Value","text":"<p>IUnitFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmcreate-method","title":"ITsm.Create() Method","text":"<p>Creates an ITsm instance for time series management with default settings.</p> C#<pre><code>static HAKOM.TSM.Net.Api.ITsm Create();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#returns","title":"Returns","text":"<p>ITsm The ITsm instance to work with.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmcreateactionicontainer-bool-actionicontainer-method","title":"ITsm.Create(Action&lt;IContainer&gt;, bool, Action&lt;IContainer&gt;) Method","text":"<p>Creates an ITsm instance for time series management. Unless initializeContainerWithDefaults is set to true, all dependencies (including an ITsm implementation) must be registered within the given configure action.</p> C#<pre><code>static HAKOM.TSM.Net.Api.ITsm Create(System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt; configure, bool initializeContainerWithDefaults=true, System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt;? configureBeforeDefaults=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#parameters","title":"Parameters","text":"<p><code>configure</code> System.Action&lt;IContainer&gt;</p> <p>An action that registers types/services with the DI container.</p> <p></p> <p><code>initializeContainerWithDefaults</code> System.Boolean</p> <p>If true, registers some core components including a default ITsm instance before calling configure.</p> <p></p> <p><code>configureBeforeDefaults</code> System.Action&lt;IContainer&gt;</p> <p>An action that's called on the DI container before defaults are setup.             Even if initializeContainerWithDefaults is false this is called before configure is called.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#returns_1","title":"Returns","text":"<p>ITsm An ITsm instance to work with.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#itsmcreateactionicontainer-method","title":"ITsm.Create(Action&lt;IContainer&gt;) Method","text":"<p>Creates an ITsm instance for time series management with default settings.</p> C#<pre><code>static HAKOM.TSM.Net.Api.ITsm Create(System.Action&lt;HAKOM.DependencyInjection.Core.Net.Api.IContainer&gt;? configureBeforeDefaults=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#parameters_1","title":"Parameters","text":"<p><code>configureBeforeDefaults</code> System.Action&lt;IContainer&gt;</p> <p>An action that's called on the DI container before defaults are setup.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/ITsm/#returns_2","title":"Returns","text":"<p>ITsm The ITsm instance to work with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/#hakomtsmnetapiattributepersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions Namespace","text":"Classes AttributeIdNotAllowedOnSaveException Indicates that an attempt was made to manually save an attribute id."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/","title":"AttributeIdNotAllowedOnSaveException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/#attributeidnotallowedonsaveexception-class","title":"AttributeIdNotAllowedOnSaveException Class","text":"<p>Indicates that an attempt was made to manually save an attribute id.</p> C#<pre><code>public sealed class AttributeIdNotAllowedOnSaveException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AttributeIdNotAllowedOnSaveException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/#remarks","title":"Remarks","text":"<p>The id given in SaveOrUpdate(IAttribute, CancellationToken)  does not exist and saving an attribute with a predefined id is not permitted.  </p> <p>This exception is identified by error code HK15094.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/#attributeidnotallowedonsaveexceptionequivalenthttpstatuscode-property","title":"AttributeIdNotAllowedOnSaveException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attribute/Persistence/Exceptions/AttributeIdNotAllowedOnSaveException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/","title":"HAKOM.TSM.Net.Api.Attributes","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/#hakomtsmnetapiattributes-namespace","title":"HAKOM.TSM.Net.Api.Attributes Namespace","text":"Interfaces IAttribute A simple interface describing the relevant fields of an attribute. IAttributeFactory A factory to create attributes. IAttributeType The type of an IAttribute. IAttributeTypeFactory Used to create new instances of IAttributeType for IAttributes."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/","title":"IAttribute","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#iattribute-interface","title":"IAttribute Interface","text":"<p>A simple interface describing the relevant fields of an attribute.</p> C#<pre><code>public interface IAttribute :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;,\nHAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries\n</code></pre> <p>Implements System.IEquatable&lt;IAttribute&gt;, IAssignableToTimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#iattributedescription-property","title":"IAttribute.Description Property","text":"<p>Gets or Sets the description of the attribute.</p> C#<pre><code>string? Description { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#iattributename-property","title":"IAttribute.Name Property","text":"<p>Gets or Sets the name of the attribute.</p> C#<pre><code>string Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#iattributetype-property","title":"IAttribute.Type Property","text":"<p>Gets the type of the attribute.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttribute/#property-value_2","title":"Property Value","text":"<p>IAttributeTypeReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/","title":"IAttributeFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#iattributefactory-interface","title":"IAttributeFactory Interface","text":"<p>A factory to create attributes.</p> C#<pre><code>public interface IAttributeFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#iattributefactorycreatestring-string-iattributetypereference-method","title":"IAttributeFactory.Create(string, string, IAttributeTypeReference) Method","text":"<p>Create an attribute with the given name, description and type.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.IAttribute Create(string name, string? description, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference type);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new attribute.</p> <p></p> <p><code>description</code> System.String</p> <p>The System.String description of the new attribute.</p> <p></p> <p><code>type</code> IAttributeTypeReference</p> <p>The reference referring the IAttributeType of the new attribute.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#returns","title":"Returns","text":"<p>IAttribute A new IAttribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#iattributefactorytrycreatestring-string-iattributetypereference-method","title":"IAttributeFactory.TryCreate(string, string, IAttributeTypeReference) Method","text":"<p>Attempts to create an attribute with the given name, description and type.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; TryCreate(string name, string? description, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference type);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new attribute.</p> <p></p> <p><code>description</code> System.String</p> <p>The System.String description of the new attribute.</p> <p></p> <p><code>type</code> IAttributeTypeReference</p> <p>The reference referring the IAttributeType of the new attribute.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttribute&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttribute.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeType/","title":"IAttributeType","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeType/#iattributetype-interface","title":"IAttributeType Interface","text":"<p>The type of an IAttribute.</p> C#<pre><code>public interface IAttributeType :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.IAttributeType&gt;,\nSystem.IFormattable\n</code></pre> <p>Implements System.IEquatable&lt;IAttributeType&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeType/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeType/#iattributetypename-property","title":"IAttributeType.Name Property","text":"<p>The name of the type of an IAttribute.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeType/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/","title":"IAttributeTypeFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#iattributetypefactory-interface","title":"IAttributeTypeFactory Interface","text":"<p>Used to create new instances of IAttributeType for IAttributes.</p> C#<pre><code>public interface IAttributeTypeFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#iattributetypefactorycreatestring-method","title":"IAttributeTypeFactory.Create(string) Method","text":"<p>Creates a new instance of IAttributeType with a specific name.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.IAttributeType Create(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the new IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#returns","title":"Returns","text":"<p>IAttributeType the created IAttributeType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#iattributetypefactorytrycreatestring-method","title":"IAttributeTypeFactory.TryCreate(string) Method","text":"<p>Attempts to create a new instance of IAttributeType with a specific name.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.IAttributeType&gt; TryCreate(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the new IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeType&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/IAttributeTypeFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/","title":"HAKOM.TSM.Net.Api.Attributes.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/#hakomtsmnetapiattributesextensions-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods for registering interface implementations of Attributes with the container. ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering interface implementations of Attributes with the container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsuseattributestoretstorageprovidertattributestorethis-icontainer-method","title":"ContainerExtensions.UseAttributeStore&lt;TStorageProvider,TAttributeStore&gt;(this IContainer) Method","text":"<p>Registers an IAttributeStore implementation with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAttributeStore&lt;TStorageProvider,TAttributeStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TAttributeStore : class, HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the attribute store.</p> <p></p> <p><code>TAttributeStore</code></p> <p>The class of the attribute store which implements the IAttributeStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsuseattributetypestoretstorageprovidertattributetypestorethis-icontainer-method","title":"ContainerExtensions.UseAttributeTypeStore&lt;TStorageProvider,TAttributeTypeStore&gt;(this IContainer) Method","text":"<p>Registers an IAttributeTypeStore implementation with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAttributeTypeStore&lt;TStorageProvider,TAttributeTypeStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TAttributeTypeStore : class, HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the AttributeType store.</p> <p></p> <p><code>TAttributeTypeStore</code></p> <p>The class of the AttributeType store which implements the IAttributeTypeStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the AttributeType store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsusedefaultattributefactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultAttributeFactories(this IContainer) Method","text":"<p>Registers factories for types and stores related to attributes with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAttributeFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsusedefaultattributestoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultAttributeStores(this IContainer) Method","text":"<p>Registers IAttributeStore implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAttributeStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsusedefaultattributetypefactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultAttributeTypeFactories(this IContainer) Method","text":"<p>Registers factories for types and stores related to time series attribute types with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAttributeTypeFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#containerextensionsusedefaultattributetypestoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultAttributeTypeStores(this IContainer) Method","text":"<p>Registers IAttributeTypeStore implementations for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAttributeTypeStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the AttributeType stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattribute_resource_type-field","title":"ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of attribute resources.</p> C#<pre><code>public const string ATTRIBUTE_RESOURCE_TYPE = Attribute;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattribute_type_resource_type-field","title":"ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of attribute type resources.</p> C#<pre><code>public const string ATTRIBUTE_TYPE_RESOURCE_TYPE = AttributeType;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#field-value_1","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributeresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.AttributeResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new attribute IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributeresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.AttributeResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new attribute IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributeresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.AttributeResource(this IResourceFactory, string) Method","text":"<p>Creates a new attribute IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_2","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_2","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributeresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.AttributeResource(this IResourceFactory) Method","text":"<p>Creates a new attribute IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_3","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_3","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributetyperesourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.AttributeTypeResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new attribute type IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeTypeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_4","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_4","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_TYPE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributetyperesourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.AttributeTypeResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new attribute type IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeTypeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_5","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_5","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_TYPE_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributetyperesourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.AttributeTypeResource(this IResourceFactory, string) Method","text":"<p>Creates a new attribute type IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeTypeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_6","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_6","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_TYPE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributetyperesourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.AttributeTypeResource(this IResourceFactory) Method","text":"<p>Creates a new attribute type IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeTypeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#parameters_7","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/ResourceFactoryExtensions/#returns_7","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_TYPE_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/","title":"HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/#hakomtsmnetapiattributesextensionsnodes-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes Namespace","text":"Classes ContainerExtensions Provides extension methods for registering interface implementations of Nodes with the container."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods for registering interface implementations of Nodes with the container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#containerextensionsusedefaultnodefactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultNodeFactories(this IContainer) Method","text":"<p>Registers factories for types and stores related to nodes with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultNodeFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#containerextensionsusedefaultnodestoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultNodeStores(this IContainer) Method","text":"<p>Registers INodeStore implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultNodeStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the node stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#containerextensionsusenodestoretstorageprovidertnodestorethis-icontainer-method","title":"ContainerExtensions.UseNodeStore&lt;TStorageProvider,TNodeStore&gt;(this IContainer) Method","text":"<p>Registers an INodeStore implementation with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseNodeStore&lt;TStorageProvider,TNodeStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TNodeStore : class, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the node store.</p> <p></p> <p><code>TNodeStore</code></p> <p>The class of the node store which implements the INodeStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the node store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Extensions/Nodes/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/","title":"HAKOM.TSM.Net.Api.Attributes.Nodes","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/#hakomtsmnetapiattributesnodes-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Nodes Namespace","text":"Interfaces INode A simple interface describing the relevant fields of a Node. INodeFactory Used to create INode objects."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/","title":"INode","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#inode-interface","title":"INode Interface","text":"<p>A simple interface describing the relevant fields of a Node.</p> C#<pre><code>public interface INode :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;\n</code></pre> <p>Implements System.IEquatable&lt;INode&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#inodechildren-property","title":"INode.Children Property","text":"<p>Provides a read-only dictionary mapping child node names to their references.  </p> <ul> <li>Key: Child node name (System.String) </li> <li>Value: Reference to the child node (INodeReference)  </li> </ul> <p>Returns an empty dictionary if the node has no children.</p> C#<pre><code>System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Children { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,INodeReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#inodename-property","title":"INode.Name Property","text":"<p>Gets the name of the Node.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#inodeparent-property","title":"INode.Parent Property","text":"<p>Gets the reference to the parent of the node or null if the node does not have a parent.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? Parent { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#property-value_2","title":"Property Value","text":"<p>INodeReference</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#inoderoot-property","title":"INode.Root Property","text":"<p>Gets the reference to the root attribute associated with the node.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference Root { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INode/#property-value_3","title":"Property Value","text":"<p>IAttributeReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/","title":"INodeFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#inodefactory-interface","title":"INodeFactory Interface","text":"<p>Used to create INode objects.</p> C#<pre><code>public interface INodeFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#inodefactorycreatestring-inodereference-iattributereference-ireadonlydictionarystringinodereference-method","title":"INodeFactory.Create(string, INodeReference, IAttributeReference, IReadOnlyDictionary&lt;string,INodeReference&gt;) Method","text":"<p>Create an attribute with the given name, parent, root, children.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.INode Create(string name, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parent, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference root, System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; children);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new Node.</p> <p></p> <p><code>parent</code> INodeReference</p> <p>The reference referring the INodeReference of the new Node.</p> <p></p> <p><code>root</code> IAttributeReference</p> <p>The reference referring the IAttributeReference of the new Node.</p> <p></p> <p><code>children</code> System.Collections.Generic.IReadOnlyDictionary&lt;System.String,INodeReference&gt;</p> <p>Dictionary of the references referring the INodeReference              children of the new Node.              - Key: Child node name (System.String)             - Value: Reference to the child node (INodeReference)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#returns","title":"Returns","text":"<p>INode A new INode.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#inodefactorycreatestring-inodereference-iattributereference-method","title":"INodeFactory.Create(string, INodeReference, IAttributeReference) Method","text":"<p>Create an attribute with the given name, parent, root.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.INode Create(string name, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parent, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference root);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new Node.</p> <p></p> <p><code>parent</code> INodeReference</p> <p>The reference referring the INodeReference of the new Node.</p> <p></p> <p><code>root</code> IAttributeReference</p> <p>The reference referring the IAttributeReference of the new Node.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#returns_1","title":"Returns","text":"<p>INode A new INode.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#inodefactorytrycreatestring-inodereference-iattributereference-ireadonlydictionarystringinodereference-method","title":"INodeFactory.TryCreate(string, INodeReference, IAttributeReference, IReadOnlyDictionary&lt;string,INodeReference&gt;) Method","text":"<p>Attempts to create an attribute with the given name, parent, root, children.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt; TryCreate(string name, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parent, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference root, System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; children);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#parameters_2","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new Node.</p> <p></p> <p><code>parent</code> INodeReference</p> <p>The reference referring the INodeReference of the new Node.</p> <p></p> <p><code>root</code> IAttributeReference</p> <p>The reference referring the IAttributeReference of the new Node.</p> <p></p> <p><code>children</code> System.Collections.Generic.IReadOnlyDictionary&lt;System.String,INodeReference&gt;</p> <p>Dictionary of the references referring the INodeReference              children of the new Node.              - Key: Child node name (System.String)             - Value: Reference to the child node (INodeReference)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INode&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created INode.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#inodefactorytrycreatestring-inodereference-iattributereference-method","title":"INodeFactory.TryCreate(string, INodeReference, IAttributeReference) Method","text":"<p>Attempts to create an attribute with the given name, parent, root.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt; TryCreate(string name, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parent, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference root);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#parameters_3","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the new Node.</p> <p></p> <p><code>parent</code> INodeReference</p> <p>The reference referring the INodeReference of the new Node.</p> <p></p> <p><code>root</code> IAttributeReference</p> <p>The reference referring the IAttributeReference of the new Node.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INode&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created INode.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/INodeFactory/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/#hakomtsmnetapiattributesnodesextensions-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions Namespace","text":"Classes ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsnode_resource_type-field","title":"ResourceFactoryExtensions.NODE_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of node resources.</p> C#<pre><code>public const string NODE_RESOURCE_TYPE = Node;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsnoderesourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.NodeResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new node IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource NodeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to NODE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsnoderesourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.NodeResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new node IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource NodeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to NODE_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsnoderesourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.NodeResource(this IResourceFactory, string) Method","text":"<p>Creates a new node IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource NodeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#parameters_2","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#returns_2","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to NODE_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsnoderesourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.NodeResource(this IResourceFactory) Method","text":"<p>Creates a new node IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource NodeResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#parameters_3","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Extensions/ResourceFactoryExtensions/#returns_3","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to NODE_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/#hakomtsmnetapiattributesnodespersistence-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence Namespace","text":"Interfaces INodeSearchParameters Defines parameters for searching nodes. INodeSearchParametersFactory Used to create INodeSearchParameters objects. INodeStore Used to find, load, save or delete INodes. Should only be instantiated by an INodeStoreFactory. INodeStore&lt;TIdentifier&gt; Used to find, load, save or delete INodes. Should only be instantiated by an INodeStoreFactory. INodeStoreFactory Used to create INodeStore objects."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/","title":"INodeSearchParameters","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#inodesearchparameters-interface","title":"INodeSearchParameters Interface","text":"<p>Defines parameters for searching nodes.</p> C#<pre><code>public interface INodeSearchParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#inodesearchparametersname-property","title":"INodeSearchParameters.Name Property","text":"<p>Filter for INode by their Name. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#inodesearchparametersparent-property","title":"INodeSearchParameters.Parent Property","text":"<p>Filter for INode by their Parent.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? Parent { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#property-value_1","title":"Property Value","text":"<p>INodeReference</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#inodesearchparametersroot-property","title":"INodeSearchParameters.Root Property","text":"<p>Filter for INode by their Root.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference? Root { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParameters/#property-value_2","title":"Property Value","text":"<p>IAttributeReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/","title":"INodeSearchParametersFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/#inodesearchparametersfactory-interface","title":"INodeSearchParametersFactory Interface","text":"<p>Used to create INodeSearchParameters objects.</p> C#<pre><code>public interface INodeSearchParametersFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/#inodesearchparametersfactorycreatestring-iattributereference-inodereference-method","title":"INodeSearchParametersFactory.Create(string, IAttributeReference, INodeReference) Method","text":"<p>Used to create INodeSearchParameters objects with the given name, root and parent.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters Create(string? name=null, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference? root=null, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parent=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the new INodeSearchParameters object.</p> <p></p> <p><code>root</code> IAttributeReference</p> <p>The IAttributeReference root of the new INodeSearchParameters object.</p> <p></p> <p><code>parent</code> INodeReference</p> <p>The INodeReference parent of the new INodeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeSearchParametersFactory/#returns","title":"Returns","text":"<p>INodeSearchParameters A new INodeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/","title":"INodeStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestore-interface","title":"INodeStore Interface","text":"<p>Used to find, load, save or delete INodes. Should only be instantiated by an INodeStoreFactory.</p> C#<pre><code>public interface INodeStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 INodeStore&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoresearchparameters-property","title":"INodeStore.SearchParameters Property","text":"<p>Gets the INodeSearchParametersFactory for creating new search parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParametersFactory SearchParameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#property-value","title":"Property Value","text":"<p>INodeSearchParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoredeleteiattributereference-cancellationtoken-method","title":"INodeStore.Delete(IAttributeReference, CancellationToken) Method","text":"<p>Deletes all INode with the given rootReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference rootReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters","title":"Parameters","text":"<p><code>rootReference</code> IAttributeReference</p> <p>The root of the nodes which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating that the process is finished.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestorefindinodesearchparameters-rangeinode-ienumerableorderinode-cancellationtoken-method","title":"INodeStore.Find(INodeSearchParameters, Range&lt;INode&gt;, IEnumerable&lt;Order&lt;INode&gt;&gt;, CancellationToken) Method","text":"<p>Finds INode objects by the given INodeSearchParameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Find(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters? searchParameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_1","title":"Parameters","text":"<p><code>searchParameters</code> INodeSearchParameters</p> <p>The INodeSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;INode&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;INode&gt;&gt;</p> <p>A collection of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;INodeReference&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#remarks","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoreloadinodereference-cancellationtoken-method","title":"INodeStore.Load(INodeReference, CancellationToken) Method","text":"<p>Uses the given reference to load the INode it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Load(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference reference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_2","title":"Parameters","text":"<p><code>reference</code> INodeReference</p> <p>The reference to the INodeReference of the node to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the desired node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoreloadiattributereference-inodereference-string-cancellationtoken-method","title":"INodeStore.Load(IAttributeReference, INodeReference, string, CancellationToken) Method","text":"<p>Uses the given parameters to load the INode it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference rootReference, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parentReference, string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_3","title":"Parameters","text":"<p><code>rootReference</code> IAttributeReference</p> <p>The reference to the IAttributeReference which is the root of the node to be loaded.</p> <p></p> <p><code>parentReference</code> INodeReference</p> <p>The reference to the parent of the INode which will be loaded.</p> <p></p> <p><code>name</code> System.String</p> <p>The name of the node which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the desired node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoresaveinode-cancellationtoken-method","title":"INodeStore.Save(INode, CancellationToken) Method","text":"<p>Persists the given INode to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Save(HAKOM.TSM.Net.Api.Attributes.Nodes.INode node, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_4","title":"Parameters","text":"<p><code>node</code> INode</p> <p>The node which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretrydeleteiattributereference-cancellationtoken-method","title":"INodeStore.TryDelete(IAttributeReference, CancellationToken) Method","text":"<p>Attempts to delete the INode with the given rootReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference rootReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_5","title":"Parameters","text":"<p><code>rootReference</code> IAttributeReference</p> <p>The root of the nodes which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating that the process is finished.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#remarks_1","title":"Remarks","text":"<p>The Result contains an error, when the operation fails.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretryfindinodesearchparameters-rangeinode-ienumerableorderinode-cancellationtoken-method","title":"INodeStore.TryFind(INodeSearchParameters, Range&lt;INode&gt;, IEnumerable&lt;Order&lt;INode&gt;&gt;, CancellationToken) Method","text":"<p>Finds INode objects by the given INodeSearchParameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryFind(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters? searchParameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_6","title":"Parameters","text":"<p><code>searchParameters</code> INodeSearchParameters</p> <p>The INodeSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;INode&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;INode&gt;&gt;</p> <p>A collection of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_6","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of Result&lt;TValue&gt; .</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#remarks_2","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretryloadinodereference-cancellationtoken-method","title":"INodeStore.TryLoad(INodeReference, CancellationToken) Method","text":"<p>Attempts to use the given reference to load the INode it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference reference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_7","title":"Parameters","text":"<p><code>reference</code> INodeReference</p> <p>The reference to the INodeReference of the node to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretryloadiattributereference-inodereference-string-cancellationtoken-method","title":"INodeStore.TryLoad(IAttributeReference, INodeReference, string, CancellationToken) Method","text":"<p>Attempts to use the given parameters to load the INode it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference rootReference, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? parentReference, string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_8","title":"Parameters","text":"<p><code>rootReference</code> IAttributeReference</p> <p>The reference to the IAttributeReference which is the root of the node to be loaded.</p> <p></p> <p><code>parentReference</code> INodeReference</p> <p>The reference to the parent of the INode which will be loaded.</p> <p></p> <p><code>name</code> System.String</p> <p>The name of the node which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretrysaveinode-cancellationtoken-method","title":"INodeStore.TrySave(INode, CancellationToken) Method","text":"<p>Attempts to persist the given INode to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.Attributes.Nodes.INode node, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_9","title":"Parameters","text":"<p><code>node</code> INode</p> <p>The node which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the persisted node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoretryupdateinodereference-inode-cancellationtoken-method","title":"INodeStore.TryUpdate(INodeReference, INode, CancellationToken) Method","text":"<p>Attempts to modify the given oldNode with the modifiedNode and persist it to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryUpdate(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference oldNode, HAKOM.TSM.Net.Api.Attributes.Nodes.INode modifiedNode, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_10","title":"Parameters","text":"<p><code>oldNode</code> INodeReference</p> <p>The node which will be updated with the modifiedNode.</p> <p></p> <p><code>modifiedNode</code> INode</p> <p>The node which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#inodestoreupdateinodereference-inode-cancellationtoken-method","title":"INodeStore.Update(INodeReference, INode, CancellationToken) Method","text":"<p>Modifies the given oldNode with the modifiedNode and persist it to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Update(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference oldNode, HAKOM.TSM.Net.Api.Attributes.Nodes.INode modifiedNode, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#parameters_11","title":"Parameters","text":"<p><code>oldNode</code> INodeReference</p> <p>The node which will be updated with the modifiedNode.</p> <p></p> <p><code>modifiedNode</code> INode</p> <p>The node which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted node.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/","title":"INodeStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#inodestorefactory-interface","title":"INodeStoreFactory Interface","text":"<p>Used to create INodeStore objects.</p> C#<pre><code>public interface INodeStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#inodestorefactorycreateistorageprovider-cancellationtoken-method","title":"INodeStoreFactory.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an INodeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created INodeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#inodestorefactorytrycreateistorageprovider-cancellationtoken-method","title":"INodeStoreFactory.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Attempts to create an instance of an INodeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created INodeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/","title":"INodeStore&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestoretidentifier-interface","title":"INodeStore&lt;TIdentifier&gt; Interface","text":"<p>Used to find, load, save or delete INodes. Should only be instantiated by an INodeStoreFactory.</p> C#<pre><code>public interface INodeStore&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to INode objects.</p> <p>Implements INodeStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestorereferences-property","title":"INodeStore.References Property <p>Gets a factory used to create INodeReference&lt;TIdentifier&gt; objects.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory&lt;TIdentifier&gt; References { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory&lt;TIdentifier&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestoretidentifierloadtidentifier-cancellationtoken-method","title":"INodeStore&lt;TIdentifier&gt;.Load(TIdentifier, CancellationToken) Method <p>Loads the INodeReference with the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Load(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#parameters","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the node in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing an INodeReference to              the desired INode.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestoretidentifiertryloadtidentifier-cancellationtoken-method","title":"INodeStore&lt;TIdentifier&gt;.TryLoad(TIdentifier, CancellationToken) Method <p>Attempts to load the INodeReference with the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryLoad(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the node in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired Node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestoretidentifiertryupdatetidentifier-inode-cancellationtoken-method","title":"INodeStore&lt;TIdentifier&gt;.TryUpdate(TIdentifier, INode, CancellationToken) Method <p>Attempts to modify INode in the repository identified by identifier using the data from the provided node.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt;&gt; TryUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.Nodes.INode node, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the node in the repository.</p> <p></p> <p><code>node</code> INode</p> <p>The INode which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the persisted node.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#inodestoretidentifierupdatetidentifier-inode-cancellationtoken-method","title":"INodeStore&lt;TIdentifier&gt;.Update(TIdentifier, INode, CancellationToken) Method <p>Modifies the given INode in the repository identified by identifier using the data from the provided node.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&gt; Update(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.Nodes.INode node, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the node in the repository.</p> <p></p> <p><code>node</code> INode</p> <p>The INode which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/INodeStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted node.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/#hakomtsmnetapiattributesnodespersistencereferences-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References Namespace","text":"Interfaces INodeReference Represents a reference to a node that is stored permanently in some repository INodeReference&lt;TIdentifier&gt; Represents a reference to a node permanently stored in a repository and uniquely identified by a specific identifier in a repository.. INodeReferenceFactory&lt;TIdentifier&gt; A factory for creating INodeReference&lt;TIdentifier&gt; objects."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReference/","title":"INodeReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReference/#inodereference-interface","title":"INodeReference Interface","text":"<p>Represents a reference to a node that is stored permanently in some repository</p> C#<pre><code>public interface INodeReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;,\nSystem.IFormattable,\nSystem.IComparable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;\n</code></pre> <p>Derived \u21b3 INodeReference&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;INode&gt;, IReference, System.IEquatable&lt;INodeReference&gt;, System.IFormattable, System.IComparable&lt;INodeReference&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/","title":"INodeReferenceFactory&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifier-interface","title":"INodeReferenceFactory&lt;TIdentifier&gt; Interface","text":"<p>A factory for creating INodeReference&lt;TIdentifier&gt; objects.</p> C#<pre><code>public interface INodeReferenceFactory&lt;TIdentifier&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to IAttribute objects.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifierconfigureinodestoretidentifier-method","title":"INodeReferenceFactory&lt;TIdentifier&gt;.Configure(INodeStore&lt;TIdentifier&gt;) Method","text":"<p>Configures the INodeReferenceFactory&lt;TIdentifier&gt; for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&lt;TIdentifier&gt; NodeStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>NodeStore</code> HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&lt;TIdentifier&gt;</p> <p>The INodeStore&lt;TIdentifier&gt; for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifiercreatetidentifier-inode-method","title":"INodeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier, INode) Method","text":"<p>Creates a INodeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt; Create(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.Nodes.INode node);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  INodeReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>node</code> INode</p> <p>The INode associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt; The created INodeReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifiercreatetidentifier-method","title":"INodeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier) Method","text":"<p>Creates a INodeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt; Create(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the INodeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt; The created INodeReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifiertrycreatetidentifier-inode-method","title":"INodeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier, INode) Method","text":"<p>Tries to create a INodeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.Nodes.INode node);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  INodeReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>node</code> INode</p> <p>The INode associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created INodeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#inodereferencefactorytidentifiertrycreatetidentifier-method","title":"INodeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier) Method","text":"<p>Tries to create a INodeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  INodeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created INodeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceFactoryOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceOf1/","title":"INodeReference&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceOf1/#inodereferencetidentifier-interface","title":"INodeReference&lt;TIdentifier&gt; Interface","text":"<p>Represents a reference to a node permanently stored in a repository and uniquely identified by a specific identifier in a repository..</p> C#<pre><code>public interface INodeReference&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;,\nSystem.IFormattable,\nSystem.IComparable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier, HAKOM.TSM.Net.Api.Attributes.Nodes.INode&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Nodes/Persistence/References/INodeReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to an INode object.</p> <p>Implements INodeReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;INode&gt;, IReference, System.IEquatable&lt;INodeReference&gt;, System.IFormattable, System.IComparable&lt;INodeReference&gt;, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier,INode&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference&lt;TIdentifier&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/","title":"HAKOM.TSM.Net.Api.Attributes.Persistence","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/#hakomtsmnetapiattributespersistence-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Persistence Namespace","text":"Interfaces IAttributeSearchParameters Defines parameters for searching attributes. IAttributeSearchParametersFactory Used to create IAttributeSearchParameters objects. IAttributeStore Used to find, load, save or delete IAttributes. Should only be instantiated by an IAttributeStoreFactory. IAttributeStore&lt;TIdentifier&gt; Used to find, load, save or delete IAttributes. Should only be instantiated by an IAttributeStoreFactory. IAttributeStoreFactory Used to create IAttributeStore objects. IAttributeTypeStore A store to manage attribute types. Should only be instantiated by an IAttributeTypeStoreFactory. IAttributeTypeStore&lt;TIdentifier&gt; A store to manage IAttributeType. Should only be instantiated by an IAttributeTypeStoreFactory. IAttributeTypeStoreFactory A factory used to create instances of IAttributeTypeStore."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/","title":"IAttributeSearchParameters","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#iattributesearchparameters-interface","title":"IAttributeSearchParameters Interface","text":"<p>Defines parameters for searching attributes.</p> C#<pre><code>public interface IAttributeSearchParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#iattributesearchparametersdescription-property","title":"IAttributeSearchParameters.Description Property","text":"<p>Filter for IAttribute by their Description. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? Description { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#iattributesearchparametersname-property","title":"IAttributeSearchParameters.Name Property","text":"<p>Filter for IAttribute by their Name. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#iattributesearchparameterstype-property","title":"IAttributeSearchParameters.Type Property","text":"<p>Filter for IAttribute by their Type.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference? Type { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParameters/#property-value_2","title":"Property Value","text":"<p>IAttributeTypeReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/","title":"IAttributeSearchParametersFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/#iattributesearchparametersfactory-interface","title":"IAttributeSearchParametersFactory Interface","text":"<p>Used to create IAttributeSearchParameters objects.</p> C#<pre><code>public interface IAttributeSearchParametersFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/#iattributesearchparametersfactorycreatestring-string-iattributetypereference-method","title":"IAttributeSearchParametersFactory.Create(string, string, IAttributeTypeReference) Method","text":"<p>Used to create IAttributeSearchParameters objects with the given name, description and type.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters Create(string? name=null, string? description=null, HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference? type=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the new IAttributeSearchParameters object.</p> <p></p> <p><code>description</code> System.String</p> <p>The description of the new IAttributeSearchParameters object.</p> <p></p> <p><code>type</code> IAttributeTypeReference</p> <p>The IAttributeTypeReference of the new  IAttributeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeSearchParametersFactory/#returns","title":"Returns","text":"<p>IAttributeSearchParameters A new IAttributeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/","title":"IAttributeStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestore-interface","title":"IAttributeStore Interface","text":"<p>Used to find, load, save or delete IAttributes. Should only be instantiated by an IAttributeStoreFactory.</p> C#<pre><code>public interface IAttributeStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 IAttributeStore&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoresearchparameters-property","title":"IAttributeStore.SearchParameters Property","text":"<p>Gets the IAttributeSearchParametersFactory for creating new search parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParametersFactory SearchParameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#property-value","title":"Property Value","text":"<p>IAttributeSearchParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoredeleteiattributereference-cancellationtoken-method","title":"IAttributeStore.Delete(IAttributeReference, CancellationToken) Method","text":"<p>Deletes the IAttribute referred to by the given attributeReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters","title":"Parameters","text":"<p><code>attributeReference</code> IAttributeReference</p> <p>An IAttributeReference to the IAttribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating that the process is finished.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoredeletestring-cancellationtoken-method","title":"IAttributeStore.Delete(string, CancellationToken) Method","text":"<p>Deletes the IAttribute with the given name from the repository.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating that the process is finished.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestorefindiattributesearchparameters-rangeiattribute-ienumerableorderiattribute-cancellationtoken-method","title":"IAttributeStore.Find(IAttributeSearchParameters, Range&lt;IAttribute&gt;, IEnumerable&lt;Order&lt;IAttribute&gt;&gt;, CancellationToken) Method","text":"<p>Finds IAttribute objects by the given IAttributeSearchParameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; Find(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters? searchParameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_2","title":"Parameters","text":"<p><code>searchParameters</code> IAttributeSearchParameters</p> <p>The IAttributeSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;IAttribute&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;IAttribute&gt;&gt;</p> <p>A collection of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAttributeReference&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#remarks","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoreloadiattributereference-cancellationtoken-method","title":"IAttributeStore.Load(IAttributeReference, CancellationToken) Method","text":"<p>Uses the given attributeReference to load the IAttribute it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_3","title":"Parameters","text":"<p><code>attributeReference</code> IAttributeReference</p> <p>The reference to the IAttribute which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the desired attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoreloadstring-cancellationtoken-method","title":"IAttributeStore.Load(string, CancellationToken) Method","text":"<p>Loads a single IAttribute from storage, if one with the given name exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; Load(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_4","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the attribute.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the desired attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoresaveiattribute-cancellationtoken-method","title":"IAttributeStore.Save(IAttribute, CancellationToken) Method","text":"<p>Persists the given IAttribute to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; Save(HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_5","title":"Parameters","text":"<p><code>attribute</code> IAttribute</p> <p>The attribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoresaveorupdateiattribute-cancellationtoken-method","title":"IAttributeStore.SaveOrUpdate(IAttribute, CancellationToken) Method","text":"<p>Persists the given IAttribute to the repository or updates it, if it already exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_6","title":"Parameters","text":"<p><code>attribute</code> IAttribute</p> <p>The attribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretrydeleteiattributereference-cancellationtoken-method","title":"IAttributeStore.TryDelete(IAttributeReference, CancellationToken) Method","text":"<p>Attempts to delete the IAttribute referred to by the given attributeReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_7","title":"Parameters","text":"<p><code>attributeReference</code> IAttributeReference</p> <p>An IAttributeReference to the IAttribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating that the process is finished.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#remarks_1","title":"Remarks","text":"<p>The Result contains an error, when the operation fails.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretrydeletestring-cancellationtoken-method","title":"IAttributeStore.TryDelete(string, CancellationToken) Method","text":"<p>Attempts to delete the IAttribute with the given name from the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_8","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating that the process is finished.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#remarks_2","title":"Remarks","text":"<p>The Result contains an error, when the operation fails.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretryfindiattributesearchparameters-rangeiattribute-ienumerableorderiattribute-cancellationtoken-method","title":"IAttributeStore.TryFind(IAttributeSearchParameters, Range&lt;IAttribute&gt;, IEnumerable&lt;Order&lt;IAttribute&gt;&gt;, CancellationToken) Method","text":"<p>Finds IAttribute objects by the given IAttributeSearchParameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TryFind(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters? searchParameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_9","title":"Parameters","text":"<p><code>searchParameters</code> IAttributeSearchParameters</p> <p>The IAttributeSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;IAttribute&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;IAttribute&gt;&gt;</p> <p>A collection of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_9","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of Result&lt;TValue&gt; .</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#remarks_3","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretryloadiattributereference-cancellationtoken-method","title":"IAttributeStore.TryLoad(IAttributeReference, CancellationToken) Method","text":"<p>Attempts to use the given attributeReference to load the IAttribute it refers to.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_10","title":"Parameters","text":"<p><code>attributeReference</code> IAttributeReference</p> <p>The reference to the IAttribute which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretryloadstring-cancellationtoken-method","title":"IAttributeStore.TryLoad(string, CancellationToken) Method","text":"<p>Attempts to load a single IAttribute from storage, if one with the given name exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_11","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the attribute.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretrysaveiattribute-cancellationtoken-method","title":"IAttributeStore.TrySave(IAttribute, CancellationToken) Method","text":"<p>Attempts to persist the given IAttribute to the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_12","title":"Parameters","text":"<p><code>attribute</code> IAttribute</p> <p>The attribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the persisted attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#iattributestoretrysaveorupdateiattribute-cancellationtoken-method","title":"IAttributeStore.TrySaveOrUpdate(IAttribute, CancellationToken) Method","text":"<p>Attempts to persist the given IAttribute to the repository or updates it, if it already exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#parameters_13","title":"Parameters","text":"<p><code>attribute</code> IAttribute</p> <p>The attribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStore/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the persisted attribute.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/","title":"IAttributeStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#iattributestorefactory-interface","title":"IAttributeStoreFactory Interface","text":"<p>Used to create IAttributeStore objects.</p> C#<pre><code>public interface IAttributeStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#iattributestorefactorycreateistorageprovider-iattributetypestore-cancellationtoken-method","title":"IAttributeStoreFactory.Create(IStorageProvider, IAttributeTypeStore, CancellationToken) Method","text":"<p>Creates an instance of an IAttributeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore attributeTypeStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>attributeTypeStore</code> IAttributeTypeStore</p> <p>The IAttributeTypeStore used for creating attribute type references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IAttributeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#iattributestorefactorytrycreateistorageprovider-iattributetypestore-cancellationtoken-method","title":"IAttributeStoreFactory.TryCreate(IStorageProvider, IAttributeTypeStore, CancellationToken) Method","text":"<p>Tries to create an instance of an IAttributeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore attributeTypeStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>attributeTypeStore</code> IAttributeTypeStore</p> <p>The IAttributeTypeStore used for creating attribute type references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/","title":"IAttributeStore&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifier-interface","title":"IAttributeStore&lt;TIdentifier&gt; Interface","text":"<p>Used to find, load, save or delete IAttributes. Should only be instantiated by an IAttributeStoreFactory.</p> C#<pre><code>public interface IAttributeStore&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to IAttribute objects.</p> <p>Implements IAttributeStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestorereferences-property","title":"IAttributeStore.References Property <p>Gets a factory used to create IAttributeReference&lt;TIdentifier&gt; objects.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory&lt;TIdentifier&gt; References { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory&lt;TIdentifier&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifierdeleteiattributereferencetidentifier-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.Delete(IAttributeReference&lt;TIdentifier&gt;, CancellationToken) Method <p>Deletes the IAttribute referred to by the given attributeReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters","title":"Parameters","text":"<p><code>attributeReference</code> HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;</p> <p>An IAttributeReference&lt;TIdentifier&gt; to the IAttribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task indicating that the process is finished.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifierloadtidentifier-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.Load(TIdentifier, CancellationToken) Method <p>Loads the IAttributeReference with the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; Load(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the attribute in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing an IAttributeReference to              the desired IAttribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifiersaveorupdatetidentifier-iattribute-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.SaveOrUpdate(TIdentifier, IAttribute, CancellationToken) Method <p>Persists the given IAttribute to the repository or updates it, if it already exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt; SaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the attribute in the repository.</p> <p></p> <p><code>attribute</code> IAttribute</p> <p>The IAttribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing a reference to the persisted attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifiertrydeleteiattributereferencetidentifier-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.TryDelete(IAttributeReference&lt;TIdentifier&gt;, CancellationToken) Method <p>Attempts to delete the IAttribute referred to by the given attributeReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; attributeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>attributeReference</code> HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;</p> <p>An IAttributeReference&lt;TIdentifier&gt; to the IAttribute which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; indicating that the process is finished.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#remarks","title":"Remarks","text":"<p>The Result contains an error, when the operation fails.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifiertryloadtidentifier-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.TryLoad(TIdentifier, CancellationToken) Method <p>Attempts to load the IAttributeReference with the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TryLoad(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the attribute in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the desired attribute.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#iattributestoretidentifiertrysaveorupdatetidentifier-iattribute-cancellationtoken-method","title":"IAttributeStore&lt;TIdentifier&gt;.TrySaveOrUpdate(TIdentifier, IAttribute, CancellationToken) Method <p>Attempts to persist the given IAttribute to the repository or updates it, if it already exists.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;&gt; TrySaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttribute attribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#parameters_5","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The unique identifier of the attribute in the repository.</p> <p></p> <p><code>attribute</code> IAttribute</p> <p>The IAttribute which will be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeStoreOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a reference to the persisted attribute.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/","title":"IAttributeTypeStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestore-interface","title":"IAttributeTypeStore Interface","text":"<p>A store to manage attribute types. Should only be instantiated by an IAttributeTypeStoreFactory.</p> C#<pre><code>public interface IAttributeTypeStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 IAttributeTypeStore&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoredeleteiattributetypereference-cancellationtoken-method","title":"IAttributeTypeStore.Delete(IAttributeTypeReference, CancellationToken) Method","text":"<p>Deletes the IAttributeType by the given attributeTypeReference.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference attributeTypeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters","title":"Parameters","text":"<p><code>attributeTypeReference</code> IAttributeTypeReference</p> <p>The reference of the attribute type to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoredeletestring-cancellationtoken-method","title":"IAttributeTypeStore.Delete(string, CancellationToken) Method","text":"<p>Deletes the IAttributeType with the specified name.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute type to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestorefindcancellationtoken-method","title":"IAttributeTypeStore.Find(CancellationToken) Method","text":"<p>Finds all currently available IAttributeType as IAttributeTypeReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAttributeTypeReference&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available attribute types.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoreloadiattributetypereference-cancellationtoken-method","title":"IAttributeTypeStore.Load(IAttributeTypeReference, CancellationToken) Method","text":"<p>Loads the IAttributeType as IAttributeTypeReference by the specified attributeTypeReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference attributeTypeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_3","title":"Parameters","text":"<p><code>attributeTypeReference</code> IAttributeTypeReference</p> <p>The reference of the attribute type (IAttributeTypeReference) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeReference&gt; A System.Threading.Tasks.Task containing the IAttributeTypeReference object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoreloadstring-cancellationtoken-method","title":"IAttributeTypeStore.Load(string, CancellationToken) Method","text":"<p>Loads the IAttributeType as IAttributeTypeReference with the specified name.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Load(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_4","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute type to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing the requested attribute type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoresaveiattributetype-cancellationtoken-method","title":"IAttributeTypeStore.Save(IAttributeType, CancellationToken) Method","text":"<p>Saves the provided IAttributeType.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Save(HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_5","title":"Parameters","text":"<p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeReference&gt; A System.Threading.Tasks.Task containing the saved IAttributeTypeReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretrydeleteiattributetypereference-cancellationtoken-method","title":"IAttributeTypeStore.TryDelete(IAttributeTypeReference, CancellationToken) Method","text":"<p>Attempts to delete the IAttributeType by the given attributeTypeReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference attributeTypeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_6","title":"Parameters","text":"<p><code>attributeTypeReference</code> IAttributeTypeReference</p> <p>The reference of the attribute type to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretrydeletestring-cancellationtoken-method","title":"IAttributeTypeStore.TryDelete(string, CancellationToken) Method","text":"<p>Attempts to delete the IAttributeTypewith the specified name.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_7","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute type to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretryfindcancellationtoken-method","title":"IAttributeTypeStore.TryFind(CancellationToken) Method","text":"<p>Attempts to find all currently available IAttributeType as IAttributeTypeReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_8","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available attribute types in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretryloadiattributetypereference-cancellationtoken-method","title":"IAttributeTypeStore.TryLoad(IAttributeTypeReference, CancellationToken) Method","text":"<p>Attempts to load the IAttributeType as IAttributeTypeReference by the specified attributeTypeReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference attributeTypeReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_9","title":"Parameters","text":"<p><code>attributeTypeReference</code> IAttributeTypeReference</p> <p>The reference of the attribute type (IAttributeTypeReference) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing              the IAttributeTypeReference object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretryloadstring-cancellationtoken-method","title":"IAttributeTypeStore.TryLoad(string, CancellationToken) Method","text":"<p>Attempts to load the IAttributeType as IAttributeTypeReference with the specified name.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_10","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the attribute type to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the requested IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#iattributetypestoretrysaveiattributetype-cancellationtoken-method","title":"IAttributeTypeStore.TrySave(IAttributeType, CancellationToken) Method","text":"<p>Attempts to save a provided IAttributeType.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#parameters_11","title":"Parameters","text":"<p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the saved IAttributeTypeReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStore/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/","title":"IAttributeTypeStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#iattributetypestorefactory-interface","title":"IAttributeTypeStoreFactory Interface","text":"<p>A factory used to create instances of IAttributeTypeStore.</p> C#<pre><code>public interface IAttributeTypeStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#iattributetypestorefactorycreateistorageprovider-cancellationtoken-method","title":"IAttributeTypeStoreFactory.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an IAttributeTypeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IAttributeTypeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#iattributetypestorefactorytrycreateistorageprovider-cancellationtoken-method","title":"IAttributeTypeStoreFactory.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Attempts to create an instance of an IAttributeTypeStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeTypeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/","title":"IAttributeTypeStore&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifier-interface","title":"IAttributeTypeStore&lt;TIdentifier&gt; Interface","text":"<p>A store to manage IAttributeType. Should only be instantiated by an IAttributeTypeStoreFactory.</p> C#<pre><code>public interface IAttributeTypeStore&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>Implements IAttributeTypeStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestorereferences-property","title":"IAttributeTypeStore.References Property <p>The IAttributeTypeReferenceFactory&lt;TIdentifier&gt; which can create a reference to an IAttributeType.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory&lt;TIdentifier&gt; References { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory&lt;TIdentifier&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifierdeletetidentifier-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.Delete(TIdentifier, CancellationToken) Method <p>Deletes a IAttributeType from the repository based on the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the IAttributeType to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifierloadtidentifier-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.Load(TIdentifier, CancellationToken) Method <p>Loads theIAttributeType as IAttributeTypeReference with the specified identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Load(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the attribute type.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeReference&gt; A reference to the IAttributeType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifiertrydeletetidentifier-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.TryDelete(TIdentifier, CancellationToken) Method <p>Attempts to delete a IAttributeType from the repository based on the specified identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the IAttributeType to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifiertryloadtidentifier-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.TryLoad(TIdentifier, CancellationToken) Method <p>Attempts to load theIAttributeType as IAttributeTypeReference with the specified identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TryLoad(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the attribute type.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; A Result&lt;TValue&gt; containing the reference to the IAttributeType object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifiertryupdatetidentifier-iattributetype-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.TryUpdate(TIdentifier, IAttributeType, CancellationToken) Method <p>Attempts to update the IAttributeType with the specified identifier by the provided IAttributeType data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;&gt; TryUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the IAttributeType to update.</p> <p></p> <p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt;&gt; A Result&lt;TValue&gt; containing the reference to the IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#iattributetypestoretidentifierupdatetidentifier-iattributetype-cancellationtoken-method","title":"IAttributeTypeStore&lt;TIdentifier&gt;.Update(TIdentifier, IAttributeType, CancellationToken) Method <p>Updates the IAttributeType with the specified identifier by the provided IAttributeType data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; Update(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#parameters_5","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the IAttributeType to update.</p> <p></p> <p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/IAttributeTypeStoreOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeReference&gt; A reference to the updated IAttributeType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/#hakomtsmnetapiattributespersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions Namespace","text":"Classes AttributeNameAlreadyExistsException Indicates that an attempt was made to save or update an attribute with a name, wich already exists in the repository. AttributeNotFoundException Indicates that an attempt was made to interact with an attribute that is not defined in the given store. AttributeTypeNotFoundException Indicates that an attempt was made to interact with an attribute type that is not defined in the given store. CannotChangeNodeRootException Indicates that an attempt was made to change the root of an existing node. CircularNodeTreeException Indicates an attempt to save or update a node that would result in an invalid tree structure.A valid tree structure does not contain circles (A grandparent of a node is also its child).Make sure that there are no circles in the node structure. CouldNotDeleteAttributeDataException Indicates that the attribute data from the configured time series-attribute assignment could not be deleted. CouldNotUpdateAttributeValueException Indicates that the attribute data from the configured time series-attribute assignment could not be deleted. CouldNotWriteAttributeDataException Indicates that an attempt to write attribute data for the configured time series-attribute assignment has failed. DeletingAttributeDataAndAttributeValueFailedException Indicates that the attribute data from the configured time series-attribute assignment could not be deleted. InvalidAttributeTypeIdentifierException Indicates that a attribute type operation was attempted with an invalid attribute type identifier. InvalidNodeStorageInformationException Indicates that an attempt was made to load, save, update or delete a INodeReference to or from a INodeStore with an different repository or the parent or root of the node has a different repository. NoAttributeDataFoundException Indicates that no attribute data was found for the configured time series-attribute assignment. NodeAlreadyExistsException Indicates that an attempt was made to create a node with Parent, Root and Name combination that already exists.Since the truple (name, parent and root) is a unique identifier for a node, you cannot have 2 Nodes with the same (name, parent and root). NodeNotFoundException Indicates that an attempt was made to manually save a node id. NodeRootNotFoundException Indicates that an attempt was made to access/modify/delete the root of a node that has a non-existent attribute id."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/","title":"AttributeNameAlreadyExistsException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/#attributenamealreadyexistsexception-class","title":"AttributeNameAlreadyExistsException Class","text":"<p>Indicates that an attempt was made to save or update an attribute with a name, wich already exists in the repository.</p> C#<pre><code>public sealed class AttributeNameAlreadyExistsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AttributeNameAlreadyExistsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/#remarks","title":"Remarks","text":"<p>Make sure you have written the name correctly. If you wish to modify the existing attribute, use Load(string, CancellationToken) to load the attribute first, then save the changes.  </p> <p>This exception is identified by error code HK15091.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/#attributenamealreadyexistsexceptionequivalenthttpstatuscode-property","title":"AttributeNameAlreadyExistsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNameAlreadyExistsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/","title":"AttributeNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/#attributenotfoundexception-class","title":"AttributeNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with an attribute that is not defined in the given store.</p> C#<pre><code>public sealed class AttributeNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AttributeNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/#remarks","title":"Remarks","text":"<p>This exception is typically raised when trying to access an attribute that does not exist in the specified store. Ensure that the correct store is being accessed.  </p> <p>This exception is identified by error code HK15104.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/#attributenotfoundexceptionequivalenthttpstatuscode-property","title":"AttributeNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/","title":"AttributeTypeNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/#attributetypenotfoundexception-class","title":"AttributeTypeNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with an attribute type that is not defined in the given store.</p> C#<pre><code>public sealed class AttributeTypeNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AttributeTypeNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/#remarks","title":"Remarks","text":"<p>Make sure that the correct store is being accessed or define the attribute type in the current store by calling Save(IAttributeType, CancellationToken) or a similar overload.  </p> <p>This exception is identified by error code HK15089.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/#attributetypenotfoundexceptionequivalenthttpstatuscode-property","title":"AttributeTypeNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/AttributeTypeNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/","title":"CannotChangeNodeRootException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/#cannotchangenoderootexception-class","title":"CannotChangeNodeRootException Class","text":"<p>Indicates that an attempt was made to change the root of an existing node.</p> C#<pre><code>public sealed class CannotChangeNodeRootException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CannotChangeNodeRootException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/#remarks","title":"Remarks","text":"<p>The given IAttributeReference does not exist.  (e.g. the reference given in HAKOM.TSM.Net.Attributes.Nodes.Persistence.NodeStore&lt;&gt;.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)  does not exist.)  </p> <p>This exception is identified by error code HK15131.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/#cannotchangenoderootexceptionequivalenthttpstatuscode-property","title":"CannotChangeNodeRootException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CannotChangeNodeRootException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/","title":"CircularNodeTreeException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/#circularnodetreeexception-class","title":"CircularNodeTreeException Class","text":"<p>Indicates an attempt to save or update a node that would result in an invalid tree structure. A valid tree structure does not contain circles (A grandparent of a node is also its child). Make sure that there are no circles in the node structure.</p> C#<pre><code>public sealed class CircularNodeTreeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CircularNodeTreeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/#remarks","title":"Remarks","text":"<p>The root, parent and name of the node where the circle was detected.  </p> <p>This exception is identified by error code HK15129.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/#circularnodetreeexceptionequivalenthttpstatuscode-property","title":"CircularNodeTreeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CircularNodeTreeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/","title":"CouldNotDeleteAttributeDataException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/#couldnotdeleteattributedataexception-class","title":"CouldNotDeleteAttributeDataException Class","text":"<p>Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.</p> C#<pre><code>public sealed class CouldNotDeleteAttributeDataException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotDeleteAttributeDataException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15108.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/#couldnotdeleteattributedataexceptionequivalenthttpstatuscode-property","title":"CouldNotDeleteAttributeDataException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotDeleteAttributeDataException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/","title":"CouldNotUpdateAttributeValueException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/#couldnotupdateattributevalueexception-class","title":"CouldNotUpdateAttributeValueException Class","text":"<p>Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.</p> C#<pre><code>public sealed class CouldNotUpdateAttributeValueException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotUpdateAttributeValueException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15107.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/#couldnotupdateattributevalueexceptionequivalenthttpstatuscode-property","title":"CouldNotUpdateAttributeValueException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotUpdateAttributeValueException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/","title":"CouldNotWriteAttributeDataException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/#couldnotwriteattributedataexception-class","title":"CouldNotWriteAttributeDataException Class","text":"<p>Indicates that an attempt to write attribute data for the configured time series-attribute assignment has failed.</p> C#<pre><code>public sealed class CouldNotWriteAttributeDataException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotWriteAttributeDataException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15109.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/#couldnotwriteattributedataexceptionequivalenthttpstatuscode-property","title":"CouldNotWriteAttributeDataException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/CouldNotWriteAttributeDataException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/","title":"DeletingAttributeDataAndAttributeValueFailedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/#deletingattributedataandattributevaluefailedexception-class","title":"DeletingAttributeDataAndAttributeValueFailedException Class","text":"<p>Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.</p> C#<pre><code>public sealed class DeletingAttributeDataAndAttributeValueFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DeletingAttributeDataAndAttributeValueFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15108.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/#deletingattributedataandattributevaluefailedexceptionequivalenthttpstatuscode-property","title":"DeletingAttributeDataAndAttributeValueFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/DeletingAttributeDataAndAttributeValueFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/","title":"InvalidAttributeTypeIdentifierException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/#invalidattributetypeidentifierexception-class","title":"InvalidAttributeTypeIdentifierException Class","text":"<p>Indicates that a attribute type operation was attempted with an invalid attribute type identifier.</p> C#<pre><code>public sealed class InvalidAttributeTypeIdentifierException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidAttributeTypeIdentifierException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/#remarks","title":"Remarks","text":"<p>Make sure you have written the name or id correctly.  </p> <p>This exception is identified by error code HK15113.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/#invalidattributetypeidentifierexceptionequivalenthttpstatuscode-property","title":"InvalidAttributeTypeIdentifierException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidAttributeTypeIdentifierException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/","title":"InvalidNodeStorageInformationException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/#invalidnodestorageinformationexception-class","title":"InvalidNodeStorageInformationException Class","text":"<p>Indicates that an attempt was made to load, save, update or delete a INodeReference  to or from a INodeStore with an different repository or the parent or root of the node has a different repository.</p> C#<pre><code>public sealed class InvalidNodeStorageInformationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidNodeStorageInformationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/#remarks","title":"Remarks","text":"<p>When loading, saving, updating or deleting INodeReference, the  INodeStore, INodeReference, the parent of the node and the root of the node must be in the same repository.  </p> <p>This exception is identified by error code HK15133.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/#invalidnodestorageinformationexceptionequivalenthttpstatuscode-property","title":"InvalidNodeStorageInformationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/InvalidNodeStorageInformationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/","title":"NoAttributeDataFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/#noattributedatafoundexception-class","title":"NoAttributeDataFoundException Class","text":"<p>Indicates that no attribute data was found for the configured time series-attribute assignment.</p> C#<pre><code>public sealed class NoAttributeDataFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoAttributeDataFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15110.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/#noattributedatafoundexceptionequivalenthttpstatuscode-property","title":"NoAttributeDataFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NoAttributeDataFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/","title":"NodeAlreadyExistsException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/#nodealreadyexistsexception-class","title":"NodeAlreadyExistsException Class","text":"<p>Indicates that an attempt was made to create a node with Parent, Root and Name combination that already exists. Since the truple (name, parent and root) is a unique identifier for a node, you cannot have 2 Nodes with the same (name, parent and root).</p> C#<pre><code>public sealed class NodeAlreadyExistsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NodeAlreadyExistsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/#remarks","title":"Remarks","text":"<p>The combination of Name, id of Root, and id of Parent of the node has to be unique in the repository.  </p> <p>This exception is identified by error code HK15128.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/#nodealreadyexistsexceptionequivalenthttpstatuscode-property","title":"NodeAlreadyExistsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeAlreadyExistsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/","title":"NodeNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/#nodenotfoundexception-class","title":"NodeNotFoundException Class","text":"<p>Indicates that an attempt was made to manually save a node id.</p> C#<pre><code>public sealed class NodeNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NodeNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/#remarks","title":"Remarks","text":"<p>The id given in Update(TIdentifier, INode, CancellationToken)  does not exist and saving a node with a predefined id is not permitted.  </p> <p>This exception is identified by error code HK15130.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/#nodenotfoundexceptionequivalenthttpstatuscode-property","title":"NodeNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/","title":"NodeRootNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/#noderootnotfoundexception-class","title":"NodeRootNotFoundException Class","text":"<p>Indicates that an attempt was made to access/modify/delete the root of a node that has a non-existent attribute id.</p> C#<pre><code>public sealed class NodeRootNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NodeRootNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/#remarks","title":"Remarks","text":"<p>The given IAttributeReference does not exist.  (e.g. the reference given in HAKOM.TSM.Net.Attributes.Nodes.Persistence.NodeStore&lt;&gt;.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)  does not exist.)  </p> <p>This exception is identified by error code HK15131.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/#noderootnotfoundexceptionequivalenthttpstatuscode-property","title":"NodeRootNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/Exceptions/NodeRootNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/","title":"HAKOM.TSM.Net.Api.Attributes.Persistence.References","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/#hakomtsmnetapiattributespersistencereferences-namespace","title":"HAKOM.TSM.Net.Api.Attributes.Persistence.References Namespace","text":"Interfaces IAttributeReference Represents a reference to an attribute that is stored permanently in some repository IAttributeReference&lt;TIdentifier&gt; Represents a reference to an attribute permanently stored in a repository. IAttributeReferenceFactory&lt;TIdentifier&gt; Creates IAttributeReference&lt;TIdentifier&gt; objects. IAttributeTypeReference Represents a reference to an attribute type permanently stored in a repository. IAttributeTypeReference&lt;TIdentifier&gt; Represents a reference to an attribute type permanently stored and uniquely identified by a specific identifier in a repository. IAttributeTypeReferenceFactory&lt;TIdentifier&gt; A factory for creating IAttributeTypeReference&lt;TIdentifier&gt;."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReference/","title":"IAttributeReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReference/#iattributereference-interface","title":"IAttributeReference Interface","text":"<p>Represents a reference to an attribute that is stored permanently in some repository</p> C#<pre><code>public interface IAttributeReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;,\nSystem.IFormattable\n</code></pre> <p>Derived \u21b3 IAttributeReference&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IAttribute&gt;, IReference, System.IEquatable&lt;IAttributeReference&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifier-interface","title":"IAttributeReferenceFactory&lt;TIdentifier&gt; Interface","text":"<p>Creates IAttributeReference&lt;TIdentifier&gt; objects.</p> C#<pre><code>public interface IAttributeReferenceFactory&lt;TIdentifier&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to IAttribute objects.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifierconfigureiattributestoretidentifier-method","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;.Configure(IAttributeStore&lt;TIdentifier&gt;) Method","text":"<p>Configures the IAttributeReferenceFactory&lt;TIdentifier&gt; for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&lt;TIdentifier&gt; attributeStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>attributeStore</code> HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&lt;TIdentifier&gt;</p> <p>The IAttributeStore&lt;TIdentifier&gt; for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifiercreatetidentifier-iattribute-method","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier, IAttribute) Method","text":"<p>Creates a IAttributeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; Create(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttribute attribute);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  IAttributeReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>attribute</code> IAttribute</p> <p>The IAttribute associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; The created IAttributeReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifiercreatetidentifier-method","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier) Method","text":"<p>Creates a IAttributeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; Create(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  IAttributeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt; The created IAttributeReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifiertrycreatetidentifier-iattribute-method","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier, IAttribute) Method","text":"<p>Tries to create a IAttributeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttribute attribute);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  IAttributeReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>attribute</code> IAttribute</p> <p>The IAttribute associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created IAttributeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#iattributereferencefactorytidentifiertrycreatetidentifier-method","title":"IAttributeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier) Method","text":"<p>Tries to create a IAttributeReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  IAttributeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created IAttributeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceFactoryOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceOf1/","title":"IAttributeReference&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceOf1/#iattributereferencetidentifier-interface","title":"IAttributeReference&lt;TIdentifier&gt; Interface","text":"<p>Represents a reference to an attribute permanently stored in a repository.</p> C#<pre><code>public interface IAttributeReference&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&gt;,\nSystem.IFormattable,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier, HAKOM.TSM.Net.Api.Attributes.IAttribute&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of unique identifier used to refer to IAttribute objects.</p> <p>Implements IAttributeReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IAttribute&gt;, IReference, System.IEquatable&lt;IAttributeReference&gt;, System.IFormattable, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier,IAttribute&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference&lt;TIdentifier&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReference/","title":"IAttributeTypeReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReference/#iattributetypereference-interface","title":"IAttributeTypeReference Interface","text":"<p>Represents a reference to an attribute type permanently stored in a repository.</p> C#<pre><code>public interface IAttributeTypeReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttributeType&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;\n</code></pre> <p>Derived \u21b3 IAttributeTypeReference&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IAttributeType&gt;, IReference, System.IEquatable&lt;IAttributeTypeReference&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifier-interface","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt; Interface","text":"<p>A factory for creating IAttributeTypeReference&lt;TIdentifier&gt;.</p> C#<pre><code>public interface IAttributeTypeReferenceFactory&lt;TIdentifier&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier for the IAttributeTypeReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifierconfigureiattributetypestoretidentifier-method","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;.Configure(IAttributeTypeStore&lt;TIdentifier&gt;) Method","text":"<p>Configures the IAttributeTypeReferenceFactory&lt;TIdentifier&gt; for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&lt;TIdentifier&gt; attributeTypeStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>attributeTypeStore</code> HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&lt;TIdentifier&gt;</p> <p>The IAttributeTypeStore&lt;TIdentifier&gt; for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifiercreatetidentifier-iattributetype-method","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier, IAttributeType) Method","text":"<p>Creates a IAttributeTypeReference with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference Create(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the IAttributeTypeReference.</p> <p></p> <p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#returns","title":"Returns","text":"<p>IAttributeTypeReference The created IAttributeTypeReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifiercreatetidentifier-method","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier) Method","text":"<p>Creates a IAttributeTypeReference with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference Create(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the time series reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#returns_1","title":"Returns","text":"<p>IAttributeTypeReference The created IAttributeTypeReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifiertrycreatetidentifier-iattributetype-method","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier, IAttributeType) Method","text":"<p>Tries to create a IAttributeTypeReference with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; TryCreate(TIdentifier identifier, HAKOM.TSM.Net.Api.Attributes.IAttributeType attributeType);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the IAttributeTypeReference.</p> <p></p> <p><code>attributeType</code> IAttributeType</p> <p>The IAttributeType to be associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt; A Result&lt;TValue&gt; of the created IAttributeTypeReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#iattributetypereferencefactorytidentifiertrycreatetidentifier-method","title":"IAttributeTypeReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier) Method","text":"<p>Tries to create a IAttributeTypeReference with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt; TryCreate(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the IAttributeTypeReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeReference&gt; A Result&lt;TValue&gt; of the created IAttributeTypeReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceFactoryOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceOf1/","title":"IAttributeTypeReference&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Attributes.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceOf1/#iattributetypereferencetidentifier-interface","title":"IAttributeTypeReference&lt;TIdentifier&gt; Interface","text":"<p>Represents a reference to an attribute type permanently stored and uniquely identified by a specific identifier in a repository.</p> C#<pre><code>public interface IAttributeTypeReference&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttributeType&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier, HAKOM.TSM.Net.Api.Attributes.IAttributeType&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&lt;TIdentifier&gt;&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Attributes/Persistence/References/IAttributeTypeReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier that can be used to uniquely identify the attribute type.</p> <p>Implements IAttributeTypeReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IAttributeType&gt;, IReference, System.IEquatable&lt;IAttributeTypeReference&gt;, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier,IAttributeType&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference&lt;TIdentifier&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/","title":"HAKOM.TSM.Net.Api.Calculation","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/#hakomtsmnetapicalculation-namespace","title":"HAKOM.TSM.Net.Api.Calculation Namespace","text":"Interfaces ICalculationOptions Holds properties for the calculation of IFormulas.These properties will influence the calculation and how the referenced ITimeSeries will be read for the calculation. ICalculationOptionsFactory Options for reading in time series data used in the calculation. ICalculator Non-generic base interface used to access implementations for all types of calculations. ITimeSeriesReferenceWithData&lt;TValue&gt; Represents a reference to a time series within a formula after the data required for calculation has already been read. ITimeSeriesReferenceWithReadingOptions Represents a reference to a time series within a formula along with the parameters that should be used to read the data required for calculation."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/","title":"ICalculationOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptions-interface","title":"ICalculationOptions Interface","text":"<p>Holds properties for the calculation of IFormulas. These properties will influence the calculation and how the referenced ITimeSeries will be read for the calculation.</p> C#<pre><code>public interface ICalculationOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionscyclic-property","title":"ICalculationOptions.Cyclic Property","text":"<p>Gets a System.Boolean indicating whether calculation of the values is performed cyclic along the time axis or not.</p> C#<pre><code>bool Cyclic { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionsfunction-property","title":"ICalculationOptions.Function Property","text":"<p>Gets the FunctionType specifying how values are applied along the time axis.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.FunctionType Function { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_1","title":"Property Value","text":"<p>FunctionType</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionsinterval-property","title":"ICalculationOptions.Interval Property","text":"<p>Gets the interval determining how the referenced data should be read and the calculation should be performed.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval Interval { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_2","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionsintervaltransformationmethod-property","title":"ICalculationOptions.IntervalTransformationMethod Property","text":"<p>Gets the interval transformation method that is used to transform the calculated data to the specified IInterval.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; IntervalTransformationMethod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_3","title":"Property Value","text":"<p>System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionsstartoftime-property","title":"ICalculationOptions.StartOfTime Property","text":"<p>Gets the System.DateTimeOffset representing the start time of the calculation data mesh.</p> C#<pre><code>System.DateTimeOffset StartOfTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_4","title":"Property Value","text":"<p>System.DateTimeOffset</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionstimezone-property","title":"ICalculationOptions.TimeZone Property","text":"<p>Gets the ITimeZone in which the calculation should take place.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_5","title":"Property Value","text":"<p>ITimeZone</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#icalculationoptionsunit-property","title":"ICalculationOptions.Unit Property","text":"<p>Gets a reference to the unit determining how the referenced data should be read.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#property-value_6","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptions/#remarks","title":"Remarks","text":"<p>This can be overwritten by suppling a unit with the referenced ITimeSeries in the IFormula.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/","title":"ICalculationOptionsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/#icalculationoptionsfactory-interface","title":"ICalculationOptionsFactory Interface","text":"<p>Options for reading in time series data used in the calculation.</p> C#<pre><code>public interface ICalculationOptionsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/#icalculationoptionsfactorycreatebool-functiontype-iinterval-nullableintervaltransformationmethod-iunitreference-itimezone-nullabledatetimeoffset-method","title":"ICalculationOptionsFactory.Create(bool, FunctionType, IInterval, Nullable&lt;IntervalTransformationMethod&gt;, IUnitReference, ITimeZone, Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Contains options for calculations with time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.ICalculationOptions Create(bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/#parameters","title":"Parameters","text":"<p><code>cyclic</code> System.Boolean</p> <p>Gets or sets a System.Boolean indicating whether the values along the time axis are cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>Gets or sets the FunctionType specifying how values are applied along the time axis.</p> <p></p> <p><code>interval</code> IInterval</p> <p>IInterval of the data in the computed result.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>IntervalTransformationMethod that is used to transform the data to the specified IInterval.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>Reference to the unit of the data in the computed result.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>Sets the ITimeZone property of the resulting ICalculationOptions object. If the given timeZone is null, the default value will be used.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>Sets the startOfTime of the resulting ICalculationOptions object. If the given startOfTime is null, the default value will be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculationOptionsFactory/#returns","title":"Returns","text":"<p>ICalculationOptions An ICalculationOptions object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/","title":"ICalculator","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculator-interface","title":"ICalculator Interface","text":"<p>Non-generic base interface used to access implementations for all types of calculations.</p> C#<pre><code>public interface ICalculator\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatoraggregationtimeseriesdatareadingoptions-property","title":"ICalculator.AggregationTimeSeriesDataReadingOptions Property","text":"<p>A factory for creating the IAggregationTimeSeriesDataReadingOptions, which are used to aggregate data from multiple time series with different reading options.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptionsFactory AggregationTimeSeriesDataReadingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#property-value","title":"Property Value","text":"<p>IAggregationTimeSeriesDataReadingOptionsFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatorcalculationoptions-property","title":"ICalculator.CalculationOptions Property","text":"<p>A factory for creating the ICalculationOptions, which are used to read data from the time series specified in the calculation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.ICalculationOptionsFactory CalculationOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#property-value_1","title":"Property Value","text":"<p>ICalculationOptionsFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatorreadingoptions-property","title":"ICalculator.ReadingOptions Property","text":"<p>A factory for creating the ITimeSeriesDataReadingOptions which will determine, how the ITimeSeriesData&lt;TValue&gt; will be read after calculations are complete.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory ReadingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#property-value_2","title":"Property Value","text":"<p>ITimeSeriesDataReadingOptionsFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatoraggregatetvaluestring-itimeseriessearchparameters-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.Aggregate&lt;TValue&gt;(string, ITimeSeriesSearchParameters, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesSearchParameters, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate&lt;TValue&gt;(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatoraggregatetvaluestring-itimeseriessearchparameters-iasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.Aggregate&lt;TValue&gt;(string, ITimeSeriesSearchParameters, IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt;from the provided timeSeriesReferences and based on the provided  timeSeriesSearchParameters, calculationOptions and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate&lt;TValue&gt;(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_1","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatoraggregatetvalueiasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.Aggregate&lt;TValue&gt;(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesReferences, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate&lt;TValue&gt;(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that defines which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatoraggregatetvalueienumerableiaggregationtimeseriesdatareadingoptions-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.Aggregate&lt;TValue&gt;(IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  aggregationTimeSeriesDataReadingOptions, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate&lt;TValue&gt;(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions&gt; aggregationTimeSeriesDataReadingOptions, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_3","title":"Parameters","text":"<p><code>aggregationTimeSeriesDataReadingOptions</code> System.Collections.Generic.IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;</p> <p>A list of IAggregationTimeSeriesDataReadingOptions that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#remarks","title":"Remarks","text":"<p>This method is similar to Aggregate&lt;TValue&gt;(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken)  but allows to define ITimeSeriesDataReadingOptions for each ITimeSeriesReference separately.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatorcalculatetvalueiformula-icalculationoptions-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"ICalculator.Calculate&lt;TValue&gt;(IFormula, ICalculationOptions, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Calculate&lt;TValue&gt;(HAKOM.TSM.Net.Api.Formulas.IFormula formula, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_4","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_4","title":"Parameters","text":"<p><code>formula</code> IFormula</p> <p>An IFormula object containing the unparsed formula string.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Holds default settings for reading in the data used in the calculation            of the IFormula object.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; holding the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatorcalculatetvalueitimeseriesreference-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"ICalculator.Calculate&lt;TValue&gt;(ITimeSeriesReference, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Calculate&lt;TValue&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string? defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_5","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>An ITimeSeriesReference object containing the unparsed formula as a property.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the              desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; holding the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortryaggregatetvaluestring-itimeseriessearchparameters-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.TryAggregate&lt;TValue&gt;(string, ITimeSeriesSearchParameters, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesSearchParameters, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate&lt;TValue&gt;(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_6","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_6","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortryaggregatetvaluestring-itimeseriessearchparameters-iasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.TryAggregate&lt;TValue&gt;(string, ITimeSeriesSearchParameters, IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt;from the provided timeSeriesReferences and based on the provided  timeSeriesSearchParameters, calculationOptions and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate&lt;TValue&gt;(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_7","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_7","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortryaggregatetvalueiasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.TryAggregate&lt;TValue&gt;(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesReferences, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate&lt;TValue&gt;(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_8","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_8","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortryaggregatetvalueienumerableiaggregationtimeseriesdatareadingoptions-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"ICalculator.TryAggregate&lt;TValue&gt;(IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  aggregationTimeSeriesDataReadingOptions, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate&lt;TValue&gt;(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions&gt; aggregationTimeSeriesDataReadingOptions, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_9","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_9","title":"Parameters","text":"<p><code>aggregationTimeSeriesDataReadingOptions</code> System.Collections.Generic.IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;</p> <p>A list of IAggregationTimeSeriesDataReadingOptions that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#remarks_4","title":"Remarks","text":"<p>This method is similar to TryAggregate&lt;TValue&gt;(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken)  but allows to define ITimeSeriesDataReadingOptions for each ITimeSeriesReference separately.  </p> <p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortrycalculatetvalueiformula-icalculationoptions-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"ICalculator.TryCalculate&lt;TValue&gt;(IFormula, ICalculationOptions, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryCalculate&lt;TValue&gt;(HAKOM.TSM.Net.Api.Formulas.IFormula formula, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_10","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_10","title":"Parameters","text":"<p><code>formula</code> IFormula</p> <p>An IFormula object containing the unparsed formula string.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Holds default settings for reading in the data used in the calculation            of the IFormula object.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a ITimeSeriesDataCollection&lt;TValue&gt; which holds the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#icalculatortrycalculatetvalueitimeseriesreference-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"ICalculator.TryCalculate&lt;TValue&gt;(ITimeSeriesReference, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryCalculate&lt;TValue&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string? defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#type-parameters_11","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#parameters_11","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>An ITimeSeriesReference object containing the unparsed formula as a property.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ICalculator/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a ITimeSeriesDataCollection&lt;TValue&gt; which holds the resulting time series data upon calculation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/","title":"ITimeSeriesReferenceWithData&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#itimeseriesreferencewithdatatvalue-interface","title":"ITimeSeriesReferenceWithData&lt;TValue&gt; Interface","text":"<p>Represents a reference to a time series within a formula after the data required for calculation has already been read.</p> C#<pre><code>public interface ITimeSeriesReferenceWithData&lt;TValue&gt;\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of data that the time series holds.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#itimeseriesreferencewithdatadata-property","title":"ITimeSeriesReferenceWithData.Data Property <p>The data that has been read for that time series to be used during calculation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; Data { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#itimeseriesreferencewithdatatimeseriesreference-property","title":"ITimeSeriesReferenceWithData.TimeSeriesReference Property <p>The time series referenced in the formula (including information about where it is stored).</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference TimeSeriesReference { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithDataOf1/#property-value_1","title":"Property Value","text":"<p>ITimeSeriesReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/","title":"ITimeSeriesReferenceWithReadingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#itimeseriesreferencewithreadingoptions-interface","title":"ITimeSeriesReferenceWithReadingOptions Interface","text":"<p>Represents a reference to a time series within a formula along with the parameters that should be used to read the data required for calculation.</p> C#<pre><code>public interface ITimeSeriesReferenceWithReadingOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#itimeseriesreferencewithreadingoptionsreadingoptions-property","title":"ITimeSeriesReferenceWithReadingOptions.ReadingOptions Property","text":"<p>The parameters that should be used to read the time series' data that is to be used during calculation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions ReadingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#property-value","title":"Property Value","text":"<p>ITimeSeriesDataReadingOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#itimeseriesreferencewithreadingoptionstimeseriesreference-property","title":"ITimeSeriesReferenceWithReadingOptions.TimeSeriesReference Property","text":"<p>The time series referenced in the formula (including information about where it is stored).</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference TimeSeriesReference { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/ITimeSeriesReferenceWithReadingOptions/#property-value_1","title":"Property Value","text":"<p>ITimeSeriesReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/","title":"HAKOM.TSM.Net.Api.Calculation.Aggregation","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/#hakomtsmnetapicalculationaggregation-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Aggregation Namespace","text":"Interfaces IAggregationTimeSeriesDataReadingOptions Represents options for aggregating time series data. It defines how the data for the defined ITimeSeries should be retrieved. IAggregationTimeSeriesDataReadingOptionsFactory Used for creating new IAggregationTimeSeriesDataReadingOptions. IAggregator Non-generic marker interface for IAggregator&lt;TValue&gt; implementations.Used to register implementations for use by an IAggregatorFactory. IAggregator&lt;TValue&gt; Aggregates time series data. IAggregatorFactory Used for creating a new instance of IAggregator."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/","title":"IAggregationTimeSeriesDataReadingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#iaggregationtimeseriesdatareadingoptions-interface","title":"IAggregationTimeSeriesDataReadingOptions Interface","text":"<p>Represents options for aggregating time series data. It defines how the data for the defined ITimeSeries should be retrieved.</p> C#<pre><code>public interface IAggregationTimeSeriesDataReadingOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#iaggregationtimeseriesdatareadingoptionshistoricdatetime-property","title":"IAggregationTimeSeriesDataReadingOptions.HistoricDateTime Property","text":"<p>Gets the DateTimeOffsetAtOrBefore that is used to define which historic data set should be read.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; HistoricDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#property-value","title":"Property Value","text":"<p>System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#iaggregationtimeseriesdatareadingoptionsintervaltransformationmethod-property","title":"IAggregationTimeSeriesDataReadingOptions.IntervalTransformationMethod Property","text":"<p>Gets the IntervalTransformationMethod that is used to transform the data.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; IntervalTransformationMethod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#iaggregationtimeseriesdatareadingoptionstimeseriesreferences-property","title":"IAggregationTimeSeriesDataReadingOptions.TimeSeriesReferences Property","text":"<p>Gets a list of ITimeSeries the data should be retrieved for.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; TimeSeriesReferences { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#iaggregationtimeseriesdatareadingoptionsunit-property","title":"IAggregationTimeSeriesDataReadingOptions.Unit Property","text":"<p>Gets a reference to the unit determining how the data should be read.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptions/#property-value_3","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/","title":"IAggregationTimeSeriesDataReadingOptionsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#iaggregationtimeseriesdatareadingoptionsfactory-interface","title":"IAggregationTimeSeriesDataReadingOptionsFactory Interface","text":"<p>Used for creating new IAggregationTimeSeriesDataReadingOptions.</p> C#<pre><code>public interface IAggregationTimeSeriesDataReadingOptionsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#iaggregationtimeseriesdatareadingoptionsfactorycreateiasyncenumerableitimeseriesreference-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-method","title":"IAggregationTimeSeriesDataReadingOptionsFactory.Create(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;) Method","text":"<p>Creates a new instance of IAggregationTimeSeriesDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions Create(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#parameters","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>The ITimeSeries the data should be retrieved for.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#returns","title":"Returns","text":"<p>IAggregationTimeSeriesDataReadingOptions A new instance of IAggregationTimeSeriesDataReadingOptions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#iaggregationtimeseriesdatareadingoptionsfactorytrycreateiasyncenumerableitimeseriesreference-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-method","title":"IAggregationTimeSeriesDataReadingOptionsFactory.TryCreate(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;) Method","text":"<p>Tries to create a new instance of IAggregationTimeSeriesDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions&gt; TryCreate(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>The ITimeSeries the data should be retrieved for.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAggregationTimeSeriesDataReadingOptions&gt; A Result&lt;TValue&gt; containing a new instance of IAggregationTimeSeriesDataReadingOptions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregationTimeSeriesDataReadingOptionsFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregator/","title":"IAggregator","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregator/#iaggregator-interface","title":"IAggregator Interface","text":"<p>Non-generic marker interface for IAggregator&lt;TValue&gt; implementations. Used to register implementations for use by an IAggregatorFactory.</p> C#<pre><code>public interface IAggregator\n</code></pre> <p>Derived \u21b3 IAggregator&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/","title":"IAggregatorFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#iaggregatorfactory-interface","title":"IAggregatorFactory Interface","text":"<p>Used for creating a new instance of IAggregator.</p> C#<pre><code>public interface IAggregatorFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#iaggregatorfactorycreatetvalue-method","title":"IAggregatorFactory.Create&lt;TValue&gt;() Method","text":"<p>Creates an instance of IAggregator&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator&lt;TValue&gt; Create&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to aggregate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator&lt;TValue&gt; An IAggregator&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#iaggregatorfactorytrycreatetvalue-method","title":"IAggregatorFactory.TryCreate&lt;TValue&gt;() Method","text":"<p>Tries to create an instance of IAggregator&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to aggregate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing a IAggregator&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/","title":"IAggregator&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvalue-interface","title":"IAggregator&lt;TValue&gt; Interface","text":"<p>Aggregates time series data.</p> C#<pre><code>public interface IAggregator&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the data.</p> <p>Implements IAggregator</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvalueaggregatestring-itimeseriessearchparameters-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.Aggregate(string, ITimeSeriesSearchParameters, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesSearchParameters, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvalueaggregatestring-itimeseriessearchparameters-iasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.Aggregate(string, ITimeSeriesSearchParameters, IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt;from the provided timeSeriesReferences and based on the provided  timeSeriesSearchParameters, calculationOptions and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_1","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvalueaggregateiasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.Aggregate(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Aggregates multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesReferences, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that defines which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvalueaggregateienumerableiaggregationtimeseriesdatareadingoptions-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.Aggregate(IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  aggregationTimeSeriesDataReadingOptions, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Aggregate(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions&gt; aggregationTimeSeriesDataReadingOptions, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_3","title":"Parameters","text":"<p><code>aggregationTimeSeriesDataReadingOptions</code> System.Collections.Generic.IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;</p> <p>A list of IAggregationTimeSeriesDataReadingOptions that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#remarks","title":"Remarks","text":"<p>This method is similar to Aggregate(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken)  but allows to define ITimeSeriesDataReadingOptions for each ITimeSeriesReference separately.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvaluetryaggregatestring-itimeseriessearchparameters-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.TryAggregate(string, ITimeSeriesSearchParameters, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesSearchParameters, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_4","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvaluetryaggregatestring-itimeseriessearchparameters-iasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.TryAggregate(string, ITimeSeriesSearchParameters, IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt;from the provided timeSeriesReferences and based on the provided  timeSeriesSearchParameters, calculationOptions and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate(string searchRepository, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters timeSeriesSearchParameters, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_5","title":"Parameters","text":"<p><code>searchRepository</code> System.String</p> <p>The name of the repository where time series corresponding to the ITimeSeriesSearchParameters of timeSeriesSearchParameters are to be looked for.</p> <p></p> <p><code>timeSeriesSearchParameters</code> ITimeSeriesSearchParameters</p> <p>ITimeSeriesSearchParameters used for searching ITimeSeries that should be aggregated.</p> <p></p> <p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvaluetryaggregateiasyncenumerableitimeseriesreference-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.TryAggregate(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  timeSeriesReferences, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; timeSeriesReferences, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_6","title":"Parameters","text":"<p><code>timeSeriesReferences</code> System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt;</p> <p>A list of ITimeSeriesReference that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#iaggregatortvaluetryaggregateienumerableiaggregationtimeseriesdatareadingoptions-icalculationoptions-itimeseriesdatareadingoptions-string-ienumerableflag-flaghandling-cancellationtoken-method","title":"IAggregator&lt;TValue&gt;.TryAggregate(IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken) Method","text":"<p>Tries to aggregate multiple ITimeSeriesDataCollection&lt;TValue&gt; based on the provided  aggregationTimeSeriesDataReadingOptions, calculationOptions, and readingOptions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryAggregate(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions&gt; aggregationTimeSeriesDataReadingOptions, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, string unitRepositoryName, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;? aggregationFlagsWhiteList=null, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling=HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#parameters_7","title":"Parameters","text":"<p><code>aggregationTimeSeriesDataReadingOptions</code> System.Collections.Generic.IEnumerable&lt;IAggregationTimeSeriesDataReadingOptions&gt;</p> <p>A list of IAggregationTimeSeriesDataReadingOptions that define which ITimeSeries should be aggregated.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>The ICalculationOptions to apply during aggregation.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>The ITimeSeriesDataReadingOptions, which specify the form in which the data is to be returned.</p> <p></p> <p><code>unitRepositoryName</code> System.String</p> <p>The repository name for loading units for converting the result into a specific unit.</p> <p></p> <p><code>aggregationFlagsWhiteList</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>Defines which data points should be accounted for the aggregation based on their Flag. Uses all when null.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Indicates which Flag is to be used for the result when aggregating values with different Flags. By default, the Flag with the highest priority is used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the aggregated ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/IAggregatorOf1/#remarks_4","title":"Remarks","text":"<p>This method is similar to Aggregate(IAsyncEnumerable&lt;ITimeSeriesReference&gt;, ICalculationOptions, ITimeSeriesDataReadingOptions, string, IEnumerable&lt;Flag&gt;, FlagHandling, CancellationToken)  but allows to define ITimeSeriesDataReadingOptions for each ITimeSeriesReference separately.  </p> <p>The Result will provide additional information about success or failure of the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/","title":"HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/#hakomtsmnetapicalculationaggregationexceptions-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions Namespace","text":"Classes ReadingDataForAggregationException Indicates that reading data from time series for aggregation has failed."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/","title":"ReadingDataForAggregationException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/#readingdataforaggregationexception-class","title":"ReadingDataForAggregationException Class","text":"<p>Indicates that reading data from time series for aggregation has failed.</p> C#<pre><code>public sealed class ReadingDataForAggregationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReadingDataForAggregationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/#remarks","title":"Remarks","text":"<p>When aggregating time series, the repository and the time series data must be loaded for the aggregation. Further details on the specific loading error can be found in the inner exception.  </p> <p>This exception is identified by error code HK15116.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/#readingdataforaggregationexceptionequivalenthttpstatuscode-property","title":"ReadingDataForAggregationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Aggregation/Exceptions/ReadingDataForAggregationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/","title":"HAKOM.TSM.Net.Api.Calculation.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/#hakomtsmnetapicalculationexceptions-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Exceptions Namespace","text":"Classes CompilationOfCalculationContextFailedException When thrown, the compilation of the script which creates a new CalculationContext&lt;TValue&gt; child class failed. CustomFunctionsNotFoundException Indicates that a formula used during calculation referred to a custom function but no custom function with this name can be found in the directory. CustomFunctionTypeHasErrorException Indicates that a formula used during calculation referred to a custom function but the custom function had an compilation error. DefaultRepositoryCannotBeNullException Thrown when the given defaultRepositoryName is null and the formula time series doesn't have a repository name inits storage information. FormulaContainsACyclicReferenceException Thrown when the given formula contains a cyclic reference. FormulaResultCannotBeMatchedToTimeSeriesDataException The result of the calculated formula cannot be matched to an object of type ITimeSeriesData&lt;TValue&gt;. InstanceOfCustomFunctionCouldNotBeCreatedException An instance of a custom function could not be created. Make sure that a constructor with no paramaters is available for all custom functions. This exception is identified by error code HK15085. InvalidTimeSeriesReferenceInFormulaException Thrown when a time series reference cannot be resolved due to to many dots or commas in the reference. MultipleCustomFunctionsWithTheSameNameException Indicates that an attempt was made to use a custom function but multiple custom functions have the same name. TimeSeriesDoesNotContainAFormulaException Thrown when the given time series isn't a formula time series (doesn't contain a formula)."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/","title":"CompilationOfCalculationContextFailedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#compilationofcalculationcontextfailedexception-class","title":"CompilationOfCalculationContextFailedException Class","text":"<p>When thrown, the compilation of the script which creates a new CalculationContext&lt;TValue&gt; child class failed.</p> C#<pre><code>public sealed class CompilationOfCalculationContextFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CompilationOfCalculationContextFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#remarks","title":"Remarks","text":"<p>This exception is most likely caused by a bug. Please report this exception to the HAKOM Support.  </p> <p>This exception is identified by error code HK15084.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#compilationofcalculationcontextfailedexceptioncompilationerrors-property","title":"CompilationOfCalculationContextFailedException.CompilationErrors Property","text":"<p>An System.Collections.Generic.IEnumerable&lt;&gt; which holds all compilation errors occured during the  compilation of the CalculationContext&lt;TValue&gt;.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;string&gt;? CompilationErrors { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#compilationofcalculationcontextfailedexceptionequivalenthttpstatuscode-property","title":"CompilationOfCalculationContextFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CompilationOfCalculationContextFailedException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/","title":"CustomFunctionTypeHasErrorException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#customfunctiontypehaserrorexception-class","title":"CustomFunctionTypeHasErrorException Class","text":"<p>Indicates that a formula used during calculation referred to a custom function but the custom function had an compilation error.</p> C#<pre><code>public sealed class CustomFunctionTypeHasErrorException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CustomFunctionTypeHasErrorException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#remarks","title":"Remarks","text":"<p>When using custom functions in IFormula check if the custom function can be compiled.  </p> <p>This exception is identified by error code HK15082.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#customfunctiontypehaserrorexceptioncustomfunctioncompileerrors-property","title":"CustomFunctionTypeHasErrorException.CustomFunctionCompileErrors Property","text":"<p>Contains a list of all compile errors.</p> C#<pre><code>public System.Collections.Generic.IEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.HakomException&gt; CustomFunctionCompileErrors { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;HakomException&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#customfunctiontypehaserrorexceptionequivalenthttpstatuscode-property","title":"CustomFunctionTypeHasErrorException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionTypeHasErrorException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/","title":"CustomFunctionsNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#customfunctionsnotfoundexception-class","title":"CustomFunctionsNotFoundException Class","text":"<p>Indicates that a formula used during calculation referred to a custom function but no custom function with this name can be found in the directory.</p> C#<pre><code>public sealed class CustomFunctionsNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CustomFunctionsNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#remarks","title":"Remarks","text":"<p>When using custom functions in IFormula be sure to put the file with the custom function in the directory  of the assemblies of HAKOM and set the CustomFunctionNameAttribute to the name how you want to call the  function in the IFormula.  </p> <p>This exception is identified by error code HK15087.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#customfunctionsnotfoundexceptionequivalenthttpstatuscode-property","title":"CustomFunctionsNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#customfunctionsnotfoundexceptionmissingfunctions-property","title":"CustomFunctionsNotFoundException.MissingFunctions Property","text":"C#<pre><code>public System.Collections.Generic.IEnumerable&lt;string&gt; MissingFunctions { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/CustomFunctionsNotFoundException/#property-value_1","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/DefaultRepositoryCannotBeNullException/","title":"DefaultRepositoryCannotBeNullException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/DefaultRepositoryCannotBeNullException/#defaultrepositorycannotbenullexception-class","title":"DefaultRepositoryCannotBeNullException Class","text":"<p>Thrown when the given defaultRepositoryName is null and the formula time series doesn't have a repository name in its storage information.</p> C#<pre><code>public sealed class DefaultRepositoryCannotBeNullException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DefaultRepositoryCannotBeNullException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/DefaultRepositoryCannotBeNullException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/DefaultRepositoryCannotBeNullException/#defaultrepositorycannotbenullexceptionequivalenthttpstatuscode-property","title":"DefaultRepositoryCannotBeNullException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/DefaultRepositoryCannotBeNullException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaContainsACyclicReferenceException/","title":"FormulaContainsACyclicReferenceException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaContainsACyclicReferenceException/#formulacontainsacyclicreferenceexception-class","title":"FormulaContainsACyclicReferenceException Class","text":"<p>Thrown when the given formula contains a cyclic reference.</p> C#<pre><code>public sealed class FormulaContainsACyclicReferenceException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FormulaContainsACyclicReferenceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaContainsACyclicReferenceException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaContainsACyclicReferenceException/#formulacontainsacyclicreferenceexceptionequivalenthttpstatuscode-property","title":"FormulaContainsACyclicReferenceException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaContainsACyclicReferenceException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/","title":"FormulaResultCannotBeMatchedToTimeSeriesDataException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/#formularesultcannotbematchedtotimeseriesdataexception-class","title":"FormulaResultCannotBeMatchedToTimeSeriesDataException Class","text":"<p>The result of the calculated formula cannot be matched to an object of type ITimeSeriesData&lt;TValue&gt;.</p> C#<pre><code>public sealed class FormulaResultCannotBeMatchedToTimeSeriesDataException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FormulaResultCannotBeMatchedToTimeSeriesDataException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/#remarks","title":"Remarks","text":"<p>Make sure, that the result of the formula can be converted to an object of type ITimeSeriesData&lt;TValue&gt;.  </p> <p>This exception is identified by error code HK15079.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/#formularesultcannotbematchedtotimeseriesdataexceptionequivalenthttpstatuscode-property","title":"FormulaResultCannotBeMatchedToTimeSeriesDataException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/FormulaResultCannotBeMatchedToTimeSeriesDataException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InstanceOfCustomFunctionCouldNotBeCreatedException/","title":"InstanceOfCustomFunctionCouldNotBeCreatedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InstanceOfCustomFunctionCouldNotBeCreatedException/#instanceofcustomfunctioncouldnotbecreatedexception-class","title":"InstanceOfCustomFunctionCouldNotBeCreatedException Class","text":"<p>An instance of a custom function could not be created. <p>Make sure that a constructor with no paramaters is available for all custom functions.</p> <p></p> <p>This exception is identified by error code HK15085.</p> <p></p> C#<pre><code>public sealed class InstanceOfCustomFunctionCouldNotBeCreatedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InstanceOfCustomFunctionCouldNotBeCreatedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InstanceOfCustomFunctionCouldNotBeCreatedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InstanceOfCustomFunctionCouldNotBeCreatedException/#instanceofcustomfunctioncouldnotbecreatedexceptionequivalenthttpstatuscode-property","title":"InstanceOfCustomFunctionCouldNotBeCreatedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InstanceOfCustomFunctionCouldNotBeCreatedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/","title":"InvalidTimeSeriesReferenceInFormulaException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/#invalidtimeseriesreferenceinformulaexception-class","title":"InvalidTimeSeriesReferenceInFormulaException Class","text":"<p>Thrown when a time series reference cannot be resolved due to to many dots or commas in the reference.</p> C#<pre><code>public sealed class InvalidTimeSeriesReferenceInFormulaException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesReferenceInFormulaException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/#remarks","title":"Remarks","text":"<p>If the time series reference contains dots or commas in either the time series or repository name, the name must be escaped by quotation marks.  </p> <p>This exception is identified by error code HK15080.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/#invalidtimeseriesreferenceinformulaexceptionequivalenthttpstatuscode-property","title":"InvalidTimeSeriesReferenceInFormulaException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/InvalidTimeSeriesReferenceInFormulaException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/","title":"MultipleCustomFunctionsWithTheSameNameException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/#multiplecustomfunctionswiththesamenameexception-class","title":"MultipleCustomFunctionsWithTheSameNameException Class","text":"<p>Indicates that an attempt was made to use a custom function but multiple custom functions have the same name.</p> C#<pre><code>public sealed class MultipleCustomFunctionsWithTheSameNameException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MultipleCustomFunctionsWithTheSameNameException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/#remarks","title":"Remarks","text":"<p>When using custom functions in IFormula be sure to create only custom functions with unique \"Name\" properties.  </p> <p>This exception is identified by error code HK15083.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/#multiplecustomfunctionswiththesamenameexceptionequivalenthttpstatuscode-property","title":"MultipleCustomFunctionsWithTheSameNameException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/MultipleCustomFunctionsWithTheSameNameException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/TimeSeriesDoesNotContainAFormulaException/","title":"TimeSeriesDoesNotContainAFormulaException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/TimeSeriesDoesNotContainAFormulaException/#timeseriesdoesnotcontainaformulaexception-class","title":"TimeSeriesDoesNotContainAFormulaException Class","text":"<p>Thrown when the given time series isn't a formula time series (doesn't contain a formula).</p> C#<pre><code>public sealed class TimeSeriesDoesNotContainAFormulaException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesDoesNotContainAFormulaException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/TimeSeriesDoesNotContainAFormulaException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/TimeSeriesDoesNotContainAFormulaException/#timeseriesdoesnotcontainaformulaexceptionequivalenthttpstatuscode-property","title":"TimeSeriesDoesNotContainAFormulaException.EquivalentHttpStatusCode Property","text":"<p>When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Exceptions/TimeSeriesDoesNotContainAFormulaException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/","title":"HAKOM.TSM.Net.Api.Calculation.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/#hakomtsmnetapicalculationextensions-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Extensions Namespace","text":"Classes ContainerExtensions Defines extension methods on IContainer for registering services used to work with calculations."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Defines extension methods on IContainer for registering services used to work with calculations.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsuseaggregatorthis-icontainer-type-method","title":"ContainerExtensions.UseAggregator(this IContainer, Type) Method","text":"<p>Registers a custom implementation of IAggregator&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAggregator(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the data converter with.</p> <p></p> <p><code>implementation</code> System.Type</p> <p>The concrete implementing type to use for this registration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsusecalculationdefaultsthis-icontainer-method","title":"ContainerExtensions.UseCalculationDefaults(this IContainer) Method","text":"<p>Registers implementations for all calculation related services.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCalculationDefaults(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the services with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsusedefaultaggregatorthis-icontainer-method","title":"ContainerExtensions.UseDefaultAggregator(this IContainer) Method","text":"<p>Registers the default implementation of HAKOM.TSM.Net.Calculation.Aggregation.Aggregator&lt;&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAggregator(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsusedefaultcalculationfactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultCalculationFactories(this IContainer) Method","text":"<p>Registers factory implementations for calculations.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultCalculationFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsusedefaultformulacalculatorthis-icontainer-method","title":"ContainerExtensions.UseDefaultFormulaCalculator(this IContainer) Method","text":"<p>Registers the default implementation of IFormulaCalculator&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultFormulaCalculator(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#exceptions_2","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#containerextensionsuseformulacalculatorthis-icontainer-type-method","title":"ContainerExtensions.UseFormulaCalculator(this IContainer, Type) Method","text":"<p>Registers a custom implementation of IFormulaCalculator&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseFormulaCalculator(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, System.Type implementation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the data converter with.</p> <p></p> <p><code>implementation</code> System.Type</p> <p>The concrete implementing type to use for this registration.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Extensions/ContainerExtensions/#exceptions_3","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/","title":"HAKOM.TSM.Net.Api.Calculation.Formulas","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/#hakomtsmnetapicalculationformulas-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Formulas Namespace","text":"Classes CalculationContext&lt;TValue&gt; Base class for calculation context classes that provide functionality for calling custom functions from a formula. Structs TimeSeriesDataCalculationWrapper&lt;TValue&gt; A wrapper used for formula calculation. Interfaces ICalculationContextFactory Factory for creating and compiling an object which inherits the CalculationContext&lt;TValue&gt;. IFormulaCalculator Non-generic base interface for IFormulaCalculator&lt;TValue&gt; implementations.Used to register implementations for use by an IFormulaCalculatorFactory. IFormulaCalculator&lt;TValue&gt; Interface for the implementations that obtain calculated values from the unparsed formula string. IFormulaCalculatorFactory Creates objects of type IFormulaCalculator&lt;TValue&gt;. IFormulaParser Parses formulas of type System.String to IParsedFormula. IParsedFormula IParsedFormula holds information to a formula which is parsed to run as an Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript. IParsedFormulaFactory Factory used to create an IParsedFormula object."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/","title":"CalculationContext&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#calculationcontexttvalue-class","title":"CalculationContext&lt;TValue&gt; Class","text":"<p>Base class for calculation context classes that provide functionality for calling custom functions from a formula.</p> C#<pre><code>public abstract class CalculationContext&lt;TValue&gt;\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the formula.</p> <p>Inheritance System.Object \ud83e\udc52 CalculationContext"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#calculationcontexticustomfunctioncontext-constructor","title":"CalculationContext(ICustomFunctionContext) Constructor <p>Constructor creates a new CalculationContext object and sets the CustomFunctionContext.</p> C#<pre><code>protected CalculationContext(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; customFunctionContext);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#parameters","title":"Parameters","text":"<p><code>customFunctionContext</code> HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p> <p>The custom function context for initializing custom functions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#calculationcontextcustomfunctioncontext-property","title":"CalculationContext.CustomFunctionContext Property <p>The custom function context to initialize custom functions.</p> C#<pre><code>public HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; CustomFunctionContext { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CalculationContextOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/","title":"ICalculationContextFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#icalculationcontextfactory-interface","title":"ICalculationContextFactory Interface","text":"<p>Factory for creating and compiling an object which inherits the CalculationContext&lt;TValue&gt;.</p> C#<pre><code>public interface ICalculationContextFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#icalculationcontextfactorycreatetvalueicustomfunctioncontexttvalue-string-string-type-assembly-metadatareference-method","title":"ICalculationContextFactory.Create&lt;TValue&gt;(ICustomFunctionContext&lt;TValue&gt;, string, string, Type, Assembly, MetadataReference) Method","text":"<p>Creates a new object that inherits the CalculationContext&lt;TValue&gt;.  The object contains instances for each ICustomFunction used in the  given parsedFormula. For each instance, it contains a method  wrapper that converts the method call to the associated ICustomFunction.Evaluate  method using the name of the ICustomFunction. It also implements that  the first time the customFunction is called, the ICustomFunction.PerformBeforeEvaluate method is called.</p> C#<pre><code>object Create&lt;TValue&gt;(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; customFunctionContext, ref string parsedFormula, string originalFormula, out System.Type? globalType, out System.Reflection.Assembly? globalAssembly, out Microsoft.CodeAnalysis.MetadataReference? reference)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#parameters","title":"Parameters","text":"<p><code>customFunctionContext</code> HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p> <p>The ICustomFunctionContext&lt;TValue&gt; for the instances of ICustomFunction.</p> <p></p> <p><code>parsedFormula</code> System.String</p> <p>The formula which is already parsed with the IFormulaParser.</p> <p></p> <p><code>originalFormula</code> System.String</p> <p>A System.String containing the original formula which was parsed.</p> <p></p> <p><code>globalType</code> System.Type</p> <p>Returns the type of the Return-object.</p> <p></p> <p><code>globalAssembly</code> System.Reflection.Assembly</p> <p>Returns the compiled assembly of the Return-object.</p> <p></p> <p><code>reference</code> Microsoft.CodeAnalysis.MetadataReference</p> <p>Returns the globalAssembly as a Microsoft.CodeAnalysis.MetadataReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#returns","title":"Returns","text":"<p>System.Object Returns a new object that inherits the CalculationContext&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#icalculationcontextfactorytrycreatetvalueicustomfunctioncontexttvalue-string-string-type-assembly-metadatareference-method","title":"ICalculationContextFactory.TryCreate&lt;TValue&gt;(ICustomFunctionContext&lt;TValue&gt;, string, string, Type, Assembly, MetadataReference) Method","text":"<p>Creates a new object that inherits the CalculationContext&lt;TValue&gt;.  The object contains instances for each ICustomFunction used in the  given parsedFormula. For each instance, it contains a method  wrapper that converts the method call to the associated ICustomFunction.Evaluate  method using the name of the ICustomFunction. It also implements that  the first time the customFunction is called, the ICustomFunction.PerformBeforeEvaluatemethod is called.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;object&gt; TryCreate&lt;TValue&gt;(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; customFunctionContext, ref string parsedFormula, string originalFormula, out System.Type? globalType, out System.Reflection.Assembly? globalAssembly, out Microsoft.CodeAnalysis.MetadataReference? reference)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#parameters_1","title":"Parameters","text":"<p><code>customFunctionContext</code> HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p> <p>The ICustomFunctionContext&lt;TValue&gt; for the instances of ICustomFunction.</p> <p></p> <p><code>parsedFormula</code> System.String</p> <p>The formula which is already parsed with the IFormulaParser.</p> <p></p> <p><code>originalFormula</code> System.String</p> <p>A System.String containing the original formula which was parsed.</p> <p></p> <p><code>globalType</code> System.Type</p> <p>Returns the type of the Return-object.</p> <p></p> <p><code>globalAssembly</code> System.Reflection.Assembly</p> <p>Returns the compiled assembly of the Return-object.</p> <p></p> <p><code>reference</code> Microsoft.CodeAnalysis.MetadataReference</p> <p>Returns the globalAssembly as a Microsoft.CodeAnalysis.MetadataReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/ICalculationContextFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Object&gt; Returns a Result&lt;TValue&gt; of a new object that inherits the CalculationContext&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculator/","title":"IFormulaCalculator","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculator/#iformulacalculator-interface","title":"IFormulaCalculator Interface","text":"<p>Non-generic base interface for IFormulaCalculator&lt;TValue&gt; implementations. Used to register implementations for use by an IFormulaCalculatorFactory.</p> C#<pre><code>public interface IFormulaCalculator\n</code></pre> <p>Derived \u21b3 IFormulaCalculator&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/","title":"IFormulaCalculatorFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#iformulacalculatorfactory-interface","title":"IFormulaCalculatorFactory Interface","text":"<p>Creates objects of type IFormulaCalculator&lt;TValue&gt;.</p> C#<pre><code>public interface IFormulaCalculatorFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#iformulacalculatorfactorycreatetvalue-method","title":"IFormulaCalculatorFactory.Create&lt;TValue&gt;() Method","text":"<p>Creates an instance of IFormulaCalculator&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator&lt;TValue&gt; Create&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator&lt;TValue&gt; An IFormulaCalculator&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#iformulacalculatorfactorytrycreatetvalue-method","title":"IFormulaCalculatorFactory.TryCreate&lt;TValue&gt;() Method","text":"<p>Tries to create an instance of IFormulaCalculator&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing the IFormulaCalculator&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/","title":"IFormulaCalculator&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#iformulacalculatortvalue-interface","title":"IFormulaCalculator&lt;TValue&gt; Interface","text":"<p>Interface for the implementations that obtain calculated values from the unparsed formula string.</p> C#<pre><code>public interface IFormulaCalculator&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p> <p>Implements IFormulaCalculator</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#iformulacalculatortvaluecalculateiformula-icalculationoptions-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"IFormulaCalculator&lt;TValue&gt;.Calculate(IFormula, ICalculationOptions, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Calculate(HAKOM.TSM.Net.Api.Formulas.IFormula formula, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#parameters","title":"Parameters","text":"<p><code>formula</code> IFormula</p> <p>An IFormula object containing the unparsed formula string.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Holds default settings for reading in the data used in the calculation            of the IFormula object.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; holding the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#iformulacalculatortvaluecalculateitimeseriesreference-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"IFormulaCalculator&lt;TValue&gt;.Calculate(ITimeSeriesReference, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Calculate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string? defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>An ITimeSeriesReference object containing the unparsed formula as a property.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the              desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; holding the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#iformulacalculatortvaluetrycalculateiformula-icalculationoptions-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"IFormulaCalculator&lt;TValue&gt;.TryCalculate(IFormula, ICalculationOptions, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryCalculate(HAKOM.TSM.Net.Api.Formulas.IFormula formula, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#parameters_2","title":"Parameters","text":"<p><code>formula</code> IFormula</p> <p>An IFormula object containing the unparsed formula string.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Holds default settings for reading in the data used in the calculation            of the IFormula object.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a ITimeSeriesDataCollection&lt;TValue&gt; which holds the resulting time series data upon calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#iformulacalculatortvaluetrycalculateitimeseriesreference-itimeseriesdatareadingoptions-string-cancellationtoken-method","title":"IFormulaCalculator&lt;TValue&gt;.TryCalculate(ITimeSeriesReference, ITimeSeriesDataReadingOptions, string, CancellationToken) Method","text":"<p>Parses the formula, obtains the data and calculates values based on the provided options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryCalculate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions timeSeriesReadingOptions, string? defaultRepositoryName, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#parameters_3","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>An ITimeSeriesReference object containing the unparsed formula as a property.</p> <p></p> <p><code>timeSeriesReadingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>Repository which is used if the formula string does not reference a repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaCalculatorOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing a ITimeSeriesDataCollection&lt;TValue&gt; which holds the resulting time series data upon calculation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/","title":"IFormulaParser","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#iformulaparser-interface","title":"IFormulaParser Interface","text":"<p>Parses formulas of type System.String to IParsedFormula.</p> C#<pre><code>public interface IFormulaParser\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#iformulaparserparseformulatvaluestring-string-period-icalculationoptions-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IFormulaParser.ParseFormula&lt;TValue&gt;(string, string, Period, ICalculationOptions, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Gets a formula of type System.String and converts it to a IParsedFormula so it can be called as a script:  Replaces the time series references of format \"[repositoryName.TimeSeriesName, unit, aggregation]\" with TimeSeriesDataCalculationWrapper&lt;TValue&gt;  Replaces vale, flag pairs \"{value|flag}\" with TimeSeriesDataCalculationWrapper&lt;TValue&gt; * adds a Func call at the beginning so it can be called with the current calculation time and time series referenced values.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula&gt; ParseFormula&lt;TValue&gt;(string formula, string defaultRepositoryName, HAKOM.TSM.Net.Api.Time.Periods.Period readingPeriod, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#parameters","title":"Parameters","text":"<p><code>formula</code> System.String</p> <p>The formula as System.String loaded from the time series or given as ad-hoc formula.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>The default repository name for the time series references without given repository name.</p> <p></p> <p><code>readingPeriod</code> Period</p> <p>The Period in which the time series data should be read.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Holds default settings for reading in the data used in the calculation             of the IFormula object.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The historic date and time, which will be used to fetch ITimeSeries and related data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IParsedFormula&gt; a System.Threading.Tasks.Task&lt;&gt; containing information of the formula for the calculation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#iformulaparsertryparseformulatvaluestring-string-period-icalculationoptions-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IFormulaParser.TryParseFormula&lt;TValue&gt;(string, string, Period, ICalculationOptions, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Gets a formula of type System.String and tries to convert it to a IParsedFormula so it can be called as a script.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula&gt;&gt; TryParseFormula&lt;TValue&gt;(string formula, string defaultRepositoryName, HAKOM.TSM.Net.Api.Time.Periods.Period readingPeriod, HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#parameters_1","title":"Parameters","text":"<p><code>formula</code> System.String</p> <p>The formula as System.String loaded from the time series or given as ad-hoc formula.</p> <p></p> <p><code>defaultRepositoryName</code> System.String</p> <p>The default repository name for the time series references without given repository name.</p> <p></p> <p><code>readingPeriod</code> Period</p> <p>The Period in which the time series data should be read.</p> <p></p> <p><code>calculationOptions</code> ICalculationOptions</p> <p>Unspecified settings for reading in the data used in the calculation             of the IFormula object.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The historic date and time, which will be used to fetch ITimeSeries and related data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IParsedFormula&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of IParsedFormula containing information of the formula for the calculation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IFormulaParser/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/","title":"IParsedFormula","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#iparsedformula-interface","title":"IParsedFormula Interface","text":"<p>IParsedFormula holds information to a formula which is parsed to run as an Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.</p> C#<pre><code>public interface IParsedFormula\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#iparsedformulaformula-property","title":"IParsedFormula.Formula Property","text":"<p>The parsed formula which can be run as a Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.</p> C#<pre><code>string Formula { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#iparsedformulaoriginalformula-property","title":"IParsedFormula.OriginalFormula Property","text":"<p>The original formula which was parsed.</p> C#<pre><code>string OriginalFormula { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#iparsedformulareferencedtimeseries-property","title":"IParsedFormula.ReferencedTimeSeries Property","text":"<p>Holds all ITimeSeries which are referenced in the Formula.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; ReferencedTimeSeries { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#property-value_2","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;ITimeSeriesReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#iparsedformulareferencedtimeseriesreadingoptions-property","title":"IParsedFormula.ReferencedTimeSeriesReadingOptions Property","text":"<p>Contains all ITimeSeriesReferenceWithReadingOptions which describes which time series are referenced in the Formula and what reading options should be used to read their data. The key is an int which can be used in the Formula to access the correct reference.</p> C#<pre><code>System.Collections.Generic.IDictionary&lt;int,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions&gt; ReferencedTimeSeriesReadingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormula/#property-value_3","title":"Property Value","text":"<p>System.Collections.Generic.IDictionary&lt;System.Int32,ITimeSeriesReferenceWithReadingOptions&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/","title":"IParsedFormulaFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/#iparsedformulafactory-interface","title":"IParsedFormulaFactory Interface","text":"<p>Factory used to create an IParsedFormula object.</p> C#<pre><code>public interface IParsedFormulaFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/#iparsedformulafactorycreateidictionaryintitimeseriesreferencewithreadingoptions-string-string-method","title":"IParsedFormulaFactory.Create(IDictionary&lt;int,ITimeSeriesReferenceWithReadingOptions&gt;, string, string) Method","text":"<p>Factory used to create an IParsedFormula object.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula Create(System.Collections.Generic.IDictionary&lt;int,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions&gt; referencedTimeSeriesReadingOptions, string formula, string originalFormula);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/#parameters","title":"Parameters","text":"<p><code>referencedTimeSeriesReadingOptions</code> System.Collections.Generic.IDictionary&lt;System.Int32,ITimeSeriesReferenceWithReadingOptions&gt;</p> <p>A dictionary holding the referenced              time series and the reading options for them. May contain the same time series              multiple times.</p> <p></p> <p><code>formula</code> System.String</p> <p>The parsed string containing the formula in a form ready for execution              using CSharpScript.</p> <p></p> <p><code>originalFormula</code> System.String</p> <p>A System.String containing the original formula before it was parsed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/IParsedFormulaFactory/#returns","title":"Returns","text":"<p>IParsedFormula An IParsedFormula object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvalue-struct","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt; Struct","text":"<p>A wrapper used for formula calculation.</p> C#<pre><code>public readonly struct TimeSeriesDataCalculationWrapper&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;,\nHAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;,\nSystem.Numerics.IDivisionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.IDivisionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, TValue, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.IMultiplyOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.IMultiplyOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, TValue, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.ISubtractionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.ISubtractionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, TValue, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.IAdditionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.Numerics.IAdditionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;, TValue, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;\n    where TValue : System.Numerics.IAdditionOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.ISubtractionOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.IMultiplyOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.IDivisionOperators&lt;TValue, TValue, TValue&gt;, System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Implements HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;, HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;, System.Numerics.IDivisionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.IDivisionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,TValue,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.IMultiplyOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.IMultiplyOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,TValue,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.ISubtractionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.ISubtractionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,TValue,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.IAdditionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.Numerics.IAdditionOperators&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;,TValue,HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperitimeseriesdata-iarithmeticoperations-itimeseriesdatafactory-nullable-constructor","title":"TimeSeriesDataCalculationWrapper(ITimeSeriesData, IArithmeticOperations, ITimeSeriesDataFactory, Nullable) Constructor <p>Creates a new instance of TimeSeriesDataCalculationWrapper&lt;TValue&gt;.</p> C#<pre><code>public TimeSeriesDataCalculationWrapper(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; underlying, HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt; arithmeticOperations, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory timeSeriesDataFactory, System.Nullable&lt;int&gt; index=null);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters","title":"Parameters","text":"<p><code>underlying</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The underlying ITimeSeriesData&lt;TValue&gt; which will be used for this wrapper.</p> <p></p> <p><code>arithmeticOperations</code> HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt;</p> <p>The IArithmeticOperations&lt;TValue&gt; which will be used for all calculations.</p> <p></p> <p><code>timeSeriesDataFactory</code> ITimeSeriesDataFactory</p> <p>The ITimeSeriesDataFactory which will be used to qcreate new data points.</p> <p></p> <p><code>index</code> System.Nullable&lt;System.Int32&gt;</p> <p>The System.Int32 index of the data in the formula, to which the wrapper is referring.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperflag-property","title":"TimeSeriesDataCalculationWrapper.Flag Property <p>Gets the Flag of the data point.</p> C#<pre><code>public HAKOM.TSM.Net.Api.Flags.Flag Flag { get; set; }\n</code></pre> <p>Implements Flag</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#property-value","title":"Property Value","text":"<p>Flag</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperindex-property","title":"TimeSeriesDataCalculationWrapper.Index Property <p>Gets the index of the data in the formula, to which the wrapper is referring.</p> C#<pre><code>public System.Nullable&lt;int&gt; Index { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertime-property","title":"TimeSeriesDataCalculationWrapper.Time Property <p>Gets the time of the data point.</p> C#<pre><code>public System.DateTimeOffset Time { get; }\n</code></pre> <p>Implements Time</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#property-value_2","title":"Property Value","text":"<p>System.DateTimeOffset</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappervalue-property","title":"TimeSeriesDataCalculationWrapper.Value Property <p>Gets the value of the data point.</p> C#<pre><code>public TValue Value { get; set; }\n</code></pre> <p>Implements Value</p>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#property-value_3","title":"Property Value","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvalueequalstimeseriesdatacalculationwrappertvalue-method","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;.Equals(TimeSeriesDataCalculationWrapper&lt;TValue&gt;) Method <p>Compares this wrapper to the given other wrapper for equality.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; other);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_1","title":"Parameters","text":"<p><code>other</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The TimeSeriesDataCalculationWrapper&lt;TValue&gt; which will be used for the equality check.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns","title":"Returns","text":"<p>System.Boolean True, if the wrappers are equal, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvalueequalsidatatvalue-method","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;.Equals(IData&lt;TValue&gt;) Method <p>Compares this wrapper to the given IData&lt;TValue&gt; for equality.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;? other);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_2","title":"Parameters","text":"<p><code>other</code> HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;</p> <p>The IData&lt;TValue&gt; which will be used for the equality check.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_1","title":"Returns","text":"<p>System.Boolean True, if this wrapper is equal to the given IData&lt;TValue&gt;, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvalueequalsobject-method","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;.Equals(object) Method <p>Compares this wrapper to the given System.Object for equality.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The System.Object which will be used for the equality check.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_2","title":"Returns","text":"<p>System.Boolean True, if this wrapper is equal to the given System.Object, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvaluegethashcode-method","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;.GetHashCode() Method <p>Gets the hash code of this wrapper using its Time, Value, Flag and Index.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_3","title":"Returns","text":"<p>System.Int32 An System.Int32 representation of the hash code of this wrapper.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrappertvaluetostring-method","title":"TimeSeriesDataCalculationWrapper&lt;TValue&gt;.ToString() Method <p>Gets a string representation of this wrapper using its Time, Value, Flag and Index.</p> C#<pre><code>public override string ToString();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_4","title":"Returns","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator","title":"TimeSeriesDataCalculationWrapper.operator +(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Calls the Add method of IArithmeticOperations with the given wrappers.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator +(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_4","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_5","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The sum of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-tvalue-operator","title":"TimeSeriesDataCalculationWrapper.operator +(TimeSeriesDataCalculationWrapper, TValue) Operator <p>Calls the Add method of IArithmeticOperations with the given wrapper and value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator +(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_5","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand - the wrapper.</p> <p></p> <p><code>right</code> TValue</p> <p>The second operand - the value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_6","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The sum of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator_1","title":"TimeSeriesDataCalculationWrapper.operator /(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Calls the Divide method of IArithmeticOperations with the given wrappers.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator /(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_6","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_7","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The quotient of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-tvalue-operator_1","title":"TimeSeriesDataCalculationWrapper.operator /(TimeSeriesDataCalculationWrapper, TValue) Operator <p>Calls the Divide method of IArithmeticOperations with the given wrapper and value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator /(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_7","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand - the wrapper.</p> <p></p> <p><code>right</code> TValue</p> <p>The second operand - the value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_8","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The quotient of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator_2","title":"TimeSeriesDataCalculationWrapper.operator ==(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Compares the two operands for equality.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_8","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_9","title":"Returns","text":"<p>System.Boolean True, if the operands are equal, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator_3","title":"TimeSeriesDataCalculationWrapper.operator !=(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Compares the two operands for inequality.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_9","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_10","title":"Returns","text":"<p>System.Boolean False, if the operands are equal, otherwise true.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator_4","title":"TimeSeriesDataCalculationWrapper.operator *(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Calls the Multiply method of IArithmeticOperations with the given wrappers.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator *(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_10","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_11","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The product of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-tvalue-operator_2","title":"TimeSeriesDataCalculationWrapper.operator *(TimeSeriesDataCalculationWrapper, TValue) Operator <p>Calls the Multiply method of IArithmeticOperations with the given wrapper and value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator *(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_11","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand - the wrapper.</p> <p></p> <p><code>right</code> TValue</p> <p>The second operand - the value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_12","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The product of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-timeseriesdatacalculationwrapper-operator_5","title":"TimeSeriesDataCalculationWrapper.operator -(TimeSeriesDataCalculationWrapper, TimeSeriesDataCalculationWrapper) Operator <p>Calls the Subtract method of IArithmeticOperations with the given wrappers.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator -(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_12","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand.</p> <p></p> <p><code>right</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The second operand.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_13","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The difference of the operands.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#timeseriesdatacalculationwrapperoperator-timeseriesdatacalculationwrapper-tvalue-operator_3","title":"TimeSeriesDataCalculationWrapper.operator -(TimeSeriesDataCalculationWrapper, TValue) Operator <p>Calls the Subtract method of IArithmeticOperations with the given wrapper and value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; operator -(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#parameters_13","title":"Parameters","text":"<p><code>left</code> HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>The first operand - the wrapper.</p> <p></p> <p><code>right</code> TValue</p> <p>The second operand - the value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/TimeSeriesDataCalculationWrapperOf1/#returns_14","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper&lt;TValue&gt; The difference of the operands.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/","title":"HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/#hakomtsmnetapicalculationformulascustomfunctions-namespace","title":"HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions Namespace","text":"Classes CustomFunctionNameAttribute Attribute holding the name of a custom function. Interfaces ICustomFunction Base interface for custom functions. This interface provides all properties and methods which are independent of the parameters and return type of the implemented custom function. ICustomFunction&lt;TParameter,TResult&gt; Interface for the for the custom function implementations with one parameter. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt; Interface for the for the custom function implementations with nine parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt; Interface for the for the custom function implementations with eight parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt; Interface for the for the custom function implementations with eight parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt; Interface for the for the custom function implementations with six parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt; Interface for the for the custom function implementations with five parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt; Interface for the for the custom function implementations with four parameters. ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt; Interface for the for the custom function implementations with eight parameters. ICustomFunction&lt;TParameter1,TParameter2,TResult&gt; Interface for custom function implementations with two parameters. ICustomFunction&lt;TResult&gt; Interface for the for the custom function implementations without parameters. ICustomFunctionContext&lt;TValue&gt; Facility for providing formula and computation propertiesnecessary for the calculation of a custom function. ICustomFunctionContextFactory A factory for creating the ICustomFunctionContext&lt;TValue&gt; object. ICustomFunctionOptions Contains information on where custom function files are stored. ICustomFunctionProvider Interface for the class used for obtaining them implementations of ICustomFunction from user-provided .csx and .dll files."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/","title":"CustomFunctionNameAttribute","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#customfunctionnameattribute-class","title":"CustomFunctionNameAttribute Class","text":"<p>Attribute holding the name of a custom function.</p> C#<pre><code>public sealed class CustomFunctionNameAttribute : System.Attribute\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Attribute \ud83e\udc52 CustomFunctionNameAttribute</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#customfunctionnameattributestring-constructor","title":"CustomFunctionNameAttribute(string) Constructor","text":"<p>Constructor for the custom function name attribute.</p> C#<pre><code>public CustomFunctionNameAttribute(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#customfunctionnameattributename-property","title":"CustomFunctionNameAttribute.Name Property","text":"<p>Name of the custom function.</p> C#<pre><code>public string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/CustomFunctionNameAttribute/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/","title":"ICustomFunction","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#icustomfunction-interface","title":"ICustomFunction Interface","text":"<p>Base interface for custom functions. This interface provides all properties and methods which are  independent of the parameters and return type of the implemented custom function.</p> C#<pre><code>public interface ICustomFunction\n</code></pre> <p>Derived \u21b3 ICustomFunction&lt;TParameter,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt; \u21b3 ICustomFunction&lt;TParameter1,TParameter2,TResult&gt; \u21b3 ICustomFunction&lt;TResult&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#remarks","title":"Remarks","text":"<p>Please use one of the sub-interfaces for implementing a custom function.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#icustomfunctioninitializetvalueicustomfunctioncontexttvalue-method","title":"ICustomFunction.Initialize&lt;TValue&gt;(ICustomFunctionContext&lt;TValue&gt;) Method","text":"<p>Is called once for every calculation of an IFormula, regardless if the ICustomFunction is used in the IFormula or not. Therefor, the method should require as little runtime and memory as possible.</p> C#<pre><code>System.Threading.Tasks.Task Initialize&lt;TValue&gt;(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; context)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values, which will be calculated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#parameters","title":"Parameters","text":"<p><code>context</code> HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p> <p>The ICustomFunctionContext&lt;TValue&gt; which provides properties like referenced ITimeSeries for the calculation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#icustomfunctiontrygetreferencetvalueitimeseriesdatatvalue-icustomfunctioncontexttvalue-itimeseriesreferencewithdatatvalue-method","title":"ICustomFunction.TryGetReference&lt;TValue&gt;(ITimeSeriesData&lt;TValue&gt;, ICustomFunctionContext&lt;TValue&gt;, ITimeSeriesReferenceWithData&lt;TValue&gt;) Method","text":"<p>Tries to get the ITimeSeriesReference and ITimeSeriesDataCollection&lt;TValue&gt; containing the data in the reading  period of a time series reference using an ITimeSeriesData&lt;TValue&gt;. If the given data does not result form a time series reference this method returns false.</p> C#<pre><code>bool TryGetReference&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; context, out HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt; reference)\n    where TValue : System.Numerics.IAdditionOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.ISubtractionOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.IMultiplyOperators&lt;TValue, TValue, TValue&gt;, System.Numerics.IDivisionOperators&lt;TValue, TValue, TValue&gt;, System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values, which will be calculated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#parameters_1","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt;, which will be used to get the reference.</p> <p></p> <p><code>context</code> HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt;</p> <p>The ICustomFunctionContext&lt;TValue&gt;, which provides properties like the referenced ITimeSeries for the calculation.</p> <p></p> <p><code>reference</code> HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt;</p> <p>A tuple containing the referenced ITimeSeries and the ITimeSeriesDataCollection&lt;TValue&gt; holding its data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunction/#returns_1","title":"Returns","text":"<p>System.Boolean True if a ITimeSeries and ITimeSeriesDataCollection&lt;TValue&gt; could be found to the given ITimeSeriesData&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/","title":"ICustomFunctionContextFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#icustomfunctioncontextfactory-interface","title":"ICustomFunctionContextFactory Interface","text":"<p>A factory for creating the ICustomFunctionContext&lt;TValue&gt; object.</p> C#<pre><code>public interface ICustomFunctionContextFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#icustomfunctioncontextfactorycreatetvalueicalculationoptions-itimeseriesdatareadingoptions-idictionaryintitimeseriesreferencewithdatatvalue-itimeseriesreference-method","title":"ICustomFunctionContextFactory.Create&lt;TValue&gt;(ICalculationOptions, ITimeSeriesDataReadingOptions, IDictionary&lt;int,ITimeSeriesReferenceWithData&lt;TValue&gt;&gt;, ITimeSeriesReference) Method","text":"<p>Creates the ICustomFunctionContext&lt;TValue&gt; with the following user-defined properties:</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; Create&lt;TValue&gt;(HAKOM.TSM.Net.Api.Calculation.ICalculationOptions calculationOptions, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, System.Collections.Generic.IDictionary&lt;int,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt;&gt; sourceTimeSeries, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference? rootTimeSeriesReference=null)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Type of the data returned by the ICustomFunction&lt;TResult&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#parameters","title":"Parameters","text":"<p><code>calculationOptions</code> ICalculationOptions</p> <p>An ICalculationOptions with default settings for reading in the data used            in the calculation of the IFormula object.</p> <p></p> <p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>An ITimeSeriesDataReadingOptions object describing the             desired properties of the return value.</p> <p></p> <p><code>sourceTimeSeries</code> System.Collections.Generic.IDictionary&lt;System.Int32,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt;&gt;</p> <p>A dictionary containing all time series referenced by the formula.</p> <p></p> <p><code>rootTimeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference object to which the formula string was assigned as property.             Should be set to null if the formula string is not provided from an ITimeSeries object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext&lt;TValue&gt; An ICustomFunctionContext&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/","title":"ICustomFunctionContext&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontexttvalue-interface","title":"ICustomFunctionContext&lt;TValue&gt; Interface","text":"<p>Facility for providing formula and computation properties necessary for the calculation of a custom function.</p> C#<pre><code>public interface ICustomFunctionContext&lt;TValue&gt;\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontextarithmeticoperations-property","title":"ICustomFunctionContext.ArithmeticOperations Property <p>Facility for executing arithmetic operations.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt; ArithmeticOperations { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontextcalculationoptions-property","title":"ICustomFunctionContext.CalculationOptions Property <p>Settings for reading in the data used in the calculation of the IFormula object. Applied to the time series that are referenced from the formula string an not to the root time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Calculation.ICalculationOptions CalculationOptions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value_1","title":"Property Value","text":"<p>ICalculationOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontextreadingoptions-property","title":"ICustomFunctionContext.ReadingOptions Property <p>AnITimeSeriesDataReadingOptions object describing the  desired properties of the return value.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions ReadingOptions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value_2","title":"Property Value","text":"<p>ITimeSeriesDataReadingOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontextroottimeseriesreference-property","title":"ICustomFunctionContext.RootTimeSeriesReference Property <p>Time series to which the IFormula object was assigned as a property.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference? RootTimeSeriesReference { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value_3","title":"Property Value","text":"<p>ITimeSeriesReference</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontextsourcetimeseries-property","title":"ICustomFunctionContext.SourceTimeSeries Property <p>Contains all time series referenced in the IFormula object. Time series appear in the order in which they are found in the formula string.</p> C#<pre><code>System.Collections.Generic.IDictionary&lt;int,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt;&gt; SourceTimeSeries { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value_4","title":"Property Value","text":"<p>System.Collections.Generic.IDictionary&lt;System.Int32,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData&lt;TValue&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontexttimeseriesdatafactory-property","title":"ICustomFunctionContext.TimeSeriesDataFactory Property <p>Facility for creating objects representing time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory TimeSeriesDataFactory { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#property-value_5","title":"Property Value","text":"<p>ITimeSeriesDataFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontexttvaluecreateresultdatetimeoffset-itimeseriesdatatvalue-method","title":"ICustomFunctionContext&lt;TValue&gt;.CreateResult(DateTimeOffset, ITimeSeriesData&lt;TValue&gt;) Method <p>Coverts the given data to the return type to ITimeSeriesData&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; CreateResult(System.DateTimeOffset calculationTime, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The time of the ITimeSeriesData&lt;TValue&gt;.</p> <p></p> <p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The value of the ITimeSeriesData&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; An ITimeSeriesData&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#icustomfunctioncontexttvaluecreateresultdatetimeoffset-tvalue-method","title":"ICustomFunctionContext&lt;TValue&gt;.CreateResult(DateTimeOffset, TValue) Method <p>Coverts the given data to the return type to ITimeSeriesData&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; CreateResult(System.DateTimeOffset calculationTime, TValue data);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#parameters_1","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The time of the ITimeSeriesData&lt;TValue&gt;.</p> <p></p> <p><code>data</code> TValue</p> <p>The value of the ITimeSeriesData&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionContextOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; An ITimeSeriesData&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/","title":"ICustomFunction&lt;TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#icustomfunctiontresult-interface","title":"ICustomFunction&lt;TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations without parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#type-parameters","title":"Type parameters","text":"<p><code>TResult</code></p> <p>Type of the return value.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#icustomfunctiontresultevaluatedatetimeoffset-method","title":"ICustomFunction&lt;TResult&gt;.Evaluate(DateTimeOffset) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#icustomfunctiontresultperformbeforecalculation-method","title":"ICustomFunction&lt;TResult&gt;.PerformBeforeCalculation() Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task an awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tparameter9tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with nine parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TParameter5</code></p> <p>The fifth parameter of the custom function.             Its type is TParameter5.</p> <p></p> <p><code>TParameter6</code></p> <p>The sixth parameter of the custom function.             Its type is TParameter6.</p> <p></p> <p><code>TParameter7</code></p> <p>The seventh parameter of the custom function.             Its type is TParameter7.</p> <p></p> <p><code>TParameter8</code></p> <p>The eighth parameter of the custom function.             Its type is TParameter8.</p> <p></p> <p><code>TParameter9</code></p> <p>The ninth parameter of the custom function.              Its type is TParameter9.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tparameter9tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-tparameter8-tparameter9-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7, TParameter8, TParameter9) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7, TParameter8 parameter8, TParameter9 parameter9);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p> <p></p> <p><code>parameter8</code> TParameter8</p> <p>The eighth parameter of type TParameter8.</p> <p></p> <p><code>parameter9</code> TParameter9</p> <p>The ninth parameter of type TParameter9.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tparameter9tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-tparameter8-tparameter9-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TParameter9,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7, TParameter8, TParameter9) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7, TParameter8 parameter8, TParameter9 parameter9);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p> <p></p> <p><code>parameter8</code> TParameter8</p> <p>The eighth parameter of type TParameter8.</p> <p></p> <p><code>parameter9</code> TParameter9</p> <p>The ninth parameter of type TParameter9.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf10/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/","title":"ICustomFunction&lt;TParameter,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#icustomfunctiontparametertresult-interface","title":"ICustomFunction&lt;TParameter,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with one parameter.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>The parameter of the custom function.             Its type is TParameter.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#icustomfunctiontparametertresultevaluatedatetimeoffset-tparameter-method","title":"ICustomFunction&lt;TParameter,TResult&gt;.Evaluate(DateTimeOffset, TParameter) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p></p> <p><code>parameter</code> TParameter</p> <p>A parameter of type TParameter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#icustomfunctiontparametertresultperformbeforecalculationtparameter-method","title":"ICustomFunction&lt;TParameter,TResult&gt;.PerformBeforeCalculation(TParameter) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter parameter);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#parameters_1","title":"Parameters","text":"<p><code>parameter</code> TParameter</p> <p>A parameter of type TParameter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task an awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/","title":"ICustomFunction&lt;TParameter1,TParameter2,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#icustomfunctiontparameter1tparameter2tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TResult&gt; Interface","text":"<p>Interface for custom function implementations with two parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#icustomfunctiontparameter1tparameter2tresultevaluatedatetimeoffset-tparameter1-tparameter2-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#icustomfunctiontparameter1tparameter2tresultperformbeforecalculationtparameter1-tparameter2-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf3/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task an awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#icustomfunctiontparameter1tparameter2tparameter3tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with eight parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#icustomfunctiontparameter1tparameter2tparameter3tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#icustomfunctiontparameter1tparameter2tparameter3tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf4/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task an awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with four parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf5/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with five parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TParameter5</code></p> <p>The fifth parameter of the custom function.             Its type is TParameter5.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-tparameter5-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4, TParameter5) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-tparameter5-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4, TParameter5) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf6/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with six parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TParameter5</code></p> <p>The fifth parameter of the custom function.             Its type is TParameter5.</p> <p></p> <p><code>TParameter6</code></p> <p>The sixth parameter of the custom function.             Its type is TParameter6.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf7/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with eight parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TParameter5</code></p> <p>The fifth parameter of the custom function.             Its type is TParameter5.</p> <p></p> <p><code>TParameter6</code></p> <p>The sixth parameter of the custom function.             Its type is TParameter6.</p> <p></p> <p><code>TParameter7</code></p> <p>The seventh parameter of the custom function.             Its type is TParameter7.</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf8/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tresult-interface","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt; Interface","text":"<p>Interface for the for the custom function implementations with eight parameters.</p> C#<pre><code>public interface ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt; :\nHAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#type-parameters","title":"Type parameters","text":"<p><code>TParameter1</code></p> <p>The first parameter of the custom function.             Its type is TParameter1.</p> <p></p> <p><code>TParameter2</code></p> <p>The second parameter of the custom function.             Its type is TParameter2.</p> <p></p> <p><code>TParameter3</code></p> <p>The third parameter of the custom function.             Its type is TParameter3.</p> <p></p> <p><code>TParameter4</code></p> <p>The fourth parameter of the custom function.             Its type is TParameter4.</p> <p></p> <p><code>TParameter5</code></p> <p>The fifth parameter of the custom function.             Its type is TParameter5.</p> <p></p> <p><code>TParameter6</code></p> <p>The sixth parameter of the custom function.             Its type is TParameter6.</p> <p></p> <p><code>TParameter7</code></p> <p>The seventh parameter of the custom function.             Its type is TParameter7.</p> <p></p> <p><code>TParameter8</code></p> <p>The eighth parameter of the custom function.             Its type is TParameter8.             .</p> <p></p> <p><code>TResult</code></p> <p>Type of the return value of the custom function.</p> <p>Implements ICustomFunction</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tresultevaluatedatetimeoffset-tparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-tparameter8-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt;.Evaluate(DateTimeOffset, TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7, TParameter8) Method","text":"<p>Evaluate is called for every time stamp of the calculation.</p> C#<pre><code>TResult Evaluate(System.DateTimeOffset calculationTime, TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7, TParameter8 parameter8);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#parameters","title":"Parameters","text":"<p><code>calculationTime</code> System.DateTimeOffset</p> <p>The current time stamp of System.DateTimeOffset to</p> <p></p> <p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p> <p></p> <p><code>parameter8</code> TParameter8</p> <p>The eighth parameter of type TParameter8.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#returns","title":"Returns","text":"<p>TResult The result returned by the custom function.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#icustomfunctiontparameter1tparameter2tparameter3tparameter4tparameter5tparameter6tparameter7tparameter8tresultperformbeforecalculationtparameter1-tparameter2-tparameter3-tparameter4-tparameter5-tparameter6-tparameter7-tparameter8-method","title":"ICustomFunction&lt;TParameter1,TParameter2,TParameter3,TParameter4,TParameter5,TParameter6,TParameter7,TParameter8,TResult&gt;.PerformBeforeCalculation(TParameter1, TParameter2, TParameter3, TParameter4, TParameter5, TParameter6, TParameter7, TParameter8) Method","text":"<p>PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.</p> C#<pre><code>System.Threading.Tasks.Task PerformBeforeCalculation(TParameter1 parameter1, TParameter2 parameter2, TParameter3 parameter3, TParameter4 parameter4, TParameter5 parameter5, TParameter6 parameter6, TParameter7 parameter7, TParameter8 parameter8);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#parameters_1","title":"Parameters","text":"<p><code>parameter1</code> TParameter1</p> <p>The first parameter of type TParameter1.</p> <p></p> <p><code>parameter2</code> TParameter2</p> <p>The second parameter of type TParameter2.</p> <p></p> <p><code>parameter3</code> TParameter3</p> <p>The third parameter of type TParameter3.</p> <p></p> <p><code>parameter4</code> TParameter4</p> <p>The fourth parameter of type TParameter4.</p> <p></p> <p><code>parameter5</code> TParameter5</p> <p>The fifth parameter of type TParameter5.</p> <p></p> <p><code>parameter6</code> TParameter6</p> <p>The sixth parameter of type TParameter6.</p> <p></p> <p><code>parameter7</code> TParameter7</p> <p>The seventh parameter of type TParameter7.</p> <p></p> <p><code>parameter8</code> TParameter8</p> <p>The eighth parameter of type TParameter8.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOf9/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/","title":"ICustomFunctionOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#icustomfunctionoptions-interface","title":"ICustomFunctionOptions Interface","text":"<p>Contains information on where custom function files are stored.</p> C#<pre><code>public interface ICustomFunctionOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#icustomfunctionoptionscustom_functions_section-field","title":"ICustomFunctionOptions.CUSTOM_FUNCTIONS_SECTION Field","text":"<p>Gets the configuration section containing custom function options.</p> C#<pre><code>const string CUSTOM_FUNCTIONS_SECTION = TSM:Calculation:Formulas:CustomFunctions;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#icustomfunctionoptionsdefault_custom_functions_path-field","title":"ICustomFunctionOptions.DEFAULT_CUSTOM_FUNCTIONS_PATH Field","text":"<p>Gets the default location for custom function files.</p> C#<pre><code>const string DEFAULT_CUSTOM_FUNCTIONS_PATH = CustomFunctions;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#field-value_1","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#icustomfunctionoptionscustomfunctionpaths-property","title":"ICustomFunctionOptions.CustomFunctionPaths Property","text":"<p>Gets all paths where custom functions can be stored as System.String objects.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;string&gt; CustomFunctionPaths { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionOptions/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;System.String&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/","title":"ICustomFunctionProvider","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#icustomfunctionprovider-interface","title":"ICustomFunctionProvider Interface","text":"<p>Interface for the class used for obtaining them implementations of ICustomFunction from  user-provided .csx and .dll files.</p> C#<pre><code>public interface ICustomFunctionProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#icustomfunctionprovidergetcustomfunctiontypes-method","title":"ICustomFunctionProvider.GetCustomFunctionTypes() Method","text":"<p>Obtains all implementations of ICustomFunction in the user-provided csx and dll files.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Type&gt;&gt; GetCustomFunctionTypes();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt; An System.Collections.Generic.IEnumerable&lt;&gt; containing the types of the obtained             implementations of ICustomFunction represented as key-value pairs with the              the CustomFunctionNameAttribute as keys and the retrieved types as values</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#icustomfunctionprovidertrygetcustomfunctiontypes-method","title":"ICustomFunctionProvider.TryGetCustomFunctionTypes() Method","text":"<p>Obtains all implementations of ICustomFunction in the user-provided csx and dll files.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Type&gt;&gt;&gt; TryGetCustomFunctionTypes();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Calculation/Formulas/CustomFunctions/ICustomFunctionProvider/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;&gt; An System.Collections.Generic.IEnumerable&lt;&gt; containing a Result&lt;TValue&gt; whether the types of the obtained             implementations of ICustomFunction are represented as key-value pairs with the              the CustomFunctionNameAttribute as keys and the retrieved types as values</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/","title":"HAKOM.TSM.Net.Api.Data","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/#hakomtsmnetapidata-namespace","title":"HAKOM.TSM.Net.Api.Data Namespace","text":"Interfaces IData&lt;TValue&gt; Represents a single point of data along with information regarding the quality of thatparticular data point."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/","title":"IData&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#idatatvalue-interface","title":"IData&lt;TValue&gt; Interface","text":"<p>Represents a single point of data along with information regarding the quality of that particular data point.</p> C#<pre><code>public interface IData&lt;TValue&gt; :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the data.</p> <p>Derived \u21b3 TimeSeriesDataCalculationWrapper&lt;TValue&gt; \u21b3 ITimeSeriesData&lt;TValue&gt; \u21b3 ITimeSeriesDataSpan&lt;TValue&gt;</p> <p>Implements System.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#idataflag-property","title":"IData.Flag Property <p>Gets or sets the Flag of the data point.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag Flag { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#property-value","title":"Property Value","text":"<p>Flag</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#idatavalue-property","title":"IData.Value Property <p>Gets or sets the value of the data point.</p> C#<pre><code>TValue Value { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/IDataOf1/#property-value_1","title":"Property Value","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/","title":"HAKOM.TSM.Net.Api.Data.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/#hakomtsmnetapidataextensions-namespace","title":"HAKOM.TSM.Net.Api.Data.Extensions Namespace","text":"Classes ContainerExtensions Defines extension methods on IContainer for registering services used to work with data. ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Defines extension methods on IContainer for registering services used to work with data.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsuseattributedatastoretstorageprovidertattributedatastorethis-icontainer-method","title":"ContainerExtensions.UseAttributeDataStore&lt;TStorageProvider,TAttributeDataStore&gt;(this IContainer) Method","text":"<p>Registers a custom implementation ofIAttributeDataStore.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseAttributeDataStore&lt;TStorageProvider,TAttributeDataStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TAttributeDataStore : class, HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider used to access data in storage.</p> <p></p> <p><code>TAttributeDataStore</code></p> <p>The type of IAttributeDataStore which will be registered.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusecompressedtimeseriesdatacollectionstoragewritertcompressedvaluetstorageprovidertcompressedtimeseriesdatacollectionstoragewriterthis-icontainer-method","title":"ContainerExtensions.UseCompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue,TStorageProvider,TCompressedTimeSeriesDataCollectionStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any compressed time series block data collection storage writer, which implements the ICompressedTimeSeriesDataCollectionStorageWriter interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue,TStorageProvider,TCompressedTimeSeriesDataCollectionStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TCompressedTimeSeriesDataCollectionStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>Type of compressed values, which can be saved with the storage provider.</p> <p></p> <p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the compressed time series data collection storage writer.</p> <p></p> <p><code>TCompressedTimeSeriesDataCollectionStorageWriter</code></p> <p>The class of the compressed time series data collection storage writer, which implements the ICompressedTimeSeriesDataCollectionStorageWriter interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the compressed time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusecompressedtimeseriesdatastoragereadertstorageprovidertconfigurationttimeseriesdatastoragereaderthis-icontainer-method","title":"ContainerExtensions.UseCompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageReader&gt;(this IContainer) Method","text":"<p>Registers any time series data storage reader, which implements the ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageReader&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesDataStorageReader : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data storage reader.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration             interface, for the time series data storage reader.</p> <p></p> <p><code>TTimeSeriesDataStorageReader</code></p> <p>The class of the time series data storage reader, which implements the ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusecompressedtimeseriesdatastoragewritertstorageprovidertconfigurationtcompressedtimeseriesdatastoragewriterthis-icontainer-method","title":"ContainerExtensions.UseCompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration,TCompressedTimeSeriesDataStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any compressed time series data storage writer, which implements the ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration,TCompressedTimeSeriesDataStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TCompressedTimeSeriesDataStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the compressed time series data storage writer.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the compressed time series data storage writer.</p> <p></p> <p><code>TCompressedTimeSeriesDataStorageWriter</code></p> <p>The class of the compressed time series data storage reader, which implements the ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the compressed time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusecompressedtimeseriesdatastoretcompressedvaluetstorageprovidertconfigurationthis-icontainer-method","title":"ContainerExtensions.UseCompressedTimeSeriesDataStore&lt;TCompressedValue,TStorageProvider,TConfiguration&gt;(this IContainer) Method","text":"<p>Registers a compressed (non-quotation) time series data store, which implements the ITimeSeriesDataStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCompressedTimeSeriesDataStore&lt;TCompressedValue,TStorageProvider,TConfiguration&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TCompressedValue : System.IComparable&lt;TCompressedValue&gt;, System.IEquatable&lt;TCompressedValue&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_4","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type which will be used to store the compressed values.</p> <p></p> <p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data store.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaultattributedatastoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultAttributeDataStores(this IContainer) Method","text":"<p>Registers the default implementations of IAttributeDataStore.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultAttributeDataStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaultcompressedtimeseriesdatastoragesthis-icontainer-method","title":"ContainerExtensions.UseDefaultCompressedTimeSeriesDataStorages(this IContainer) Method","text":"<p>Registers compressed time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultCompressedTimeSeriesDataStorages(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_6","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the compressed storages with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_6","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaultdatafactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultDataFactories(this IContainer) Method","text":"<p>Registers factory implementations for work with data.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultDataFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_7","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_7","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaultsfordatathis-icontainer-method","title":"ContainerExtensions.UseDefaultsForData(this IContainer) Method","text":"<p>Registers implementations for all data related services.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultsForData(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_8","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the services with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_8","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesdataquerybuildersthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesDataQueryBuilders(this IContainer) Method","text":"<p>Registers ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt; implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesDataQueryBuilders(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_9","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the query builders with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_9","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesdatastorageconfigurationreadersthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesDataStorageConfigurationReaders(this IContainer) Method","text":"<p>Registers time series data storage collection reader implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesDataStorageConfigurationReaders(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_10","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_10","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesdatastorageconfigurationwritersthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesDataStorageConfigurationWriters(this IContainer) Method","text":"<p>Registers time series data storage collection writer implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesDataStorageConfigurationWriters(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_11","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_11","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesdatastoragesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesDataStorages(this IContainer) Method","text":"<p>Registers time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesDataStorages(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_12","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_12","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesquotationdatastoragesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesQuotationDataStorages(this IContainer) Method","text":"<p>Registers compressed time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesQuotationDataStorages(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_13","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the compressed storages with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_13","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatacollectionstoragewritertvaluetstorageproviderttimeseriesdatacollectionstoragewriterthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataCollectionStorageWriter&lt;TValue,TStorageProvider,TTimeSeriesDataCollectionStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any time series data collection storage writer, which implements the ITimeSeriesDataCollectionStorageWriter interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataCollectionStorageWriter&lt;TValue,TStorageProvider,TTimeSeriesDataCollectionStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TTimeSeriesDataCollectionStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Type of the data values, which can be saved with the storage provider.</p> <p></p> <p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data collection storage writer.</p> <p></p> <p><code>TTimeSeriesDataCollectionStorageWriter</code></p> <p>The class of the time series data collection storage writer, which implements the ITimeSeriesDataCollectionStorageWriter interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_14","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_14","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdataquerybuildertparametertparameterfactorythis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataQueryBuilder&lt;TParameter,TParameterFactory&gt;(this IContainer) Method","text":"<p>Registers any implementation of ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt; with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataQueryBuilder&lt;TParameter,TParameterFactory&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TParameter : HAKOM.Persistence.Sql.Net.Api.ISqlParameter\n    where TParameterFactory : HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory&lt;TParameter&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_6","title":"Type parameters","text":"<p><code>TParameter</code></p> <p>The parameter, which implements ISqlParameter.</p> <p></p> <p><code>TParameterFactory</code></p> <p>The parameter factory, which implements ISqlParameterFactory&lt;TParameter&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_15","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the query builder with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_15","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatastorageconfigurationreadertstorageprovidertconfigurationttimeseriesdatastorageconfigurationreaderthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageConfigurationReader&gt;(this IContainer) Method","text":"<p>Registers any time series data storage configuration reader, which implements the ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageConfigurationReader&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesDataStorageConfigurationReader : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_7","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the storage configuration reader.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data store configuration reader.</p> <p></p> <p><code>TTimeSeriesDataStorageConfigurationReader</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_16","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_16","title":"Returns","text":"<p>IContainer The IContainer itself</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatastorageconfigurationwritertstorageprovidertconfigurationttimeseriesdatastorageconfigurationwriterthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageConfigurationWriter&gt;(this IContainer) Method","text":"<p>Registers any time series data storage configuration writer, which implements the ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageConfigurationWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesDataStorageConfigurationWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_8","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the storage configuration writer.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data store configuration writer.</p> <p></p> <p><code>TTimeSeriesDataStorageConfigurationWriter</code></p> <p>The class of the time series data collection storage configuration writer, which implements the ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_17","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_17","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatastoragereadertstorageprovidertconfigurationttimeseriesdatastoragereaderthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageReader&gt;(this IContainer) Method","text":"<p>Registers any time series data storage reader, which implements the ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageReader&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesDataStorageReader : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_9","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data storage reader.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data storage reader.</p> <p></p> <p><code>TTimeSeriesDataStorageReader</code></p> <p>The class of the time series data storage reader, which implements the ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_18","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the reader with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_18","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatastoragewritertstorageprovidertconfigurationttimeseriesdatastoragewriterthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any time series data storage writer, which implements the ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesDataStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesDataStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_10","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data storage writer.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data storage writer.</p> <p></p> <p><code>TTimeSeriesDataStorageWriter</code></p> <p>The class of the time series data storage writer, which implements the ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_19","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_19","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesdatastoretstorageprovidertconfigurationthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesDataStore&lt;TStorageProvider,TConfiguration&gt;(this IContainer) Method","text":"<p>Registers a (non-compressed, non-quotation) time series data store, which implements the ITimeSeriesDataStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesDataStore&lt;TStorageProvider,TConfiguration&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_11","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data store.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_20","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_20","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesquotationdatacollectionstoragewritertvaluetstorageproviderttimeseriesquotationdatacollectionstoragewriterthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesQuotationDataCollectionStorageWriter&lt;TValue,TStorageProvider,TTimeSeriesQuotationDataCollectionStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any time series quotation data collection storage writer, which implements the ITimeSeriesQuotationDataCollectionStorageWriter interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesQuotationDataCollectionStorageWriter&lt;TValue,TStorageProvider,TTimeSeriesQuotationDataCollectionStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TTimeSeriesQuotationDataCollectionStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_12","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Type of values, which can be saved with the storage provider.</p> <p></p> <p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series quotation data collection storage writer.</p> <p></p> <p><code>TTimeSeriesQuotationDataCollectionStorageWriter</code></p> <p>The class of the time series quotation data collection storage writer, which implements the ITimeSeriesQuotationDataCollectionStorageWriter interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_21","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series quotation data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_21","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesquotationdatastoragereadertstorageprovidertconfigurationttimeseriesquotationdatastoragereaderthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesQuotationDataStorageReader&gt;(this IContainer) Method","text":"<p>Registers any time series data storage reader, which implements the ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration,TTimeSeriesQuotationDataStorageReader&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesQuotationDataStorageReader : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_13","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data storage reader.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration             interface, for the time series data storage reader.</p> <p></p> <p><code>TTimeSeriesQuotationDataStorageReader</code></p> <p>The class of the time series data storage reader, which implements the ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_22","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_22","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesquotationdatastoragewritertstorageprovidertconfigurationttimeseriesquotationdatastoragewriterthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesQuotationDataStorageWriter&gt;(this IContainer) Method","text":"<p>Registers any time series data storage writer, which implements the ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface, for time series with quotation enabled, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration,TTimeSeriesQuotationDataStorageWriter&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n    where TTimeSeriesQuotationDataStorageWriter : class, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider, TConfiguration&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_14","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series quotation data storage writer.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series quotation data storage writer.</p> <p></p> <p><code>TTimeSeriesQuotationDataStorageWriter</code></p> <p>The class of the time series quotation data storage reader, which implements the ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; interface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_23","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series quotation data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_23","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#containerextensionsusetimeseriesquotationdatastoretvaluetstorageprovidertconfigurationthis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesQuotationDataStore&lt;TValue,TStorageProvider,TConfiguration&gt;(this IContainer) Method","text":"<p>Registers a (non-compressed) quotation time series data store, which implements the ITimeSeriesDataStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesQuotationDataStore&lt;TValue,TStorageProvider,TConfiguration&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#type-parameters_15","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type which will be used to store the values.</p> <p></p> <p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series data store.</p> <p></p> <p><code>TConfiguration</code></p> <p>Type of the data store configuration, which implements the ITimeSeriesDataStoreConfiguration interface, for the time series data store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#parameters_24","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series data store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ContainerExtensions/#returns_24","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattribute_data_resource_type-field","title":"ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of attribute data resources.</p> C#<pre><code>public const string ATTRIBUTE_DATA_RESOURCE_TYPE = AttributeData;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstime_series_audit_data_resource_type-field","title":"ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of timeseries audit data resources.</p> C#<pre><code>public const string TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE = TimeSeriesAuditData;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#field-value_1","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstime_series_data_configuration_resource_type-field","title":"ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of timeseries data configuration resources.</p> C#<pre><code>public const string TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE = TimeSeriesDataConfiguration;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#field-value_2","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstime_series_data_resource_type-field","title":"ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of timeseries data resources.</p> C#<pre><code>public const string TIME_SERIES_DATA_RESOURCE_TYPE = TimeSeriesData;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#field-value_3","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstime_series_quotation_data_resource_type-field","title":"ResourceFactoryExtensions.TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of timeseries quotation data resources.</p> C#<pre><code>public const string TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE = TimeSeriesQuotationData;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#field-value_4","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributedataresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.AttributeDataResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new attribute data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributedataresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.AttributeDataResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new attribute data IResource associated with the given storage provider.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the attribute data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributedataresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.AttributeDataResource(this IResourceFactory, string) Method","text":"<p>Creates a new attribute data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_2","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_2","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsattributedataresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.AttributeDataResource(this IResourceFactory) Method","text":"<p>Creates a new attribute data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource AttributeDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_3","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_3","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to ATTRIBUTE_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesauditdataresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.TimeSeriesAuditDataResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new timeseries audit data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesAuditDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_4","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_4","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesauditdataresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeSeriesAuditDataResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new timeseries audit data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesAuditDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_5","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_5","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesauditdataresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.TimeSeriesAuditDataResource(this IResourceFactory, string) Method","text":"<p>Creates a new timeseries audit data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesAuditDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_6","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_6","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesauditdataresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeSeriesAuditDataResource(this IResourceFactory) Method","text":"<p>Creates a new timeseries audit data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesAuditDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_7","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_7","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataconfigurationresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new timeseries data configuration IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataConfigurationResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_8","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_8","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataconfigurationresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new timeseries data configuration IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataConfigurationResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_9","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_9","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataconfigurationresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(this IResourceFactory, string) Method","text":"<p>Creates a new timeseries data configuration IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataConfigurationResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_10","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_10","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataconfigurationresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(this IResourceFactory) Method","text":"<p>Creates a new timeseries data configuration IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataConfigurationResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_11","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_11","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.TimeSeriesDataResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new timeseries data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_12","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_12","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeSeriesDataResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new timeseries data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_13","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_13","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.TimeSeriesDataResource(this IResourceFactory, string) Method","text":"<p>Creates a new timeseries data IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_14","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_14","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesdataresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeSeriesDataResource(this IResourceFactory) Method","text":"<p>Creates a new timeseries data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_15","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_15","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesquotationdataresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeSeriesQuotationDataResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new timeseries quotation data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesQuotationDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_16","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_16","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesquotationdataresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeSeriesQuotationDataResource(this IResourceFactory) Method","text":"<p>Creates a new timeseries quotation data IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesQuotationDataResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#parameters_17","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Extensions/ResourceFactoryExtensions/#returns_17","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/","title":"HAKOM.TSM.Net.Api.Data.Persistence.Attributes","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/#hakomtsmnetapidatapersistenceattributes-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.Attributes Namespace","text":"Interfaces IAttributeDataStore Used to read and write attribute data. IAttributeDataStoreFactory Used for creating instances of IAttributeDataStore."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/","title":"IAttributeDataStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastore-interface","title":"IAttributeDataStore Interface","text":"<p>Used to read and write attribute data.</p> C#<pre><code>public interface IAttributeDataStore\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoreconfigureistorageprovider-itimeseriesassignmentreferenceiattribute-cancellationtoken-method","title":"IAttributeDataStore.Configure(IStorageProvider, ITimeSeriesAssignmentReference&lt;IAttribute&gt;, CancellationToken) Method","text":"<p>Configures the data store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; assignedAttribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>assignedAttribute</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;IAttribute&gt;</p> <p>The ITimeSeriesAssignmentReference&lt;TAssigned&gt; which contains the  IAttribute whose data will be read or written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the configuration is complete.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoredeletecancellationtoken-method","title":"IAttributeDataStore.Delete(CancellationToken) Method","text":"<p>Deletes all attribute data of the configured time series-attribute assignment.</p> C#<pre><code>System.Threading.Tasks.Task Delete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorereadperiod-cancellationtoken-method","title":"IAttributeDataStore.Read(Period, CancellationToken) Method","text":"<p>Reads attribute data from the configured time series within the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;string?&gt;&gt; Read(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_2","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;System.String&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; representing the read data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorereadnodeassignmentperiod-cancellationtoken-method","title":"IAttributeDataStore.ReadNodeAssignment(Period, CancellationToken) Method","text":"<p>Reads node data from the configured attribute and time series within the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;&gt; ReadNodeAssignment(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_3","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;INodeReference&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; representing the read data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrydeletecancellationtoken-method","title":"IAttributeDataStore.TryDelete(CancellationToken) Method","text":"<p>Attempts to delete all attribute data of the configured time series-attribute assignment.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_4","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretryreadperiod-cancellationtoken-method","title":"IAttributeDataStore.TryRead(Period, CancellationToken) Method","text":"<p>Attempts to read attribute data from the configured time series within the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;string?&gt;&gt;&gt; TryRead(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_5","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;System.String&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretryreadnodeassignmentperiod-cancellationtoken-method","title":"IAttributeDataStore.TryReadNodeAssignment(Period, CancellationToken) Method","text":"<p>Attempts to read node data from the configured attribute and time series within the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt;&gt;&gt; TryReadNodeAssignment(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_6","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;INodeReference&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywriteitimeseriesdatacollectionstring-cancellationtoken-method","title":"IAttributeDataStore.TryWrite(ITimeSeriesDataCollection&lt;string&gt;, CancellationToken) Method","text":"<p>Attempts to write attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;string?&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_7","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;System.String&gt;</p> <p>The attribute data which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywritestring-cancellationtoken-method","title":"IAttributeDataStore.TryWrite(string, CancellationToken) Method","text":"<p>Attempts to write attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite(string? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_8","title":"Parameters","text":"<p><code>value</code> System.String</p> <p>The attribute which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be cancelled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_4","title":"Remarks","text":"<p>It will write to the configured StartOfTime.  </p> <p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywritedatetimeoffset-string-cancellationtoken-method","title":"IAttributeDataStore.TryWrite(DateTimeOffset, string, CancellationToken) Method","text":"<p>Attempts to write attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite(System.DateTimeOffset time, string? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_9","title":"Parameters","text":"<p><code>time</code> System.DateTimeOffset</p> <p>The point of time the attribute will be written to.</p> <p></p> <p><code>value</code> System.String</p> <p>The attribute which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywritenodeassignmentinodereference-cancellationtoken-method","title":"IAttributeDataStore.TryWriteNodeAssignment(INodeReference, CancellationToken) Method","text":"<p>Attempts to write node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteNodeAssignment(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_10","title":"Parameters","text":"<p><code>value</code> INodeReference</p> <p>The node which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be cancelled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_6","title":"Remarks","text":"<p>It will write to the configured StartOfTime.  </p> <p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywritenodeassignmentitimeseriesdatacollectioninodereference-cancellationtoken-method","title":"IAttributeDataStore.TryWriteNodeAssignment(ITimeSeriesDataCollection&lt;INodeReference&gt;, CancellationToken) Method","text":"<p>Attempts to write node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteNodeAssignment(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_11","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;INodeReference&gt;</p> <p>The node data which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_7","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastoretrywritenodeassignmentdatetimeoffset-inodereference-cancellationtoken-method","title":"IAttributeDataStore.TryWriteNodeAssignment(DateTimeOffset, INodeReference, CancellationToken) Method","text":"<p>Attempts to write node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteNodeAssignment(System.DateTimeOffset time, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_12","title":"Parameters","text":"<p><code>time</code> System.DateTimeOffset</p> <p>The point of time the attribute will be written to.</p> <p></p> <p><code>value</code> INodeReference</p> <p>The node which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_8","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewriteitimeseriesdatacollectionstring-cancellationtoken-method","title":"IAttributeDataStore.Write(ITimeSeriesDataCollection&lt;string&gt;, CancellationToken) Method","text":"<p>Writes attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task Write(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;string?&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_13","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;System.String&gt;</p> <p>The attribute data which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewritestring-cancellationtoken-method","title":"IAttributeDataStore.Write(string, CancellationToken) Method","text":"<p>Writes attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task Write(string? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_14","title":"Parameters","text":"<p><code>value</code> System.String</p> <p>The attribute which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_9","title":"Remarks","text":"<p>It will write to the configured StartOfTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewritedatetimeoffset-string-cancellationtoken-method","title":"IAttributeDataStore.Write(DateTimeOffset, string, CancellationToken) Method","text":"<p>Writes attribute data to the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task Write(System.DateTimeOffset time, string? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_15","title":"Parameters","text":"<p><code>time</code> System.DateTimeOffset</p> <p>The point of time the attribute will be written to.</p> <p></p> <p><code>value</code> System.String</p> <p>The attribute which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_15","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewritenodeassignmentinodereference-cancellationtoken-method","title":"IAttributeDataStore.WriteNodeAssignment(INodeReference, CancellationToken) Method","text":"<p>Writes node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteNodeAssignment(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_16","title":"Parameters","text":"<p><code>value</code> INodeReference</p> <p>The node which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_16","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#remarks_10","title":"Remarks","text":"<p>It will write to the configured StartOfTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewritenodeassignmentitimeseriesdatacollectioninodereference-cancellationtoken-method","title":"IAttributeDataStore.WriteNodeAssignment(ITimeSeriesDataCollection&lt;INodeReference&gt;, CancellationToken) Method","text":"<p>Writes node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteNodeAssignment(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference?&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_17","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;INodeReference&gt;</p> <p>The node data which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_17","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#iattributedatastorewritenodeassignmentdatetimeoffset-inodereference-cancellationtoken-method","title":"IAttributeDataStore.WriteNodeAssignment(DateTimeOffset, INodeReference, CancellationToken) Method","text":"<p>Writes node data to the configured attribute and time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteNodeAssignment(System.DateTimeOffset time, HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference? value, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#parameters_18","title":"Parameters","text":"<p><code>time</code> System.DateTimeOffset</p> <p>The point of time the attribute will be written to.</p> <p></p> <p><code>value</code> INodeReference</p> <p>The node which will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStore/#returns_18","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task indicating the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/","title":"IAttributeDataStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Attributes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#iattributedatastorefactory-interface","title":"IAttributeDataStoreFactory Interface","text":"<p>Used for creating instances of IAttributeDataStore.</p> C#<pre><code>public interface IAttributeDataStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#iattributedatastorefactorycreateistorageprovider-itimeseriesassignmentreferenceiattribute-cancellationtoken-method","title":"IAttributeDataStoreFactory.Create(IStorageProvider, ITimeSeriesAssignmentReference&lt;IAttribute&gt;, CancellationToken) Method","text":"<p>Creates a new instance of IAttributeDataStore and configures it with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; assignedAttribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for the configuration.</p> <p></p> <p><code>assignedAttribute</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;IAttribute&gt;</p> <p>The ITimeSeriesAssignmentReference&lt;TAssigned&gt; used for the configuration.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeDataStore&gt; The new instance of IAttributeDataStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#iattributedatastorefactorytrycreateistorageprovider-itimeseriesassignmentreferenceiattribute-cancellationtoken-method","title":"IAttributeDataStoreFactory.TryCreate(IStorageProvider, ITimeSeriesAssignmentReference&lt;IAttribute&gt;, CancellationToken) Method","text":"<p>Tries to create a new instance of IAttributeDataStore and configures it with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; assignedAttribute, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for the configuration.</p> <p></p> <p><code>assignedAttribute</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;IAttribute&gt;</p> <p>The ITimeSeriesAssignmentReference&lt;TAssigned&gt; used for the configuration.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeDataStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  IAttributeDataStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/IAttributeDataStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/#hakomtsmnetapidatapersistenceattributesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions Namespace","text":"Classes NodeDataMustBeAssignedToAttributeOfTypeNodeException Indicates that an attempt was made to read or write data from or to an attribute, which was not of type node. UnsupportedNodeReferenceOrStoreTypeException Indicates that an INodeReference&lt;TIdentifier&gt; or an INodeStore&lt;TIdentifier&gt; was expected, but the incorrect TIdentifier type was found. WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException Indicates that an attempt was made to write data collection of attributes but properties where invalid."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/","title":"NodeDataMustBeAssignedToAttributeOfTypeNodeException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/#nodedatamustbeassignedtoattributeoftypenodeexception-class","title":"NodeDataMustBeAssignedToAttributeOfTypeNodeException Class","text":"<p>Indicates that an attempt was made to read or write data from or to an attribute, which was not of type node.</p> C#<pre><code>public sealed class NodeDataMustBeAssignedToAttributeOfTypeNodeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NodeDataMustBeAssignedToAttributeOfTypeNodeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/#remarks","title":"Remarks","text":"<p>Node data can only be written to or read from attributes of type node.  </p> <p>This exception is identified by error code HK15134.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/#nodedatamustbeassignedtoattributeoftypenodeexceptionequivalenthttpstatuscode-property","title":"NodeDataMustBeAssignedToAttributeOfTypeNodeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/NodeDataMustBeAssignedToAttributeOfTypeNodeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/","title":"UnsupportedNodeReferenceOrStoreTypeException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/#unsupportednodereferenceorstoretypeexception-class","title":"UnsupportedNodeReferenceOrStoreTypeException Class","text":"<p>Indicates that an INodeReference&lt;TIdentifier&gt; or an INodeStore&lt;TIdentifier&gt; was expected, but the incorrect TIdentifier type was found.</p> C#<pre><code>public sealed class UnsupportedNodeReferenceOrStoreTypeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnsupportedNodeReferenceOrStoreTypeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/#remarks","title":"Remarks","text":"<p>Out of the box only System.Int32 is supported.  </p> <p>This exception is identified by error code HK15134.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/#unsupportednodereferenceorstoretypeexceptionequivalenthttpstatuscode-property","title":"UnsupportedNodeReferenceOrStoreTypeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/UnsupportedNodeReferenceOrStoreTypeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/","title":"WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/#writingattributedatacollectionwithconfiguredpropertiesnotsupportedexception-class","title":"WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException Class","text":"<p>Indicates that an attempt was made to write data collection of attributes but properties where invalid.</p> C#<pre><code>public sealed class WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/#remarks","title":"Remarks","text":"<p>The properties have to fulfill certain rules in order to be allowed for writing it as attribute data; - Cyclic = false - Function = StepRight() - Unit = true - TimeZone matches the time zone of the assigned ITimeSeries.  </p> <p>This exception is identified by error code HK15092.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/#writingattributedatacollectionwithconfiguredpropertiesnotsupportedexceptionequivalenthttpstatuscode-property","title":"WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Attributes/Exceptions/WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/#hakomtsmnetapidatapersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.Exceptions Namespace","text":"Classes ValueTypeNotSupportedException Abstract class for exceptions indicating an unsupported value type for a time series data read/write/delete operation"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/ValueTypeNotSupportedException/","title":"ValueTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/ValueTypeNotSupportedException/#valuetypenotsupportedexception-class","title":"ValueTypeNotSupportedException Class","text":"<p>Abstract class for exceptions indicating an unsupported value type for a time series data read/write/delete operation</p> C#<pre><code>public abstract class ValueTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ValueTypeNotSupportedException</p> <p>Derived \u21b3 TimeSeriesCompressedValueTypeNotSupportedException \u21b3 TimeSeriesValueTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/ValueTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/ValueTypeNotSupportedException/#valuetypenotsupportedexceptionequivalenthttpstatuscode-property","title":"ValueTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/Exceptions/ValueTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/#hakomtsmnetapidatapersistencetimeseries-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries Namespace","text":"Interfaces IAuditLogEntry An interface used to describe an audit log entry, containing information about when the entry was recorded and the corresponding time span. ICompressedTimeSeriesDataCollectionStorageWriter Provides methods for writing compressed data to the configured storage. ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; Provides methods to either collect single ICompressedTimeSeriesData&lt;TCompressedValue&gt; entries and write them all at once or stream the ICompressedTimeSeriesData&lt;TCompressedValue&gt; entries, depending on the storage. ICompressedTimeSeriesDataCollectionStorageWriterFactory Factory for creating ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; objects for writing compressed data to a storage. ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Provides method for reading data from the storage provider. ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Provides methods for writing compressed data to the storage provider. IDataPeriod Represents the Period part of the saved data for e.g. IAuditLogEntrys. IDataPeriod&lt;TSelf&gt; Generic representation of a period of specific data. Applications of this interface include but are not limited to: ITimeSeriesDataCollectionStorageWriter Provides methods for writing data to the configured storage. ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; Provides methods to either collect single ITimeSeriesData&lt;TValue&gt; entries and write them all at once or stream the ITimeSeriesData&lt;TValue&gt; entries, depending on the storage. ITimeSeriesDataCollectionStorageWriterFactory Factory for creating ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; objects for writing data to a storage. ITimeSeriesDataReadingOptions Represents options for reading time series data. ITimeSeriesDataReadingOptionsFactory Used for creating new ITimeSeriesDataReadingOptions. ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt; Used to load configurations from the storage. ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt; Used to write configurations to storage. ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Provides method for reading data from the storage provider. ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Provides method for writing data to the storage provider. ITimeSeriesDataStore A data store to read and write time series data. ITimeSeriesDataStore&lt;TConfiguration&gt; A data store used to read and write time series data. ITimeSeriesDataStoreConfiguration Storage options of a time series for persistence. ITimeSeriesDataStoreConfigurationFactory Used to create ITimeSeriesDataStoreConfiguration objects. ITimeSeriesDataStoreFactory Used to create ITimeSeriesDataStore objects. ITimeSeriesDataWritingOptions Represents options for writing time series data. ITimeSeriesDataWritingOptionsFactory Used for creating new ITimeSeriesDataWritingOptions."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IAuditLogEntry/","title":"IAuditLogEntry","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IAuditLogEntry/#iauditlogentry-interface","title":"IAuditLogEntry Interface","text":"<p>An interface used to describe an audit log entry, containing information about when the entry was recorded and the corresponding time span.</p> C#<pre><code>public interface IAuditLogEntry :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt;\n</code></pre> <p>Derived \u21b3 IAuditedQuotationEntry</p> <p>Implements IDataPeriod, System.IEquatable&lt;IDataPeriod&gt;, System.IEquatable&lt;IAuditLogEntry&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IAuditLogEntry/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IAuditLogEntry/#iauditlogentryhistoricdatetime-property","title":"IAuditLogEntry.HistoricDateTime Property","text":"<p>Gets the timestamp, represented as a System.DateTimeOffset, indicating the moment when the audit entry was recorded.</p> C#<pre><code>System.DateTimeOffset HistoricDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IAuditLogEntry/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/","title":"ICompressedTimeSeriesDataCollectionStorageWriter","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#icompressedtimeseriesdatacollectionstoragewriter-interface","title":"ICompressedTimeSeriesDataCollectionStorageWriter Interface","text":"<p>Provides methods for writing compressed data to the configured storage.</p> C#<pre><code>public interface ICompressedTimeSeriesDataCollectionStorageWriter :\nSystem.IDisposable,\nSystem.IAsyncDisposable\n</code></pre> <p>Derived \u21b3 ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;</p> <p>Implements System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#icompressedtimeseriesdatacollectionstoragewriterbeginwritecancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter.BeginWrite(CancellationToken) Method","text":"<p>Initializes the writing of data.</p> C#<pre><code>System.Threading.Tasks.Task BeginWrite(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#icompressedtimeseriesdatacollectionstoragewriterconfigurestorageprovideristorageprovider-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter.ConfigureStorageProvider(IStorageProvider) Method","text":"<p>Configures the ICompressedTimeSeriesDataCollectionStorageWriter with the provided IStorageProvider.</p> C#<pre><code>System.Threading.Tasks.Task ConfigureStorageProvider(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for writing data to the store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriter/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#icompressedtimeseriesdatacollectionstoragewriterfactory-interface","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory Interface","text":"<p>Factory for creating ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; objects for writing compressed data to a storage.</p> C#<pre><code>public interface ICompressedTimeSeriesDataCollectionStorageWriterFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#icompressedtimeseriesdatacollectionstoragewriterfactorycreateistorageprovider-type-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory.Create(IStorageProvider, Type, CancellationToken) Method","text":"<p>Creates an instance of an ICompressedTimeSeriesDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of compressed data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ICompressedTimeSeriesDataCollectionStorageWriter&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ICompressedTimeSeriesDataCollectionStorageWriter instance for writing compressed data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#remarks","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#icompressedtimeseriesdatacollectionstoragewriterfactorycreatetcompressedvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory.Create&lt;TCompressedValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset, CancellationToken) Method","text":"<p>Creates a new ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; object and calls the configure method.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt; Create&lt;TCompressedValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the compressed data should be written.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the compressed data is written.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the compressed data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; instance for writing compressed data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#remarks_1","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#icompressedtimeseriesdatacollectionstoragewriterfactorytrycreateistorageprovider-type-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory.TryCreate(IStorageProvider, Type, CancellationToken) Method","text":"<p>Tries to create an instance of an ICompressedTimeSeriesDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#parameters_2","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of compressed data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ICompressedTimeSeriesDataCollectionStorageWriter&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ICompressedTimeSeriesDataCollectionStorageWriter for writing compressed data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#icompressedtimeseriesdatacollectionstoragewriterfactorytrycreatetcompressedvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriterFactory.TryCreate&lt;TCompressedValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to create a new ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; object and calls the configure method.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt;&gt; TryCreate&lt;TCompressedValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#parameters_3","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the compressed data should be written.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the compressed data is written.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the compressed data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; for writing compressed data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterFactory/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvalue-interface","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; Interface","text":"<p>Provides methods to either collect single ICompressedTimeSeriesData&lt;TCompressedValue&gt; entries and write them all at once  or stream the ICompressedTimeSeriesData&lt;TCompressedValue&gt; entries, depending on the storage.</p> C#<pre><code>public interface ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter,\nSystem.IDisposable,\nSystem.IAsyncDisposable\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The value type of the compressed data.</p> <p>Implements ICompressedTimeSeriesDataCollectionStorageWriter, System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvalueconfigureitimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.Configure(ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset) Method","text":"<p>Configures the current ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing additional information where the compressed data should be stored to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the compressed data should be stored to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the compressed data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvalueflushcancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.Flush(CancellationToken) Method","text":"<p>Clears buffers and causes any buffered data to be written to the storage.</p> C#<pre><code>System.Threading.Tasks.Task Flush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvaluetryflushcancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.TryFlush(CancellationToken) Method","text":"<p>Attempts to clear buffers and write buffered data to the storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryFlush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing information about the success or failure of the attempt.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvaluewriteicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.Write(ICompressedTimeSeriesData&lt;TCompressedValue&gt;, CancellationToken) Method","text":"<p>Writes data to the storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task Write(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_3","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;</p> <p>The ICompressedTimeSeriesData&lt;TCompressedValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvaluewriteiasyncenumerableicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.Write(IAsyncEnumerable&lt;ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes a collection to the storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task Write(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_4","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;</p> <p>The System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ICompressedTimeSeriesData&lt;TCompressedValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvaluewritehistoricdataicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.WriteHistoricData(ICompressedTimeSeriesData&lt;TCompressedValue&gt;, CancellationToken) Method","text":"<p>Writes data to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_5","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;</p> <p>The ICompressedTimeSeriesData&lt;TCompressedValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#icompressedtimeseriesdatacollectionstoragewritertcompressedvaluewritewithhistoricdataicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;.WriteWithHistoricData(ICompressedTimeSeriesData&lt;TCompressedValue&gt;, CancellationToken) Method","text":"<p>Writes data to the storage and history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteWithHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#parameters_6","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;</p> <p>The ICompressedTimeSeriesData&lt;TCompressedValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataCollectionStorageWriterOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfiguration-interface","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides method for reading data from the storage provider.</p> C#<pre><code>public interface ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider from which the data is read.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures this instance of ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference of which the data should be read from.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be read from.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where to read the data from in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationreadtcompressedvalueperiod-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.Read&lt;TCompressedValue&gt;(Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; Read&lt;TCompressedValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TCompressedValue : System.IEquatable&lt;TCompressedValue&gt;, System.IComparable&lt;TCompressedValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_1","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The period of the data to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; A stream of compressed time series data for the given period.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationreadauditlogsdatetimeoffset-period-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadAuditLogs(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads all data changes of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt; ReadAuditLogs(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_2","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAuditLogEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is a tuple containing the time of change and the period of the changed data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationreadhistoricdatatcompressedvaluedatetimeoffset-period-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadHistoricData&lt;TCompressedValue&gt;(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific historic date and time.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; ReadHistoricData&lt;TCompressedValue&gt;(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TCompressedValue : System.IEquatable&lt;TCompressedValue&gt;, System.IComparable&lt;TCompressedValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_3","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of the historic time series data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_4","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetcompressedvaluecancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TCompressedValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given TCompressedValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TCompressedValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TCompressedValue : System.IComparable&lt;TCompressedValue&gt;, System.IEquatable&lt;TCompressedValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters_3","title":"Type parameters","text":"<p><code>TCompressedValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_5","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationtryreadtcompressedvalueperiod-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryRead&lt;TCompressedValue&gt;(Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; TryRead&lt;TCompressedValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TCompressedValue : System.IEquatable&lt;TCompressedValue&gt;, System.IComparable&lt;TCompressedValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters_4","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_6","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The period of the data to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_6","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the read data Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationtryreadauditlogsdatetimeoffset-period-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadAuditLogs(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads all data changes of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt;&gt; TryReadAuditLogs(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_7","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_7","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuditLogEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of a tuple containing the time of change and the period of the changed data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#icompressedtimeseriesdatastoragereadertstorageprovidertconfigurationtryreadhistoricdatatcompressedvaluedatetimeoffset-period-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadHistoricData&lt;TCompressedValue&gt;(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific historic date and time.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; TryReadHistoricData&lt;TCompressedValue&gt;(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TCompressedValue : System.IEquatable&lt;TCompressedValue&gt;, System.IComparable&lt;TCompressedValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#type-parameters_5","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#parameters_8","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageReaderOf2/#returns_8","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; A stream of results which - if successful - each contain a block of historic time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfiguration-interface","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides methods for writing compressed data to the storage provider.</p> C#<pre><code>public interface ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider to which the compressed data is written.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationbeginwritingcollectiontcompressedvaluedatetimeoffset-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.BeginWritingCollection&lt;TCompressedValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Initializes the writing of compressed data and returns a ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; to perform the writing of compressed data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt; BeginWritingCollection&lt;TCompressedValue&gt;(System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The value type of the compressed data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the compressed data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt;&gt; a ICompressedTimeSeriesDataCollectionStorageWriter&lt;TCompressedValue&gt; to perform compressed data writing.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures the current ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to which the compressed data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the compressed data should be written to.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where the data should be written in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationdeleteperiod-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(Period, CancellationToken) Method","text":"<p>Deletes data of the configured time series in the given deletionPeriod.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Time.Periods.Period deletionPeriod, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_2","title":"Parameters","text":"<p><code>deletionPeriod</code> Period</p> <p>The Period to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationdeletecancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(CancellationToken) Method","text":"<p>Deletes all data of the configured time series in the current HAKOM.Configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationdeletetconfiguration-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(TConfiguration, CancellationToken) Method","text":"<p>Deletes all data of the configured time series in the given configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_4","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where the data should be deleted from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_5","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetcompressedvaluecancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TCompressedValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given TCompressedValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TCompressedValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type which should be checked for support.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_6","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#icompressedtimeseriesdatastoragewritertstorageprovidertconfigurationwriteauditlogiauditlogentry-cancellationtoken-method","title":"ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.WriteAuditLog(IAuditLogEntry, CancellationToken) Method","text":"<p>Writes an audit log entry for the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteAuditLog(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry auditLogEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#parameters_7","title":"Parameters","text":"<p><code>auditLogEntry</code> IAuditLogEntry</p> <p>The Period representing the from and to time of the written data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ICompressedTimeSeriesDataStorageWriterOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriod/","title":"IDataPeriod","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriod/#idataperiod-interface","title":"IDataPeriod Interface","text":"<p>Represents the Period part of the saved data for e.g. IAuditLogEntrys.</p> C#<pre><code>public interface IDataPeriod :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&gt;\n</code></pre> <p>Derived \u21b3 IAuditLogEntry \u21b3 IDataPeriod&lt;TSelf&gt; \u21b3 IAuditedQuotationEntry \u21b3 IQuotationEntry</p> <p>Implements System.IEquatable&lt;IDataPeriod&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriod/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriod/#idataperiodperiod-property","title":"IDataPeriod.Period Property","text":"<p>Gets the time period, represented by a Period structure and specifies the period for which data was saved.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Periods.Period Period { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriod/#property-value","title":"Property Value","text":"<p>Period</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/","title":"IDataPeriod&lt;TSelf&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#idataperiodtself-interface","title":"IDataPeriod&lt;TSelf&gt; Interface","text":"<p>Generic representation of a period of specific data. Applications of this interface include but are not limited to: - representing a period of time in the audit log for which changes have been made to time series data. (see IAuditLogEntry). - representing a period of time for which a quotation has been saved (see IQuotationEntry).</p> C#<pre><code>public interface IDataPeriod&lt;TSelf&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&gt;\n    where TSelf : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&lt;TSelf&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#type-parameters","title":"Type parameters","text":"<p><code>TSelf</code></p> <p>Is the type of the interface which implements IDataPeriod&lt;TSelf&gt;.</p> <p>Implements IDataPeriod, System.IEquatable&lt;IDataPeriod&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#idataperiodtselfcreatetself-period-method","title":"IDataPeriod&lt;TSelf&gt;.Create(TSelf, Period) Method","text":"<p>Creates a new instance of TSelf with every property of the given original and  the new given period.</p> C#<pre><code>abstract static TSelf Create(TSelf original, HAKOM.TSM.Net.Api.Time.Periods.Period period);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#parameters","title":"Parameters","text":"<p><code>original</code> TSelf</p> <p>The TSelf with the properties except the Period for the new TSelf.</p> <p></p> <p><code>period</code> Period</p> <p>The Period representing the time span of the new TSelf.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/IDataPeriodOf1/#returns","title":"Returns","text":"<p>TSelf A new instance of TSelf.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/","title":"ITimeSeriesDataCollectionStorageWriter","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#itimeseriesdatacollectionstoragewriter-interface","title":"ITimeSeriesDataCollectionStorageWriter Interface","text":"<p>Provides methods for writing data to the configured storage.</p> C#<pre><code>public interface ITimeSeriesDataCollectionStorageWriter :\nSystem.IDisposable,\nSystem.IAsyncDisposable\n</code></pre> <p>Derived \u21b3 ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;</p> <p>Implements System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#itimeseriesdatacollectionstoragewriterbeginwritecancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter.BeginWrite(CancellationToken) Method","text":"<p>Initializes the writing of data.</p> C#<pre><code>System.Threading.Tasks.Task BeginWrite(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#itimeseriesdatacollectionstoragewriterconfigureistorageprovider-method","title":"ITimeSeriesDataCollectionStorageWriter.Configure(IStorageProvider) Method","text":"<p>Configures the ITimeSeriesDataCollectionStorageWriter with the provided IStorageProvider.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for writing data to the store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriter/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/","title":"ITimeSeriesDataCollectionStorageWriterFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#itimeseriesdatacollectionstoragewriterfactory-interface","title":"ITimeSeriesDataCollectionStorageWriterFactory Interface","text":"<p>Factory for creating ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; objects for writing data to a storage.</p> C#<pre><code>public interface ITimeSeriesDataCollectionStorageWriterFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#itimeseriesdatacollectionstoragewriterfactorycreateistorageprovider-type-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriterFactory.Create(IStorageProvider, Type, CancellationToken) Method","text":"<p>Creates an instance of an ITimeSeriesDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesDataCollectionStorageWriter&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ITimeSeriesDataCollectionStorageWriter instance for writing data to a storage.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#itimeseriesdatacollectionstoragewriterfactorycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriterFactory.Create&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  using the specified storageProvider.  Calls the configure method for the ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt; Create&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; instance for writing data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#remarks","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#itimeseriesdatacollectionstoragewriterfactorytrycreateistorageprovider-type-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriterFactory.TryCreate(IStorageProvider, Type, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#parameters_2","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesDataCollectionStorageWriter&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeriesDataCollectionStorageWriter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#itimeseriesdatacollectionstoragewriterfactorytrycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriterFactory.TryCreate&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  Calls the configure method for the ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; TryCreate&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#parameters_3","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterFactory/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvalue-interface","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; Interface","text":"<p>Provides methods to either collect single ITimeSeriesData&lt;TValue&gt; entries and write them all at once  or stream the ITimeSeriesData&lt;TValue&gt; entries, depending on the storage.</p> C#<pre><code>public interface ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter,\nSystem.IDisposable,\nSystem.IAsyncDisposable\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p> <p>Implements ITimeSeriesDataCollectionStorageWriter, System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvalueconfigureitimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.Configure(ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset) Method","text":"<p>Configures the current ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset historicDateTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing additional information where the data should be stored to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be stored to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvalueflushcancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.Flush(CancellationToken) Method","text":"<p>Clears buffers and causes any buffered data to be written to the storage.</p> C#<pre><code>System.Threading.Tasks.Task Flush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvaluetryflushcancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.TryFlush(CancellationToken) Method","text":"<p>Attempts to clear buffers and write buffered data to the storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryFlush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing information about the success or failure of the attempt.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvaluewriteitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.Write(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Writes data to the storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task Write(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_3","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvaluewriteiasyncenumerableitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.Write(IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes a collection to the storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task Write(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_4","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvaluewritehistoricdataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.WriteHistoricData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Writes data to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_5","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#itimeseriesdatacollectionstoragewritertvaluewritewithhistoricdataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;.WriteWithHistoricData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Writes data to the storage and history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteWithHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#parameters_6","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataCollectionStorageWriterOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/","title":"ITimeSeriesDataReadingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptions-interface","title":"ITimeSeriesDataReadingOptions Interface","text":"<p>Represents options for reading time series data.</p> C#<pre><code>public interface ITimeSeriesDataReadingOptions\n</code></pre> <p>Derived \u21b3 ITimeSeriesQuotationDataReadingOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionscyclic-property","title":"ITimeSeriesDataReadingOptions.Cyclic Property","text":"<p>Gets a System.Boolean indicating whether the values along the time axis are cyclic or not.</p> C#<pre><code>System.Nullable&lt;bool&gt; Cyclic { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value","title":"Property Value","text":"<p>System.Nullable&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionsfunction-property","title":"ITimeSeriesDataReadingOptions.Function Property","text":"<p>Gets the FunctionType specifying how values are applied along the time axis.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; Function { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;FunctionType&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionshistoricdatetime-property","title":"ITimeSeriesDataReadingOptions.HistoricDateTime Property","text":"<p>Gets the DateTimeOffsetAtOrBefore that is used to define which historic data set should be read.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; HistoricDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_2","title":"Property Value","text":"<p>System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionsinterval-property","title":"ITimeSeriesDataReadingOptions.Interval Property","text":"<p>Gets the interval determining how the data should be read.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval? Interval { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_3","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionsintervaltransformationmethod-property","title":"ITimeSeriesDataReadingOptions.IntervalTransformationMethod Property","text":"<p>Gets the interval transformation method that is used to transform the data to the specified Interval.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; IntervalTransformationMethod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_4","title":"Property Value","text":"<p>System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionsperiod-property","title":"ITimeSeriesDataReadingOptions.Period Property","text":"<p>Gets the Period to be read from.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Periods.Period Period { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_5","title":"Property Value","text":"<p>Period</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionstimezone-property","title":"ITimeSeriesDataReadingOptions.TimeZone Property","text":"<p>Gets the ITimeZone determining the time zone in which the data should be read.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_6","title":"Property Value","text":"<p>ITimeZone</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#itimeseriesdatareadingoptionsunit-property","title":"ITimeSeriesDataReadingOptions.Unit Property","text":"<p>Gets a reference to the unit determining how the data should be read.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptions/#property-value_7","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/","title":"ITimeSeriesDataReadingOptionsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#itimeseriesdatareadingoptionsfactory-interface","title":"ITimeSeriesDataReadingOptionsFactory Interface","text":"<p>Used for creating new ITimeSeriesDataReadingOptions.</p> C#<pre><code>public interface ITimeSeriesDataReadingOptionsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#itimeseriesdatareadingoptionsfactorycreateperiod-iinterval-nullablebool-nullablefunctiontype-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-itimezone-method","title":"ITimeSeriesDataReadingOptionsFactory.Create(Period, IInterval, Nullable&lt;bool&gt;, Nullable&lt;FunctionType&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;, ITimeZone) Method","text":"<p>Creates a new instance of ITimeSeriesDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions Create(HAKOM.TSM.Net.Api.Time.Periods.Period period, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? interval=null, System.Nullable&lt;bool&gt; cyclic=null, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#parameters","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval determining how the data should be read.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>A System.Boolean indicating whether the data is cyclic or not.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>The FunctionType determining how the data should be read.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data to the specified interval.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone determining the time zone in which the data should be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#returns","title":"Returns","text":"<p>ITimeSeriesDataReadingOptions A new instance of ITimeSeriesDataReadingOptions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#itimeseriesdatareadingoptionsfactorycreatedatetimeoffset-datetimeoffset-iinterval-nullablebool-nullablefunctiontype-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-itimezone-method","title":"ITimeSeriesDataReadingOptionsFactory.Create(DateTimeOffset, DateTimeOffset, IInterval, Nullable&lt;bool&gt;, Nullable&lt;FunctionType&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;, ITimeZone) Method","text":"<p>Creates a new instance of ITimeSeriesDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions Create(System.DateTimeOffset from, System.DateTimeOffset to, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? interval=null, System.Nullable&lt;bool&gt; cyclic=null, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#parameters_1","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the from date.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the to date.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval determining how the data should be read.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>A System.Boolean indicating whether the data is cyclic or not.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>The FunctionType determining how the data should be read.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data to the specified interval.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone determining the time zone in which the data should be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#returns_1","title":"Returns","text":"<p>ITimeSeriesDataReadingOptions A new instance of ITimeSeriesDataReadingOptions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#itimeseriesdatareadingoptionsfactorycreatequotationoptionsperiod-nullabledatetimeoffsetatorbefore-nullablequotationbehavior-iinterval-nullablebool-nullablefunctiontype-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-itimezone-method","title":"ITimeSeriesDataReadingOptionsFactory.CreateQuotationOptions(Period, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;QuotationBehavior&gt;, IInterval, Nullable&lt;bool&gt;, Nullable&lt;FunctionType&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;, ITimeZone) Method","text":"<p>Creates a new instance of ITimeSeriesQuotationDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions CreateQuotationOptions(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; quotationBehavior=null, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? interval=null, System.Nullable&lt;bool&gt; cyclic=null, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#parameters_2","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the quotation date and time for which the data should be read and if the data should be read exactly at the quotation date.</p> <p></p> <p><code>quotationBehavior</code> System.Nullable&lt;QuotationBehavior&gt;</p> <p>The QuotationBehavior specifying how the quotation data should be read if the quotationDateTime is not set.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval determining how the data should be read.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>A System.Boolean indicating whether the data is cyclic or not.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>The FunctionType determining how the data should be read.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data to the specified interval.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone determining the time zone in which the data should be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#returns_2","title":"Returns","text":"<p>ITimeSeriesQuotationDataReadingOptions A new instance of ITimeSeriesDataReadingOptions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#itimeseriesdatareadingoptionsfactorycreatequotationoptionsdatetimeoffset-datetimeoffset-nullabledatetimeoffsetatorbefore-nullablequotationbehavior-iinterval-nullablebool-nullablefunctiontype-iunitreference-nullabledatetimeoffsetatorbefore-nullableintervaltransformationmethod-itimezone-method","title":"ITimeSeriesDataReadingOptionsFactory.CreateQuotationOptions(DateTimeOffset, DateTimeOffset, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;QuotationBehavior&gt;, IInterval, Nullable&lt;bool&gt;, Nullable&lt;FunctionType&gt;, IUnitReference, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;IntervalTransformationMethod&gt;, ITimeZone) Method","text":"<p>Creates a new instance of ITimeSeriesQuotationDataReadingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions CreateQuotationOptions(System.DateTimeOffset from, System.DateTimeOffset to, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; quotationBehavior=null, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? interval=null, System.Nullable&lt;bool&gt; cyclic=null, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#parameters_3","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the from date.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the to date.</p> <p></p> <p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the quotation date and time for which the data should be read and if the data should be read exactly at the quotation date.</p> <p></p> <p><code>quotationBehavior</code> System.Nullable&lt;QuotationBehavior&gt;</p> <p>The QuotationBehavior specifying how the quotation data should be read if the quotationDateTime is not set.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval determining how the data should be read.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>A System.Boolean indicating whether the data is cyclic or not.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>The FunctionType determining how the data should be read.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit determining how the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod that is used to transform the data to the specified interval.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone determining the time zone in which the data should be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataReadingOptionsFactory/#returns_3","title":"Returns","text":"<p>ITimeSeriesQuotationDataReadingOptions A new instance of ITimeSeriesDataReadingOptions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#itimeseriesdatastorageconfigurationreadertstorageprovidertconfiguration-interface","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Used to load configurations from the storage.</p> C#<pre><code>public interface ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>TConfiguration</code></p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#itimeseriesdatastorageconfigurationreadertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-method","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference) Method","text":"<p>Configures this instance of ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference of which the data should be read from.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#itimeseriesdatastorageconfigurationreadertstorageprovidertconfigurationloadconfigurationcancellationtoken-method","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;.LoadConfiguration(CancellationToken) Method","text":"<p>Loads the data store configuration from the storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;TConfiguration?&gt; LoadConfiguration(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;TConfiguration&gt; The data store configuration from the storage.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#itimeseriesdatastorageconfigurationreadertstorageprovidertconfigurationloadconfigurationscancellationtoken-method","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;.LoadConfigurations(CancellationToken) Method","text":"<p>Loads all data store configurations (current and previous) of the configured time series from the storage.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;TConfiguration&gt; LoadConfigurations(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;TConfiguration&gt; The data store configurations of the configured time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#itimeseriesdatastorageconfigurationreadertstorageprovidertconfigurationtryloadconfigurationscancellationtoken-method","title":"ITimeSeriesDataStorageConfigurationReader&lt;TStorageProvider,TConfiguration&gt;.TryLoadConfigurations(CancellationToken) Method","text":"<p>Loads all data store configurations (current and previous) of the configured time series from the storage.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConfiguration&gt;&gt; TryLoadConfigurations(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationReaderOf2/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TConfiguration&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the data store configurations of the configured time series represented as Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/","title":"ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#itimeseriesdatastorageconfigurationwritertstorageprovidertconfiguration-interface","title":"ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Used to write configurations to storage.</p> C#<pre><code>public interface ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>TConfiguration</code></p> <p>The data store configuration to save.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#itimeseriesdatastorageconfigurationwritertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-method","title":"ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference) Method","text":"<p>Configures this instance of ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>void Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>timeSeries</code> ITimeSeriesReference</p> <p>The ITimeSeries of which the data should be read from.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#itimeseriesdatastorageconfigurationwritertstorageprovidertconfigurationsaveconfigurationtconfiguration-cancellationtoken-method","title":"ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt;.SaveConfiguration(TConfiguration, CancellationToken) Method","text":"<p>Saves a data store configuration to the storage and changes the HAKOM.Configuration property to the given configuration.</p> C#<pre><code>System.Threading.Tasks.Task SaveConfiguration(TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#parameters_1","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#itimeseriesdatastorageconfigurationwritertstorageprovidertconfigurationtrysaveconfigurationtconfiguration-cancellationtoken-method","title":"ITimeSeriesDataStorageConfigurationWriter&lt;TStorageProvider,TConfiguration&gt;.TrySaveConfiguration(TConfiguration, CancellationToken) Method","text":"<p>Attempts to save the given config.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TrySaveConfiguration(TConfiguration config, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#parameters_2","title":"Parameters","text":"<p><code>config</code> TConfiguration</p> <p>The configuration which will be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken which can be used to interrupt the process.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageConfigurationWriterOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing a Result. If the attempt was successful, the Result will be a Success, otherwise it will be a Failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfiguration-interface","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides method for reading data from the storage provider.</p> C#<pre><code>public interface ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider from which the data is read.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures this instance of ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference of which the data should be read from.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be read from.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where to read the data from in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationgetnextdatatvaluedatetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.GetNextData&lt;TValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Gets the next data point of time series after (when FunctionType.Left) or after or at (when FunctionType.Right) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt; GetNextData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_1","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the next data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; The next ITimeSeriesData&lt;TValue&gt; after or at the given dateTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationgetpreviousdatatvaluedatetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.GetPreviousData&lt;TValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Gets the last data point of a time series before (when FunctionType.Right) or before or at (when FunctionType.Left) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt; GetPreviousData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_2","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; The last ITimeSeriesData&lt;TValue&gt; before or at the given dateTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationreadtvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.Read&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; Read&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_3","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The period of the data to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; an System.Collections.Generic.IAsyncEnumerable&lt;&gt; of the read data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationreadauditlogsdatetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadAuditLogs(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads all data changes of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt; ReadAuditLogs(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_4","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAuditLogEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is IAuditLogEntry containing the time of change and the period of the changed data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationreadhistoricdatatvaluedatetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadHistoricData&lt;TValue&gt;(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific historic date and time.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; ReadHistoricData&lt;TValue&gt;(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_4","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_5","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_5","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of the historic time series data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_6","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetvaluecancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given TValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_7","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationtrygetnextdatatvaluedatetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryGetNextData&lt;TValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Tries to get the next data point of time series after (when FunctionType.Left) or after or at (when FunctionType.Right) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt;&gt; TryGetNextData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_6","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_8","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the next data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An Result containing the next ITimeSeriesData&lt;TValue&gt; after or at the given dateTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationtrygetpreviousdatatvaluedatetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryGetPreviousData&lt;TValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Tries to get the last data point of a time series before (when FunctionType.Right) or before or at (when FunctionType.Left) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt;&gt; TryGetPreviousData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_7","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_9","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An Result containing the last ITimeSeriesData&lt;TValue&gt; before or at the given dateTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationtryreadtvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryRead&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; TryRead&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_8","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_10","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The period of the data to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_10","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the read data in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationtryreadauditlogsdatetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadAuditLogs(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads all data changes of the configured time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt;&gt; TryReadAuditLogs(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_11","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_11","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuditLogEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of a IAuditLogEntry containing the time of change and the period of the changed data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#itimeseriesdatastoragereadertstorageprovidertconfigurationtryreadhistoricdatatvaluedatetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadHistoricData&lt;TValue&gt;(DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific historic date and time.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; TryReadHistoricData&lt;TValue&gt;(System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#type-parameters_9","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#parameters_12","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageReaderOf2/#returns_12","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the historic time series data in the form of Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfiguration-interface","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides method for writing data to the storage provider.</p> C#<pre><code>public interface ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider to which the data is written.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationbeginwritingcollectiontvaluedatetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.BeginWritingCollection&lt;TValue&gt;(DateTimeOffset, CancellationToken) Method","text":"<p>Initializes the writing of data and returns a ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; to perform the writing of data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt; BeginWritingCollection&lt;TValue&gt;(System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters","title":"Parameters","text":"<p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The date used for historical retention of the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt;&gt; a ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; to perform data writing.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures the current ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be written to.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where the data should be written in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationdeleteperiod-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(Period, CancellationToken) Method","text":"<p>Deletes data of the configured time series in the given deletionPeriod.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.Time.Periods.Period deletionPeriod, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_2","title":"Parameters","text":"<p><code>deletionPeriod</code> Period</p> <p>The Period to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationdeletecancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(CancellationToken) Method","text":"<p>Deletes all data of the configured time series in the current HAKOM.Configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationdeletetconfiguration-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(TConfiguration, CancellationToken) Method","text":"<p>Deletes all data of the configured time series in the given configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_4","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where to delete the data from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_5","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetvaluecancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given TValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_6","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#itimeseriesdatastoragewritertstorageprovidertconfigurationwriteauditlogiauditlogentry-cancellationtoken-method","title":"ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.WriteAuditLog(IAuditLogEntry, CancellationToken) Method","text":"<p>Writes an audit log entry for the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteAuditLog(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry auditLogEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#parameters_7","title":"Parameters","text":"<p><code>auditLogEntry</code> IAuditLogEntry</p> <p>The IAuditLogEntry of the written data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStorageWriterOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/","title":"ITimeSeriesDataStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastore-interface","title":"ITimeSeriesDataStore Interface","text":"<p>A data store to read and write time series data.</p> C#<pre><code>public interface ITimeSeriesDataStore\n</code></pre> <p>Derived \u21b3 ITimeSeriesDataStore&lt;TConfiguration&gt; \u21b3 ITimeSeriesQuotationDataStore \u21b3 ITimeSeriesQuotationDataStore&lt;TConfiguration&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorereadingoptions-property","title":"ITimeSeriesDataStore.ReadingOptions Property","text":"<p>Used to create ITimeSeriesDataReadingOptions.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory ReadingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#property-value","title":"Property Value","text":"<p>ITimeSeriesDataReadingOptionsFactory</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoresupportsread-property","title":"ITimeSeriesDataStore.SupportsRead Property","text":"<p>Gets a System.Boolean value indicating if the data store supports reading.</p> C#<pre><code>bool SupportsRead { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#property-value_1","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoresupportswrite-property","title":"ITimeSeriesDataStore.SupportsWrite Property","text":"<p>Gets a System.Boolean value indicating if the data store supports writing.</p> C#<pre><code>bool SupportsWrite { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#property-value_2","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorewritingoptions-property","title":"ITimeSeriesDataStore.WritingOptions Property","text":"<p>Used to create ITimeSeriesDataWritingOptions.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptionsFactory WritingOptions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#property-value_3","title":"Property Value","text":"<p>ITimeSeriesDataWritingOptionsFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoreconfigureitimeseriesreference-iunitstore-iunitconversionstore-cancellationtoken-method","title":"ITimeSeriesDataStore.Configure(ITimeSeriesReference, IUnitStore, IUnitConversionStore, CancellationToken) Method","text":"<p>Configures the data store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore unitConversionStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeries object for which this data store will be configured.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for various conversions when reading and writing data.</p> <p></p> <p><code>unitConversionStore</code> IUnitConversionStore</p> <p>The IUnitConversionStore used for various conversions when reading and writing data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoreconfigurestorageprovideristorageprovider-cancellationtoken-method","title":"ITimeSeriesDataStore.ConfigureStorageProvider(IStorageProvider, CancellationToken) Method","text":"<p>Configures the data store with the given storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task ConfigureStorageProvider(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoredeletebool-cancellationtoken-method","title":"ITimeSeriesDataStore.Delete(bool, CancellationToken) Method","text":"<p>Deletes all time series data.</p> C#<pre><code>System.Threading.Tasks.Task Delete(bool includePreviousConfigurations=false, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_2","title":"Parameters","text":"<p><code>includePreviousConfigurations</code> System.Boolean</p> <p>If set to true, data from previous configurations will be deleted too.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once all data of a timeseries has been deleted.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoredeletetvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStore.Delete&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Deletes time series data in a time range.</p> C#<pre><code>System.Threading.Tasks.Task Delete&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_3","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which the data will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once all data of a timeseries has been deleted.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoredeletetvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStore.Delete&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Deletes time series data in a time range.</p> C#<pre><code>System.Threading.Tasks.Task Delete&lt;TValue&gt;(System.DateTimeOffset from, System.DateTimeOffset to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_4","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>Start date of the time range in which the data will be deleted.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>End date of the time range in which the data will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once all data of a timeseries has been deleted.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorereadtvalueitimeseriesdatareadingoptions-cancellationtoken-method","title":"ITimeSeriesDataStore.Read&lt;TValue&gt;(ITimeSeriesDataReadingOptions, CancellationToken) Method","text":"<p>Read data of a time series with the given reading options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Read&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_5","title":"Parameters","text":"<p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>ITimeSeriesDataReadingOptions on how the data should be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorereadtvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStore.Read&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Read data of a time series with the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Read&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_6","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorereadtvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStore.Read&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Read data of a time series with the given from and to parameters.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Read&lt;TValue&gt;(System.DateTimeOffset from, System.DateTimeOffset to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_4","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_7","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The start time of the reading period.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The end time of the reading period.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretrydeletebool-cancellationtoken-method","title":"ITimeSeriesDataStore.TryDelete(bool, CancellationToken) Method","text":"<p>Try delete all time series data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(bool includePreviousConfigurations=false, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_8","title":"Parameters","text":"<p><code>includePreviousConfigurations</code> System.Boolean</p> <p>If set to true, data from previous configurations will be deleted too.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once all data of a timeseries has been deleted and containing a Result with information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretrydeletetvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStore.TryDelete&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Try to delete time series data in a time range.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_9","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which the data will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once all data of a timeseries has been deleted and containing a Result with information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretrydeletetvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStore.TryDelete&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Try to delete time series data in a time range.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete&lt;TValue&gt;(System.DateTimeOffset from, System.DateTimeOffset to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_6","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_10","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>Start date of the time range in which the data will be deleted.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>End date of the time range in which the data will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once all data of a timeseries has been deleted and containing a Result with information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretryreadtvalueitimeseriesdatareadingoptions-cancellationtoken-method","title":"ITimeSeriesDataStore.TryRead&lt;TValue&gt;(ITimeSeriesDataReadingOptions, CancellationToken) Method","text":"<p>Try to read data of a time series with the given reading options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryRead&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_7","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_11","title":"Parameters","text":"<p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>ITimeSeriesDataReadingOptions on how the data should be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretryreadtvalueperiod-cancellationtoken-method","title":"ITimeSeriesDataStore.TryRead&lt;TValue&gt;(Period, CancellationToken) Method","text":"<p>Try to read data of a time series with the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryRead&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_8","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_12","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The time Period from which to read the data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretryreadtvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesDataStore.TryRead&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Try to read data of a time series with the given from and to parameters.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryRead&lt;TValue&gt;(System.DateTimeOffset from, System.DateTimeOffset to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_9","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_13","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The start time of the reading period.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The end time of the reading period.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretrywritetvalueitimeseriesdatawritingoptions-itimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesDataStore.TryWrite&lt;TValue&gt;(ITimeSeriesDataWritingOptions, ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Try to write data to a time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions timeSeriesDataWritingOptions, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_10","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_14","title":"Parameters","text":"<p><code>timeSeriesDataWritingOptions</code> ITimeSeriesDataWritingOptions</p> <p>The ITimeSeriesDataWritingOptions.</p> <p></p> <p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once all data has been written to the time series and contains a Result with information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastoretrywritetvalueitimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesDataStore.TryWrite&lt;TValue&gt;(ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Try to write data to a time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_11","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_15","title":"Parameters","text":"<p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_15","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; that completes once all data has been written to the time series and contains a Result with information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorewritetvalueitimeseriesdatawritingoptions-itimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesDataStore.Write&lt;TValue&gt;(ITimeSeriesDataWritingOptions, ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Write data to a time series.</p> C#<pre><code>System.Threading.Tasks.Task Write&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions timeSeriesDataWritingOptions, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_12","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_16","title":"Parameters","text":"<p><code>timeSeriesDataWritingOptions</code> ITimeSeriesDataWritingOptions</p> <p>The ITimeSeriesDataWritingOptions.</p> <p></p> <p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_16","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once all data has been written to the time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#itimeseriesdatastorewritetvalueitimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesDataStore.Write&lt;TValue&gt;(ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Write data to a time series.</p> C#<pre><code>System.Threading.Tasks.Task Write&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#type-parameters_13","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#parameters_17","title":"Parameters","text":"<p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStore/#returns_17","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task that completes once all data has been written to the time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreConfiguration/","title":"ITimeSeriesDataStoreConfiguration","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreConfiguration/#itimeseriesdatastoreconfiguration-interface","title":"ITimeSeriesDataStoreConfiguration Interface","text":"<p>Storage options of a time series for persistence.</p> C#<pre><code>public interface ITimeSeriesDataStoreConfiguration\n</code></pre> <p>Derived \u21b3 ISqlTimeSeriesDataStoreConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreConfigurationFactory/","title":"ITimeSeriesDataStoreConfigurationFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreConfigurationFactory/#itimeseriesdatastoreconfigurationfactory-interface","title":"ITimeSeriesDataStoreConfigurationFactory Interface","text":"<p>Used to create ITimeSeriesDataStoreConfiguration objects.</p> C#<pre><code>public interface ITimeSeriesDataStoreConfigurationFactory\n</code></pre> <p>Derived \u21b3 ISqlTimeSeriesDataStoreConfigurationFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/","title":"ITimeSeriesDataStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#itimeseriesdatastorefactory-interface","title":"ITimeSeriesDataStoreFactory Interface","text":"<p>Used to create ITimeSeriesDataStore objects.</p> C#<pre><code>public interface ITimeSeriesDataStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#itimeseriesdatastorefactorycreateistorageprovider-itimeseriesreference-iunitstore-iunitconversionstore-cancellationtoken-method","title":"ITimeSeriesDataStoreFactory.Create(IStorageProvider, ITimeSeriesReference, IUnitStore, IUnitConversionStore, CancellationToken) Method","text":"<p>Creates an instance of an ITimeSeriesDataStore for the specified timeSeriesReference using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore unitConversionStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to create the ITimeSeriesDataStore for.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for various conversions by the ITimeSeriesDataStore.</p> <p></p> <p><code>unitConversionStore</code> IUnitConversionStore</p> <p>The IUnitConversionStore used for various conversions by the ITimeSeriesDataStore.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesDataStore&gt; A System.Threading.Tasks.Task of the created store.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#itimeseriesdatastorefactorytrycreateistorageprovider-itimeseriesreference-iunitstore-iunitconversionstore-cancellationtoken-method","title":"ITimeSeriesDataStoreFactory.TryCreate(IStorageProvider, ITimeSeriesReference, IUnitStore, IUnitConversionStore, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesDataStore for the specified timeSeriesReference using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore unitConversionStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to create the ITimeSeriesDataStore for.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for various conversions by the ITimeSeriesDataStore.</p> <p></p> <p><code>unitConversionStore</code> IUnitConversionStore</p> <p>The IUnitConversionStore used for various conversions by the ITimeSeriesDataStore.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesDataStore&gt;&gt; A System.Threading.Tasks.Task of the created store. May be null</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/","title":"ITimeSeriesDataStore&lt;TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#itimeseriesdatastoretconfiguration-interface","title":"ITimeSeriesDataStore&lt;TConfiguration&gt; Interface","text":"<p>A data store used to read and write time series data.</p> C#<pre><code>public interface ITimeSeriesDataStore&lt;TConfiguration&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TConfiguration</code></p> <p>Derived \u21b3 ITimeSeriesQuotationDataStore&lt;TConfiguration&gt;</p> <p>Implements ITimeSeriesDataStore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#itimeseriesdatastoreconfiguration-property","title":"ITimeSeriesDataStore.Configuration Property <p>Gets the current configuration of the data store.</p> C#<pre><code>TConfiguration Configuration { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#property-value","title":"Property Value","text":"<p>TConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#itimeseriesdatastoretconfigurationsaveconfigurationcancellationtoken-method","title":"ITimeSeriesDataStore&lt;TConfiguration&gt;.SaveConfiguration(CancellationToken) Method <p>Persists the current configuration to the repository.</p> C#<pre><code>System.Threading.Tasks.Task SaveConfiguration(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptions/","title":"ITimeSeriesDataWritingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptions/#itimeseriesdatawritingoptions-interface","title":"ITimeSeriesDataWritingOptions Interface","text":"<p>Represents options for writing time series data.</p> C#<pre><code>public interface ITimeSeriesDataWritingOptions\n</code></pre> <p>Derived \u21b3 ITimeSeriesQuotationDataWritingOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptions/#itimeseriesdatawritingoptionshistoricdatetime-property","title":"ITimeSeriesDataWritingOptions.HistoricDateTime Property","text":"<p>Gets the historic date and time with which the data will be saved, if historic data is preserved.</p> C#<pre><code>System.Nullable&lt;System.DateTimeOffset&gt; HistoricDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptions/#property-value","title":"Property Value","text":"<p>System.Nullable&lt;System.DateTimeOffset&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/","title":"ITimeSeriesDataWritingOptionsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#itimeseriesdatawritingoptionsfactory-interface","title":"ITimeSeriesDataWritingOptionsFactory Interface","text":"<p>Used for creating new ITimeSeriesDataWritingOptions.</p> C#<pre><code>public interface ITimeSeriesDataWritingOptionsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#itimeseriesdatawritingoptionsfactorycreatenullabledatetimeoffset-method","title":"ITimeSeriesDataWritingOptionsFactory.Create(Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Creates an instance of ITimeSeriesDataWritingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions Create(System.Nullable&lt;System.DateTimeOffset&gt; historicDateTime=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#parameters","title":"Parameters","text":"<p><code>historicDateTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The historic date and time with which the data will be saved on a time series, when historic data is preserved.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#returns","title":"Returns","text":"<p>ITimeSeriesDataWritingOptions A new instance of ITimeSeriesDataWritingOptions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#itimeseriesdatawritingoptionsfactorycreatequotationoptionsdatetimeoffset-nullabledatetimeoffset-method","title":"ITimeSeriesDataWritingOptionsFactory.CreateQuotationOptions(DateTimeOffset, Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Creates an instance of ITimeSeriesQuotationDataWritingOptions with the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions CreateQuotationOptions(System.DateTimeOffset quotationDateTime, System.Nullable&lt;System.DateTimeOffset&gt; historicDateTime=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#parameters_1","title":"Parameters","text":"<p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date and time with which the data will be saved on a time series, when quotation is activated.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The historic date and time with which the data will be saved on a time series, when historic data is preserved.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/ITimeSeriesDataWritingOptionsFactory/#returns_1","title":"Returns","text":"<p>ITimeSeriesQuotationDataWritingOptions A new instance of ITimeSeriesQuotationDataWritingOptions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/#hakomtsmnetapidatapersistencetimeseriesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions Namespace","text":"Classes ActualDataTableNotSetException The exception that is thrown when the table for time series data has not been set in the time series definition. ActualTablesForQuotationNotSetException The exception that is thrown when the necessary tables for time series with quotations enabled has not been set in the time series definition. DbDataTypeMismatchException The exception that is thrown when a value retrieved from the database does not match the expected type. InvalidRepositoryException The exception that is thrown when the repository of the ITimeSeriesDataStorediffers from the repository in the given ITimeSeries. InvalidTimeSeriesException Abstract class for Exceptions indicating that the time series given for reading or writing time series data is invalid in the current context. StorageProviderTypeNotSupportedException Indicates that an IStorageProvider was provided, which is not supported in the current storage. TimeSeriesCompressedValueTypeNotSupportedException The exception that is thrown when an invoked method of the ITimeSeriesDataStoredoes not support the given value type, when dealing with compressed time series. TimeSeriesDataConversionException Indicates that an attempt has been made to convert between two units, where one unit is null. TimeSeriesDataStoreConfigurationTypeNotSupportedException Indicates that the data store does not support the given ITimeSeriesDataStoreConfiguration type. TimeSeriesValueTypeNotSupportedException The exception that is thrown when an invoked method of the ITimeSeriesDataStoredoes not support the given value type, when dealing with non-compressed time series."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/","title":"ActualDataTableNotSetException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/#actualdatatablenotsetexception-class","title":"ActualDataTableNotSetException Class","text":"<p>The exception that is thrown when the table for time series data has not been set in the time series definition.</p> C#<pre><code>public sealed class ActualDataTableNotSetException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ActualDataTableNotSetException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/#remarks","title":"Remarks","text":"<p>If the ISqlTimeSeriesDataStoreConfiguration loaded for the time series to be read does not have the Table property or a configured fallback table set, the ActualTable property will be null and this exception will be thrown when reading data.  </p> <p>This exception is identified by error code HK15040.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/#actualdatatablenotsetexceptionequivalenthttpstatuscode-property","title":"ActualDataTableNotSetException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualDataTableNotSetException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/","title":"ActualTablesForQuotationNotSetException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/#actualtablesforquotationnotsetexception-class","title":"ActualTablesForQuotationNotSetException Class","text":"<p>The exception that is thrown when the necessary tables for time series with quotations enabled has not been set in the time series definition.</p> C#<pre><code>public sealed class ActualTablesForQuotationNotSetException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ActualTablesForQuotationNotSetException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/#remarks","title":"Remarks","text":"<p>If the ISqlTimeSeriesDataStoreConfiguration loaded for the time series to be read or written does not  have the HistoricTable property or a configured fallback table set,  the ActualHistoricTable property will be null and this exception will  be thrown when reading or writing data. This error message is also thrown if the ActualAuditTable has not been set.  </p> <p>This exception is identified by error code HK15120.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/#actualtablesforquotationnotsetexceptionequivalenthttpstatuscode-property","title":"ActualTablesForQuotationNotSetException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/ActualTablesForQuotationNotSetException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/","title":"DbDataTypeMismatchException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#dbdatatypemismatchexception-class","title":"DbDataTypeMismatchException Class","text":"<p>The exception that is thrown when a value retrieved from the database does not match the expected type.</p> C#<pre><code>public sealed class DbDataTypeMismatchException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 DbDataTypeMismatchException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#remarks","title":"Remarks","text":"<p>The default implementation of ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt; currently supports only the double value type for ITimeSeriesData&lt;TValue&gt;. If the data retrieved from the database does not match double, an exception is thrown when reading the data.  </p> <p>This exception is identified by error code HK15022.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#dbdatatypemismatchexceptiondbvalue-property","title":"DbDataTypeMismatchException.DbValue Property","text":"<p>The value that could not be converted to the expected type.</p> C#<pre><code>public string DbValue { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#dbdatatypemismatchexceptionequivalenthttpstatuscode-property","title":"DbDataTypeMismatchException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#dbdatatypemismatchexceptionexpectedtype-property","title":"DbDataTypeMismatchException.ExpectedType Property","text":"<p>Gets the expected type.</p> C#<pre><code>public System.Type ExpectedType { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/DbDataTypeMismatchException/#property-value_2","title":"Property Value","text":"<p>System.Type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/","title":"InvalidRepositoryException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/#invalidrepositoryexception-class","title":"InvalidRepositoryException Class","text":"<p>The exception that is thrown when the repository of the ITimeSeriesDataStore differs from the repository in the given ITimeSeries.</p> C#<pre><code>public sealed class InvalidRepositoryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidRepositoryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/#remarks","title":"Remarks","text":"<p>A ITimeSeriesDataStore must have the same repository as the DataStorageInformation property of the specified time series. If the DataStorageInformation is null, the StorageInformation property of the specified time series is used and compared to the specified repository. If they do not match, this exception is thrown when the Configure method of the ITimeSeriesDataStore is called.  </p> <p>This exception is identified by error code HK15021.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/#invalidrepositoryexceptionequivalenthttpstatuscode-property","title":"InvalidRepositoryException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidRepositoryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesException/","title":"InvalidTimeSeriesException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesException/#invalidtimeseriesexception-class","title":"InvalidTimeSeriesException Class","text":"<p>Abstract class for Exceptions indicating that the time series given for reading or writing time series data  is invalid in the current context.</p> C#<pre><code>public abstract class InvalidTimeSeriesException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException</p> <p>Derived \u21b3 DataWriteOnFormulaTimeSeriesNotSupportedException \u21b3 ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException \u21b3 ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException \u21b3 TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException \u21b3 WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException \u21b3 WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException \u21b3 WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesException/#invalidtimeseriesexceptionequivalenthttpstatuscode-property","title":"InvalidTimeSeriesException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/","title":"StorageProviderTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/#storageprovidertypenotsupportedexception-class","title":"StorageProviderTypeNotSupportedException Class","text":"<p>Indicates that an IStorageProvider was provided, which is not supported in the current storage.</p> C#<pre><code>public sealed class StorageProviderTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 StorageProviderTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>When calling the Configure Method of the default implementation of ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; the type of the given IStorageProvider is checked and this exception is thrown if the IStorageProvider is not supported.  </p> <p>This exception is identified by error code HK15064.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/#storageprovidertypenotsupportedexceptionequivalenthttpstatuscode-property","title":"StorageProviderTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/StorageProviderTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesCompressedValueTypeNotSupportedException/","title":"TimeSeriesCompressedValueTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesCompressedValueTypeNotSupportedException/#timeseriescompressedvaluetypenotsupportedexception-class","title":"TimeSeriesCompressedValueTypeNotSupportedException Class","text":"<p>The exception that is thrown when an invoked method of the ITimeSeriesDataStore does not support the given value type, when dealing with compressed time series.</p> C#<pre><code>public sealed class TimeSeriesCompressedValueTypeNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.Exceptions.ValueTypeNotSupportedException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ValueTypeNotSupportedException \ud83e\udc52 TimeSeriesCompressedValueTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesCompressedValueTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>If the implementation of ICompressedTimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;, ICompressedTimeSeriesDataCollectionStorageWriter or the  ICompressedTimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; does not support the specified value type of the data, this exception is thrown. Either create and inject classes for these interfaces or use a data type that is supported. The supported type of the default classes is string.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/","title":"TimeSeriesDataConversionException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/#timeseriesdataconversionexception-class","title":"TimeSeriesDataConversionException Class","text":"<p>Indicates that an attempt has been made to convert between two units, where one unit is null.</p> C#<pre><code>public sealed class TimeSeriesDataConversionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesDataConversionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/#remarks","title":"Remarks","text":"<p>Data without a unit (null) cannot be converted to another unit.  When data is written and either the unit of the data is not specified (null) or the unit of the time series is not specified (null), this exception is thrown.If the unit of the time series is not specified (null), set the unit of the data to null to avoid this error.Otherwise, specify a unit for the data that can be converted to the unit of the time series. If data is read and the unit of the time series is not specified (null), the data can only be read without a unit.If the data is read without unit (Unit property of ITimeSeriesDataReadingOptions is null), the data is returned in the unit of the time series by default.  </p> <p>This exception is identified by error code HK15028.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/#timeseriesdataconversionexceptionequivalenthttpstatuscode-property","title":"TimeSeriesDataConversionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataConversionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/","title":"TimeSeriesDataStoreConfigurationTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/#timeseriesdatastoreconfigurationtypenotsupportedexception-class","title":"TimeSeriesDataStoreConfigurationTypeNotSupportedException Class","text":"<p>Indicates that the data store does not support the given ITimeSeriesDataStoreConfiguration type.</p> C#<pre><code>public sealed class TimeSeriesDataStoreConfigurationTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesDataStoreConfigurationTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>When using the default implementation of ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; the default implementation of ITimeSeriesDataStoreConfiguration has to be used as well.  </p> <p>This exception is identified by error code HK15065.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/#timeseriesdatastoreconfigurationtypenotsupportedexceptionequivalenthttpstatuscode-property","title":"TimeSeriesDataStoreConfigurationTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesDataStoreConfigurationTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesValueTypeNotSupportedException/","title":"TimeSeriesValueTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesValueTypeNotSupportedException/#timeseriesvaluetypenotsupportedexception-class","title":"TimeSeriesValueTypeNotSupportedException Class","text":"<p>The exception that is thrown when an invoked method of the ITimeSeriesDataStore does not support the given value type, when dealing with non-compressed time series.</p> C#<pre><code>public sealed class TimeSeriesValueTypeNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.Exceptions.ValueTypeNotSupportedException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ValueTypeNotSupportedException \ud83e\udc52 TimeSeriesValueTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/TimeSeriesValueTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>If the implementation of ITimeSeriesDataStorageReader&lt;TStorageProvider,TConfiguration&gt;, ITimeSeriesDataCollectionStorageWriter or the ITimeSeriesDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; does not support the specified value type of the data, this exception is thrown. Either create and inject classes for these interfaces or use a data type that is supported. The supported type of the default classes is double.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/#hakomtsmnetapidatapersistencetimeseriesexceptionsinvalidtimeseriesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions Namespace","text":"Classes DataWriteOnFormulaTimeSeriesNotSupportedException Indicates that an attempt was made to write data to a formula time series, which is not supported. ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException Indicates that an attempt was made to read IAuditedQuotationEntry from a time series where PreserveHistoricData is deactivated. ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException Indicates that an attempt was made when reading data with a quotation date from a time series that is not configured to support quotations. ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException Indicates that an attempt was made to read IQuotationEntry from a time series where PreserveAuditLog is deactivated. ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException Indicates that an attempt was made when reading data with a historic date and time to a time series that has not preserve historic data enabled. TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException Indicates that an attempt has been made to configure a ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; with a time series that does not support quotations. WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException Indicates that an attempt was made to write data without a quotation date to a time series where quotation is enabled, which is not supported. WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException Indicates that an attempt was made when writing data with a quotation date to a time series that does not have quotations enabled. WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException Indicates that an attempt was made to write data with a historic date and time to a time series that has not preserve historic data enabled."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/","title":"DataWriteOnFormulaTimeSeriesNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/#datawriteonformulatimeseriesnotsupportedexception-class","title":"DataWriteOnFormulaTimeSeriesNotSupportedException Class","text":"<p>Indicates that an attempt was made to write data to a formula time series, which is not supported.</p> C#<pre><code>public sealed class DataWriteOnFormulaTimeSeriesNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 DataWriteOnFormulaTimeSeriesNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/#remarks","title":"Remarks","text":"<p>Writing data to a time series, which has a formula configured is not supported, because reading data from a time series with a formula set calculates the formula and thus does not read the data stored for that time series. The data could therefore never be read again. You can write the data to a time series without a configured formula and reference this time series in the formula of the time series with the formula.  </p> <p>This exception is identified by error code HK15031.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/#datawriteonformulatimeseriesnotsupportedexceptionequivalenthttpstatuscode-property","title":"DataWriteOnFormulaTimeSeriesNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/DataWriteOnFormulaTimeSeriesNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/","title":"ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/#readingauditedquotationsfortimeserieswithoutpreservedhistoricdatanotpossibleexception-class","title":"ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException Class","text":"<p>Indicates that an attempt was made to read IAuditedQuotationEntry from a time series where PreserveHistoricData is deactivated.</p> C#<pre><code>public sealed class ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/#remarks","title":"Remarks","text":"<p>Reading IAuditedQuotationEntry is only supported for time series where Quotation and PreserveHistoricData is activated.  Otherwise the necessary information is not saved.  </p> <p>This exception is identified by error code HK15125.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/#readingauditedquotationsfortimeserieswithoutpreservedhistoricdatanotpossibleexceptionequivalenthttpstatuscode-property","title":"ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/","title":"ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#readingquotationdataontimeserieswithoutquotationnotsupportedexception-class","title":"ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException Class","text":"<p>Indicates that an attempt was made when reading data with a quotation date from a time series that is not configured to support quotations.</p> C#<pre><code>public sealed class ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#remarks","title":"Remarks","text":"<p>When reading time series data with a specific quotation date, the \"Quotation\" property of the time series must be set to true. Only then will the quotation data be saved and can be read at that specific time. Either a time series must be selected which supports quotations or no ITimeSeriesQuotationDataReadingOptions may be used to query the data.  </p> <p>This exception is identified by error code HK15117.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#readingquotationdataontimeserieswithoutquotationnotsupportedexceptionequivalenthttpstatuscode-property","title":"ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/","title":"ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/#readingquotationsfortimeserieswithoutpreservedauditlognotpossibleexception-class","title":"ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException Class","text":"<p>Indicates that an attempt was made to read IQuotationEntry from a time series where PreserveAuditLog is deactivated.</p> C#<pre><code>public sealed class ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/#remarks","title":"Remarks","text":"<p>Reading IQuotationEntry is only supported for time series where Quotation and PreserveAuditLog is activated.  Otherwise the necessary information is not saved.  </p> <p>This exception is identified by error code HK15124.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/#readingquotationsfortimeserieswithoutpreservedauditlognotpossibleexceptionequivalenthttpstatuscode-property","title":"ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/","title":"ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#readingwithhistoricdatetimeontimeserieswithoutpreservehistoricdatanotpossibleexception-class","title":"ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException Class","text":"<p>Indicates that an attempt was made when reading data with a historic date and time to a time series that has not preserve historic data enabled.</p> C#<pre><code>public sealed class ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#remarks","title":"Remarks","text":"<p>When reading time series data with a specific historical date, the \"PreserveHistoricData\" property of the time series must be set to true. Only then will the historical data be saved and can be read at that specific time.  If \"PreserveHistoricData\" is set to false, you can read data without a specific historical date(null).  </p> <p>This exception is identified by error code HK15054.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#readingwithhistoricdatetimeontimeserieswithoutpreservehistoricdatanotpossibleexceptionequivalenthttpstatuscode-property","title":"ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/","title":"TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/#timeseriesquotationdatastorefortimeserieswithoutquotationnotsupportedexception-class","title":"TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException Class","text":"<p>Indicates that an attempt has been made to configure a ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; with a time series that does not support quotations.</p> C#<pre><code>public sealed class TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/#remarks","title":"Remarks","text":"<p>This should not happen. If this exception is thrown, the related implementation of ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; was not registered correctly.  </p> <p>This exception is identified by error code HK15118.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/#timeseriesquotationdatastorefortimeserieswithoutquotationnotsupportedexceptionequivalenthttpstatuscode-property","title":"TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/","title":"WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/#writingdatawithoutquotationtimeontimeserieswithquotationisnotpossibleexception-class","title":"WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException Class","text":"<p>Indicates that an attempt was made to write data without a quotation date to a time series where quotation is enabled, which is not supported.</p> C#<pre><code>public sealed class WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/#remarks","title":"Remarks","text":"<p>Writing data to a time series which has quotations enabled without specifying a quotation date is not supported, because the quotation date is needed for saving the data. Please provide a quotation date with the ITimeSeriesQuotationDataWritingOptions.  </p> <p>This exception is identified by error code HK15121.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/#writingdatawithoutquotationtimeontimeserieswithquotationisnotpossibleexceptionequivalenthttpstatuscode-property","title":"WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/","title":"WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#writingquotationdataontimeserieswithoutquotationnotsupportedexception-class","title":"WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException Class","text":"<p>Indicates that an attempt was made when writing data with a quotation date to a time series that does not have quotations enabled.</p> C#<pre><code>public sealed class WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#remarks","title":"Remarks","text":"<p>When writing time series data with a specific quotation date, the \"Quotation\" property of the time series must be set to true.  </p> <p>This exception is identified by error code HK15119.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#writingquotationdataontimeserieswithoutquotationnotsupportedexceptionequivalenthttpstatuscode-property","title":"WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/","title":"WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#writingwithhistoricdatetimeontimeserieswithoutpreservehistoricdatanotpossibleexception-class","title":"WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException Class","text":"<p>Indicates that an attempt was made to write data with a historic date and time to a time series that has not preserve historic data enabled.</p> C#<pre><code>public sealed class WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesException \ud83e\udc52 WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#remarks","title":"Remarks","text":"<p>When writing time series data with a specific historical date, the PreserveHistoricData property of the time series must be set to true. Only then will the historical data be saved at that specific time. If \"PreserveHistoricData\" is set to false, you can write data without a specific historical date (null). This will overwrite the current time series data.  </p> <p>This exception is identified by error code HK15053.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#writingwithhistoricdatetimeontimeserieswithoutpreservehistoricdatanotpossibleexceptionequivalenthttpstatuscode-property","title":"WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Exceptions/InvalidTimeSeriesExceptions/WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/#hakomtsmnetapidatapersistencetimeseriesquotation-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation Namespace","text":"Interfaces IAuditedQuotationEntry Represents an individual quotation of data valid for the given QuotationDateTime that has been modified at the HistoricDateTime IQuotationEntry Represents an individual quotation of data valid for the given QuotationDateTime that contains data for the given Period. ITimeSeriesQuotationDataCollectionStorageWriter Provides methods for writing quotation data to the configured storage. ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; Provides methods for writing quotation data. ITimeSeriesQuotationDataCollectionStorageWriterFactory Factory for creating ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; objects for writing quotation data to a storage. ITimeSeriesQuotationDataReadingOptions Represents options for reading time series data of time series with quotation. ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Provides method for reading quotation data from a storage provider. ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Provides method for writing quotation data to the TStorageProvider. ITimeSeriesQuotationDataStore A data store to read and write data for quotation time series. ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; A data store for reading and writing time series data for quotations. ITimeSeriesQuotationDataWritingOptions Represents options for writing time series data. These can then be used to write data with specific quotations for time series that support quotations (i.e. with Quotation set to true)"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IAuditedQuotationEntry/","title":"IAuditedQuotationEntry","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IAuditedQuotationEntry/#iauditedquotationentry-interface","title":"IAuditedQuotationEntry Interface","text":"<p>Represents an individual quotation of data valid for the given QuotationDateTime that has been modified at the HistoricDateTime</p> C#<pre><code>public interface IAuditedQuotationEntry :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&gt;,\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt;,\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry&gt;\n</code></pre> <p>Implements IDataPeriod, System.IEquatable&lt;IDataPeriod&gt;, IQuotationEntry, System.IEquatable&lt;IQuotationEntry&gt;, IAuditLogEntry, System.IEquatable&lt;IAuditLogEntry&gt;, System.IEquatable&lt;IAuditedQuotationEntry&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IQuotationEntry/","title":"IQuotationEntry","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IQuotationEntry/#iquotationentry-interface","title":"IQuotationEntry Interface","text":"<p>Represents an individual quotation of data valid for the given QuotationDateTime that contains data for the given Period.</p> C#<pre><code>public interface IQuotationEntry :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt;\n</code></pre> <p>Derived \u21b3 IAuditedQuotationEntry</p> <p>Implements IDataPeriod, System.IEquatable&lt;IDataPeriod&gt;, System.IEquatable&lt;IQuotationEntry&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IQuotationEntry/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IQuotationEntry/#iquotationentryquotationdatetime-property","title":"IQuotationEntry.QuotationDateTime Property","text":"<p>The date and time of the quotation for which the data period applies.</p> C#<pre><code>System.DateTimeOffset QuotationDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/IQuotationEntry/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/","title":"ITimeSeriesQuotationDataCollectionStorageWriter","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#itimeseriesquotationdatacollectionstoragewriter-interface","title":"ITimeSeriesQuotationDataCollectionStorageWriter Interface","text":"<p>Provides methods for writing quotation data to the configured storage.</p> C#<pre><code>public interface ITimeSeriesQuotationDataCollectionStorageWriter :\nSystem.IDisposable,\nSystem.IAsyncDisposable\n</code></pre> <p>Derived \u21b3 ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;</p> <p>Implements System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#itimeseriesquotationdatacollectionstoragewriterbeginwritecancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter.BeginWrite(CancellationToken) Method","text":"<p>Initializes the writing of data.</p> C#<pre><code>System.Threading.Tasks.Task BeginWrite(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#parameters","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#itimeseriesquotationdatacollectionstoragewriterconfigureistorageprovider-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter.Configure(IStorageProvider) Method","text":"<p>Configures the ITimeSeriesQuotationDataCollectionStorageWriter with the provided IStorageProvider.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for writing data to the store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriter/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactory-interface","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory Interface","text":"<p>Factory for creating ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; objects for writing quotation data to a storage.</p> C#<pre><code>public interface ITimeSeriesQuotationDataCollectionStorageWriterFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorycreateistorageprovider-type-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create(IStorageProvider, Type, CancellationToken) Method","text":"<p>Creates an instance of an ITimeSeriesQuotationDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesQuotationDataCollectionStorageWriter&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ITimeSeriesQuotationDataCollectionStorageWriter instance for writing data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-iauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  Calls the configure method for the ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; Create&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>The information used for storing quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; instance for writing data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks_1","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-iquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, IQuotationEntry, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  Calls the configure method for the ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; Create&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry quotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters_2","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>quotationEntry</code> IQuotationEntry</p> <p>The information used for storing quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of the created  ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; instance for writing data to a storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks_2","title":"Remarks","text":"<p>Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorytrycreateistorageprovider-type-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate(IStorageProvider, Type, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesQuotationDataCollectionStorageWriter of the specified type using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters_3","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations.</p> <p></p> <p><code>type</code> System.Type</p> <p>The System.Type of data that will be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesQuotationDataCollectionStorageWriter&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeriesQuotationDataCollectionStorageWriter.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorytrycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-iauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  Calls the configure method for the ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; TryCreate&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters_4","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>The information used for storing quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#itimeseriesquotationdatacollectionstoragewriterfactorytrycreatetvalueistorageprovider-itimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-iquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate&lt;TValue&gt;(IStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, IQuotationEntry, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; using the specified storageProvider.  Calls the configure method for the ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; TryCreate&lt;TValue&gt;(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry quotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#parameters_5","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing the repository to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing information about the repository to which the data is written to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>quotationEntry</code> IQuotationEntry</p> <p>The information used for storing quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterFactory/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. Caller is responsible for disposing of the returned object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvalue-interface","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; Interface","text":"<p>Provides methods for writing quotation data.</p> C#<pre><code>public interface ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter,\nSystem.IDisposable,\nSystem.IAsyncDisposable\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data.</p> <p>Implements ITimeSeriesQuotationDataCollectionStorageWriter, System.IDisposable, System.IAsyncDisposable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#remarks","title":"Remarks","text":"<p>The implementation of ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; either collects single ITimeSeriesData&lt;TValue&gt; entries and  writes them all at once or streams the ITimeSeriesData&lt;TValue&gt; entries, depending on the storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvalueconfigureitimeseriesreference-itsmrepositoryinformation-itimeseriesdatastoreconfiguration-datetimeoffset-nullabledatetimeoffset-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.Configure(ITimeSeriesReference, ITsmRepositoryInformation, ITimeSeriesDataStoreConfiguration, DateTimeOffset, Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Configures the current ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration configuration, System.DateTimeOffset quotationDateTime, System.Nullable&lt;System.DateTimeOffset&gt; historicDateTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference containing additional information where the data should be stored to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be stored to.</p> <p></p> <p><code>configuration</code> ITimeSeriesDataStoreConfiguration</p> <p>The ITimeSeriesDataStoreConfiguration with information about where to store the data in the repository.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date time for which data will be stored.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The historic date at which the operation was performed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvalueflushcancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.Flush(CancellationToken) Method","text":"<p>Clears buffers and causes any buffered data to be written to the storage.</p> C#<pre><code>System.Threading.Tasks.Task Flush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluetryflushcancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.TryFlush(CancellationToken) Method","text":"<p>Tries to clear buffers and causes any buffered data to be written to the storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryFlush(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; Returns a Result with the success state of the method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluetrywritedataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.TryWriteData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Tries to write data to the quotation storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_3","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; Returns a Result with the success state of the method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluetrywritedataiasyncenumerableitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.TryWriteData(IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes to write a collection to the quotation storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteData(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_4","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; Returns a Result with the success state of the method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluetrywritehistoricdataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.TryWriteHistoricData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Tries to write data to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_5","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; Returns a Result with the success state of the method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluetrywritehistoricdataiasyncenumerableitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.TryWriteHistoricData(IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes to write a collection to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteHistoricData(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_6","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; Returns a Result with the success state of the method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluewritedataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.WriteData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Writes data to the quotation storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_7","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task signifying that the process was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluewritedataiasyncenumerableitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.WriteData(IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes a collection to the quotation storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteData(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_8","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task signifying that the process was completed</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluewritehistoricdataitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.WriteHistoricData(ITimeSeriesData&lt;TValue&gt;, CancellationToken) Method","text":"<p>Writes data to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_9","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#itimeseriesquotationdatacollectionstoragewritertvaluewritehistoricdataiasyncenumerableitimeseriesdatatvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.WriteHistoricData(IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Writes a collection to the history storage of the configured store or adds it to a buffer which will be saved with Flush(CancellationToken).</p> C#<pre><code>System.Threading.Tasks.Task WriteHistoricData(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; collection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#parameters_10","title":"Parameters","text":"<p><code>collection</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesData&lt;TValue&gt; to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataCollectionStorageWriterOf1/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/","title":"ITimeSeriesQuotationDataReadingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#itimeseriesquotationdatareadingoptions-interface","title":"ITimeSeriesQuotationDataReadingOptions Interface","text":"<p>Represents options for reading time series data of time series with quotation.</p> C#<pre><code>public interface ITimeSeriesQuotationDataReadingOptions :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions\n</code></pre> <p>Implements ITimeSeriesDataReadingOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#itimeseriesquotationdatareadingoptionsquotationbehavior-property","title":"ITimeSeriesQuotationDataReadingOptions.QuotationBehavior Property","text":"<p>Gets the QuotationBehavior which is used for reading quotation data if the QuotationDateTime is not set.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; QuotationBehavior { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#property-value","title":"Property Value","text":"<p>System.Nullable&lt;QuotationBehavior&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#itimeseriesquotationdatareadingoptionsquotationdatetime-property","title":"ITimeSeriesQuotationDataReadingOptions.QuotationDateTime Property","text":"<p>Gets the DateTimeOffsetAtOrBefore that is used to define which quotation date and time the data set should be read from.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; QuotationDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataReadingOptions/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfiguration-interface","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides method for reading quotation data from a storage provider.</p> C#<pre><code>public interface ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The specific type of the IStorageProvider that this reader can access.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures this instance of ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for read operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference of which the data should be read from.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be read from.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where to read the data from in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationgetnextdatatvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.GetNextData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Gets the next data point of time series after (when StepLeft()) or after or at (when StepRight()) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt; GetNextData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_1","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the next data will be searched.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The date and time of the quotation for which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; The next ITimeSeriesData&lt;TValue&gt; after or at the given dateTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationgetpreviousdatatvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.GetPreviousData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Gets the last data point of a time series before (when StepRight()) or before or at (when StepLeft()) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt; GetPreviousData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_2","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the previous data will be searched.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The date and time of the quotation for which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; The last ITimeSeriesData&lt;TValue&gt; before or at the given dateTime.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationreadauditedquotationentriesnullabledatetimeoffsetatorbefore-nullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadAuditedQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Reads the history of all changes made to the data of the underlying time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry&gt; ReadAuditedQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_3","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The quotation date and time for which the changes should be loaded.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>A limit of the maximum amount of changes to load.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAuditedQuotationEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is IAuditedQuotationEntry containing the quotation date and time, the time of change and the period of the changed data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationreaddatatvaluedatetimeoffsetatorbefore-period-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadData&lt;TValue&gt;(DateTimeOffsetAtOrBefore, Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series for a specific quotationDateTime.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; ReadData&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_4","title":"Parameters","text":"<p><code>quotationDateTime</code> DateTimeOffsetAtOrBefore</p> <p>The quotation date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks","title":"Remarks","text":"<p>Note that this method will fail if the time series associated with this store does not have PreserveHistoricData set to true.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationreadhistoricdatatvaluedatetimeoffset-datetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadHistoricData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific quotationDateTime and historicDateTime.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; ReadHistoricData&lt;TValue&gt;(System.DateTimeOffset quotationDateTime, System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_4","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_5","title":"Parameters","text":"<p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date and time for which the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_5","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of the historic time series data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationreadquotationentriesnullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.ReadQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Reads quotation dates and times which have data in the given period and returns those quotation dates and times and their corresponding saved data periods.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt; ReadQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_6","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The quotation date and time which should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the saved data for which the quotation dates and times should be loaded.</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>A limit of the maximum amount of quotation dates and times to load.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_6","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IQuotationEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is IQuotationEntry containing the quotation date and time and the period of the saved data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_7","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationsupportsvaluetypetvaluecancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage reader supports the given TValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtrygetnextdatatvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryGetNextData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Gets the next data point of time series after (when StepLeft()) or after or at (when StepRight()) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt;&gt; TryGetNextData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_6","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_9","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the next data will be searched.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The date and time of the quotation for which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An Result containing the next ITimeSeriesData&lt;TValue&gt; after or at the given dateTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtrygetpreviousdatatvaluedatetimeoffset-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryGetPreviousData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, CancellationToken) Method","text":"<p>Gets the last data point of a time series before (when StepRight()) or before or at (when StepLeft()) the given dateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;?&gt;&gt; TryGetPreviousData&lt;TValue&gt;(System.DateTimeOffset dateTime, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_7","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_10","title":"Parameters","text":"<p><code>dateTime</code> System.DateTimeOffset</p> <p>The date and time from which the previous data will be searched.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The date and time of the quotation for which the previous data will be searched.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An Result containing the last ITimeSeriesData&lt;TValue&gt; before or at the given dateTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtryreadauditedquotationentriesnullabledatetimeoffsetatorbefore-nullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadAuditedQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Reads the history of all changes made to the data of the underlying time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry&gt;&gt; TryReadAuditedQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_11","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The quotation date and time for which the changes should be loaded.</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The historic date and time for which the changes should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data for which the changes should be loaded.</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>A limit of the maximum amount of changes to load.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_11","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuditedQuotationEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of a IAuditedQuotationEntry containing the quotation time, the time of change and the period of the changed data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtryreaddatatvaluedatetimeoffsetatorbefore-period-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadData&lt;TValue&gt;(DateTimeOffsetAtOrBefore, Period, CancellationToken) Method","text":"<p>Reads the data of the configured time series for a specific quotationDateTime.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; TryReadData&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_8","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_12","title":"Parameters","text":"<p><code>quotationDateTime</code> DateTimeOffsetAtOrBefore</p> <p>The quotation date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_12","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the time series data in the form of Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks_4","title":"Remarks","text":"<p>Note that this method will fail if the time series associated with this store does not have PreserveHistoricData set to true.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtryreadhistoricdatatvaluedatetimeoffset-datetimeoffset-period-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadHistoricData&lt;TValue&gt;(DateTimeOffset, DateTimeOffset, Period, CancellationToken) Method","text":"<p>Reads the historic data of the configured time series for a specific quotationDateTime and historicDateTime.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; TryReadHistoricData&lt;TValue&gt;(System.DateTimeOffset quotationDateTime, System.DateTimeOffset historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#type-parameters_9","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_13","title":"Parameters","text":"<p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date and time for which the data should be read.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The historic date and time for which the data should be read.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the data to be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_13","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the historic time series data in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#itimeseriesquotationdatastoragereadertstorageprovidertconfigurationtryreadquotationentriesnullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageReader&lt;TStorageProvider,TConfiguration&gt;.TryReadQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Reads quotation dates and times which have data in the given period and returns those quotation dates and times and their corresponding saved data periods.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt;&gt; TryReadQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#parameters_14","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The quotation date and time which should be loaded.</p> <p></p> <p><code>period</code> Period</p> <p>The period of the saved data for which the quotation dates and times should be loaded.</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>A limit of the maximum amount of quotation dates and times to load.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#returns_14","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IQuotationEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of a IQuotationEntry containing the quotation date and time and the period of the saved data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageReaderOf2/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfiguration-interface","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt; Interface","text":"<p>Provides method for writing quotation data to the TStorageProvider.</p> C#<pre><code>public interface ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The IStorageProvider to which the data is written.</p> <p></p> <p><code>TConfiguration</code></p> <p>The ITimeSeriesDataStoreConfiguration with more specific information about the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationbeginwritingcollectiontvalueiauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.BeginWritingCollection&lt;TValue&gt;(IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Initializes the writing of quotation data and returns a ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; to perform the writing of quotation data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; BeginWritingCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters","title":"Parameters","text":"<p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>Information used for retention of the quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; a ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; to perform data writing.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationbeginwritingcollectiontvalueiquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.BeginWritingCollection&lt;TValue&gt;(IQuotationEntry, CancellationToken) Method","text":"<p>Initializes the writing of quotation data and returns a ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; to perform the writing of quotation data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; BeginWritingCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry quotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_1","title":"Parameters","text":"<p><code>quotationEntry</code> IQuotationEntry</p> <p>Information used for retention of the quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt; a ITimeSeriesDataCollectionStorageWriter&lt;TValue&gt; to perform data writing.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks","title":"Remarks","text":"<p>This method of writing quotation data doesn't write historic data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationconfiguretstorageprovider-itimeseriesreference-itsmrepositoryinformation-tconfiguration-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Configure(TStorageProvider, ITimeSeriesReference, ITsmRepositoryInformation, TConfiguration, CancellationToken) Method","text":"<p>Configures the current ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.</p> C#<pre><code>System.Threading.Tasks.Task Configure(TStorageProvider storageProvider, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation repositoryInformation, TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_2","title":"Parameters","text":"<p><code>storageProvider</code> TStorageProvider</p> <p>The IStorageProvider used for write operations on the storage.</p> <p></p> <p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to which the data should be written to.</p> <p></p> <p><code>repositoryInformation</code> ITsmRepositoryInformation</p> <p>The ITsmRepositoryInformation containing the repository where the data should be written to.</p> <p></p> <p><code>configuration</code> TConfiguration</p> <p>The data store configuration with more information about where the data should be written in the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationdeletecancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(CancellationToken) Method","text":"<p>Deletes all quotation data of the configured time series in the current HAKOM.Configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task signifying the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationdeletetconfiguration-period-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(TConfiguration, Period, DateTimeOffset, CancellationToken) Method","text":"<p>Deletes quotation data of the configured time series in the given configuration within  the given period at the provided quotationDateTime.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TConfiguration configuration, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_4","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where to delete the data from.</p> <p></p> <p><code>period</code> Period</p> <p>The period in which the data will be deleted.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date at which the data will be deleted from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task signifying the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationdeletetconfiguration-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.Delete(TConfiguration, CancellationToken) Method","text":"<p>Deletes all quotation data of the configured time series in the given configuration.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_5","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where to delete the data from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task signifying the operation was completed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetype-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType(Type, CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given type.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType(System.Type type, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_6","title":"Parameters","text":"<p><code>type</code> System.Type</p> <p>The type which should be checked for support.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationsupportsvaluetypetvaluecancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.SupportsValueType&lt;TValue&gt;(CancellationToken) Method","text":"<p>Checks if the data storage writer supports the given TValue.</p> C#<pre><code>System.Threading.Tasks.Task&lt;bool&gt; SupportsValueType&lt;TValue&gt;(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_7","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Boolean&gt; A System.Threading.Tasks.Task containing a boolean value, which indicates if the type is supported.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrybeginwritingcollectiontvalueiauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryBeginWritingCollection&lt;TValue&gt;(IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Tries to initialize the writing of quotation data and returns a ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; to perform the writing of quotation data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; TryBeginWritingCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters_4","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_8","title":"Parameters","text":"<p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>Information used for retention of the quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrybeginwritingcollectiontvalueiquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryBeginWritingCollection&lt;TValue&gt;(IQuotationEntry, CancellationToken) Method","text":"<p>Tries to initialize the writing of quotation data and returns a ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt; to perform the writing of quotation data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; TryBeginWritingCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry quotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data to write.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_9","title":"Parameters","text":"<p><code>quotationEntry</code> IQuotationEntry</p> <p>Information used for retention of the quotation data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;  containing the created ITimeSeriesQuotationDataCollectionStorageWriter&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure. This method of writing quotation data doesn't write historic data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrydeletecancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryDelete(CancellationToken) Method","text":"<p>Attempts to delete all quotation data of the configured time series in the current HAKOM.Configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_10","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; signifying the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrydeletetconfiguration-period-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryDelete(TConfiguration, Period, DateTimeOffset, CancellationToken) Method","text":"<p>Deletes quotation data of the configured time series in the given configuration within  the given period at the provided quotationDateTime.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(TConfiguration configuration, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.DateTimeOffset quotationDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_11","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where to delete the data from.</p> <p></p> <p><code>period</code> Period</p> <p>The period in which the data will be deleted.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The quotation date at which the data will be deleted from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; signifying the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrydeletetconfiguration-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryDelete(TConfiguration, CancellationToken) Method","text":"<p>Attempts to delete all quotation data of the configured time series in the given configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(TConfiguration configuration, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_12","title":"Parameters","text":"<p><code>configuration</code> TConfiguration</p> <p>The data store configuration where to delete the data from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operation should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; signifying the operation was completed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationtrywriteauditedquotationentryiauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.TryWriteAuditedQuotationEntry(IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Tries to write an audited quotation entry for the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWriteAuditedQuotationEntry(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_13","title":"Parameters","text":"<p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>The IAuditedQuotationEntry of the written data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A Result with information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#itimeseriesquotationdatastoragewritertstorageprovidertconfigurationwriteauditedquotationentryiauditedquotationentry-cancellationtoken-method","title":"ITimeSeriesQuotationDataStorageWriter&lt;TStorageProvider,TConfiguration&gt;.WriteAuditedQuotationEntry(IAuditedQuotationEntry, CancellationToken) Method","text":"<p>Writes an audited quotation entry for the configured time series.</p> C#<pre><code>System.Threading.Tasks.Task WriteAuditedQuotationEntry(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry auditedQuotationEntry, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#parameters_14","title":"Parameters","text":"<p><code>auditedQuotationEntry</code> IAuditedQuotationEntry</p> <p>The IAuditedQuotationEntry of the written data.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStorageWriterOf2/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/","title":"ITimeSeriesQuotationDataStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastore-interface","title":"ITimeSeriesQuotationDataStore Interface","text":"<p>A data store to read and write data for quotation time series.</p> C#<pre><code>public interface ITimeSeriesQuotationDataStore :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore\n</code></pre> <p>Derived \u21b3 ITimeSeriesQuotationDataStore&lt;TConfiguration&gt;</p> <p>Implements ITimeSeriesDataStore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastorereadtvalueitimeseriesquotationdatareadingoptions-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.Read&lt;TValue&gt;(ITimeSeriesQuotationDataReadingOptions, CancellationToken) Method","text":"<p>Read quotation data of a time series with the given options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Read&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions readingOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters","title":"Parameters","text":"<p><code>readingOptions</code> ITimeSeriesQuotationDataReadingOptions</p> <p>ITimeSeriesQuotationDataReadingOptions on how the data should be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; An ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastorereadauditedquotationentriesnullabledatetimeoffsetatorbefore-nullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.ReadAuditedQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Retrieves IAuditedQuotationEntry objects for the configured time series based on the given parameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry&gt; ReadAuditedQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_1","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on quotation date and time.\"/&gt;</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on historic date and time.\"/&gt;</p> <p></p> <p><code>period</code> Period</p> <p>The Period of the time series data for which the search for quotation dates is performed. If no quotationDateTime or historicDateTime is given, all IAuditedQuotationEntry results for the configured time series will be returned./&gt;</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>Limits the amount of results.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IAuditedQuotationEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the relevant IAuditedQuotationEntry objects.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastorereadquotationentriesnullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.ReadQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Retrieves IQuotationEntry objects for the configured time series based on the given parameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt; ReadQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_2","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on quotation date and time.\"/&gt;</p> <p></p> <p><code>period</code> Period</p> <p>The Period of the time series data for which the search for quotation dates is performed. If no quotationDateTime is given, all IQuotationEntry results for the configured time series will be returned./&gt;</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>Limits the amount of results.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IQuotationEntry&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the relevant IQuotationEntry objects.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastoretryreadtvalueitimeseriesquotationdatareadingoptions-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.TryRead&lt;TValue&gt;(ITimeSeriesQuotationDataReadingOptions, CancellationToken) Method","text":"<p>Try to read quotation data of a time series with the given options.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryRead&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions readingOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_3","title":"Parameters","text":"<p><code>readingOptions</code> ITimeSeriesQuotationDataReadingOptions</p> <p>ITimeSeriesQuotationDataReadingOptions on how the data should be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created  ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastoretryreadauditedquotationentriesnullabledatetimeoffsetatorbefore-nullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.TryReadAuditedQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Attempts to retrieve IAuditedQuotationEntry objects for the configured time series based on the given parameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry&gt;&gt; TryReadAuditedQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; historicDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_4","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on quotation date and time.\"/&gt;</p> <p></p> <p><code>historicDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on historic date and time.\"/&gt;</p> <p></p> <p><code>period</code> Period</p> <p>The Period of the time series data for which the search for quotation dates is performed. If no quotationDateTime or historicDateTime is given, all IAuditedQuotationEntry results for the configured time series will be returned./&gt;</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>Limits the amount of results.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAuditedQuotationEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the Results of the attempt to retrieve the relevant IAuditedQuotationEntry objects. If successful, the Results will contain the desired IAuditedQuotationEntry objects.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastoretryreadquotationentriesnullabledatetimeoffsetatorbefore-period-nullableint-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.TryReadQuotationEntries(Nullable&lt;DateTimeOffsetAtOrBefore&gt;, Period, Nullable&lt;int&gt;, CancellationToken) Method","text":"<p>Attempts to retrieve IQuotationEntry objects for the configured time series based on the given parameters.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry&gt;&gt; TryReadQuotationEntries(System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; quotationDateTime, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;int&gt; limit=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_5","title":"Parameters","text":"<p><code>quotationDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>A DateTimeOffsetAtOrBefore used to filter the results on quotation date and time.\"/&gt;</p> <p></p> <p><code>period</code> Period</p> <p>The Period of the time series data for which the search for quotation dates is performed. If no quotationDateTime is given, all IQuotationEntry results for the configured time series will be returned./&gt;</p> <p></p> <p><code>limit</code> System.Nullable&lt;System.Int32&gt;</p> <p>Limits the amount of results.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_5","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IQuotationEntry&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the Results of the attempt to retrieve the relevant IQuotationEntry objects. If successful, the Results will contain the desired IQuotationEntry objects.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastoretrywritetvalueitimeseriesquotationdatawritingoptions-itimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.TryWrite&lt;TValue&gt;(ITimeSeriesQuotationDataWritingOptions, ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Try to write data to a quotation time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryWrite&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions timeSeriesQuotationDataWritingOptions, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_6","title":"Parameters","text":"<p><code>timeSeriesQuotationDataWritingOptions</code> ITimeSeriesQuotationDataWritingOptions</p> <p>The ITimeSeriesDataWritingOptions.</p> <p></p> <p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result with information about the success of the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#itimeseriesquotationdatastorewritetvalueitimeseriesquotationdatawritingoptions-itimeseriesdatacollectiontvalue-cancellationtoken-method","title":"ITimeSeriesQuotationDataStore.Write&lt;TValue&gt;(ITimeSeriesQuotationDataWritingOptions, ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Write data to a quotation time series.</p> C#<pre><code>System.Threading.Tasks.Task Write&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions timeSeriesQuotationDataWritingOptions, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be written.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#parameters_7","title":"Parameters","text":"<p><code>timeSeriesQuotationDataWritingOptions</code> ITimeSeriesQuotationDataWritingOptions</p> <p>The ITimeSeriesDataWritingOptions.</p> <p></p> <p><code>timeSeriesData</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The time series data collection to be written.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStoreOf1/","title":"ITimeSeriesQuotationDataStore&lt;TConfiguration&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStoreOf1/#itimeseriesquotationdatastoretconfiguration-interface","title":"ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; Interface","text":"<p>A data store for reading and writing time series data for quotations.</p> C#<pre><code>public interface ITimeSeriesQuotationDataStore&lt;TConfiguration&gt; :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&lt;TConfiguration&gt;,\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore,\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore\n    where TConfiguration : HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TConfiguration</code></p> <p>Implements HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&lt;TConfiguration&gt;, ITimeSeriesDataStore, ITimeSeriesQuotationDataStore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataWritingOptions/","title":"ITimeSeriesQuotationDataWritingOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataWritingOptions/#itimeseriesquotationdatawritingoptions-interface","title":"ITimeSeriesQuotationDataWritingOptions Interface","text":"<p>Represents options for writing time series data. These can then be used to write data with specific quotations for time series that  support quotations (i.e. with Quotation set to true)</p> C#<pre><code>public interface ITimeSeriesQuotationDataWritingOptions :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions\n</code></pre> <p>Implements ITimeSeriesDataWritingOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataWritingOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataWritingOptions/#itimeseriesquotationdatawritingoptionsquotationdatetime-property","title":"ITimeSeriesQuotationDataWritingOptions.QuotationDateTime Property","text":"<p>Gets the quotation date and time with which the data will be saved, if quotation is activated.</p> C#<pre><code>System.DateTimeOffset QuotationDateTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/ITimeSeriesQuotationDataWritingOptions/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/#hakomtsmnetapidatapersistencetimeseriesquotationexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions Namespace","text":"Classes QuotationDefaultBehaviorConfigurationSettingNotValidException The configuration setting \"TSM:Persistence:Data:QuotationDefaultBehavior\" has an invalid value. ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException Indicates an attempt was made to read quotation data with a QuotationBehavior other than NowNotExact()from a time series with PreserveAuditLog set to false."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/","title":"QuotationDefaultBehaviorConfigurationSettingNotValidException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/#quotationdefaultbehaviorconfigurationsettingnotvalidexception-class","title":"QuotationDefaultBehaviorConfigurationSettingNotValidException Class","text":"<p>The configuration setting \"TSM:Persistence:Data:QuotationDefaultBehavior\" has an invalid value.</p> C#<pre><code>public sealed class QuotationDefaultBehaviorConfigurationSettingNotValidException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 QuotationDefaultBehaviorConfigurationSettingNotValidException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/#remarks","title":"Remarks","text":"<p>The configuration setting \"TSM:Persistence:Data:QuotationDefaultBehavior\" can have one of the following values: - 0 \u2014 Default QuotationBehavior -&gt; defaults back to \"1 - MaxExact\" - 1 \u2014 MaxExact - 2 \u2014 MaxNotExact - 3 \u2014 NowNotExact Please make sure to configure one of the listed numbers.  </p> <p>This exception is identified by error code HK15122.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/#quotationdefaultbehaviorconfigurationsettingnotvalidexceptionequivalenthttpstatuscode-property","title":"QuotationDefaultBehaviorConfigurationSettingNotValidException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/QuotationDefaultBehaviorConfigurationSettingNotValidException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/","title":"ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/#readingquotationdatawithquotationbehaviorandwithoutpreserveauditlogonlysupportsnownotexactexception-class","title":"ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException Class","text":"<p>Indicates an attempt was made to read quotation data with a QuotationBehavior other than NowNotExact() from a time series with PreserveAuditLog set to false.</p> C#<pre><code>public sealed class ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/#remarks","title":"Remarks","text":"<p>When reading from such a time series, please give a QuotationDateTime or use NowNotExact().  </p> <p>This exception is identified by error code HK15126.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/#readingquotationdatawithquotationbehaviorandwithoutpreserveauditlogonlysupportsnownotexactexceptionequivalenthttpstatuscode-property","title":"ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Quotation/Exceptions/ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/#hakomtsmnetapidatapersistencetimeseriessql-namespace","title":"HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql Namespace","text":"Interfaces ISqlTimeSeriesDataStoreConfiguration Storage options of a time series for persistence in SQL databases. ISqlTimeSeriesDataStoreConfigurationFactory Used to create new options for defining SQL storage specific properties. ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt; Builds SQL queries and related parameters for SQL storage readers/writers."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/","title":"ISqlTimeSeriesDataStoreConfiguration","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfiguration-interface","title":"ISqlTimeSeriesDataStoreConfiguration Interface","text":"<p>Storage options of a time series for persistence in SQL databases.</p> C#<pre><code>public interface ISqlTimeSeriesDataStoreConfiguration :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration\n</code></pre> <p>Implements ITimeSeriesDataStoreConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfigurationactualaudittable-property","title":"ISqlTimeSeriesDataStoreConfiguration.ActualAuditTable Property","text":"<p>Gets the default table, where the audit data is stored.</p> C#<pre><code>string? ActualAuditTable { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfigurationactualhistorictable-property","title":"ISqlTimeSeriesDataStoreConfiguration.ActualHistoricTable Property","text":"<p>Gets the default table, where the historic data is stored (e.g. when historic data is preserved).</p> C#<pre><code>string? ActualHistoricTable { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#property-value_1","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfigurationactualtable-property","title":"ISqlTimeSeriesDataStoreConfiguration.ActualTable Property","text":"<p>Gets the default table, where the data is stored.</p> C#<pre><code>string? ActualTable { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfigurationhistorictable-property","title":"ISqlTimeSeriesDataStoreConfiguration.HistoricTable Property","text":"<p>Gets or sets the table, where the historic data is stored (e.g. when historic data is preserved).</p> C#<pre><code>string? HistoricTable { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#isqltimeseriesdatastoreconfigurationtable-property","title":"ISqlTimeSeriesDataStoreConfiguration.Table Property","text":"<p>Gets or sets the table, where the data is stored.</p> C#<pre><code>string? Table { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfiguration/#property-value_4","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/","title":"ISqlTimeSeriesDataStoreConfigurationFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#isqltimeseriesdatastoreconfigurationfactory-interface","title":"ISqlTimeSeriesDataStoreConfigurationFactory Interface","text":"<p>Used to create new options for defining SQL storage specific properties.</p> C#<pre><code>public interface ISqlTimeSeriesDataStoreConfigurationFactory :\nHAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfigurationFactory\n</code></pre> <p>Implements ITimeSeriesDataStoreConfigurationFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#isqltimeseriesdatastoreconfigurationfactorycreatebool-compressionmode-bool-string-string-method","title":"ISqlTimeSeriesDataStoreConfigurationFactory.Create(bool, CompressionMode, bool, string, string) Method","text":"<p>Creates a new ISqlTimeSeriesDataStoreConfiguration object representing the data storage configuration of a time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration Create(bool quotation, HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode, bool preserveHistoricData, string? table=null, string? historicTable=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#parameters","title":"Parameters","text":"<p><code>quotation</code> System.Boolean</p> <p>A System.Boolean indicating if the data is stored as quotation data.</p> <p></p> <p><code>compressionMode</code> CompressionMode</p> <p>The CompressionMode of the data to be stored with this configuration.</p> <p></p> <p><code>preserveHistoricData</code> System.Boolean</p> <p>A System.Boolean indicating if historic data is stored too.</p> <p></p> <p><code>table</code> System.String</p> <p>The System.String name of the table in which the data will be stored. If the table is null the configured default table will be used.</p> <p></p> <p><code>historicTable</code> System.String</p> <p>The System.String name of the table in which the historic data will be stored. If the table is null the configured default table will be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#returns","title":"Returns","text":"<p>ISqlTimeSeriesDataStoreConfiguration</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#isqltimeseriesdatastoreconfigurationfactorycreateitimeseries-string-string-method","title":"ISqlTimeSeriesDataStoreConfigurationFactory.Create(ITimeSeries, string, string) Method","text":"<p>Creates a new ISqlTimeSeriesDataStoreConfiguration object representing the data storage configuration of a time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration Create(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, string? table=null, string? historicTable=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#parameters_1","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries object for which this data store is created.</p> <p></p> <p><code>table</code> System.String</p> <p>The System.String name of the table in which the data will be stored. If the table is null the configured default table will be used.</p> <p></p> <p><code>historicTable</code> System.String</p> <p>The System.String name of the table in which the historic data will be stored. If the table is null the configured default table will be used.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ISqlTimeSeriesDataStoreConfigurationFactory/#returns_1","title":"Returns","text":"<p>ISqlTimeSeriesDataStoreConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameter-interface","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt; Interface","text":"<p>Builds SQL queries and related parameters for SQL storage readers/writers.</p> C#<pre><code>public interface ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;\n    where TParameter : HAKOM.Persistence.Sql.Net.Api.ISqlParameter\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#type-parameters","title":"Type parameters","text":"<p><code>TParameter</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuilddeleteallquerystring-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildDeleteAllQuery(string) Method","text":"<p>Builds a query to delete all data of a time series. The time series of which the data will be deleted, is defined by sql parameters.</p> C#<pre><code>string BuildDeleteAllQuery(string tableName);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters","title":"Parameters","text":"<p><code>tableName</code> System.String</p> <p>The table name of the data table where the data will be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuilddeletequotationandhistoricdataquerystring-string-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildDeleteQuotationAndHistoricDataQuery(string, string) Method","text":"<p>Builds a query to delete all data of a quotation time series with PreserveHistoricData set to true..</p> C#<pre><code>string BuildDeleteQuotationAndHistoricDataQuery(string historicTable, string auditTable);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_1","title":"Parameters","text":"<p><code>historicTable</code> System.String</p> <p>The name of the data table where the data will be deleted.</p> <p></p> <p><code>auditTable</code> System.String</p> <p>The table name of the audit logs table where the logs will be deleted.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_1","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuilddeletetimerangequerystring-functiontype-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildDeleteTimeRangeQuery(string, FunctionType) Method","text":"<p>Builds a query to delete all data of a time series in a time range. The time frame, which will be deleted, is defined by sql parameters.</p> C#<pre><code>string BuildDeleteTimeRangeQuery(string tableName, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_2","title":"Parameters","text":"<p><code>tableName</code> System.String</p> <p>The table name of the data table where the data will be deleted.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be read. Affects the where clause.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_2","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuilddeletetimerangewithquotationquerystring-bool-functiontype-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildDeleteTimeRangeWithQuotationQuery(string, bool, FunctionType) Method","text":"<p>Builds a query to delete all data of a time series in a time range. The time frame, which will be deleted, is defined by sql parameters.</p> C#<pre><code>string BuildDeleteTimeRangeWithQuotationQuery(string tableName, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_3","title":"Parameters","text":"<p><code>tableName</code> System.String</p> <p>The table name of the data table where the data will be deleted.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The Cyclic property of the time series, whose data will be deleted. Affects the where clause.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be deleted. Affects the where clause.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_3","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildinsertauditdataquerystring-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildInsertAuditDataQuery(string) Method","text":"<p>Builds a query to insert audit data for a time series. The data to be written, is defined by sql parameters.</p> C#<pre><code>string BuildInsertAuditDataQuery(string auditTable);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_4","title":"Parameters","text":"<p><code>auditTable</code> System.String</p> <p>The table name of the data audit table.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_4","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildinsertauditedquotationentryquerystring-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildInsertAuditedQuotationEntryQuery(string) Method","text":"<p>Builds a query to insert IAuditedQuotationEntry for a time series. The data to be written, is defined by sql parameters.</p> C#<pre><code>string BuildInsertAuditedQuotationEntryQuery(string auditTable);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_5","title":"Parameters","text":"<p><code>auditTable</code> System.String</p> <p>The table name of the data audit table.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_5","title":"Returns","text":"<p>System.String A full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildreadauditdataquery-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildReadAuditDataQuery() Method","text":"<p>Builds a query to read audit data for a time series. The time frame, which will be read, is defined by sql parameters.</p> C#<pre><code>string BuildReadAuditDataQuery();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_6","title":"Returns","text":"<p>System.String An full SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildreaddataquerycompressionmode-string-bool-functiontype-bool-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildReadDataQuery(CompressionMode, string, bool, FunctionType, bool) Method","text":"<p>Builds a query to read data from the given tableName. The other parameters affect parts of the select and where clauses.</p> C#<pre><code>string BuildReadDataQuery(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode, string tableName, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, bool preserveHistoricData=false);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_6","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p> <p>The CompressionMode of the time series, whose data will be read.             If equal to NoCompression, a \"flag\" column is added to the select clause.</p> <p></p> <p><code>tableName</code> System.String</p> <p>The name of the table used in the from clause.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The Cyclic property of the time series, whose data will be read. Affects the where clause.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be read. Affects the where clause.</p> <p></p> <p><code>preserveHistoricData</code> System.Boolean</p> <p>The PreserveHistoricData property of the time series, whose data will be read. Affects the where clause.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_7","title":"Returns","text":"<p>System.String An SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildreadhistoricquotationdataquerystring-string-bool-functiontype-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildReadHistoricQuotationDataQuery(string, string, bool, FunctionType) Method","text":"<p>Builds a query to read data from the table given with the name given in historicTableName.</p> C#<pre><code>string BuildReadHistoricQuotationDataQuery(string historicTableName, string quotationEntryTableName, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_7","title":"Parameters","text":"<p><code>historicTableName</code> System.String</p> <p>The name of the table used in the from clause, where the quotation data is saved.</p> <p></p> <p><code>quotationEntryTableName</code> System.String</p> <p>The name of the table where the audited quotation entries are saved.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The Cyclic property of the time series, whose data will be read. Affects the where clause.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be read. Affects the where clause.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_8","title":"Returns","text":"<p>System.String An SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildreadquotationdataexactquerystring-bool-functiontype-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildReadQuotationDataExactQuery(string, bool, FunctionType) Method","text":"<p>Builds a query to read data from the table given with the name given in tableName.</p> C#<pre><code>string BuildReadQuotationDataExactQuery(string tableName, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_8","title":"Parameters","text":"<p><code>tableName</code> System.String</p> <p>The name of the table used in the from clause, where the quotation data is saved.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The Cyclic property of the time series, whose data will be read. Affects the where clause.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be read. Affects the where clause.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_9","title":"Returns","text":"<p>System.String An SQL query with placeholders for some relevant parameters.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparameterbuildwhereclauseforfunctiontypedependentdaterangestring-bool-functiontype-bool-bool-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.BuildWhereClauseForFunctionTypeDependentDateRange(string, bool, FunctionType, bool, bool) Method","text":"<p>Builds sub conditions of a query for filtering date ranges in a data reading query, depending on properties of the time series.</p> C#<pre><code>string BuildWhereClauseForFunctionTypeDependentDateRange(string tableName, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, bool preserveHistoricData=false, bool quotation=false);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_9","title":"Parameters","text":"<p><code>tableName</code> System.String</p> <p>The name of the table used in the from clause, where the data is saved.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The Cyclic property of the time series, whose data will be read.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the time series, whose data will be read.</p> <p></p> <p><code>preserveHistoricData</code> System.Boolean</p> <p>The PreserveHistoricData property of the time series, whose data will be read.</p> <p></p> <p><code>quotation</code> System.Boolean</p> <p>The Quotation property of the time series, whose data will be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_10","title":"Returns","text":"<p>System.String Additional filtering SQL query for data reading operations (starting with AND not WHERE).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreatefromparametertimebase-datetimeoffset-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateFromParameter(TimeBase, DateTimeOffset) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateFromParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, System.DateTimeOffset from);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_10","title":"Parameters","text":"<p><code>timeBase</code> TimeBase</p> <p>The TimeBase which will be used to calculate the exact value of the parameter.</p> <p></p> <p><code>from</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset on which the parameter is based.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_11","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"fromTime\" placeholder of the queries in this type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreatehistoricdatetimeparametertimebase-datetimeoffset-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateHistoricDateTimeParameter(TimeBase, DateTimeOffset) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateHistoricDateTimeParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, System.DateTimeOffset historicDateTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_11","title":"Parameters","text":"<p><code>timeBase</code> TimeBase</p> <p>The TimeBase which will be used to calculate the exact value of the parameter.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset on which the parameter is based.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_12","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"historicDateTime\" placeholder of the queries in this type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreatequotationdatetimeparametertimebase-datetimeoffset-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateQuotationDateTimeParameter(TimeBase, DateTimeOffset) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateQuotationDateTimeParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, System.DateTimeOffset quotationDateTime);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_12","title":"Parameters","text":"<p><code>timeBase</code> TimeBase</p> <p>The TimeBase which will be used to calculate the exact value of the parameter.</p> <p></p> <p><code>quotationDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset on which the parameter is based.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_13","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"quotationDateTime\" placeholder of the queries in this type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreatetimeseriesidparameterint-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateTimeSeriesIdParameter(int) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateTimeSeriesIdParameter(int identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_13","title":"Parameters","text":"<p><code>identifier</code> System.Int32</p> <p>The identifier of the time series the data is stored for.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_14","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"id\" placeholder of the queries in this type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreatetoparametertimebase-datetimeoffset-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateToParameter(TimeBase, DateTimeOffset) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateToParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, System.DateTimeOffset to);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_14","title":"Parameters","text":"<p><code>timeBase</code> TimeBase</p> <p>The TimeBase which will be used to calculate the exact value of the parameter.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset on which the parameter is based.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_15","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"toTime\" placeholder of the queries in this type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#itimeseriesdatasqlquerybuildertparametercreateuseridparameterint-method","title":"ITimeSeriesDataSqlQueryBuilder&lt;TParameter&gt;.CreateUserIdParameter(int) Method","text":"<p>Creates an SQL parameter for the queries in this type.</p> C#<pre><code>TParameter CreateUserIdParameter(int userId);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#parameters_15","title":"Parameters","text":"<p><code>userId</code> System.Int32</p> <p>The user id on which the parameter is based.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/Persistence/TimeSeries/Sql/ITimeSeriesDataSqlQueryBuilderOf1/#returns_16","title":"Returns","text":"<p>TParameter An SQL parameter corresponding to the \"userId\" placeholder of the queries in this type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/#hakomtsmnetapidatatimeseries-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries Namespace","text":"Interfaces IDataConverter Non-generic marker interface for IDataConverter&lt;TValue&gt; implementations.Used to register implementations for use by an IDataConverterFactory. IDataConverter&lt;TValue&gt; Converts time series data to a given unit. IDataConverterFactory Creates objects of type IDataConverter&lt;TValue&gt;. IDataOperation Non-generic marker interface for IDataOperation&lt;TValue&gt; implementations.Used to register implementations for use by an IDataOperationFactory. IDataOperation&lt;TValue&gt; Performs operations with time series data. IDataOperationFactory Creates objects of type IDataOperation&lt;TValue&gt;. IDataTransformer Non-generic marker interface for IDataTransformer&lt;TValue&gt; implementations.Used to register implementations for use by an IDataTransformerFactory. IDataTransformer&lt;TValue&gt; Transforms time series data. IDataTransformerFactory Creates objects of type IDataTransformer&lt;TValue&gt;. IIntervalTransformationOptions Determines how data will be calculated, when a time series interval is transformed. IIntervalTransformationOptionsFactory Factory for creating interval transformation options objects. ITimeSeriesData&lt;TValue&gt; Represents a single data point data along a time series with additional informationregarding the quality of the value. ITimeSeriesDataCollection&lt;TValue&gt; ITimeSeriesDataCollection represents time series data in a time series independent way.The additional information (unit, interval, time zone) describes the time series dataso that it can be used without the time series. ITimeSeriesDataFactory Creates objects representing time series data. ITimeSeriesDataSpan&lt;TValue&gt; Represents a data point along a time series that applies to the underlying time period. It also includes information about the quality of the value."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverter/","title":"IDataConverter","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverter/#idataconverter-interface","title":"IDataConverter Interface","text":"<p>Non-generic marker interface for IDataConverter&lt;TValue&gt; implementations. Used to register implementations for use by an IDataConverterFactory.</p> C#<pre><code>public interface IDataConverter\n</code></pre> <p>Derived \u21b3 IDataConverter&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/","title":"IDataConverterFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#idataconverterfactory-interface","title":"IDataConverterFactory Interface","text":"<p>Creates objects of type IDataConverter&lt;TValue&gt;.</p> C#<pre><code>public interface IDataConverterFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#idataconverterfactorycreatetvalueiunitstore-method","title":"IDataConverterFactory.Create&lt;TValue&gt;(IUnitStore) Method","text":"<p>Creates an instance of IDataConverter&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter&lt;TValue&gt; Create&lt;TValue&gt;(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#parameters","title":"Parameters","text":"<p><code>unitStore</code> IUnitStore</p> <p>The unit store where the units for the conversion are stored.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter&lt;TValue&gt; An IDataConverter&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#idataconverterfactorytrycreatetvalueiunitstore-method","title":"IDataConverterFactory.TryCreate&lt;TValue&gt;(IUnitStore) Method","text":"<p>Tries to create an instance of IDataConverter&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#parameters_1","title":"Parameters","text":"<p><code>unitStore</code> IUnitStore</p> <p>The unit store where the units for the conversion are stored.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing the IDataConverter&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/","title":"IDataConverter&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvalue-interface","title":"IDataConverter&lt;TValue&gt; Interface","text":"<p>Converts time series data to a given unit.</p> C#<pre><code>public interface IDataConverter&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values that will be worked with.</p> <p>Implements IDataConverter, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvalueconfigureiunitstore-method","title":"IDataConverter&lt;TValue&gt;.Configure(IUnitStore) Method","text":"<p>Configures the data converter with the given unitStore, which will be used to manage unit references and fetch conversion data from the repository.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters","title":"Parameters","text":"<p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used by the data converter.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvalueconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableresulticonstantunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.Convert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;Result&lt;IConstantUnitConversion&gt;&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;&gt; constantUnitConversionResults, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_1","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>constantUnitConversionResults</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversion&gt;&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is a Result&lt;TValue&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; The given ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvalueconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableresultiunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.Convert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;Result&lt;IUnitConversion&gt;&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;&gt; unitConversionResults, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_2","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>unitConversionResults</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitConversion&gt;&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is a Result&lt;TValue&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; The given ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvalueconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableiunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.Convert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;IUnitConversion&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt; unitConversions, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_3","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>unitConversions</code> System.Collections.Generic.IAsyncEnumerable&lt;IUnitConversion&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; The given ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvaluetryconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableresulticonstantunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.TryConvert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;Result&lt;IConstantUnitConversion&gt;&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;&gt; constantUnitConversionResults, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_4","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>constantUnitConversionResults</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversion&gt;&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is a Result&lt;TValue&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; The given Result&lt;TValue&gt; containing the ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvaluetryconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableresultiunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.TryConvert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;Result&lt;IUnitConversion&gt;&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;&gt; unitConversionResults, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_5","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>unitConversionResults</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitConversion&gt;&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; where T is a Result&lt;TValue&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; The given Result&lt;TValue&gt; containing the ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#idataconvertertvaluetryconvertitimeseriesdatacollectiontvalue-iunitreference-iasyncenumerableiunitconversion-nullableperiod-nullabledatetimeoffsetatorbefore-cancellationtoken-method","title":"IDataConverter&lt;TValue&gt;.TryConvert(ITimeSeriesDataCollection&lt;TValue&gt;, IUnitReference, IAsyncEnumerable&lt;IUnitConversion&gt;, Nullable&lt;Period&gt;, Nullable&lt;DateTimeOffsetAtOrBefore&gt;, CancellationToken) Method","text":"<p>Converts the given data to the given targetUnit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference targetUnit, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt; unitConversions, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; timeDependentUnitConversionReadingPeriod, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt; timeDependentUnitConversionHistoricDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#parameters_6","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be converted.</p> <p></p> <p><code>targetUnit</code> IUnitReference</p> <p>The IUnitReference to which the data will be converted.</p> <p></p> <p><code>unitConversions</code> System.Collections.Generic.IAsyncEnumerable&lt;IUnitConversion&gt;</p> <p>The necessary System.Collections.Generic.IAsyncEnumerable&lt;&gt; to perform the conversion.</p> <p></p> <p><code>timeDependentUnitConversionReadingPeriod</code> System.Nullable&lt;Period&gt;</p> <p>The Period for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>timeDependentUnitConversionHistoricDateTime</code> System.Nullable&lt;DateTimeOffsetAtOrBefore&gt;</p> <p>The DateTimeOffsetAtOrBefore for the ITimeSeriesDataReadingOptions to read the ITimeDependentUnitConversion data.             Can be null if no ITimeDependentUnitConversion is in the unit conversion path.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataConverterOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt;&gt; The given Result&lt;TValue&gt; containing the ITimeSeriesDataCollection&lt;TValue&gt; in the targetUnit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperation/","title":"IDataOperation","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperation/#idataoperation-interface","title":"IDataOperation Interface","text":"<p>Non-generic marker interface for IDataOperation&lt;TValue&gt; implementations. Used to register implementations for use by an IDataOperationFactory.</p> C#<pre><code>public interface IDataOperation\n</code></pre> <p>Derived \u21b3 IDataOperation&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/","title":"IDataOperationFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#idataoperationfactory-interface","title":"IDataOperationFactory Interface","text":"<p>Creates objects of type IDataOperation&lt;TValue&gt;.</p> C#<pre><code>public interface IDataOperationFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#idataoperationfactorycreatetvalue-method","title":"IDataOperationFactory.Create&lt;TValue&gt;() Method","text":"<p>Creates an instance of IDataOperation&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation&lt;TValue&gt; Create&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation&lt;TValue&gt; An IDataOperation&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#idataoperationfactorytrycreatetvalue-method","title":"IDataOperationFactory.TryCreate&lt;TValue&gt;() Method","text":"<p>Tries to create an instance of IDataOperation&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing the IDataOperation&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/","title":"IDataOperation&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#idataoperationtvalue-interface","title":"IDataOperation&lt;TValue&gt; Interface","text":"<p>Performs operations with time series data.</p> C#<pre><code>public interface IDataOperation&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Implements IDataOperation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#idataoperationtvalueperformoperationitimeseriesdatacollectiontvalue-itimeseriesdatacollectiontvalue-funcitimeseriesdatatvalueitimeseriesdatatvalueitimeseriesdatatvalue-period-cancellationtoken-method","title":"IDataOperation&lt;TValue&gt;.PerformOperation(ITimeSeriesDataCollection&lt;TValue&gt;, ITimeSeriesDataCollection&lt;TValue&gt;, Func&lt;ITimeSeriesData&lt;TValue&gt;,ITimeSeriesData&lt;TValue&gt;,ITimeSeriesData&lt;TValue&gt;&gt;, Period, CancellationToken) Method","text":"<p>Performs the given operation on the data points of the given collections in the given period.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; PerformOperation(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data1, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data2, System.Func&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; operation, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#parameters","title":"Parameters","text":"<p><code>data1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; used for performing the operation.</p> <p></p> <p><code>data2</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; used for performing the operation.</p> <p></p> <p><code>operation</code> System.Func&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>The operation which will be performed.</p> <p></p> <p><code>period</code> Period</p> <p>The Period in which the operation should be performed.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataOperationOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A new ITimeSeriesDataCollection&lt;TValue&gt; with all data points in the given Period with the same format as the first provided data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformer/","title":"IDataTransformer","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformer/#idatatransformer-interface","title":"IDataTransformer Interface","text":"<p>Non-generic marker interface for IDataTransformer&lt;TValue&gt; implementations. Used to register implementations for use by an IDataTransformerFactory.</p> C#<pre><code>public interface IDataTransformer\n</code></pre> <p>Derived \u21b3 IDataTransformer&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/","title":"IDataTransformerFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#idatatransformerfactory-interface","title":"IDataTransformerFactory Interface","text":"<p>Creates objects of type IDataTransformer&lt;TValue&gt;.</p> C#<pre><code>public interface IDataTransformerFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#idatatransformerfactorycreatetvalue-method","title":"IDataTransformerFactory.Create&lt;TValue&gt;() Method","text":"<p>Creates an instance of IDataTransformer&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer&lt;TValue&gt; Create&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer&lt;TValue&gt; An IDataTransformer&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#idatatransformerfactorytrycreatetvalue-method","title":"IDataTransformerFactory.TryCreate&lt;TValue&gt;() Method","text":"<p>Tries to create an instance of IDataTransformer&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to convert.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing the IDataTransformer&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/","title":"IDataTransformer&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvalue-interface","title":"IDataTransformer&lt;TValue&gt; Interface","text":"<p>Transforms time series data.</p> C#<pre><code>public interface IDataTransformer&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>Implements IDataTransformer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformerintervaltransformationoptions-property","title":"IDataTransformer.IntervalTransformationOptions Property <p>Used to create IIntervalTransformationOptions.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptionsFactory IntervalTransformationOptions { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#property-value","title":"Property Value","text":"<p>IIntervalTransformationOptionsFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluefromspanitimeseriesdataspantvalue-iunitreference-iinterval-bool-functiontype-itimezone-nullabledatetimeoffset-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.FromSpan(ITimeSeriesDataSpan&lt;TValue&gt;, IUnitReference, IInterval, bool, FunctionType, ITimeZone, Nullable&lt;DateTimeOffset&gt;, CancellationToken) Method <p>Converts ITimeSeriesDataSpan&lt;TValue&gt; to a ITimeSeriesDataCollection&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; FromSpan(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt; timeSeriesDataSpan, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference unitReference, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType functionType, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesDataSpan</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;</p> <p>The ITimeSeriesDataSpan&lt;TValue&gt; to convert.</p> <p></p> <p><code>unitReference</code> IUnitReference</p> <p>The IUnitReference to the unit in which the data is provided.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval in which the ITimeSeriesDataCollection&lt;TValue&gt; should be created.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The cyclic setting if the target ITimeSeriesDataCollection&lt;TValue&gt; should be cyclic or not.</p> <p></p> <p><code>functionType</code> FunctionType</p> <p>The FunctionType of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The start time of the time series data mesh. If the parameter is not provided the default start of              time from ITimeSeriesDefaults will be used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; The converted ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluefromspaniasyncenumerableitimeseriesdataspantvalue-iunitreference-iinterval-bool-functiontype-itimezone-nullabledatetimeoffset-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.FromSpan(IAsyncEnumerable&lt;ITimeSeriesDataSpan&lt;TValue&gt;&gt;, IUnitReference, IInterval, bool, FunctionType, ITimeZone, Nullable&lt;DateTimeOffset&gt;, CancellationToken) Method <p>Converts an System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesDataSpan&lt;TValue&gt; to a ITimeSeriesDataCollection&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; FromSpan(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt; timeSeriesDataSpan, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference unitReference, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType functionType, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesDataSpan</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesDataSpan&lt;TValue&gt; to convert.</p> <p></p> <p><code>unitReference</code> IUnitReference</p> <p>The IUnitReference to the unit in which the data is provided.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval in which the ITimeSeriesDataCollection&lt;TValue&gt; should be created.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The cyclic setting if the target ITimeSeriesDataCollection&lt;TValue&gt; should be cyclic or not.</p> <p></p> <p><code>functionType</code> FunctionType</p> <p>The FunctionType of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The start time of the time series data mesh. If the parameter is not provided the default start of              time from ITimeSeriesDefaults will be used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; The converted ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluefromspanienumerableitimeseriesdataspantvalue-iunitreference-iinterval-bool-functiontype-itimezone-nullabledatetimeoffset-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.FromSpan(IEnumerable&lt;ITimeSeriesDataSpan&lt;TValue&gt;&gt;, IUnitReference, IInterval, bool, FunctionType, ITimeZone, Nullable&lt;DateTimeOffset&gt;, CancellationToken) Method <p>Converts an System.Collections.Generic.IEnumerable&lt;&gt; of ITimeSeriesDataSpan&lt;TValue&gt; to a ITimeSeriesDataCollection&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; FromSpan(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt; timeSeriesDataSpan, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference unitReference, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType functionType, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesDataSpan</code> System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt;</p> <p>An System.Collections.Generic.IEnumerable&lt;&gt; of ITimeSeriesDataSpan&lt;TValue&gt; to convert.</p> <p></p> <p><code>unitReference</code> IUnitReference</p> <p>The IUnitReference to the unit in which the data is provided.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval in which the ITimeSeriesDataCollection&lt;TValue&gt; should be created.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>The cyclic setting if the target ITimeSeriesDataCollection&lt;TValue&gt; should be cyclic or not.</p> <p></p> <p><code>functionType</code> FunctionType</p> <p>The FunctionType of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone of the target ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The start time of the time series data mesh. If the parameter is not provided the default start of              time from ITimeSeriesDefaults will be used.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_2","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; The converted ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluetospanitimeseriesdatacollectiontvalue-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.ToSpan(ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method <p>Converts a ITimeSeriesDataCollection&lt;TValue&gt; into a collection of ITimeSeriesDataSpan&lt;TValue&gt;.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt; ToSpan(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesDataCollection, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_3","title":"Parameters","text":"<p><code>timeSeriesDataCollection</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be transformed.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan&lt;TValue&gt;&gt; The data as collection of ITimeSeriesDataSpan&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#remarks","title":"Remarks","text":"<p>Note that some implementations may require that the collection meet certain requirements. The default implementation, for example, requires that, when converting a non-cyclic ITimeSeriesDataCollection&lt;TValue&gt;, the last element in the collection has to be set with a Ignore() flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluetransformformatitimeseriesdatacollectiontvalue-nullablefunctiontype-nullablebool-nullabledatetimeoffset-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.TransformFormat(ITimeSeriesDataCollection&lt;TValue&gt;, Nullable&lt;FunctionType&gt;, Nullable&lt;bool&gt;, Nullable&lt;DateTimeOffset&gt;, CancellationToken) Method <p>Transforms the format of the given data to the given function type and cyclic configuration.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; TransformFormat(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function, System.Nullable&lt;bool&gt; cyclic, System.Nullable&lt;System.DateTimeOffset&gt; toDate=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_4","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be transformed.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>The FunctionType used for the transformation. If null is given, no argument is passed or if the target function type is the same as that of the source data, the function type will not be altered.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>The System.Boolean configuration for the cyclic nature of the data points. If null is given, no argument is passed, or if the target configuration is the same as that of the source data, the cyclic attribute will not be altered.</p> <p></p> <p><code>toDate</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>Limits the data for the transformation from non-cyclic to cyclic configuration, if the flag of the last element of the non-cyclic data is not Ignore(). This parameter is ignored if null or no argument is passed to parameter cyclic.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_4","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluetransformintervalitimeseriesdatacollectiontvalue-iintervaltransformationoptions-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.TransformInterval(ITimeSeriesDataCollection&lt;TValue&gt;, IIntervalTransformationOptions, CancellationToken) Method <p>Transforms the given data based on the given intervalTransformationOptions.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; TransformInterval(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions intervalTransformationOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_5","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be transformed.</p> <p></p> <p><code>intervalTransformationOptions</code> IIntervalTransformationOptions</p> <p>The IIntervalTransformationOptions used for the transformation.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_5","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; The given data collection in the new interval.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#idatatransformertvaluetransformtototalitimeseriesdatacollectiontvalue-period-nullableintervaltransformationmethod-cancellationtoken-method","title":"IDataTransformer&lt;TValue&gt;.TransformToTotal(ITimeSeriesDataCollection&lt;TValue&gt;, Period, Nullable&lt;IntervalTransformationMethod&gt;, CancellationToken) Method <p>Transforms the given data to its total based on the given transformationMethod.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; TransformToTotal(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, HAKOM.TSM.Net.Api.Time.Periods.Period period, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; transformationMethod, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#parameters_6","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; containing the data, which will be transformed.</p> <p></p> <p><code>period</code> Period</p> <p>The period used for the transformation.</p> <p></p> <p><code>transformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod used for the transformation.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken to abort the procedure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IDataTransformerOf1/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; The total of the given data collection.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/","title":"IIntervalTransformationOptions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#iintervaltransformationoptions-interface","title":"IIntervalTransformationOptions Interface","text":"<p>Determines how data will be calculated, when a time series interval is transformed.</p> C#<pre><code>public interface IIntervalTransformationOptions\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#iintervaltransformationoptionsinterval-property","title":"IIntervalTransformationOptions.Interval Property","text":"<p>Gets the target IInterval for the transformation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval Interval { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#property-value","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#iintervaltransformationoptionsintervaltransformationmethod-property","title":"IIntervalTransformationOptions.IntervalTransformationMethod Property","text":"<p>Gets the IntervalTransformationMethod  used for the transformation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod IntervalTransformationMethod { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#property-value_1","title":"Property Value","text":"<p>IntervalTransformationMethod</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#iintervaltransformationoptionsperiod-property","title":"IIntervalTransformationOptions.Period Property","text":"<p>Gets the Period for which the transformation will be made.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Periods.Period Period { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#property-value_2","title":"Property Value","text":"<p>Period</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#iintervaltransformationoptionstimezone-property","title":"IIntervalTransformationOptions.TimeZone Property","text":"<p>Gets the ITimeZone used for the transformation.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptions/#property-value_3","title":"Property Value","text":"<p>ITimeZone</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/","title":"IIntervalTransformationOptionsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#iintervaltransformationoptionsfactory-interface","title":"IIntervalTransformationOptionsFactory Interface","text":"<p>Factory for creating interval transformation options objects.</p> C#<pre><code>public interface IIntervalTransformationOptionsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#iintervaltransformationoptionsfactorycreateperiod-iinterval-intervaltransformationmethod-itimezone-method","title":"IIntervalTransformationOptionsFactory.Create(Period, IInterval, IntervalTransformationMethod, ITimeZone) Method","text":"<p>Creates an instance of IIntervalTransformationOptions using the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions Create(HAKOM.TSM.Net.Api.Time.Periods.Period period, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod intervalTransformationMethod, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#parameters","title":"Parameters","text":"<p><code>period</code> Period</p> <p>Sets the Period for the transformation.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The target IInterval for the transformation.</p> <p></p> <p><code>intervalTransformationMethod</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod which will be used for data calculations during the transformation.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone for the transformation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#returns","title":"Returns","text":"<p>IIntervalTransformationOptions A new instance of IIntervalTransformationOptions</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#iintervaltransformationoptionsfactorycreatedatetimeoffset-datetimeoffset-iinterval-intervaltransformationmethod-itimezone-method","title":"IIntervalTransformationOptionsFactory.Create(DateTimeOffset, DateTimeOffset, IInterval, IntervalTransformationMethod, ITimeZone) Method","text":"<p>Creates an instance of IIntervalTransformationOptions using the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions Create(System.DateTimeOffset from, System.DateTimeOffset to, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod intervalTransformationMethod, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#parameters_1","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>Sets the System.DateTimeOffset From property of the transformation options.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>Sets the System.DateTimeOffset To property of the transformation options.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The target IInterval for the transformation.</p> <p></p> <p><code>intervalTransformationMethod</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod which will be used for data calculations during the transformation.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone for the transformation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/IIntervalTransformationOptionsFactory/#returns_1","title":"Returns","text":"<p>IIntervalTransformationOptions A new instance of IIntervalTransformationOptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/","title":"ITimeSeriesDataCollection&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectiontvalue-interface","title":"ITimeSeriesDataCollection&lt;TValue&gt; Interface","text":"<p>ITimeSeriesDataCollection represents time series data in a time series independent way. The additional information (unit, interval, time zone) describes the time series data so that it can be used without the time series.</p> C#<pre><code>public interface ITimeSeriesDataCollection&lt;TValue&gt; :\nSystem.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the data for ITimeSeriesData&lt;TValue&gt;. The data has to implement System.IComparable&lt;&gt; and System.IEquatable&lt;&gt;</p> <p>Implements System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectioncyclic-property","title":"ITimeSeriesDataCollection.Cyclic Property <p>Gets or sets a System.Boolean indicating whether the values along the time axis are cyclic or not.</p> C#<pre><code>bool Cyclic { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#property-value","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectionfunction-property","title":"ITimeSeriesDataCollection.Function Property <p>Gets or sets the FunctionType specifying how values are applied along the time axis.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.FunctionType Function { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#property-value_1","title":"Property Value","text":"<p>FunctionType</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectioninterval-property","title":"ITimeSeriesDataCollection.Interval Property <p>Gets or sets the IInterval of the time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval Interval { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#property-value_2","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectiontimezone-property","title":"ITimeSeriesDataCollection.TimeZone Property <p>Gets or sets the ITimeZone of the time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone TimeZone { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#property-value_3","title":"Property Value","text":"<p>ITimeZone</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#itimeseriesdatacollectionunit-property","title":"ITimeSeriesDataCollection.Unit Property <p>Gets or sets the IUnitReference to the unit of the time series data.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; set; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataCollectionOf1/#property-value_4","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/","title":"ITimeSeriesDataFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#itimeseriesdatafactory-interface","title":"ITimeSeriesDataFactory Interface","text":"<p>Creates objects representing time series data.</p> C#<pre><code>public interface ITimeSeriesDataFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#itimeseriesdatafactorybuildcollectiontvalueperiod-iinterval-bool-functiontype-itimezone-method","title":"ITimeSeriesDataFactory.BuildCollection&lt;TValue&gt;(Period, IInterval, bool, FunctionType, ITimeZone) Method","text":"<p>Builds a collection of time series data. The Time property of its items is determined from the given parameters. The Flag and the Value properties are set to their defaults.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; BuildCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Periods.Period period, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone)\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of value these data points have.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#parameters","title":"Parameters","text":"<p><code>period</code> Period</p> <p>The period of time of the data point.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval of this data point.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>A System.Boolean indicating whether the collection is cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of this data point.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone used to create the data points.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; A collection of ITimeSeriesData&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#itimeseriesdatafactorycreatetvaluedatetimeoffset-tvalue-flag-method","title":"ITimeSeriesDataFactory.Create&lt;TValue&gt;(DateTimeOffset, TValue, Flag) Method","text":"<p>Creates an instance of ITimeSeriesData&lt;TValue&gt; with the given time, value and flag.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Create&lt;TValue&gt;(System.DateTimeOffset time, TValue value, HAKOM.TSM.Net.Api.Flags.Flag flag)\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of value this data point has.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#parameters_1","title":"Parameters","text":"<p><code>time</code> System.DateTimeOffset</p> <p>The time of the data point.</p> <p></p> <p><code>value</code> TValue</p> <p>The value of this data point.</p> <p></p> <p><code>flag</code> Flag</p> <p>The Flag of this data point.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; An ITimeSeriesData&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#itimeseriesdatafactorycreatecollectiontvalueiinterval-bool-functiontype-iunitreference-itimezone-iasyncenumerableitimeseriesdatatvalue-method","title":"ITimeSeriesDataFactory.CreateCollection&lt;TValue&gt;(IInterval, bool, FunctionType, IUnitReference, ITimeZone, IAsyncEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;) Method","text":"<p>Creates a time series data collection with additional information.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; CreateCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; data)\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points in the collection.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#parameters_2","title":"Parameters","text":"<p><code>interval</code> IInterval</p> <p>The IInterval of the data collection.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>A System.Boolean indicating whether the collection is cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the data collection.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit of the data collection.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone of the data collection.</p> <p></p> <p><code>data</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>The list of time series data points.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#returns_2","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; The time series data collection.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#itimeseriesdatafactorycreatecollectiontvalueiinterval-bool-functiontype-iunitreference-itimezone-ienumerableitimeseriesdatatvalue-method","title":"ITimeSeriesDataFactory.CreateCollection&lt;TValue&gt;(IInterval, bool, FunctionType, IUnitReference, ITimeZone, IEnumerable&lt;ITimeSeriesData&lt;TValue&gt;&gt;) Method","text":"<p>Creates a time series data collection with additional information.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; CreateCollection&lt;TValue&gt;(HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt; data)\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#type-parameters_3","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points in the collection.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#parameters_3","title":"Parameters","text":"<p><code>interval</code> IInterval</p> <p>The IInterval of the data collection.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>A System.Boolean indicating whether the collection is cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType of the data collection.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference to the unit of the data collection.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone of the data collection.</p> <p></p> <p><code>data</code> System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;&gt;</p> <p>The list of time series data points.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataFactory/#returns_3","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; A time series data collection.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/","title":"ITimeSeriesData&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/#itimeseriesdatatvalue-interface","title":"ITimeSeriesData&lt;TValue&gt; Interface","text":"<p>Represents a single data point data along a time series with additional information regarding the quality of the value.</p> C#<pre><code>public interface ITimeSeriesData&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;\n    where TValue : System.IComparable&lt;TValue&gt;?, System.IEquatable&lt;TValue&gt;?\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value.</p> <p>Derived \u21b3 TimeSeriesDataCalculationWrapper&lt;TValue&gt;</p> <p>Implements HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/#itimeseriesdatatime-property","title":"ITimeSeriesData.Time Property <p>Gets the time of the data point.</p> C#<pre><code>System.DateTimeOffset Time { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataOf1/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/","title":"ITimeSeriesDataSpan&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/#itimeseriesdataspantvalue-interface","title":"ITimeSeriesDataSpan&lt;TValue&gt; Interface","text":"<p>Represents a data point along a time series that applies to the underlying time period.  It also includes information about the quality of the value.</p> C#<pre><code>public interface ITimeSeriesDataSpan&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value.</p> <p>Implements HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.Data.IData&lt;TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/#itimeseriesdataspanperiod-property","title":"ITimeSeriesDataSpan.Period Property <p>Gets the validity period of the data point.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Periods.Period Period { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/ITimeSeriesDataSpanOf1/#property-value","title":"Property Value","text":"<p>Period</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/#hakomtsmnetapidatatimeseriescompression-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression Namespace","text":"Structs CompressionMode In HAKOM terminology time series compression is a data storage technology, where individual time series values are cascaded to fixed sized blocks, that are binary encoded and saved to the database. The size of the blocks depends on the interval of the underlying data.The CompressionMode represents the type of compression. Interfaces IBlockCompressor Packs and unpacks the data of ITimeSeriesDataCollection&lt;TValue&gt; into blocks of ITimeSeriesBlockData&lt;TValue&gt; where the block size depends on the CompressionMultiplier of the given ITimeSeries. IBlockCompressorFactory Creates objects of type IBlockCompressor. ICompressedTimeSeriesData&lt;TCompressedValue&gt; Container for compressed timeseries data. ICompressedTimeSeriesDataFactory Creates ICompressedTimeSeriesData&lt;TCompressedValue&gt; objects. ITimeSeriesBlockData&lt;TValue&gt; Represents a block of data, which begins at a specific time and contains the values and flags of multiple ITimeSeriesData&lt;TValue&gt; objects. ITimeSeriesBlockDataFactory A factory to create ITimeSeriesBlockData&lt;TValue&gt; objects. ITimeSeriesBlockDataSerializer Interface for ITimeSeriesBlockDataSerializer. ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; Interface for serializing and deserializing time series block data. ITimeSeriesBlockDataSerializerFactory Used to create ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instances."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/","title":"CompressionMode","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmode-struct","title":"CompressionMode Struct","text":"<p>In HAKOM terminology time series compression is a data storage technology, where individual time series values  are cascaded to fixed sized blocks, that are binary encoded and saved to the database.  The size of the blocks depends on the interval of the underlying data. The CompressionMode represents the type of compression.</p> C#<pre><code>public readonly struct CompressionMode :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode, int&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode&gt;\n</code></pre> <p>Implements System.IEquatable&lt;CompressionMode&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;CompressionMode,System.Int32&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;CompressionMode&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodevalue-property","title":"CompressionMode.Value Property","text":"<p>The number/id representing the type of compression</p> C#<pre><code>public int Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#property-value","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodebase64blockcompression-method","title":"CompressionMode.Base64BlockCompression() Method","text":"<p>Create a new instance of CompressionMode representing a compression based on Base64 encoded blocks.  Individual time series values are cascaded to fixed sized blocks that are binary encoded and saved to the database.  The size of the blocks depends on the interval of the underlying data. A compressed time series with this mode does not save timestamp information for each value.  Instead adjacent value-flag pairs are combined together to a block. This reduces data storage space and the database index size.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode Base64BlockCompression();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns","title":"Returns","text":"<p>CompressionMode A new instance of CompressionMode representing that the compression is turned on and based on Base64 encoded blocks.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodecreateint-method","title":"CompressionMode.Create(int) Method","text":"<p>Creates a new instance of CompressionMode with a custom value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode Create(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#parameters","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The System.Int32 id of the compression mode.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_1","title":"Returns","text":"<p>CompressionMode A new instance of CompressionMode.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodedefault-method","title":"CompressionMode.Default() Method","text":"<p>Creates a new default instance of CompressionMode. The default instance is no compression.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_2","title":"Returns","text":"<p>CompressionMode A new instance of the default CompressionMode (Value=default).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodeequalscompressionmode-method","title":"CompressionMode.Equals(CompressionMode) Method","text":"<p>Compares the value of this compression mode to another compression mode returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#parameters_1","title":"Parameters","text":"<p><code>other</code> CompressionMode</p> <p>The CompressionMode, which is used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_3","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the compression modes are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodeequalsobject-method","title":"CompressionMode.Equals(object) Method","text":"<p>Compares the value of this compression mode to another compression mode returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The CompressionMode, which is used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_4","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the compression modes are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodegethashcode-method","title":"CompressionMode.GetHashCode() Method","text":"<p>Creates the hash code for this compression mode, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_5","title":"Returns","text":"<p>System.Int32 A hash code for this compression mode.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodenocompression-method","title":"CompressionMode.NoCompression() Method","text":"<p>Create a new instance of CompressionMode representing that compression is turned off.  In case of conventional - uncompressed time series, each data row consists of a timestamp, value and flag.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode NoCompression();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_6","title":"Returns","text":"<p>CompressionMode a new instance of CompressionMode representing that compression is turned off.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodetostring-method","title":"CompressionMode.ToString() Method","text":"<p>Display the name and numeric value of the CompressionMode as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_7","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodeoperator-compressionmode-compressionmode-operator","title":"CompressionMode.operator ==(CompressionMode, CompressionMode) Operator","text":"<p>Compares the value of two compression modes using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode left, HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#parameters_3","title":"Parameters","text":"<p><code>left</code> CompressionMode</p> <p>The CompressionMode on the left of the '==' operator.</p> <p></p> <p><code>right</code> CompressionMode</p> <p>The CompressionMode on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_8","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the compression modes are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#compressionmodeoperator-compressionmode-compressionmode-operator_1","title":"CompressionMode.operator !=(CompressionMode, CompressionMode) Operator","text":"<p>Compares the value of two compression modes using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode left, HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#parameters_4","title":"Parameters","text":"<p><code>left</code> CompressionMode</p> <p>The CompressionMode on the left of the '!=' operator.</p> <p></p> <p><code>right</code> CompressionMode</p> <p>The CompressionMode on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/CompressionMode/#returns_9","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the compression modes are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/","title":"IBlockCompressor","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#iblockcompressor-interface","title":"IBlockCompressor Interface","text":"<p>Packs and unpacks the data of ITimeSeriesDataCollection&lt;TValue&gt; into blocks of ITimeSeriesBlockData&lt;TValue&gt;  where the block size depends on the CompressionMultiplier of the given ITimeSeries.</p> C#<pre><code>public interface IBlockCompressor\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#iblockcompressorcompresstvalueitimeseriesdatacollectiontvalue-cancellationtoken-method","title":"IBlockCompressor.Compress&lt;TValue&gt;(ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Packs the data of ITimeSeriesDataCollection&lt;TValue&gt; into blocks of ITimeSeriesBlockData&lt;TValue&gt;.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; Compress&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#parameters","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The data to be packed to System.Collections.Generic.IAsyncEnumerable&lt;&gt;.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#returns","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesBlockData&lt;TValue&gt; containing data with an interval using the CompressionMultiplier.             One block contains values and flags in the interval of the configured time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#iblockcompressorconfigureitimeseries-method","title":"IBlockCompressor.Configure(ITimeSeries) Method","text":"<p>Configures the IBlockCompressor with the time series for which data the blocks should be created.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#parameters_1","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#iblockcompressordecompresstvalueiasyncenumerableitimeseriesblockdatatvalue-cancellationtoken-method","title":"IBlockCompressor.Decompress&lt;TValue&gt;(IAsyncEnumerable&lt;ITimeSeriesBlockData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Unpacks the data of an System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesBlockData&lt;TValue&gt; to an ITimeSeriesDataCollection&lt;TValue&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; Decompress&lt;TValue&gt;(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; blockData, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#parameters_2","title":"Parameters","text":"<p><code>blockData</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;</p> <p>The data to be unpacked to ITimeSeriesDataCollection&lt;TValue&gt;.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; An ITimeSeriesDataCollection&lt;TValue&gt; containing the unpacked data from an System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesBlockData&lt;TValue&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#iblockcompressortrycompresstvalueitimeseriesdatacollectiontvalue-cancellationtoken-method","title":"IBlockCompressor.TryCompress&lt;TValue&gt;(ITimeSeriesDataCollection&lt;TValue&gt;, CancellationToken) Method","text":"<p>Packs the data of ITimeSeriesDataCollection&lt;TValue&gt; into blocks of ITimeSeriesBlockData&lt;TValue&gt;.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;&gt; TryCompress&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; data, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#type-parameters_2","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the value of the time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#parameters_3","title":"Parameters","text":"<p><code>data</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The data to be packed to System.Collections.Generic.IAsyncEnumerable&lt;&gt;.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressor/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of Result&lt;TValue&gt; containing data with an interval using the CompressionMultiplier.             One block contains values and flags in the interval of the configured time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/","title":"IBlockCompressorFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#iblockcompressorfactory-interface","title":"IBlockCompressorFactory Interface","text":"<p>Creates objects of type IBlockCompressor.</p> C#<pre><code>public interface IBlockCompressorFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#iblockcompressorfactorycreatecompressionmode-method","title":"IBlockCompressorFactory.Create(CompressionMode) Method","text":"<p>Creates a new BlockCompressor to convert ITimeSeriesData&lt;TValue&gt; to ITimeSeriesBlockData&lt;TValue&gt; and vice versa.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor Create(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#parameters","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#returns","title":"Returns","text":"<p>IBlockCompressor An IBlockCompressor object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#iblockcompressorfactorytrycreatecompressionmode-method","title":"IBlockCompressorFactory.TryCreate(CompressionMode) Method","text":"<p>Tries to create a new BlockCompressor to convert ITimeSeriesData&lt;TValue&gt; to ITimeSeriesBlockData&lt;TValue&gt; and vice versa.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor&gt; TryCreate(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#parameters_1","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IBlockCompressor&gt; A Result&lt;TValue&gt; containing the IBlockCompressor object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/IBlockCompressorFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/","title":"ICompressedTimeSeriesDataFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#icompressedtimeseriesdatafactory-interface","title":"ICompressedTimeSeriesDataFactory Interface","text":"<p>Creates ICompressedTimeSeriesData&lt;TCompressedValue&gt; objects.</p> C#<pre><code>public interface ICompressedTimeSeriesDataFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#icompressedtimeseriesdatafactorycreatetcompressedvaluedatetimeoffset-tcompressedvalue-method","title":"ICompressedTimeSeriesDataFactory.Create&lt;TCompressedValue&gt;(DateTimeOffset, TCompressedValue) Method","text":"<p>Creates a new ICompressedTimeSeriesData&lt;TCompressedValue&gt; object based on the given parameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt; Create&lt;TCompressedValue&gt;(System.DateTimeOffset blockTime, TCompressedValue blockData);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#type-parameters","title":"Type parameters","text":"<p><code>TCompressedValue</code></p> <p>The type of the compressed value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#parameters","title":"Parameters","text":"<p><code>blockTime</code> System.DateTimeOffset</p> <p>The block's time (beginning or end, based on the Function property of the related time series).</p> <p></p> <p><code>blockData</code> TCompressedValue</p> <p>The compressed data, valid for this time.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt; A new instance of ICompressedTimeSeriesData&lt;TCompressedValue&gt;, containing the given compressed data, for the given time.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/","title":"ICompressedTimeSeriesData&lt;TCompressedValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#icompressedtimeseriesdatatcompressedvalue-interface","title":"ICompressedTimeSeriesData&lt;TCompressedValue&gt; Interface","text":"<p>Container for compressed timeseries data.</p> C#<pre><code>public interface ICompressedTimeSeriesData&lt;TCompressedValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#type-parameters","title":"Type parameters","text":"<p><code>TCompressedValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#icompressedtimeseriesdatablocktime-property","title":"ICompressedTimeSeriesData.BlockTime Property <p>The duration of the blocked timeseries data.</p> C#<pre><code>System.DateTimeOffset BlockTime { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#icompressedtimeseriesdatacompresseddata-property","title":"ICompressedTimeSeriesData.CompressedData Property <p>The compressed timeseries data.</p> C#<pre><code>TCompressedValue CompressedData { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ICompressedTimeSeriesDataOf1/#property-value_1","title":"Property Value","text":"<p>TCompressedValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/","title":"ITimeSeriesBlockDataFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#itimeseriesblockdatafactory-interface","title":"ITimeSeriesBlockDataFactory Interface","text":"<p>A factory to create ITimeSeriesBlockData&lt;TValue&gt; objects.</p> C#<pre><code>public interface ITimeSeriesBlockDataFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#itimeseriesblockdatafactorycreatetvaluedatetimeoffset-iasyncenumerabletvalue-valueflag-flag-method","title":"ITimeSeriesBlockDataFactory.Create&lt;TValue&gt;(DateTimeOffset, IAsyncEnumerable&lt;(TValue Value,Flag Flag)&gt;) Method","text":"C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt; Create&lt;TValue&gt;(System.DateTimeOffset blockTime, System.Collections.Generic.IAsyncEnumerable&lt;(TValue Value,HAKOM.TSM.Net.Api.Flags.Flag Flag)&gt; block)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#parameters","title":"Parameters","text":"<p><code>blockTime</code> System.DateTimeOffset</p> <p></p> <p><code>block</code> System.Collections.Generic.IAsyncEnumerable&lt;&lt;TValue,Flag&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/","title":"ITimeSeriesBlockData&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#itimeseriesblockdatatvalue-interface","title":"ITimeSeriesBlockData&lt;TValue&gt; Interface","text":"<p>Represents a block of data, which begins at a specific time and contains the values and flags of multiple ITimeSeriesData&lt;TValue&gt; objects.</p> C#<pre><code>public interface ITimeSeriesBlockData&lt;TValue&gt;\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of TValue for the data points.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#itimeseriesblockdatablock-property","title":"ITimeSeriesBlockData.Block Property <p>The contents of the data block - values and flags for all data points in the block.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;(TValue Value,HAKOM.TSM.Net.Api.Flags.Flag Flag)&gt; Block { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;&lt;TValue,Flag&gt;&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#itimeseriesblockdatablocktime-property","title":"ITimeSeriesBlockData.BlockTime Property <p>The beginning or end of the block. Depends on the FunctionType of the ITimeSeries, which the block data is used for.</p> C#<pre><code>System.DateTimeOffset BlockTime { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataOf1/#property-value_1","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializer/","title":"ITimeSeriesBlockDataSerializer","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializer/#itimeseriesblockdataserializer-interface","title":"ITimeSeriesBlockDataSerializer Interface","text":"<p>Interface for ITimeSeriesBlockDataSerializer.</p> C#<pre><code>public interface ITimeSeriesBlockDataSerializer\n</code></pre> <p>Derived \u21b3 ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/","title":"ITimeSeriesBlockDataSerializerFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#itimeseriesblockdataserializerfactory-interface","title":"ITimeSeriesBlockDataSerializerFactory Interface","text":"<p>Used to create ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instances.</p> C#<pre><code>public interface ITimeSeriesBlockDataSerializerFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#itimeseriesblockdataserializerfactorycreatetvaluetcompressedvaluecompressionmode-method","title":"ITimeSeriesBlockDataSerializerFactory.Create&lt;TValue,TCompressedValue&gt;(CompressionMode) Method","text":"<p>Creates a new ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instance. It will be configured with the specified compression mode media type resolver.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; Create&lt;TValue,TCompressedValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of values in the time series data.</p> <p></p> <p><code>TCompressedValue</code></p> <p>The type of values in the compressed time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#parameters","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p> <p>The compression mode.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; A new ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instance.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#itimeseriesblockdataserializerfactorytrycreatetvaluetcompressedvaluecompressionmode-method","title":"ITimeSeriesBlockDataSerializerFactory.TryCreate&lt;TValue,TCompressedValue&gt;(CompressionMode) Method","text":"<p>Creates a new ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instance. It will be configured with the specified compression mode media type resolver.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;&gt; TryCreate&lt;TValue,TCompressedValue&gt;(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode)\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of values in the time series data.</p> <p></p> <p><code>TCompressedValue</code></p> <p>The type of values in the compressed time series data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#parameters_1","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p> <p>The compression mode.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;&gt; A Result&lt;TValue&gt; containing a new ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvalue-interface","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; Interface","text":"<p>Interface for serializing and deserializing time series block data.</p> C#<pre><code>public interface ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer,\nHAKOM.DependencyInjection.Core.Net.Api.IRequiresConfiguration\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of values in the time series data.</p> <p></p> <p><code>TCompressedValue</code></p> <p>The type of values in the compressed time series data.</p> <p>Implements ITimeSeriesBlockDataSerializer, IRequiresConfiguration</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvalueconfigurecompressionmode-method","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;.Configure(CompressionMode) Method","text":"<p>Configures the serializer for CompressionMode.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#parameters","title":"Parameters","text":"<p><code>compressionMode</code> CompressionMode</p> <p>The compression mode to use.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvaluedeserializeiasyncenumerableicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;.Deserialize(IAsyncEnumerable&lt;ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;, CancellationToken) Method","text":"<p>Deserializes the given compressed time series data.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; Deserialize(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; compressedTimeSeriesData, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#parameters_1","title":"Parameters","text":"<p><code>compressedTimeSeriesData</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;</p> <p>The list of ICompressedTimeSeriesData&lt;TCompressedValue&gt; to deserialize.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#returns","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of time series block data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvalueserializeiasyncenumerableitimeseriesblockdatatvalue-cancellationtoken-method","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;.Serialize(IAsyncEnumerable&lt;ITimeSeriesBlockData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Serializes the given time series block data.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; Serialize(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; timeSeriesBlockData, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesBlockData</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;</p> <p>The list of ITimeSeriesBlockData&lt;TValue&gt; to serialize.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of compressed time series block data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvaluetrydeserializeiasyncenumerableicompressedtimeseriesdatatcompressedvalue-cancellationtoken-method","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;.TryDeserialize(IAsyncEnumerable&lt;ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;, CancellationToken) Method","text":"<p>Deserializes the given serialized time series block data.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;&gt; TryDeserialize(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt; compressedTimeSeriesData, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#parameters_3","title":"Parameters","text":"<p><code>compressedTimeSeriesData</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;</p> <p>The list of ICompressedTimeSeriesData&lt;TCompressedValue&gt; to deserialize.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;&gt; A stream of Result&lt;TValue&gt; of the deserialized time series block data.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#itimeseriesblockdataserializertvaluetcompressedvaluetryserializeiasyncenumerableitimeseriesblockdatatvalue-cancellationtoken-method","title":"ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt;.TrySerialize(IAsyncEnumerable&lt;ITimeSeriesBlockData&lt;TValue&gt;&gt;, CancellationToken) Method","text":"<p>Serializes the given time series block data.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; TrySerialize(System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt; timeSeriesBlockData, System.Threading.CancellationToken cancellationToken);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#parameters_4","title":"Parameters","text":"<p><code>timeSeriesBlockData</code> System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData&lt;TValue&gt;&gt;</p> <p>The list of ITimeSeriesBlockData&lt;TValue&gt; to serialize.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/ITimeSeriesBlockDataSerializerOf2/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData&lt;TCompressedValue&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing a Result&lt;TValue&gt; of the serialized time series block data.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/#hakomtsmnetapidatatimeseriescompressionexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions Namespace","text":"Classes CompressionModeNotSupportedException Indicates that an attempt was made to configure a serializer with a wrong compression mode. IntervalOrTimeZoneDifferException Thrown when an attempt was made to convert ITimeSeriesData&lt;TValue&gt; to ITimeSeriesBlockData&lt;TValue&gt;, where the time zone and/or the interval does not match the time zone and/or interval of the configured time series."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/","title":"CompressionModeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/#compressionmodenotsupportedexception-class","title":"CompressionModeNotSupportedException Class","text":"<p>Indicates that an attempt was made to configure a serializer with a wrong compression mode.</p> C#<pre><code>public sealed class CompressionModeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CompressionModeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/#remarks","title":"Remarks","text":"<p>When configuring the ITimeSeriesBlockDataSerializer&lt;TValue,TCompressedValue&gt; only permitted serializers can be used.  </p> <p>This exception is identified by error code HK15069.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/#compressionmodenotsupportedexceptionequivalenthttpstatuscode-property","title":"CompressionModeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/CompressionModeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/","title":"IntervalOrTimeZoneDifferException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/#intervalortimezonedifferexception-class","title":"IntervalOrTimeZoneDifferException Class","text":"<p>Thrown when an attempt was made to convert ITimeSeriesData&lt;TValue&gt; to ITimeSeriesBlockData&lt;TValue&gt;, where the  time zone and/or the interval does not match the time zone and/or interval of the configured time series.</p> C#<pre><code>public sealed class IntervalOrTimeZoneDifferException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IntervalOrTimeZoneDifferException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/#remarks","title":"Remarks","text":"<p>Ensure that time zone and/or interval of the given ITimeSeriesData&lt;TValue&gt; matches the time zone and/or interval of the time series given in Configure(ITimeSeries).  </p> <p>This exception is identified by error code HK15067.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/#intervalortimezonedifferexceptionequivalenthttpstatuscode-property","title":"IntervalOrTimeZoneDifferException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Exceptions/IntervalOrTimeZoneDifferException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/#hakomtsmnetapidatatimeseriescompressionextensions-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer that relate to time series data compression."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer that relate to time series data compression.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/#containerextensionsusedefaultcompressionmodenamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultCompressionModeNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual CompressionMode values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultCompressionModeNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Compression/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/#hakomtsmnetapidatatimeseriesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions Namespace","text":"Classes MultiPathConversionOnlySupportsFactorConversionException Indicates that an attempt was made to convert a time series with multiple conversion paths not only containing factors. NonCyclicStepLeftFunctionDataIsNotSupportedException Indicates that an attempt was made to use a combination of cyclic = false and function = StepLeft(). NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException Indicates that an attempt was made to transform a non-cyclic ITimeSeriesDataCollection&lt;TValue&gt; into a collection of ITimeSeriesDataSpan&lt;TValue&gt;, without the last entry of the ITimeSeriesDataCollection&lt;TValue&gt; having the Ignore() flag configured. TransformationIntoCyclicDataWithoutToDateNotSupportedException Indicates, that an attempt was made to transform non cyclic data to cyclic data but the to date is missing. UnitConversionPathForUnitConversionNotFoundException Indicates that for the given conversion no HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath was found."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/","title":"MultiPathConversionOnlySupportsFactorConversionException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/#multipathconversiononlysupportsfactorconversionexception-class","title":"MultiPathConversionOnlySupportsFactorConversionException Class","text":"<p>Indicates that an attempt was made to convert a time series with multiple conversion paths not only containing factors.</p> C#<pre><code>public sealed class MultiPathConversionOnlySupportsFactorConversionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MultiPathConversionOnlySupportsFactorConversionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/#remarks","title":"Remarks","text":"<p>This exception is thrown if the conversion contains multiple paths (e.g. the conversion from m/s to km/h contains the conversion paths m -&gt; km and s -&gt; h) and at least one of these paths contains a conversion that is not factor-based (e.g. using integration, offset, or a time-based unit conversion). Make sure that each path can only use factor-based unit conversions or change either the source or the target unit.  </p> <p>This exception is identified by error code HK15063.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/#multipathconversiononlysupportsfactorconversionexceptionequivalenthttpstatuscode-property","title":"MultiPathConversionOnlySupportsFactorConversionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 501 (Not Implemented).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/MultiPathConversionOnlySupportsFactorConversionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/","title":"NonCyclicStepLeftFunctionDataIsNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/#noncyclicstepleftfunctiondataisnotsupportedexception-class","title":"NonCyclicStepLeftFunctionDataIsNotSupportedException Class","text":"<p>Indicates that an attempt was made to use a combination of cyclic = false and function = StepLeft().</p> C#<pre><code>public sealed class NonCyclicStepLeftFunctionDataIsNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NonCyclicStepLeftFunctionDataIsNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/#remarks","title":"Remarks","text":"<p>The default implementation for processing data does not support data where cyclic is false and the function is StepLeft(). Use either data where cyclic is false and function is StepRight() or data where cyclic is true.  </p> <p>This exception is identified by error code HK15050.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/#noncyclicstepleftfunctiondataisnotsupportedexceptionequivalenthttpstatuscode-property","title":"NonCyclicStepLeftFunctionDataIsNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicStepLeftFunctionDataIsNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/","title":"NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/#noncyclictimeseriesdatacollectionconversiontotimeseriesspanwithoutignoreaslastflagisnotsupportedexception-class","title":"NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException Class","text":"<p>Indicates that an attempt was made to transform a non-cyclic ITimeSeriesDataCollection&lt;TValue&gt; into a collection of ITimeSeriesDataSpan&lt;TValue&gt;,  without the last entry of the ITimeSeriesDataCollection&lt;TValue&gt; having the Ignore() flag configured.</p> C#<pre><code>public sealed class NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15093.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/#noncyclictimeseriesdatacollectionconversiontotimeseriesspanwithoutignoreaslastflagisnotsupportedexceptionequivalenthttpstatuscode-property","title":"NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/","title":"TransformationIntoCyclicDataWithoutToDateNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/#transformationintocyclicdatawithouttodatenotsupportedexception-class","title":"TransformationIntoCyclicDataWithoutToDateNotSupportedException Class","text":"<p>Indicates, that an attempt was made to transform non cyclic data to cyclic data but the to date is missing.</p> C#<pre><code>public sealed class TransformationIntoCyclicDataWithoutToDateNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TransformationIntoCyclicDataWithoutToDateNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/#remarks","title":"Remarks","text":"<p>If TransformFormat(ITimeSeriesDataCollection&lt;TValue&gt;, Nullable&lt;FunctionType&gt;, Nullable&lt;bool&gt;, Nullable&lt;DateTimeOffset&gt;, CancellationToken) is called without a to-date, but the transformation requires converting non-cyclic data to cyclic data, this exception is thrown. Specify a to-date to avoid this exception.  </p> <p>This exception is identified by error code HK15051.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/#transformationintocyclicdatawithouttodatenotsupportedexceptionequivalenthttpstatuscode-property","title":"TransformationIntoCyclicDataWithoutToDateNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/TransformationIntoCyclicDataWithoutToDateNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/","title":"UnitConversionPathForUnitConversionNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/#unitconversionpathforunitconversionnotfoundexception-class","title":"UnitConversionPathForUnitConversionNotFoundException Class","text":"<p>Indicates that for the given conversion no HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath was found.</p> C#<pre><code>public sealed class UnitConversionPathForUnitConversionNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnitConversionPathForUnitConversionNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/#remarks","title":"Remarks","text":"<p>When converting data from one unit to another, IUnitConversions must be provided to ensure a conversion path between these units. Either add a IUnitConversion to the specified unit conversions to ensure that a conversion path between the unit of the data and the target unit is possible, or change the target unit.  </p> <p>This exception is identified by error code HK15056.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/#unitconversionpathforunitconversionnotfoundexceptionequivalenthttpstatuscode-property","title":"UnitConversionPathForUnitConversionNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Exceptions/UnitConversionPathForUnitConversionNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/#hakomtsmnetapidatatimeseriesextensions-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions Namespace","text":"Classes TimeSeriesDataCollectionExtensions Class for extending the ITimeSeriesDataCollection&lt;TValue&gt; functionality."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/","title":"TimeSeriesDataCollectionExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#timeseriesdatacollectionextensions-class","title":"TimeSeriesDataCollectionExtensions Class","text":"<p>Class for extending the ITimeSeriesDataCollection&lt;TValue&gt; functionality.</p> C#<pre><code>public static class TimeSeriesDataCollectionExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 TimeSeriesDataCollectionExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#timeseriesdatacollectionextensionsmemoizedtvaluethis-itimeseriesdatacollectiontvalue-method","title":"TimeSeriesDataCollectionExtensions.Memoized&lt;TValue&gt;(this ITimeSeriesDataCollection&lt;TValue&gt;) Method","text":"<p>Memoizes an ITimeSeriesDataCollection&lt;TValue&gt; to cache the ITimeSeriesData&lt;TValue&gt; and be able to reuse  the data while avoiding multiple calls to the Storage to reread the ITimeSeriesData&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; Memoized&lt;TValue&gt;(this HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; timeSeriesDataCollection)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the data for ITimeSeriesData&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#parameters","title":"Parameters","text":"<p><code>timeSeriesDataCollection</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;</p> <p>The ITimeSeriesDataCollection&lt;TValue&gt; to memoize.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Extensions/TimeSeriesDataCollectionExtensions/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt; A memoized ITimeSeriesDataCollection&lt;TValue&gt; where the underlying ITimeSeriesData&lt;TValue&gt;             can be used multiple times without rereading it from the Storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Math","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/#hakomtsmnetapidatatimeseriesmath-namespace","title":"HAKOM.TSM.Net.Api.Data.TimeSeries.Math Namespace","text":"Interfaces IArithmeticOperations Provides arithmetic operations IArithmeticOperations&lt;TValue&gt; Provides arithmetic operations (addition, subtraction, multiplication, division) ITimeSeriesData&lt;TValue&gt;\"/&gt;. IArithmeticOperationsFactory Creates objects of type IArithmeticOperations&lt;TValue&gt;."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperations/","title":"IArithmeticOperations","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Math</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperations/#iarithmeticoperations-interface","title":"IArithmeticOperations Interface","text":"<p>Provides arithmetic operations</p> C#<pre><code>public interface IArithmeticOperations\n</code></pre> <p>Derived \u21b3 IArithmeticOperations&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/","title":"IArithmeticOperationsFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Math</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#iarithmeticoperationsfactory-interface","title":"IArithmeticOperationsFactory Interface","text":"<p>Creates objects of type IArithmeticOperations&lt;TValue&gt;.</p> C#<pre><code>public interface IArithmeticOperationsFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#iarithmeticoperationsfactorycreatetvalue-method","title":"IArithmeticOperationsFactory.Create&lt;TValue&gt;() Method","text":"<p>Creates an instance of IArithmeticOperations&lt;TValue&gt;</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt; Create&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to operate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt; An IArithmeticOperations&lt;TValue&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#iarithmeticoperationsfactorytrycreatetvalue-method","title":"IArithmeticOperationsFactory.TryCreate&lt;TValue&gt;() Method","text":"<p>Tries to create an instance of IArithmeticOperations&lt;TValue&gt;</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt;&gt; TryCreate&lt;TValue&gt;()\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The value type of the data points to operate.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations&lt;TValue&gt;&gt; A Result&lt;TValue&gt; containing the IArithmeticOperations&lt;TValue&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/","title":"IArithmeticOperations&lt;TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Data.TimeSeries.Math</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalue-interface","title":"IArithmeticOperations&lt;TValue&gt; Interface","text":"<p>Provides arithmetic operations (addition, subtraction, multiplication, division) ITimeSeriesData&lt;TValue&gt;\"/&gt;.</p> C#<pre><code>public interface IArithmeticOperations&lt;TValue&gt; :\nHAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the data for ITimeSeriesData&lt;TValue&gt;. The data has to implement System.IComparable&lt;&gt; and System.IEquatable&lt;&gt;</p> <p>Implements IArithmeticOperations</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationszero-property","title":"IArithmeticOperations.Zero Property <p>Returns the equivalent of 0 for the type.</p> C#<pre><code>TValue Zero { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#property-value","title":"Property Value","text":"<p>TValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueabstvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Abs(TValue) Method <p>Computes the absolute value of the value.</p> C#<pre><code>TValue Abs(TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns","title":"Returns","text":"<p>TValue The absolute of the given value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#exceptions","title":"Exceptions","text":"<p>System.OverflowException</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueadditimeseriesdatatvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Add(ITimeSeriesData&lt;TValue&gt;, decimal) Method <p>Adds the given terms.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; term1, decimal term2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_1","title":"Parameters","text":"<p><code>term1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first term of the addition.</p> <p></p> <p><code>term2</code> System.Decimal</p> <p>The second term of the addition.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The sum of the given terms.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueadditimeseriesdatatvalue-itimeseriesdatatvalue-flaghandling-method","title":"IArithmeticOperations&lt;TValue&gt;.Add(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;, FlagHandling) Method <p>Adds the given terms.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; term1, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; term2, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_2","title":"Parameters","text":"<p><code>term1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first term of the addition.</p> <p></p> <p><code>term2</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The second term of the addition.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Specifies which flag is to be used for the result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_2","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The sum of the given terms.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueadditimeseriesdatatvalue-itimeseriesdatatvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Add(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;) Method <p>Adds the given term and uses the flag with the highest priority for the result.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; term1, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; term2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_3","title":"Parameters","text":"<p><code>term1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first term of the addition.</p> <p></p> <p><code>term2</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The second term of the addition.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_3","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The sum of the given terms.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueaddtvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Add(TValue, decimal) Method <p>Adds the given terms.</p> C#<pre><code>TValue Add(TValue term1, decimal term2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_4","title":"Parameters","text":"<p><code>term1</code> TValue</p> <p>The first term of the addition.</p> <p></p> <p><code>term2</code> System.Decimal</p> <p>The second term of the addition.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_4","title":"Returns","text":"<p>TValue The sum of the given terms.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvalueaddtvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Add(TValue, TValue) Method <p>Adds the given terms.</p> C#<pre><code>TValue Add(TValue term1, TValue term2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_5","title":"Parameters","text":"<p><code>term1</code> TValue</p> <p>The first term of the addition.</p> <p></p> <p><code>term2</code> TValue</p> <p>The second term of the addition.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_5","title":"Returns","text":"<p>TValue The sum of the given terms.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluedivideitimeseriesdatatvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Divide(ITimeSeriesData&lt;TValue&gt;, decimal) Method <p>Divides the dividend by the divisor.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; dividend, decimal divisor);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_6","title":"Parameters","text":"<p><code>dividend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The dividend of the division.</p> <p></p> <p><code>divisor</code> System.Decimal</p> <p>The divisor of the division.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_6","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The quotient of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluedivideitimeseriesdatatvalue-itimeseriesdatatvalue-flaghandling-method","title":"IArithmeticOperations&lt;TValue&gt;.Divide(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;, FlagHandling) Method <p>Divides the dividend by the divisor.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; dividend, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; divisor, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_7","title":"Parameters","text":"<p><code>dividend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The dividend of the division.</p> <p></p> <p><code>divisor</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The divisor of the division.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Specifies which flag is to be used for the result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_7","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The quotient of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluedivideitimeseriesdatatvalue-itimeseriesdatatvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Divide(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;) Method <p>Divides the dividend by the divisor and uses the flag with the highest priority for the result.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; dividend, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; divisor);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_8","title":"Parameters","text":"<p><code>dividend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The dividend of the division.</p> <p></p> <p><code>divisor</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The divisor of the division.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_8","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The quotient of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluedividetvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Divide(TValue, decimal) Method <p>Divides the dividend by the divisor.</p> C#<pre><code>TValue Divide(TValue dividend, decimal divisor);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_9","title":"Parameters","text":"<p><code>dividend</code> TValue</p> <p>The dividend of the division.</p> <p></p> <p><code>divisor</code> System.Decimal</p> <p>The divisor of the division.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_9","title":"Returns","text":"<p>TValue The quotient of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluedividetvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Divide(TValue, TValue) Method <p>Divides the dividend by the divisor.</p> C#<pre><code>TValue Divide(TValue dividend, TValue divisor);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_10","title":"Parameters","text":"<p><code>dividend</code> TValue</p> <p>The dividend of the division.</p> <p></p> <p><code>divisor</code> TValue</p> <p>The divisor of the division.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_10","title":"Returns","text":"<p>TValue The quotient of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluegreaterthantvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.GreaterThan(TValue, TValue) Method <p>Compares two values to determine which is greater.</p> C#<pre><code>bool GreaterThan(TValue left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_11","title":"Parameters","text":"<p><code>left</code> TValue</p> <p>The value to compare with right.</p> <p></p> <p><code>right</code> TValue</p> <p>The value to compare with left.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_11","title":"Returns","text":"<p>System.Boolean true if left is greater than right; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluegreaterthanorequaltvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.GreaterThanOrEqual(TValue, TValue) Method <p>Compares two values to determine which is greater or equal.</p> C#<pre><code>bool GreaterThanOrEqual(TValue left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_12","title":"Parameters","text":"<p><code>left</code> TValue</p> <p>The value to compare with right.</p> <p></p> <p><code>right</code> TValue</p> <p>The value to compare with left.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_12","title":"Returns","text":"<p>System.Boolean true if left is greater than or equal to right; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluelessthantvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.LessThan(TValue, TValue) Method <p>Compares two values to determine which is less.</p> C#<pre><code>bool LessThan(TValue left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_13","title":"Parameters","text":"<p><code>left</code> TValue</p> <p>The value to compare with right.</p> <p></p> <p><code>right</code> TValue</p> <p>The value to compare with left.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_13","title":"Returns","text":"<p>System.Boolean true if left is less than right; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluelessthanorequaltvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.LessThanOrEqual(TValue, TValue) Method <p>Compares two values to determine which is less or equal.</p> C#<pre><code>bool LessThanOrEqual(TValue left, TValue right);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_14","title":"Parameters","text":"<p><code>left</code> TValue</p> <p>The value to compare with right.</p> <p></p> <p><code>right</code> TValue</p> <p>The value to compare with left.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_14","title":"Returns","text":"<p>System.Boolean true if left is less than or equal to right; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemaxtvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Max(TValue, TValue) Method <p>Finds the greater value of two values.</p> C#<pre><code>TValue Max(TValue value1, TValue value2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_15","title":"Parameters","text":"<p><code>value1</code> TValue</p> <p>The first value to be checked.</p> <p></p> <p><code>value2</code> TValue</p> <p>The second value to be checked.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_15","title":"Returns","text":"<p>TValue The greatest of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemintvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Min(TValue, TValue) Method <p>Finds the lower value of two values.</p> C#<pre><code>TValue Min(TValue value1, TValue value2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_16","title":"Parameters","text":"<p><code>value1</code> TValue</p> <p>The first value to be checked.</p> <p></p> <p><code>value2</code> TValue</p> <p>The second value to be checked.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_16","title":"Returns","text":"<p>TValue The lower of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemultiplyitimeseriesdatatvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Multiply(ITimeSeriesData&lt;TValue&gt;, decimal) Method <p>Multiplies the given factors.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; factor1, decimal factor2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_17","title":"Parameters","text":"<p><code>factor1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first factor of the multiplication.</p> <p></p> <p><code>factor2</code> System.Decimal</p> <p>The second factor of the multiplication.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_17","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The product of the given factors.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemultiplyitimeseriesdatatvalue-itimeseriesdatatvalue-flaghandling-method","title":"IArithmeticOperations&lt;TValue&gt;.Multiply(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;, FlagHandling) Method <p>Multiplies the given factors.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; factor1, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; factor2, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_18","title":"Parameters","text":"<p><code>factor1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first factor of the multiplication.</p> <p></p> <p><code>factor2</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The second factor of the multiplication.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Specifies which flag is to be used for the result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_18","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The product of the given factors.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemultiplyitimeseriesdatatvalue-itimeseriesdatatvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Multiply(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;) Method <p>Multiplies the given factors and uses the flag with the highest priority for the result.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; factor1, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; factor2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_19","title":"Parameters","text":"<p><code>factor1</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The first factor of the multiplication.</p> <p></p> <p><code>factor2</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The second factor of the multiplication.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_19","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The product of the given factors.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemultiplytvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Multiply(TValue, decimal) Method <p>Multiplies the given factors.</p> C#<pre><code>TValue Multiply(TValue factor1, decimal factor2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_20","title":"Parameters","text":"<p><code>factor1</code> TValue</p> <p>The first factor of the multiplication.</p> <p></p> <p><code>factor2</code> System.Decimal</p> <p>The second factor of the multiplication.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_20","title":"Returns","text":"<p>TValue The product of the given factors.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluemultiplytvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Multiply(TValue, TValue) Method <p>Multiplies the given factors.</p> C#<pre><code>TValue Multiply(TValue factor1, TValue factor2);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_21","title":"Parameters","text":"<p><code>factor1</code> TValue</p> <p>The first factor of the multiplication.</p> <p></p> <p><code>factor2</code> TValue</p> <p>The second factor of the multiplication.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_21","title":"Returns","text":"<p>TValue The product of the given factors.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluesubtractitimeseriesdatatvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Subtract(ITimeSeriesData&lt;TValue&gt;, decimal) Method <p>Subtracts the subtrahend from the minuend.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; minuend, decimal subtrahend);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_22","title":"Parameters","text":"<p><code>minuend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The minuend of the subtraction.</p> <p></p> <p><code>subtrahend</code> System.Decimal</p> <p>The subtrahend of the subtraction.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_22","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The difference of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluesubtractitimeseriesdatatvalue-itimeseriesdatatvalue-flaghandling-method","title":"IArithmeticOperations&lt;TValue&gt;.Subtract(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;, FlagHandling) Method <p>Subtracts the subtrahend from the minuend.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; minuend, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; subtrahend, HAKOM.TSM.Net.Api.Flags.FlagHandling flagHandling);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_23","title":"Parameters","text":"<p><code>minuend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The minuend of the subtraction.</p> <p></p> <p><code>subtrahend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The subtrahend of the subtraction.</p> <p></p> <p><code>flagHandling</code> FlagHandling</p> <p>Specifies which flag is to be used for the result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_23","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The difference of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluesubtractitimeseriesdatatvalue-itimeseriesdatatvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Subtract(ITimeSeriesData&lt;TValue&gt;, ITimeSeriesData&lt;TValue&gt;) Method <p>Subtracts the subtrahend from the minuend and uses the flag with the highest priority for the result.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; minuend, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; subtrahend);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_24","title":"Parameters","text":"<p><code>minuend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The minuend of the subtraction.</p> <p></p> <p><code>subtrahend</code> HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt;</p> <p>The subtrahend of the subtraction.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_24","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData&lt;TValue&gt; The difference of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluesubtracttvalue-decimal-method","title":"IArithmeticOperations&lt;TValue&gt;.Subtract(TValue, decimal) Method <p>Subtracts the subtrahend from the minuend.</p> C#<pre><code>TValue Subtract(TValue minuend, decimal subtrahend);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_25","title":"Parameters","text":"<p><code>minuend</code> TValue</p> <p>The minuend of the subtraction.</p> <p></p> <p><code>subtrahend</code> System.Decimal</p> <p>The subtrahend of the subtraction.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_25","title":"Returns","text":"<p>TValue The difference of the given params.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#iarithmeticoperationstvaluesubtracttvalue-tvalue-method","title":"IArithmeticOperations&lt;TValue&gt;.Subtract(TValue, TValue) Method <p>Subtracts the subtrahend from the minuend.</p> C#<pre><code>TValue Subtract(TValue minuend, TValue subtrahend);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#parameters_26","title":"Parameters","text":"<p><code>minuend</code> TValue</p> <p>The minuend of the subtraction.</p> <p></p> <p><code>subtrahend</code> TValue</p> <p>The subtrahend of the subtraction.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Data/TimeSeries/Math/IArithmeticOperationsOf1/#returns_26","title":"Returns","text":"<p>TValue The difference of the given params.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/","title":"HAKOM.TSM.Net.Api.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/#hakomtsmnetapiextensions-namespace","title":"HAKOM.TSM.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Class for extending the container functionality for registering interface implementations with the container."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Class for extending the container functionality for registering interface implementations with the container.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsuseconstantunitconversionstoretstorageprovidertunitconversionstorethis-icontainer-method","title":"ContainerExtensions.UseConstantUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this IContainer) Method","text":"<p>Registers any store, which implements the IConstantUnitConversionStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseConstantUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TUnitConversionStore : class, HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the attribute store.</p> <p></p> <p><code>TUnitConversionStore</code></p> <p>The class of the unit conversion store which implements the IConstantUnitConversionStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusecustomtimezonetcustomtimezonedefinitionthis-icontainer-method","title":"ContainerExtensions.UseCustomTimeZone&lt;TCustomTimeZoneDefinition&gt;(this IContainer) Method","text":"<p>Registers any custom time zone, which implements the ICustomTimeZoneDefinition interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCustomTimeZone&lt;TCustomTimeZoneDefinition&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TCustomTimeZoneDefinition : class, HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_1","title":"Type parameters","text":"<p><code>TCustomTimeZoneDefinition</code></p> <p>The class of the custom time zone which implements the ICustomTimeZoneDefinitioninterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the custom time zones with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusecustomtimezonesthis-icontainer-method","title":"ContainerExtensions.UseCustomTimeZones(this IContainer) Method","text":"<p>Registers custom time zones supported by HAKOM with the container. Without adjustment rules: - Universal coordinated time with offset: UTC+hh:mm and UTC-hh:mm where hh &gt; 0</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCustomTimeZones(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the custom time zones with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedataconvertertconvertertvaluethis-icontainer-method","title":"ContainerExtensions.UseDataConverter&lt;TConverter,TValue&gt;(this IContainer) Method","text":"<p>Registers a custom implementation of IDataConverter&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDataConverter&lt;TConverter,TValue&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TConverter : HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter&lt;TValue&gt;\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_2","title":"Type parameters","text":"<p><code>TConverter</code></p> <p>The implementation itself.</p> <p></p> <p><code>TValue</code></p> <p>The generic type of the converter implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the data converter with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedataoperationtoperationtvaluethis-icontainer-method","title":"ContainerExtensions.UseDataOperation&lt;TOperation,TValue&gt;(this IContainer) Method","text":"<p>Registers a custom implementation of the IDataOperation&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDataOperation&lt;TOperation,TValue&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TOperation : HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation&lt;TValue&gt;\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_3","title":"Type parameters","text":"<p><code>TOperation</code></p> <p>The implementation itself.</p> <p></p> <p><code>TValue</code></p> <p>The generic type of the operation implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the data operation with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedatatransformerttransformertvaluethis-icontainer-method","title":"ContainerExtensions.UseDataTransformer&lt;TTransformer,TValue&gt;(this IContainer) Method","text":"<p>Registers a custom implementation of IDataTransformer&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDataTransformer&lt;TTransformer,TValue&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TTransformer : HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer&lt;TValue&gt;\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_4","title":"Type parameters","text":"<p><code>TTransformer</code></p> <p>The implementation itself.</p> <p></p> <p><code>TValue</code></p> <p>The generic type of the transformer implementation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_5","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the data transformer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_5","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_2","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultblockcompressorthis-icontainer-method","title":"ContainerExtensions.UseDefaultBlockCompressor(this IContainer) Method","text":"<p>Registers the block compressor and factory implementation of HAKOM with the container for creating time series block data in order to perform the compression feature.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultBlockCompressor(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_6","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the serializer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_6","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultdataconverterthis-icontainer-method","title":"ContainerExtensions.UseDefaultDataConverter(this IContainer) Method","text":"<p>Registers the default implementation of IDataConverter&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultDataConverter(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_7","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_7","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_3","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultdataoperationthis-icontainer-method","title":"ContainerExtensions.UseDefaultDataOperation(this IContainer) Method","text":"<p>Registers the default implementation of IDataOperation&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultDataOperation(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_8","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_8","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_4","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultdatatransformerthis-icontainer-method","title":"ContainerExtensions.UseDefaultDataTransformer(this IContainer) Method","text":"<p>Registers the default implementation of IDataTransformer&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultDataTransformer(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_9","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_9","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_5","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultdatatransformertvaluethis-icontainer-method","title":"ContainerExtensions.UseDefaultDataTransformer&lt;TValue&gt;(this IContainer) Method","text":"<p>Registers the default implementation of IDataTransformer&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultDataTransformer&lt;TValue&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TValue : System.IEquatable&lt;TValue&gt;, System.IComparable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_5","title":"Type parameters","text":"<p><code>TValue</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_10","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the default with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_10","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_6","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown when the IContainer is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultserializersthis-icontainer-method","title":"ContainerExtensions.UseDefaultSerializers(this IContainer) Method","text":"<p>Registers serializers implementation of HAKOM with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultSerializers(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_11","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the serializer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_11","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultsfortimeseriespropertiesthis-icontainer-method","title":"ContainerExtensions.UseDefaultsForTimeSeriesProperties(this IContainer) Method","text":"<p>Registers a service providing default values for some properties of the time series object.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultsForTimeSeriesProperties(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_12","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_12","title":"Returns","text":"<p>IContainer</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesblockdataserializerthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesBlockDataSerializer(this IContainer) Method","text":"<p>Registers the time series block data serializer implementation of HAKOM with the container for creating time series block data in order to perform the compression feature.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesBlockDataSerializer(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_13","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the serializer with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_13","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesstoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesStores(this IContainer) Method","text":"<p>Registers time series stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container as well as the implementation of the time series validation.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_14","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_14","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaulttimezonesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeZones(this IContainer) Method","text":"<p>Registers the HAKOM-implementation of ITimeZoneFactory with the container as well as custom time zones supported by HAKOM.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeZones(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_15","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ITimeZoneFactory with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_15","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaulttsmfactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTsmFactories(this IContainer) Method","text":"<p>Registers factories implementation of HAKOM with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTsmFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_16","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_16","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaulttsmrepositoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTsmRepositories(this IContainer) Method","text":"<p>Registers repository implementation of HAKOM with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTsmRepositories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_17","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the repository with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_17","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultunitconversionstoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultUnitConversionStores(this IContainer) Method","text":"<p>Registers unit conversion stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultUnitConversionStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_18","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the unit conversion stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_18","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusedefaultunitstoresthis-icontainer-method","title":"ContainerExtensions.UseDefaultUnitStores(this IContainer) Method","text":"<p>Registers unit stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultUnitStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_19","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the unit stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_19","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusenumberarithmeticoperationsthis-icontainer-method","title":"ContainerExtensions.UseNumberArithmeticOperations(this IContainer) Method","text":"<p>Registers an instance of IArithmeticOperations&lt;TValue&gt; for the chosen System.Numerics.INumber&lt;&gt; with the container used to run operation on a ITimeSeriesData&lt;TValue&gt;.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseNumberArithmeticOperations(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_20","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_20","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetimedependentunitconversionstoretstorageprovidertunitconversionstorethis-icontainer-method","title":"ContainerExtensions.UseTimeDependentUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this IContainer) Method","text":"<p>Registers any store, which implements the ITimeDependentUnitConversionStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeDependentUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TUnitConversionStore : class, HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_6","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the attribute store.</p> <p></p> <p><code>TUnitConversionStore</code></p> <p>The class of the unit conversion store which implements the ITimeDependentUnitConversionStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_21","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_21","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetimeseriesstoretstorageproviderttimeseriesstorethis-icontainer-method","title":"ContainerExtensions.UseTimeSeriesStore&lt;TStorageProvider,TTimeSeriesStore&gt;(this IContainer) Method","text":"<p>Registers any time series store, which implements the ITimeSeriesStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeSeriesStore&lt;TStorageProvider,TTimeSeriesStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TTimeSeriesStore : class, HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_7","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The class of the time series store which implements the ITimeSeriesStoreinterface.</p> <p></p> <p><code>TTimeSeriesStore</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the time series store.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_22","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the time series store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_22","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetimezonesthis-icontainer-method","title":"ContainerExtensions.UseTimeZones(this IContainer) Method","text":"<p>Registers the HAKOM-implementation of ITimeZoneFactory with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTimeZones(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_23","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ITimeZoneFactory with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_23","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetsmthis-icontainer-method","title":"ContainerExtensions.UseTsm(this IContainer) Method","text":"<p>Registers implementation of ITsm of HAKOM with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsm(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_24","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ITsm implementation with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_24","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetsmdefaultsthis-icontainer-method","title":"ContainerExtensions.UseTsmDefaults(this IContainer) Method","text":"<p>Registers a set of defaults that are usually required for the HAKOM TSM .NET API to work correctly.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmDefaults(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_25","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the defaults with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_25","title":"Returns","text":"<p>IContainer The container itself for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#exceptions_7","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#remarks","title":"Remarks","text":"<p>TODO: insert a list of stuff that's registered along with an explanation of why it's needed.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetsmoncethis-icontainer-method","title":"ContainerExtensions.UseTsmOnce(this IContainer) Method","text":"<p>Registers implementation of ITsm of HAKOM with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmOnce(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_26","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the ITsm implementation with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_26","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetsmrepositoryinformationstoretstorageprovidertrepositoryinformationstorethis-icontainer-method","title":"ContainerExtensions.UseTsmRepositoryInformationStore&lt;TStorageProvider,TRepositoryInformationStore&gt;(this IContainer) Method","text":"<p>Registers any repository information store, which implements the IRepositoryInformationStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmRepositoryInformationStore&lt;TStorageProvider,TRepositoryInformationStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TRepositoryInformationStore : class, HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_8","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the repository information store.</p> <p></p> <p><code>TRepositoryInformationStore</code></p> <p>The class of the repository information store which implements the IRepositoryInformationStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_27","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the repository information store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_27","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsusetsmrepositoryinformationstoresthis-icontainer-method","title":"ContainerExtensions.UseTsmRepositoryInformationStores(this IContainer) Method","text":"<p>Registers repository information stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmRepositoryInformationStores(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_28","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the repository information stores with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_28","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsuseunitconversionstoretstorageprovidertunitconversionstorethis-icontainer-method","title":"ContainerExtensions.UseUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this IContainer) Method","text":"<p>Registers any store, which implements the IUnitConversionStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseUnitConversionStore&lt;TStorageProvider,TUnitConversionStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TUnitConversionStore : class, HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_9","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the attribute store.</p> <p></p> <p><code>TUnitConversionStore</code></p> <p>The class of the unit conversion store which implements the IUnitConversionStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_29","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_29","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#containerextensionsuseunitstoretstorageprovidertunitstorethis-icontainer-method","title":"ContainerExtensions.UseUnitStore&lt;TStorageProvider,TUnitStore&gt;(this IContainer) Method","text":"<p>Registers any store, which implements the IUnitStore interface, with the container.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseUnitStore&lt;TStorageProvider,TUnitStore&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container)\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n    where TUnitStore : class, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#type-parameters_10","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>The storage provider, which implements the IStorageProvider interface, for the attribute store.</p> <p></p> <p><code>TUnitStore</code></p> <p>The class of the unit store which implements the IUnitStoreinterface.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#parameters_30","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the attribute store with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Extensions/ContainerExtensions/#returns_30","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/","title":"HAKOM.TSM.Net.Api.Flags","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/#hakomtsmnetapiflags-namespace","title":"HAKOM.TSM.Net.Api.Flags Namespace","text":"Structs Flag Describes the quality of an individual data point. Interfaces IFlagNameMapping Maps one or more Flag values to a friendly name. IFlagNameProvider Attempts to find a friendly name assigned to a Flag of a specific value. IFlagPriorityMapping Represents mapping between Flag objects and an integer value (=priority)that is used in aggregating multiple data points in order to determine the correct resulting value. IFlagPriorityProvider Finds and compares priorities of Flag instances. Enums FlagHandling The method to be used if one of several Flags must be selected in the course of a calculation."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/","title":"Flag","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flag-struct","title":"Flag Struct","text":"<p>Describes the quality of an individual data point.</p> C#<pre><code>public readonly struct Flag :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Flags.Flag, byte&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt;\n</code></pre> <p>Implements System.IEquatable&lt;Flag&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;Flag,System.Byte&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;Flag&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagbyte-constructor","title":"Flag(byte) Constructor","text":"<p>Use this constructor for custom flag values, please make sure your custom values are not in the range between: 0-22</p> C#<pre><code>public Flag(byte value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters","title":"Parameters","text":"<p><code>value</code> System.Byte</p> <p>Range: 0-22 Built in flag values.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagvalue-property","title":"Flag.Value Property","text":"<p>The value of the flag.</p> C#<pre><code>public byte Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#property-value","title":"Property Value","text":"<p>System.Byte</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagaccounted-method","title":"Flag.Accounted() Method","text":"<p>Creates a flag indicating that the value should be considered accounted for.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Accounted();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagcreatebyte-method","title":"Flag.Create(byte) Method","text":"<p>Creates a new Flag instance from the given value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Create(byte value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_1","title":"Parameters","text":"<p><code>value</code> System.Byte</p> <p>The value for the new flag.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_1","title":"Returns","text":"<p>Flag The created flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagdefault-method","title":"Flag.Default() Method","text":"<p>Creates a default flag of the type Missing()</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_2","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagequalsflag-method","title":"Flag.Equals(Flag) Method","text":"<p>Compares the value and priority of this flag to another flag returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Flags.Flag other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_2","title":"Parameters","text":"<p><code>other</code> Flag</p> <p>The flag, which is used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_3","title":"Returns","text":"<p>System.Boolean Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagequalsobject-method","title":"Flag.Equals(object) Method","text":"<p>Compares the value and priority of this flag to another flag returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The flag, which is used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_4","title":"Returns","text":"<p>System.Boolean Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagestimated-method","title":"Flag.Estimated() Method","text":"<p>Creates a flag indicating that the value is estimated.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Estimated();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_5","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagfaulty-method","title":"Flag.Faulty() Method","text":"<p>Creates a flag indicating that the value is faulty.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Faulty();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_6","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flaggethashcode-method","title":"Flag.GetHashCode() Method","text":"<p>Creates the hash code for this flag, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_7","title":"Returns","text":"<p>System.Int32 A hash code for this flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagignore-method","title":"Flag.Ignore() Method","text":"<p>Creates a flag indicating that the value will be ignored in any operation.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Ignore();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_8","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flaginterpolated-method","title":"Flag.Interpolated() Method","text":"<p>Creates a flag indicating that the value is interpolated.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Interpolated();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_9","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomaccounted-method","title":"Flag.IsHakomAccounted() Method","text":"<p>Returns true if the Flag is \"Accounted\".</p> C#<pre><code>public bool IsHakomAccounted();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_10","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomestimated-method","title":"Flag.IsHakomEstimated() Method","text":"<p>Returns true if the Flag is \"Estimated\".</p> C#<pre><code>public bool IsHakomEstimated();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_11","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomfaulty-method","title":"Flag.IsHakomFaulty() Method","text":"<p>Returns true if the Flag is \"Faulty\".</p> C#<pre><code>public bool IsHakomFaulty();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_12","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomignore-method","title":"Flag.IsHakomIgnore() Method","text":"<p>Returns true if the Flag is \"Ignore\".</p> C#<pre><code>public bool IsHakomIgnore();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_13","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakominterpolated-method","title":"Flag.IsHakomInterpolated() Method","text":"<p>Returns true if the Flag is \"Interpolated\".</p> C#<pre><code>public bool IsHakomInterpolated();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_14","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakommanuallyreplaced-method","title":"Flag.IsHakomManuallyReplaced() Method","text":"<p>Returns true if the Flag is \"ManuallyReplaced\".</p> C#<pre><code>public bool IsHakomManuallyReplaced();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_15","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakommissing-method","title":"Flag.IsHakomMissing() Method","text":"<p>Returns true if the Flag is \"Missing\".</p> C#<pre><code>public bool IsHakomMissing();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_16","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomscheduled-method","title":"Flag.IsHakomScheduled() Method","text":"<p>Returns true if the Flag is \"Schedule\".</p> C#<pre><code>public bool IsHakomScheduled();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_17","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagishakomvalid-method","title":"Flag.IsHakomValid() Method","text":"<p>Returns true if the Flag is \"Valid\".</p> C#<pre><code>public bool IsHakomValid();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_18","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagmanuallyreplaced-method","title":"Flag.ManuallyReplaced() Method","text":"<p>Creates a flag indicating that the value has been manually set.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag ManuallyReplaced();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_19","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagmissing-method","title":"Flag.Missing() Method","text":"<p>Creates a flag indicating that the value should be considered missing.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Missing();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_20","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagscheduled-method","title":"Flag.Scheduled() Method","text":"<p>Creates a flag indicating that the value is as scheduled.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Scheduled();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_21","title":"Returns","text":"<p>Flag A new Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagtostring-method","title":"Flag.ToString() Method","text":"<p>Returns a string representation of this Flag. Flags with common values known to HAKOM will show both their name and value, whereas custom flags will only have their numeric value shown.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_22","title":"Returns","text":"<p>System.String The name and/or numeric value of this flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagtostringiflagnameprovider-method","title":"Flag.ToString(IFlagNameProvider) Method","text":"<p>Returns a string representation of this Flag. If flagNameProvider returns a name for this flags value, the string will contain both its name and value. If not, the string will contain only the numeric value.</p> C#<pre><code>public string ToString(HAKOM.TSM.Net.Api.Flags.IFlagNameProvider flagNameProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_4","title":"Parameters","text":"<p><code>flagNameProvider</code> IFlagNameProvider</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_23","title":"Returns","text":"<p>System.String The name and/or numeric value of this flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagvalid-method","title":"Flag.Valid() Method","text":"<p>Creates a flag indicating that the value is \"normal\".</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Flags.Flag Valid();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_24","title":"Returns","text":"<p>Flag A new Flag.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagoperator-flag-flag-operator","title":"Flag.operator ==(Flag, Flag) Operator","text":"<p>Compares the value and priority of two flags using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Flags.Flag left, HAKOM.TSM.Net.Api.Flags.Flag right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_5","title":"Parameters","text":"<p><code>left</code> Flag</p> <p>The flag on the left of the '==' operator.</p> <p></p> <p><code>right</code> Flag</p> <p>The flag on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_25","title":"Returns","text":"<p>System.Boolean Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#flagoperator-flag-flag-operator_1","title":"Flag.operator !=(Flag, Flag) Operator","text":"<p>Compares the value and priority of two flags using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Flags.Flag left, HAKOM.TSM.Net.Api.Flags.Flag right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#parameters_6","title":"Parameters","text":"<p><code>left</code> Flag</p> <p>The flag on the left of the '!=' operator.</p> <p></p> <p><code>right</code> Flag</p> <p>The flag on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Flag/#returns_26","title":"Returns","text":"<p>System.Boolean Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/FlagHandling/","title":"FlagHandling","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/FlagHandling/#flaghandling-enum","title":"FlagHandling Enum","text":"<p>The method to be used if one of several Flags must be selected in the course of a calculation.</p> C#<pre><code>public enum FlagHandling\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/FlagHandling/#fields","title":"Fields","text":"<p><code>UseHighestPriority</code> 0</p> <p>The flag with the highest priority should be used if one of several Flags must be selected during a calculation.</p> <p></p> <p><code>UseLowestPriority</code> 1</p> <p>The flag with the lowest priority should be used if one of several Flags must be selected during a calculation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/","title":"IFlagNameMapping","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#iflagnamemapping-interface","title":"IFlagNameMapping Interface","text":"<p>Maps one or more Flag values to a friendly name.</p> C#<pre><code>public interface IFlagNameMapping\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#iflagnamemappingflag-property","title":"IFlagNameMapping.Flag Property","text":"<p>The identifying Flag.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag Flag { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#property-value","title":"Property Value","text":"<p>Flag</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#iflagnamemappingname-property","title":"IFlagNameMapping.Name Property","text":"<p>The friendly name.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameMapping/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/","title":"IFlagNameProvider","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#iflagnameprovider-interface","title":"IFlagNameProvider Interface","text":"<p>Attempts to find a friendly name assigned to a Flag of a specific value.</p> C#<pre><code>public interface IFlagNameProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#iflagnameprovidergetnameflag-method","title":"IFlagNameProvider.GetName(Flag) Method","text":"<p>Gets the friendly name of the given flag. If none is found, System.String.Empty will be returned. Should never return null.</p> C#<pre><code>string GetName(HAKOM.TSM.Net.Api.Flags.Flag flag);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#parameters","title":"Parameters","text":"<p><code>flag</code> Flag</p> <p>The Flag for which to get the name.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#returns","title":"Returns","text":"<p>System.String The friendly name assigned to the flag or System.String.Empty.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#iflagnameprovidertrygetnameflag-string-method","title":"IFlagNameProvider.TryGetName(Flag, string) Method","text":"<p>Attempts to get the friendly name for the given flag from this IFlagNameMapping.</p> C#<pre><code>bool TryGetName(HAKOM.TSM.Net.Api.Flags.Flag flag, out string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#parameters_1","title":"Parameters","text":"<p><code>flag</code> Flag</p> <p>The Flag for which to get the name.</p> <p></p> <p><code>name</code> System.String</p> <p>If successful, contains the name that represents the given flag. Null otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagNameProvider/#returns_1","title":"Returns","text":"<p>System.Boolean True if this IFlagNameMapping contains a name for the given flag.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/","title":"IFlagPriorityMapping","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#iflagprioritymapping-interface","title":"IFlagPriorityMapping Interface","text":"<p>Represents mapping between Flag objects and an integer value (=priority) that is used in aggregating multiple data points in order to determine the correct resulting value.</p> C#<pre><code>public interface IFlagPriorityMapping\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#iflagprioritymappingflag-property","title":"IFlagPriorityMapping.Flag Property","text":"<p>The Flag.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag Flag { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#property-value","title":"Property Value","text":"<p>Flag</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#iflagprioritymappingpriority-property","title":"IFlagPriorityMapping.Priority Property","text":"<p>The priority.</p> C#<pre><code>int Priority { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityMapping/#property-value_1","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/","title":"IFlagPriorityProvider","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityprovider-interface","title":"IFlagPriorityProvider Interface","text":"<p>Finds and compares priorities of Flag instances.</p> C#<pre><code>public interface IFlagPriorityProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityprovidercompareprioritiesflag-flag-method","title":"IFlagPriorityProvider.ComparePriorities(Flag, Flag) Method","text":"<p>Compares two instances of Flag based on their respective priorities.</p> C#<pre><code>int ComparePriorities(HAKOM.TSM.Net.Api.Flags.Flag left, HAKOM.TSM.Net.Api.Flags.Flag right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters","title":"Parameters","text":"<p><code>left</code> Flag</p> <p>The Flag to compare right with.</p> <p></p> <p><code>right</code> Flag</p> <p>The Flag that is being compared to left.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns","title":"Returns","text":"<p>System.Int32 0 if both flags have the same priority, -1 if left has a lower priority, 1 otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityprovidergetpriorityflag-method","title":"IFlagPriorityProvider.GetPriority(Flag) Method","text":"<p>Returns the priority for the given flag.</p> C#<pre><code>int GetPriority(HAKOM.TSM.Net.Api.Flags.Flag flag);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_1","title":"Parameters","text":"<p><code>flag</code> Flag</p> <p>The Flag to resolve the priority value for.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_1","title":"Returns","text":"<p>System.Int32 The priority of the given Flag.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityproviderhighestpriorityflagflag-method","title":"IFlagPriorityProvider.HighestPriorityFlag(Flag[]) Method","text":"<p>Returns the Flag with the highest priority of the ones given in flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag HighestPriorityFlag(params HAKOM.TSM.Net.Api.Flags.Flag[] flags);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_2","title":"Parameters","text":"<p><code>flags</code> Flag[]</p> <p>The list of Flags to go through.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_2","title":"Returns","text":"<p>Flag The flag within flags with the highest priority</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityproviderhighestpriorityflagienumerableflag-method","title":"IFlagPriorityProvider.HighestPriorityFlag(IEnumerable&lt;Flag&gt;) Method","text":"<p>Returns the Flag with the highest priority of the ones given in flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag HighestPriorityFlag(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt; flags);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_3","title":"Parameters","text":"<p><code>flags</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>The list of Flags to go through.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_3","title":"Returns","text":"<p>Flag The flag within flags with the highest priority</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityproviderlowestpriorityflagflag-method","title":"IFlagPriorityProvider.LowestPriorityFlag(Flag[]) Method","text":"<p>Returns the Flag with the lowest priority of the ones given in flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag LowestPriorityFlag(params HAKOM.TSM.Net.Api.Flags.Flag[] flags);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_4","title":"Parameters","text":"<p><code>flags</code> Flag[]</p> <p>The list of Flags to go through.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_4","title":"Returns","text":"<p>Flag The flag within flags with the lowest priority.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityproviderlowestpriorityflagienumerableflag-method","title":"IFlagPriorityProvider.LowestPriorityFlag(IEnumerable&lt;Flag&gt;) Method","text":"<p>Returns the Flag with the lowest priority of the ones given in flags.</p> C#<pre><code>HAKOM.TSM.Net.Api.Flags.Flag LowestPriorityFlag(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Flags.Flag&gt; flags);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_5","title":"Parameters","text":"<p><code>flags</code> System.Collections.Generic.IEnumerable&lt;Flag&gt;</p> <p>The list of Flags to go through.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_5","title":"Returns","text":"<p>Flag The flag within flags with the lowest priority.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#iflagpriorityprovidertrygetpriorityflag-int-method","title":"IFlagPriorityProvider.TryGetPriority(Flag, int) Method","text":"<p>Tries to return the correct priority priority for the given flag.</p> C#<pre><code>bool TryGetPriority(HAKOM.TSM.Net.Api.Flags.Flag flag, out int priority);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#parameters_6","title":"Parameters","text":"<p><code>flag</code> Flag</p> <p>The Flag for which a priority is requested.</p> <p></p> <p><code>priority</code> System.Int32</p> <p>If successfully mapped, contains the priority of the given flag. Otherwise it should return 0.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/IFlagPriorityProvider/#returns_6","title":"Returns","text":"<p>System.Boolean True if the mapping can successfully map the given Flag to a priority value. False otherwise</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/","title":"HAKOM.TSM.Net.Api.Flags.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/#hakomtsmnetapiflagsextensions-namespace","title":"HAKOM.TSM.Net.Api.Flags.Extensions Namespace","text":"Classes ContainerExtensions Defines extension methods on IContainer for registering services used to work with Flags which describe the quality of data along a time series."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Flags.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Defines extension methods on IContainer for registering services used to work with Flags which describe the quality of data along a time series.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensionsusecustomflagthis-icontainer-byte-int-string-method","title":"ContainerExtensions.UseCustomFlag(this IContainer, byte, int, string) Method","text":"<p>Registers additional information that is mapped to all Flags with the specified flagValue. This allows for flags with that value to have their priority be respected properly during calculations and aggregations. Whenever possible Flags with that value will also be displayed using the given name instead of just its value.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCustomFlag(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, byte flagValue, int priority, string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register custom flag information with.</p> <p></p> <p><code>flagValue</code> System.Byte</p> <p>The value to register.</p> <p></p> <p><code>priority</code> System.Int32</p> <p>The priority to assign to the Flag with value flagValue.</p> <p></p> <p><code>name</code> System.String</p> <p>The friendly name to assign to the Flag with value flagValue</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container itself for chaining.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensionsusecustomflagthis-icontainer-flag-int-string-method","title":"ContainerExtensions.UseCustomFlag(this IContainer, Flag, int, string) Method","text":"<p>Registers a custom Flag which allows for its priority to be respected during calculations and aggregations. Whenever possible it will also be displayed using the given name instead of just its value.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseCustomFlag(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container, HAKOM.TSM.Net.Api.Flags.Flag flag, int priority, string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the custom Flag with.</p> <p></p> <p><code>flag</code> Flag</p> <p>The Flag to register.</p> <p></p> <p><code>priority</code> System.Int32</p> <p>The priority to assign to the flag.</p> <p></p> <p><code>name</code> System.String</p> <p>The friendly name to assign to the flag</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container itself for chaining.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensionsusedefaultflagsthis-icontainer-method","title":"ContainerExtensions.UseDefaultFlags(this IContainer) Method","text":"<p>Registers priorities and names of flags commonly used by HAKOM.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultFlags(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the IFlagPriorityProvider with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The container itself for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#remarks","title":"Remarks","text":"<p>The following flags are commonly used by HAKOM:  </p> Flag Value Flag Priority Flag Name (Locale: en) 0 0 Ignore 5 20 ManuallyReplaced 7 60 Faulty 9 30 Valid 12 40 Scheduled 19 80 Missing 20 10 Accounted 21 50 Estimated 22 70 Interpolated <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensionsuseflagnamesthis-icontainer-method","title":"ContainerExtensions.UseFlagNames(this IContainer) Method","text":"<p>Registers the default IFlagNameProvider with the container. This allows components to display a friendly name for Flags.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseFlagNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#containerextensionsuseflagprioritiesthis-icontainer-method","title":"ContainerExtensions.UseFlagPriorities(this IContainer) Method","text":"<p>Registers the default IFlagPriorityProvider with the container. This allows components to correctly rank and aggregate ITimeSeriesData&lt;TValue&gt; instances.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseFlagPriorities(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#parameters_4","title":"Parameters","text":"<p><code>container</code> IContainer</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#returns_4","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Flags/Extensions/ContainerExtensions/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/","title":"HAKOM.TSM.Net.Api.Formulas","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/#hakomtsmnetapiformulas-namespace","title":"HAKOM.TSM.Net.Api.Formulas Namespace","text":"Interfaces IFormula Used to create time series which have data based on calculation rather thanexplicit values. IFormulaFactory Used to create formulas that dynamically calculate time series data."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/","title":"IFormula","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#iformula-interface","title":"IFormula Interface","text":"<p>Used to create time series which have data based on calculation rather than explicit values.</p> C#<pre><code>public interface IFormula :\nSystem.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset, string?&gt;&gt;,\nSystem.Collections.IEnumerable,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Formulas.IFormula&gt;\n</code></pre> <p>Implements System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset,System.String&gt;&gt;, System.Collections.IEnumerable, System.IEquatable&lt;IFormula&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#iformulagetformuladatetimeoffset-method","title":"IFormula.GetFormula(DateTimeOffset) Method","text":"<p>Gets the formula which should be used for any time along the series at or following the given date/time.</p> C#<pre><code>string? GetFormula(System.DateTimeOffset at);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#parameters","title":"Parameters","text":"<p><code>at</code> System.DateTimeOffset</p> <p>The date/time along the series at which this formula becomes effective.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#returns","title":"Returns","text":"<p>System.String The formula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#iformulasetformuladatetimeoffset-string-method","title":"IFormula.SetFormula(DateTimeOffset, string) Method","text":"<p>Sets the formula which should be used for any time along the series at or following the given date/time.</p> C#<pre><code>void SetFormula(System.DateTimeOffset at, string? formula);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#parameters_1","title":"Parameters","text":"<p><code>at</code> System.DateTimeOffset</p> <p>The date/time along the series at which this formula becomes effective.</p> <p></p> <p><code>formula</code> System.String</p> <p>The formula which should be used following the given date/time.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#iformulatryremovedatetimeoffset-string-method","title":"IFormula.TryRemove(DateTimeOffset, string) Method","text":"<p>Attempts to remove a formula.</p> C#<pre><code>bool TryRemove(System.DateTimeOffset at, out string? formula);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#parameters_2","title":"Parameters","text":"<p><code>at</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset at which the formula is valid.</p> <p></p> <p><code>formula</code> System.String</p> <p>The System.String formula that was removed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormula/#returns_1","title":"Returns","text":"<p>System.Boolean True if the formula could be removed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/","title":"IFormulaFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactory-interface","title":"IFormulaFactory Interface","text":"<p>Used to create formulas that dynamically calculate time series data.</p> C#<pre><code>public interface IFormulaFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#remarks","title":"Remarks","text":"<p>Formulas are one or more expressions that define the data along a time series.  </p> <p>Each expression within the formula is applied to the time series starting from a specific date/time and is valid until it is succeeded by another expression.  </p> <p>Expressions along with their date/time of when they are applied are referred to as formula slices.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreatedatetimeoffset-validfromstring-formula-method","title":"IFormulaFactory.Create((DateTimeOffset ValidFrom,string Formula)[]) Method","text":"C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(params (System.DateTimeOffset ValidFrom,string Formula)[] slices);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters","title":"Parameters","text":"<p><code>slices</code> &lt;System.DateTimeOffset,System.String&gt;[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns","title":"Returns","text":"<p>IFormula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreatestring-method","title":"IFormulaFactory.Create(string) Method","text":"<p>Creates a formula with a single expression that is valid starting on January 1st 1972 at 00:00h UTC+1 along the time series</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(string formula);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters_1","title":"Parameters","text":"<p><code>formula</code> System.String</p> <p>The expression to use for calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns_1","title":"Returns","text":"<p>IFormula The formula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreateienumerabledatetimeoffset-validfromstring-formula-method","title":"IFormulaFactory.Create(IEnumerable&lt;(DateTimeOffset ValidFrom,string Formula)&gt;) Method","text":"C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(System.Collections.Generic.IEnumerable&lt;(System.DateTimeOffset ValidFrom,string Formula)&gt; slices);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters_2","title":"Parameters","text":"<p><code>slices</code> System.Collections.Generic.IEnumerable&lt;&lt;System.DateTimeOffset,System.String&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns_2","title":"Returns","text":"<p>IFormula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreateienumerablekeyvaluepairdatetimeoffsetstring-method","title":"IFormulaFactory.Create(IEnumerable&lt;KeyValuePair&lt;DateTimeOffset,string&gt;&gt;) Method","text":"<p>Creates a formula with multiple expressions valid starting on the date given for each one along the time series</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset,string?&gt;&gt; slices);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters_3","title":"Parameters","text":"<p><code>slices</code> System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset,System.String&gt;&gt;</p> <p>The expressions to use for calculation along with a date/time specifying their validity along the time series</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns_3","title":"Returns","text":"<p>IFormula The formula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreatekeyvaluepairdatetimeoffsetstring-method","title":"IFormulaFactory.Create(KeyValuePair&lt;DateTimeOffset,string&gt;[]) Method","text":"<p>Creates a formula with multiple expressions valid starting on the date given for each one along the time series</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(params System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset,string?&gt;[] slices);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters_4","title":"Parameters","text":"<p><code>slices</code> System.Collections.Generic.KeyValuePair&lt;System.DateTimeOffset,System.String&gt;[]</p> <p>The expressions to use for calculation along with a date/time specifying their validity along the time series</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns_4","title":"Returns","text":"<p>IFormula The formula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#iformulafactorycreatedatetimeoffset-string-method","title":"IFormulaFactory.Create(DateTimeOffset, string) Method","text":"<p>Creates a formula that is valid starting on the given date along the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula Create(System.DateTimeOffset validFrom, string formula);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#parameters_5","title":"Parameters","text":"<p><code>validFrom</code> System.DateTimeOffset</p> <p>Time along the series from which the formula should be used</p> <p></p> <p><code>formula</code> System.String</p> <p>The expression to use for calculation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/IFormulaFactory/#returns_5","title":"Returns","text":"<p>IFormula The formula</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/","title":"HAKOM.TSM.Net.Api.Formulas.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/#hakomtsmnetapiformulasexceptions-namespace","title":"HAKOM.TSM.Net.Api.Formulas.Exceptions Namespace","text":"Classes CsxFileCompilationFailedException This exception is thrown when a csx file fails to compile. FormulaXmlDeserializationException This exception should be thrown when the deserialization of the formula fails. It should contain the Exception-Details from the deserialization exception. InvalidMediaTypeParameterTimeBaseException This exception is thrown when the media type for the time base cannot be parsed."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/","title":"CsxFileCompilationFailedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#csxfilecompilationfailedexception-class","title":"CsxFileCompilationFailedException Class","text":"<p>This exception is thrown when a csx file fails to compile.</p> C#<pre><code>public sealed class CsxFileCompilationFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CsxFileCompilationFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15075.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#csxfilecompilationfailedexceptiondiagnostics-property","title":"CsxFileCompilationFailedException.Diagnostics Property","text":"<p>Contains the diagnostics of the failed copmilation process.</p> C#<pre><code>public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt; Diagnostics { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#property-value","title":"Property Value","text":"<p>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#csxfilecompilationfailedexceptionequivalenthttpstatuscode-property","title":"CsxFileCompilationFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#property-value_1","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#csxfilecompilationfailedexceptionfilename-property","title":"CsxFileCompilationFailedException.FileName Property","text":"<p>The name of the file which caused this error.</p> C#<pre><code>public string FileName { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/CsxFileCompilationFailedException/#property-value_2","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/","title":"FormulaXmlDeserializationException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/#formulaxmldeserializationexception-class","title":"FormulaXmlDeserializationException Class","text":"<p>This exception should be thrown when the deserialization of the formula fails.  It should contain the Exception-Details from the deserialization exception.</p> C#<pre><code>public sealed class FormulaXmlDeserializationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FormulaXmlDeserializationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/#remarks","title":"Remarks","text":"<p>When deserializing a formula (e.g. when reading from the store) an exception may occur, e.g. due to a bad format. This exception contains more information about which deserialization exception occurred.  </p> <p>This exception is identified by error code HK15004.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/#formulaxmldeserializationexceptionequivalenthttpstatuscode-property","title":"FormulaXmlDeserializationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/FormulaXmlDeserializationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/","title":"InvalidMediaTypeParameterTimeBaseException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/#invalidmediatypeparametertimebaseexception-class","title":"InvalidMediaTypeParameterTimeBaseException Class","text":"<p>This exception is thrown when the media type for the time base cannot be parsed.</p> C#<pre><code>public sealed class InvalidMediaTypeParameterTimeBaseException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidMediaTypeParameterTimeBaseException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/#remarks","title":"Remarks","text":"<p>When configuring the default implementation of the ISerializer&lt;TData&gt;, a mediaType must be specified. If the TimeBase in this mediaType is invalid (wrong format or unknown TimeBase), this exception is thrown. Specify a valid mediaType with either no TimeBase (default is HakomSecond) or a valid TimeBase as an integer (0 = HakomSecond; 1 = UnixSecond; 2 = UnixMillisecond).  </p> <p>This exception is identified by error code HK15003.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/#invalidmediatypeparametertimebaseexceptionequivalenthttpstatuscode-property","title":"InvalidMediaTypeParameterTimeBaseException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 406 (Not Acceptable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Exceptions/InvalidMediaTypeParameterTimeBaseException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/","title":"HAKOM.TSM.Net.Api.Formulas.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/#hakomtsmnetapiformulasextensions-namespace","title":"HAKOM.TSM.Net.Api.Formulas.Extensions Namespace","text":"Classes ContainerExtensions Defines extension methods on IContainer for registering services used to work with IFormulaswhich implement the organization in and calculation of IFormula."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Formulas.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Defines extension methods on IContainer for registering services used to work with IFormulas which implement the organization in and calculation of IFormula.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#containerextensionsusedefaultformulafactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultFormulaFactories(this IContainer) Method","text":"<p>Registers factory implementations for work with formulas.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultFormulaFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The IContainer itself.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#containerextensionsusedefaultsforformulasthis-icontainer-method","title":"ContainerExtensions.UseDefaultsForFormulas(this IContainer) Method","text":"<p>Registers implementations for all formula related services.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultsForFormulas(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the services with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Formulas/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/","title":"HAKOM.TSM.Net.Api.Persistence","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/#hakomtsmnetapipersistence-namespace","title":"HAKOM.TSM.Net.Api.Persistence Namespace","text":"Interfaces ITsmRepository Provides access to the store specific functions. ITsmRepositoryInformation Describes some common properties of the repository that determine how time series data is stored in the repository. ITsmRepositoryInformationFactory Used internally when loading ITsmRepositoryInformation from an IRepository. ITsmRepositoryStore Provides access to all configured repositories that can be used tostore time series and related data."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/","title":"ITsmRepository","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepository-interface","title":"ITsmRepository Interface","text":"<p>Provides access to the store specific functions.</p> C#<pre><code>public interface ITsmRepository :\nHAKOM.Persistence.Core.Net.Api.IRepository&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation&gt;,\nHAKOM.Persistence.Core.Net.Api.IRepository\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.IRepository&lt;ITsmRepositoryInformation&gt;, IRepository</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetattributedatastoreitimeseriesassignmentreferenceiattribute-cancellationtoken-method","title":"ITsmRepository.GetAttributeDataStore(ITimeSeriesAssignmentReference&lt;IAttribute&gt;, CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on attribute data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore&gt; GetAttributeDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; attributeAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters","title":"Parameters","text":"<p><code>attributeAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;IAttribute&gt;</p> <p>The ITimeSeriesAssignmentReference&lt;TAssigned&gt; used to configure the new data store.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeDataStore&gt; A System.Threading.Tasks.Task&lt;&gt; containing the created IAttributeDataStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetattributestorecancellationtoken-method","title":"ITsmRepository.GetAttributeStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on attributes.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&gt; GetAttributeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeStore&gt; An awaitable System.Threading.Tasks.Task containing the IAttributeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetattributetypestorecancellationtoken-method","title":"ITsmRepository.GetAttributeTypeStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on attribute types.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&gt; GetAttributeTypeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IAttributeTypeStore&gt; An awaitable System.Threading.Tasks.Task containing the IAttributeTypeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetconstantunitconversionstorecancellationtoken-method","title":"ITsmRepository.GetConstantUnitConversionStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on constant unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore&gt; GetConstantUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IConstantUnitConversionStore&gt; An awaitable System.Threading.Tasks.Task containing the IConstantUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetnodestorecancellationtoken-method","title":"ITsmRepository.GetNodeStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on nodes.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&gt; GetNodeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_4","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;INodeStore&gt; A System.Threading.Tasks.Task containing the INodeStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygettimedependentunitconversionstorecancellationtoken-method","title":"ITsmRepository.GetTimeDependentUnitConversionStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on time dependent unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore&gt; GetTimeDependentUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_5","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeDependentUnitConversionStore&gt; An awaitable System.Threading.Tasks.Task containing the ITimeDependentUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygettimeseriesdatastoreitimeseriesreference-cancellationtoken-method","title":"ITsmRepository.GetTimeSeriesDataStore(ITimeSeriesReference, CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on time series data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&gt; GetTimeSeriesDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_6","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to which the data relates.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesDataStore&gt; An awaitable System.Threading.Tasks.Task containing the ITimeSeriesDataStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygettimeseriesstorecancellationtoken-method","title":"ITsmRepository.GetTimeSeriesStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&gt; GetTimeSeriesStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_7","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesStore&gt; An awaitable System.Threading.Tasks.Task containing the ITimeSeriesStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetunitconversionstorecancellationtoken-method","title":"ITsmRepository.GetUnitConversionStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore&gt; GetUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitConversionStore&gt; An awaitable System.Threading.Tasks.Task containing the IUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorygetunitstorecancellationtoken-method","title":"ITsmRepository.GetUnitStore(CancellationToken) Method","text":"<p>Gets a store used for CRUD operations on units.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore&gt; GetUnitStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_9","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitStore&gt; An awaitable System.Threading.Tasks.Task containing the IUnitStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetattributedatastoreitimeseriesassignmentreferenceiattribute-cancellationtoken-method","title":"ITsmRepository.TryGetAttributeDataStore(ITimeSeriesAssignmentReference&lt;IAttribute&gt;, CancellationToken) Method","text":"<p>Attempts to get a store used for CRUD operations on attribute data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore&gt;&gt; TryGetAttributeDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;HAKOM.TSM.Net.Api.Attributes.IAttribute&gt; attributeAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_10","title":"Parameters","text":"<p><code>attributeAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;IAttribute&gt;</p> <p>The ITimeSeriesAssignmentReference&lt;TAssigned&gt; used to configure the new data store.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeDataStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeDataStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetattributestorecancellationtoken-method","title":"ITsmRepository.TryGetAttributeStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on attributes.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&gt;&gt; TryGetAttributeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_11","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetattributetypestorecancellationtoken-method","title":"ITsmRepository.TryGetAttributeTypeStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on attribute types.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&gt;&gt; TryGetAttributeTypeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_12","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IAttributeTypeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetconstantunitconversionstorecancellationtoken-method","title":"ITsmRepository.TryGetConstantUnitConversionStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on constant unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore&gt;&gt; TryGetConstantUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_13","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IConstantUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetnodestorecancellationtoken-method","title":"ITsmRepository.TryGetNodeStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on nodes.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore&gt;&gt; TryGetNodeStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_14","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;INodeStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created INodeStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygettimedependentunitconversionstorecancellationtoken-method","title":"ITsmRepository.TryGetTimeDependentUnitConversionStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on time dependent unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore&gt;&gt; TryGetTimeDependentUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_15","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_15","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeDependentUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygettimeseriesdatastoreitimeseriesreference-cancellationtoken-method","title":"ITsmRepository.TryGetTimeSeriesDataStore(ITimeSeriesReference, CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on time series data.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore&gt;&gt; TryGetTimeSeriesDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_16","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to which the data relates.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_16","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesDataStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeriesDataStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_6","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygettimeseriesstorecancellationtoken-method","title":"ITsmRepository.TryGetTimeSeriesStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&gt;&gt; TryGetTimeSeriesStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_17","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_17","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeriesStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_7","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetunitconversionstorecancellationtoken-method","title":"ITsmRepository.TryGetUnitConversionStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on unit conversions.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore&gt;&gt; TryGetUnitConversionStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_18","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_18","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_8","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#itsmrepositorytrygetunitstorecancellationtoken-method","title":"ITsmRepository.TryGetUnitStore(CancellationToken) Method","text":"<p>Tries to get a store used for CRUD operations on units.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore&gt;&gt; TryGetUnitStore(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#parameters_19","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#returns_19","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IUnitStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepository/#remarks_9","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformation/","title":"ITsmRepositoryInformation","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformation/#itsmrepositoryinformation-interface","title":"ITsmRepositoryInformation Interface","text":"<p>Describes some common properties of the repository that determine how time series data is stored in the repository.</p> C#<pre><code>public interface ITsmRepositoryInformation :\nHAKOM.Persistence.Core.Net.Api.IRepositoryInformation\n</code></pre> <p>Implements IRepositoryInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformation/#itsmrepositoryinformationtimebase-property","title":"ITsmRepositoryInformation.TimeBase Property","text":"<p>Gets the TimeBase of the repository. This determines both the maximum resolution (i.e. milliseconds or seconds) as well as the epoch (the zero-point in time) of time stamps stored in the data base.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase TimeBase { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformation/#property-value","title":"Property Value","text":"<p>TimeBase</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/","title":"ITsmRepositoryInformationFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#itsmrepositoryinformationfactory-interface","title":"ITsmRepositoryInformationFactory Interface","text":"<p>Used internally when loading ITsmRepositoryInformation from an IRepository.</p> C#<pre><code>public interface ITsmRepositoryInformationFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#itsmrepositoryinformationfactorycreatestring-timebase-iversion-method","title":"ITsmRepositoryInformationFactory.Create(string, TimeBase, IVersion) Method","text":"<p>Creates a new ITsmRepositoryInformation instance with the given name and timeBase.</p> C#<pre><code>HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation Create(string name, HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the repository</p> <p></p> <p><code>timeBase</code> TimeBase</p> <p>The TimeBase used by the repository which determines both resolution and epoch of time stamps stored in the repository.</p> <p></p> <p><code>version</code> IVersion</p> <p>The version of the repository.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#returns","title":"Returns","text":"<p>ITsmRepositoryInformation The created ITsmRepositoryInformation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#itsmrepositoryinformationfactorytrycreatestring-timebase-iversion-method","title":"ITsmRepositoryInformationFactory.TryCreate(string, TimeBase, IVersion) Method","text":"<p>Tries to create a new ITsmRepositoryInformation instance with the given name and timeBase.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation&gt; TryCreate(string name, HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase timeBase, HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the repository</p> <p></p> <p><code>timeBase</code> TimeBase</p> <p>The TimeBase used by the repository which determines both resolution and epoch of time stamps stored in the repository.</p> <p></p> <p><code>version</code> IVersion</p> <p>The version of the repository.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITsmRepositoryInformation&gt; A Result&lt;TValue&gt; containing the ITsmRepositoryInformation object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryInformationFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/","title":"ITsmRepositoryStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#itsmrepositorystore-interface","title":"ITsmRepositoryStore Interface","text":"<p>Provides access to all configured repositories that can be used to store time series and related data.</p> C#<pre><code>public interface ITsmRepositoryStore :\nHAKOM.Persistence.Core.Net.Api.IRepositoryStore&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepository&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.IRepositoryStore&lt;ITsmRepository&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#itsmrepositorystoreloadtimeseriesdatarepositoryitimeseriesreference-cancellationtoken-method","title":"ITsmRepositoryStore.LoadTimeSeriesDataRepository(ITimeSeriesReference, CancellationToken) Method","text":"<p>Loads the repository used to store time series data based on the DataStorage or Storage properties of the given timeSeriesReference. If DataStorage is null, loads the repository with the Storage property.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepository&gt; LoadTimeSeriesDataRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference used to load the data repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token, which may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITsmRepository&gt; The time series data repository.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#itsmrepositorystoreloadtimeseriesrepositoryitimeseriesreference-cancellationtoken-method","title":"ITsmRepositoryStore.LoadTimeSeriesRepository(ITimeSeriesReference, CancellationToken) Method","text":"<p>Loads the repository used to store the time series definitions based on the Storage property of the given timeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Persistence.ITsmRepository&gt; LoadTimeSeriesRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference used to load the repository.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token, which may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/ITsmRepositoryStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITsmRepository&gt; The time series repository.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/#hakomtsmnetapipersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.Persistence.Exceptions Namespace","text":"Classes UnitRepositoryIsNotConfiguredException Thrown when the repository set as unit repository is not configured."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/","title":"UnitRepositoryIsNotConfiguredException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/#unitrepositoryisnotconfiguredexception-class","title":"UnitRepositoryIsNotConfiguredException Class","text":"<p>Thrown when the repository set as unit repository is not configured.</p> C#<pre><code>public sealed class UnitRepositoryIsNotConfiguredException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnitRepositoryIsNotConfiguredException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/#remarks","title":"Remarks","text":"<p>This error is identified by code HK15103.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/#unitrepositoryisnotconfiguredexceptionequivalenthttpstatuscode-property","title":"UnitRepositoryIsNotConfiguredException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/Exceptions/UnitRepositoryIsNotConfiguredException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/","title":"HAKOM.TSM.Net.Api.Persistence.References.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/#hakomtsmnetapipersistencereferencesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Persistence.References.Exceptions Namespace","text":"Classes ReferenceIdentifierTypeMismatchException Indicates that the type of the identifier of a reference is unexpected. ReferenceNotResolvedException Indicates that an attempt was to resolve a reference but the method for resolving the referencedid not return a IResolvedReference&lt;TReferred&gt;. ReferenceWithoutIdentifierException Indicates that an operation was attempted using a reference that does not contain a specific identifier eventhough the operation depends on such an identifier being present."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/","title":"ReferenceIdentifierTypeMismatchException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence.References.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/#referenceidentifiertypemismatchexception-class","title":"ReferenceIdentifierTypeMismatchException Class","text":"<p>Indicates that the type of the identifier of a reference is unexpected.</p> C#<pre><code>public sealed class ReferenceIdentifierTypeMismatchException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReferenceIdentifierTypeMismatchException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15090.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/#referenceidentifiertypemismatchexceptionequivalenthttpstatuscode-property","title":"ReferenceIdentifierTypeMismatchException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceIdentifierTypeMismatchException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/","title":"ReferenceNotResolvedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence.References.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/#referencenotresolvedexception-class","title":"ReferenceNotResolvedException Class","text":"<p>Indicates that an attempt was to resolve a reference but the method for resolving the reference did not return a IResolvedReference&lt;TReferred&gt;.</p> C#<pre><code>public sealed class ReferenceNotResolvedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReferenceNotResolvedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/#remarks","title":"Remarks","text":"<p>The method from the store (given in the error message) should return a  IResolvedReference&lt;TReferred&gt; to resolve the reference.  </p> <p>This exception is identified by error code HK15098.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/#referencenotresolvedexceptionequivalenthttpstatuscode-property","title":"ReferenceNotResolvedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceNotResolvedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/","title":"ReferenceWithoutIdentifierException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Persistence.References.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/#referencewithoutidentifierexception-class","title":"ReferenceWithoutIdentifierException Class","text":"<p>Indicates that an operation was attempted using a reference that does not contain a specific identifier even though the operation depends on such an identifier being present.</p> C#<pre><code>public sealed class ReferenceWithoutIdentifierException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ReferenceWithoutIdentifierException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/#remarks","title":"Remarks","text":"<p>This exception is identified by error code HK15088.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/#referencewithoutidentifierexceptionequivalenthttpstatuscode-property","title":"ReferenceWithoutIdentifierException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Persistence/References/Exceptions/ReferenceWithoutIdentifierException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/","title":"HAKOM.TSM.Net.Api.Quotations","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/#hakomtsmnetapiquotations-namespace","title":"HAKOM.TSM.Net.Api.Quotations Namespace","text":"Structs QuotationBehavior The quotation behavior has an effect on which version of the time series is loaded when reading with quotation."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/","title":"QuotationBehavior","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Quotations</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehavior-struct","title":"QuotationBehavior Struct","text":"<p>The quotation behavior has an effect on which version of the time series is loaded when reading with quotation.</p> C#<pre><code>public readonly struct QuotationBehavior :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior, int&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt;\n</code></pre> <p>Implements System.IEquatable&lt;QuotationBehavior&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;QuotationBehavior,System.Int32&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;QuotationBehavior&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorvalue-property","title":"QuotationBehavior.Value Property","text":"<p>The System.Int32 value representing the quotation behavior.</p> C#<pre><code>public int Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#property-value","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorcreatenullableint-method","title":"QuotationBehavior.Create(Nullable&lt;int&gt;) Method","text":"<p>Creates a quotation behavior from its known value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Quotations.QuotationBehavior Create(System.Nullable&lt;int&gt; value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters","title":"Parameters","text":"<p><code>value</code> System.Nullable&lt;System.Int32&gt;</p> <p>The System.Int32 value of the quotation behavior.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns","title":"Returns","text":"<p>QuotationBehavior A new instance of QuotationBehavior.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviordefault-method","title":"QuotationBehavior.Default() Method","text":"<p>Creates a new instance of QuotationBehavior that specifies no explicit behavior.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Quotations.QuotationBehavior Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_1","title":"Returns","text":"<p>QuotationBehavior A new QuotationBehavior with value default.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#remarks","title":"Remarks","text":"<p>When reading data from a quotation time series without explicitly specifying a quotation date/time,  the actual data retrieved depends on the QuotationBehavior that may be controlled by - passing it in QuotationBehavior - setting the QuotationDefaultBehavior property of the time series being read - or specifying a TSM:Persistence:Data:QuotationDefaultBehavior in the applications configuration  </p> <p>in that order. If one of these is null or Default() then the next in that list is used to determine final behavior. If none of the aforementioned settings has a value that is not null or default, then MaxExact() is used.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorequalsquotationbehavior-method","title":"QuotationBehavior.Equals(QuotationBehavior) Method","text":"<p>Compares the value of this quotation behavior to another quotation behavior returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_1","title":"Parameters","text":"<p><code>other</code> QuotationBehavior</p> <p>The QuotationBehavior, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_2","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the quotation behaviors are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorequalsobject-method","title":"QuotationBehavior.Equals(object) Method","text":"<p>Compares the value of this quotation behavior to another quotation behavior returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The QuotationBehavior, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_3","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the quotation behaviors are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorgethashcode-method","title":"QuotationBehavior.GetHashCode() Method","text":"<p>Creates the hash code for this quotation behavior, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_4","title":"Returns","text":"<p>System.Int32 A hash code for this quotation behavior.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorisdefault-method","title":"QuotationBehavior.IsDefault() Method","text":"<p>Returns true if the quotation behavior is a default quotation behavior.</p> C#<pre><code>public bool IsDefault();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_5","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorismaxexact-method","title":"QuotationBehavior.IsMaxExact() Method","text":"<p>Returns true if the quotation behavior is 'MaxExact'.</p> C#<pre><code>public bool IsMaxExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_6","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorismaxnotexact-method","title":"QuotationBehavior.IsMaxNotExact() Method","text":"<p>Returns true if the quotation behavior is 'MaxNotExact'.</p> C#<pre><code>public bool IsMaxNotExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_7","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviorisnownotexact-method","title":"QuotationBehavior.IsNowNotExact() Method","text":"<p>Returns true if the quotation behavior is 'NowNotExact'.</p> C#<pre><code>public bool IsNowNotExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_8","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviormaxexact-method","title":"QuotationBehavior.MaxExact() Method","text":"<p>Creates a quotation behavior, which specifies that the latest quotation date and time for the time domain will be determined and only data for that date will be read.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Quotations.QuotationBehavior MaxExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_9","title":"Returns","text":"<p>QuotationBehavior A new QuotationBehavior with value 1.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviormaxnotexact-method","title":"QuotationBehavior.MaxNotExact() Method","text":"<p>Creates a quotation behavior, which specifies that data from the time domain will be read with the respective latest quotation date and time.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Quotations.QuotationBehavior MaxNotExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_10","title":"Returns","text":"<p>QuotationBehavior A new QuotationBehavior with value 2.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviornownotexact-method","title":"QuotationBehavior.NowNotExact() Method","text":"<p>Creates a quotation behavior which specifies that data from the time domain will be read with the respective latest quotation date and time but earlier than the current time.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Quotations.QuotationBehavior NowNotExact();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_11","title":"Returns","text":"<p>QuotationBehavior A new QuotationBehavior with value 3.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviortostring-method","title":"QuotationBehavior.ToString() Method","text":"<p>Display the name and numeric value of the QuotationBehavior as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_12","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviortrycreatenullableint-method","title":"QuotationBehavior.TryCreate(Nullable&lt;int&gt;) Method","text":"<p>Attempts to create a quotation behavior from its known value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; TryCreate(System.Nullable&lt;int&gt; value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_3","title":"Parameters","text":"<p><code>value</code> System.Nullable&lt;System.Int32&gt;</p> <p>The System.Int32 value of the quotation behavior.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_13","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;QuotationBehavior&gt; A Result&lt;TValue&gt; containing a new instance of QuotationBehavior.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehaviortryparsefromconfigurationsectionvaluestring-nullablequotationbehavior-method","title":"QuotationBehavior.TryParseFromConfigurationSectionValue(string, Nullable&lt;QuotationBehavior&gt;) Method","text":"<p>Tries to parse a string value to a QuotationBehavior.</p> C#<pre><code>public static bool TryParseFromConfigurationSectionValue(string configurationSectionValue, out System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; quotationBehavior);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_4","title":"Parameters","text":"<p><code>configurationSectionValue</code> System.String</p> <p>The value to be parsed.</p> <p></p> <p><code>quotationBehavior</code> System.Nullable&lt;QuotationBehavior&gt;</p> <p>The parsed value. This value is null if the parsing failed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_14","title":"Returns","text":"<p>System.Boolean A bool indicating if the parsing was successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#remarks_1","title":"Remarks","text":"<p>The string value for parsing is intended as the string value from the configuration section \"TSM:Persistence:Data:QuotationDefaultBehavior\".  The following string values are currently supported for parsing: - \"0\" \u2014 Parses to Default() - \"1\" \u2014 Parses to MaxExact() - \"2\" \u2014 Parses to MaxNotExact() - \"3\" \u2014 Parses to NowNotExact()</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehavioroperator-quotationbehavior-quotationbehavior-operator","title":"QuotationBehavior.operator ==(QuotationBehavior, QuotationBehavior) Operator","text":"<p>Compares the value of two quotation behaviors using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior left, HAKOM.TSM.Net.Api.Quotations.QuotationBehavior right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_5","title":"Parameters","text":"<p><code>left</code> QuotationBehavior</p> <p>The QuotationBehavior on the left of the '==' operator.</p> <p></p> <p><code>right</code> QuotationBehavior</p> <p>The QuotationBehavior on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_15","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the quotation behaviors are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#quotationbehavioroperator-quotationbehavior-quotationbehavior-operator_1","title":"QuotationBehavior.operator !=(QuotationBehavior, QuotationBehavior) Operator","text":"<p>Compares the value of two quotation behaviors using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior left, HAKOM.TSM.Net.Api.Quotations.QuotationBehavior right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#parameters_6","title":"Parameters","text":"<p><code>left</code> QuotationBehavior</p> <p>The QuotationBehavior on the left of the '!=' operator.</p> <p></p> <p><code>right</code> QuotationBehavior</p> <p>The QuotationBehavior on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/QuotationBehavior/#returns_16","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the quotation behaviors are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/","title":"HAKOM.TSM.Net.Api.Quotations.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/#hakomtsmnetapiquotationsextensions-namespace","title":"HAKOM.TSM.Net.Api.Quotations.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer that relate to storing and retrieving individual quotations for time series data."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Quotations.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer that relate to storing and retrieving individual quotations for time series data.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/#containerextensionsusedefaultquotationbehaviornamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultQuotationBehaviorNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual QuotationBehavior values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultQuotationBehaviorNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Quotations/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/","title":"HAKOM.TSM.Net.Api.Serialization.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/#hakomtsmnetapiserializationexceptions-namespace","title":"HAKOM.TSM.Net.Api.Serialization.Exceptions Namespace","text":"Classes TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException Indicates that the type of identifier of the IReference, which should be serialized, or the according IStore, which is used to create a IReference, does not match the configured type of the JsonSerializer. Either the default IStore or the JsonSerializer has to be changed to support the same identifier. This exception is identified by error code HK15095."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException/","title":"TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Serialization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException/#tidentifierofserializerdoesnotmatchwithconfiguredireferenceexception-class","title":"TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException Class","text":"<p>Indicates that the type of identifier of the IReference, which should be serialized,  or the according IStore, which is used to create a IReference, does not match the configured type of the JsonSerializer. <p>Either the default IStore or the JsonSerializer has to be changed to support the same identifier.</p> <p></p> <p>This exception is identified by error code HK15095.</p> <p></p> C#<pre><code>public sealed class TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException/#tidentifierofserializerdoesnotmatchwithconfiguredireferenceexceptionequivalenthttpstatuscode-property","title":"TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Serialization/Exceptions/TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/","title":"HAKOM.TSM.Net.Api.Time.DateTimes","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/#hakomtsmnetapitimedatetimes-namespace","title":"HAKOM.TSM.Net.Api.Time.DateTimes Namespace","text":"Structs DateTimeOffsetAtOrBefore Represents a System.DateTimeOffset and System.Boolean value determining whether this date should be applied exactly or also before it."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/","title":"DateTimeOffsetAtOrBefore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.DateTimes</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbefore-struct","title":"DateTimeOffsetAtOrBefore Struct","text":"<p>Represents a System.DateTimeOffset and System.Boolean value determining whether this date should be applied exactly or also before it.</p> C#<pre><code>public readonly struct DateTimeOffsetAtOrBefore :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt;,\nSystem.ISpanParsable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt;,\nSystem.IParsable&lt;HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore&gt;\n</code></pre> <p>Implements System.IEquatable&lt;DateTimeOffsetAtOrBefore&gt;, System.ISpanParsable&lt;DateTimeOffsetAtOrBefore&gt;, System.IParsable&lt;DateTimeOffsetAtOrBefore&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeat-property","title":"DateTimeOffsetAtOrBefore.At Property","text":"<p>Gets the exact date.</p> C#<pre><code>public System.DateTimeOffset At { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeexactlyat-property","title":"DateTimeOffsetAtOrBefore.ExactlyAt Property","text":"<p>Gets a System.Boolean value determining whether At should be applied exactly or also before it.</p> C#<pre><code>public bool ExactlyAt { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#property-value_1","title":"Property Value","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforecreatedatetimeoffset-bool-method","title":"DateTimeOffsetAtOrBefore.Create(DateTimeOffset, bool) Method","text":"<p>Creates a new DateTimeOffsetAtOrBefore object.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore Create(System.DateTimeOffset at, bool exactlyAt=false);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters","title":"Parameters","text":"<p><code>at</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset which can be applied exactly or also before it.</p> <p></p> <p><code>exactlyAt</code> System.Boolean</p> <p>The System.Boolean value determining whether the parameter 'at' should be applied exactly or also before it.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns","title":"Returns","text":"<p>DateTimeOffsetAtOrBefore A new instance of DateTimeOffsetAtOrBefore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeequalsdatetimeoffsetatorbefore-method","title":"DateTimeOffsetAtOrBefore.Equals(DateTimeOffsetAtOrBefore) Method","text":"C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_1","title":"Parameters","text":"<p><code>other</code> DateTimeOffsetAtOrBefore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_1","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeequalsobject-method","title":"DateTimeOffsetAtOrBefore.Equals(object) Method","text":"<p>Indicates whether this instance and a specified object are equal.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The object to compare with the current instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_2","title":"Returns","text":"<p>System.Boolean true if obj and this instance are the same type and represent the same value; otherwise, false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforegethashcode-method","title":"DateTimeOffsetAtOrBefore.GetHashCode() Method","text":"<p>Returns the hash code for this instance.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_3","title":"Returns","text":"<p>System.Int32 A 32-bit signed integer that is the hash code for this instance.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeparsestring-iformatprovider-method","title":"DateTimeOffsetAtOrBefore.Parse(string, IFormatProvider) Method","text":"<p>Parses the input string into a DateTimeOffsetAtOrBefore instance.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore Parse(string input, System.IFormatProvider? formatProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_3","title":"Parameters","text":"<p><code>input</code> System.String</p> <p>The input string containing the date.</p> <p></p> <p><code>formatProvider</code> System.IFormatProvider</p> <p>The format provider.</p> <p>Implements Parse(string, IFormatProvider)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_4","title":"Returns","text":"<p>DateTimeOffsetAtOrBefore A new instance of DateTimeOffsetAtOrBefore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#remarks","title":"Remarks","text":"<p>The input string should follow the ISO 8601 format for dates and times.  It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.  </p> <p>Supported formats: - For exact date and time: \"YYYY-MM-ddTHH:mm:ss[,exact]\" (e.g. \"2002-06-04T14:30:00,exact\") - For date only: \"YYYY-MM-dd[,exact]\" (e.g. \"2002-06-04\") - For date with additional information: \"YYYY-MM-ddTHH:mm:ss,f[,exact]\" (e.g. \"2002-06-04T14:30:00,55\")</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeparsereadonlyspanchar-iformatprovider-method","title":"DateTimeOffsetAtOrBefore.Parse(ReadOnlySpan&lt;char&gt;, IFormatProvider) Method","text":"<p>Parses the input span into a DateTimeOffsetAtOrBefore instance.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore Parse(System.ReadOnlySpan&lt;char&gt; input, System.IFormatProvider? formatProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_4","title":"Parameters","text":"<p><code>input</code> System.ReadOnlySpan&lt;System.Char&gt;</p> <p>The input span containing the date string.</p> <p></p> <p><code>formatProvider</code> System.IFormatProvider</p> <p>The format provider.</p> <p>Implements Parse(ReadOnlySpan&lt;char&gt;, IFormatProvider)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_5","title":"Returns","text":"<p>DateTimeOffsetAtOrBefore A new instance of DateTimeOffsetAtOrBefore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#remarks_1","title":"Remarks","text":"<p>The input string should follow the ISO 8601 format for dates and times.  It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.  </p> <p>Supported formats: - For exact date and time: \"YYYY-MM-ddTHH:mm:ss[,exact]\" (e.g. \"2002-06-04T14:30:00,exact\") - For date only: \"YYYY-MM-dd[,exact]\" (e.g. \"2002-06-04\") - For date with additional information: \"YYYY-MM-ddTHH:mm:ss,f[,exact]\" (e.g. \"2002-06-04T14:30:00,55\")</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforetostring-method","title":"DateTimeOffsetAtOrBefore.ToString() Method","text":"<p>Converts the value of the current DateTimeOffsetAtOrBefore object to its equivalent System.String representation.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_6","title":"Returns","text":"<p>System.String A string representation of a DateTimeOffsetAtOrBefore object that includes At and ExactlyAt.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforetryparsestring-iformatprovider-datetimeoffsetatorbefore-method","title":"DateTimeOffsetAtOrBefore.TryParse(string, IFormatProvider, DateTimeOffsetAtOrBefore) Method","text":"<p>Tries to parse the input string into a DateTimeOffsetAtOrBefore instance.</p> C#<pre><code>public static bool TryParse(string? input, System.IFormatProvider? formatProvider, out HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore result);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_5","title":"Parameters","text":"<p><code>input</code> System.String</p> <p>The input string containing the date.</p> <p></p> <p><code>formatProvider</code> System.IFormatProvider</p> <p>The format provider.</p> <p></p> <p><code>result</code> DateTimeOffsetAtOrBefore</p> <p>The parsed result, if successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_7","title":"Returns","text":"<p>System.Boolean True if parsing was successful; otherwise, false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#remarks_2","title":"Remarks","text":"<p>The input string should follow the ISO 8601 format for dates and times.  It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.  </p> <p>Supported formats: - For exact date and time: \"YYYY-MM-ddTHH:mm:ss[,exact]\" (e.g. \"2002-06-04T14:30:00,exact\") - For date only: \"YYYY-MM-dd[,exact]\" (e.g. \"2002-06-04\") - For date with additional information: \"YYYY-MM-ddTHH:mm:ss,f[,exact]\" (e.g. \"2002-06-04T14:30:00,55\")</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforetryparsereadonlyspanchar-iformatprovider-datetimeoffsetatorbefore-method","title":"DateTimeOffsetAtOrBefore.TryParse(ReadOnlySpan&lt;char&gt;, IFormatProvider, DateTimeOffsetAtOrBefore) Method","text":"<p>Tries to parse the input span into a DateTimeOffsetAtOrBefore instance.</p> C#<pre><code>public static bool TryParse(System.ReadOnlySpan&lt;char&gt; input, System.IFormatProvider? formatProvider, out HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore result);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_6","title":"Parameters","text":"<p><code>input</code> System.ReadOnlySpan&lt;System.Char&gt;</p> <p>The input span containing the date string.</p> <p></p> <p><code>formatProvider</code> System.IFormatProvider</p> <p>The format provider.</p> <p></p> <p><code>result</code> DateTimeOffsetAtOrBefore</p> <p>The parsed result, if successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_8","title":"Returns","text":"<p>System.Boolean True if parsing was successful; otherwise, false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#remarks_3","title":"Remarks","text":"<p>The input string should follow the ISO 8601 format for dates and times.  It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.  </p> <p>Supported formats: - For exact date and time: \"YYYY-MM-ddTHH:mm:ss[,exact]\" (e.g. \"2002-06-04T14:30:00,exact\") - For date only: \"YYYY-MM-dd[,exact]\" (e.g. \"2002-06-04\") - For date with additional information: \"YYYY-MM-ddTHH:mm:ss,f[,exact]\" (e.g. \"2002-06-04T14:30:00,55\")</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeoperator-datetimeoffsetatorbefore-datetimeoffsetatorbefore-operator","title":"DateTimeOffsetAtOrBefore.operator ==(DateTimeOffsetAtOrBefore, DateTimeOffsetAtOrBefore) Operator","text":"C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore left, HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_7","title":"Parameters","text":"<p><code>left</code> DateTimeOffsetAtOrBefore</p> <p></p> <p><code>right</code> DateTimeOffsetAtOrBefore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_9","title":"Returns","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#datetimeoffsetatorbeforeoperator-datetimeoffsetatorbefore-datetimeoffsetatorbefore-operator_1","title":"DateTimeOffsetAtOrBefore.operator !=(DateTimeOffsetAtOrBefore, DateTimeOffsetAtOrBefore) Operator","text":"C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore left, HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#parameters_8","title":"Parameters","text":"<p><code>left</code> DateTimeOffsetAtOrBefore</p> <p></p> <p><code>right</code> DateTimeOffsetAtOrBefore</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/DateTimes/DateTimeOffsetAtOrBefore/#returns_10","title":"Returns","text":"<p>System.Boolean</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/","title":"HAKOM.TSM.Net.Api.Time.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/#hakomtsmnetapitimeextensions-namespace","title":"HAKOM.TSM.Net.Api.Time.Extensions Namespace","text":"Classes DateTimeOffsetExtensions Provides extension methods for System.DateTimeOffset to support interval-based add, substract and alignment operations."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/","title":"DateTimeOffsetExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#datetimeoffsetextensions-class","title":"DateTimeOffsetExtensions Class","text":"<p>Provides extension methods for System.DateTimeOffset to support interval-based add, substract and alignment operations.</p> C#<pre><code>public static class DateTimeOffsetExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 DateTimeOffsetExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#datetimeoffsetextensionsaddintervalthis-datetimeoffset-iinterval-itimezone-iintervalfactory-method","title":"DateTimeOffsetExtensions.AddInterval(this DateTimeOffset, IInterval, ITimeZone, IIntervalFactory) Method","text":"<p>Adds a given IInterval to the specified System.DateTimeOffsetstartTime while taking into account the rules of the provided ITimeZone. This ensures that daylight saving time changes are correctly handled.</p> C#<pre><code>public static System.DateTimeOffset AddInterval(this System.DateTimeOffset startTime, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory intervalFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#parameters","title":"Parameters","text":"<p><code>startTime</code> System.DateTimeOffset</p> <p>The point in time to which the interval will be added.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval representing the duration to apply.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone that provides context for how the interval should be applied,  especially around ambiguous or invalid times due to daylight saving.</p> <p></p> <p><code>intervalFactory</code> IIntervalFactory</p> <p>The IIntervalFactory used internally to construct adjusted intervals when needed for complex time shifting logic.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#returns","title":"Returns","text":"<p>System.DateTimeOffset A System.DateTimeOffset representing the new point in time after applying the interval in the given time zone context.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#datetimeoffsetextensionsalignwithnextthis-datetimeoffset-iinterval-itimezone-datetimeoffset-iintervalfactory-itimeseriesdatafactory-method","title":"DateTimeOffsetExtensions.AlignWithNext(this DateTimeOffset, IInterval, ITimeZone, DateTimeOffset, IIntervalFactory, ITimeSeriesDataFactory) Method","text":"<p>Aligns the specified givenDate to the next upcoming occurrence on the interval grid, starting from the defined startOfTime. The alignment respects the rules of the given ITimeZone and uses the specified IInterval to determine the spacing between grid points.</p> C#<pre><code>public static System.DateTimeOffset AlignWithNext(this System.DateTimeOffset givenDate, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.DateTimeOffset startOfTime, HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory intervalFactory, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory timeSeriesDataFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#parameters_1","title":"Parameters","text":"<p><code>givenDate</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset to align. This is the target timestamp that will be shifted forward to the next aligned point on the interval grid.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval that defines the step size inbetween points on the grid and is used for alignment.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone that provides context for how the interval should be applied,  especially around ambiguous or invalid times due to daylight saving.</p> <p></p> <p><code>startOfTime</code> System.DateTimeOffset</p> <p>The anchor point or origin of the interval grid. All aligned times are computed relative to this point,  following multiples of interval from this origin.</p> <p></p> <p><code>intervalFactory</code> IIntervalFactory</p> <p>The IIntervalFactory used internally to construct adjusted intervals when needed for complex time shifting logic.</p> <p></p> <p><code>timeSeriesDataFactory</code> ITimeSeriesDataFactory</p> <p>The ITimeSeriesDataFactory used when needed for complex time shifting logic.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#returns_1","title":"Returns","text":"<p>System.DateTimeOffset A System.DateTimeOffset representing the earliest aligned time that is greater than or equal to  givenDate, computed from the interval grid originating at startOfTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#exceptions","title":"Exceptions","text":"<p>StartOfTimeIsAfterGivenDateException Thrown when startOfTime is after givenDate and thus no alignment is possible.</p> <p>System.NotSupportedException Thrown when the specified interval is not supported by the alignment logic.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#datetimeoffsetextensionsalignwithpreviousthis-datetimeoffset-iinterval-itimezone-datetimeoffset-iintervalfactory-itimeseriesdatafactory-method","title":"DateTimeOffsetExtensions.AlignWithPrevious(this DateTimeOffset, IInterval, ITimeZone, DateTimeOffset, IIntervalFactory, ITimeSeriesDataFactory) Method","text":"<p>Aligns the specified givenDate to the most recent previous occurrence on the interval grid,  starting from the defined startOfTime. The alignment respects the rules of the given  ITimeZone and uses the specified IInterval for spacing between points.</p> C#<pre><code>public static System.DateTimeOffset AlignWithPrevious(this System.DateTimeOffset givenDate, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, System.DateTimeOffset startOfTime, HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory intervalFactory, HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory timeSeriesDataFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#parameters_2","title":"Parameters","text":"<p><code>givenDate</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset to align. This is the target timestamp that will be shifted backwards to  the nearest aligned point on the interval grid.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval that defines the step size inbetween points on the grid and is used for alignment.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone that provides context for how the interval should be applied,  especially around ambiguous or invalid times due to daylight saving.</p> <p></p> <p><code>startOfTime</code> System.DateTimeOffset</p> <p>The anchor point or origin of the interval grid. All aligned times are computed relative to this point,  following multiples of interval from this origin.</p> <p></p> <p><code>intervalFactory</code> IIntervalFactory</p> <p>The IIntervalFactory used internally to construct adjusted intervals when needed for complex time shifting logic.</p> <p></p> <p><code>timeSeriesDataFactory</code> ITimeSeriesDataFactory</p> <p>The ITimeSeriesDataFactory used when needed for complex time shifting logic.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#returns_2","title":"Returns","text":"<p>System.DateTimeOffset A System.DateTimeOffset representing the latest aligned time that is less than or equal to  givenDate, computed from the interval grid originating at startOfTime.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#exceptions_1","title":"Exceptions","text":"<p>StartOfTimeIsAfterGivenDateException Thrown when startOfTime is after givenDate and thus no alignment is possible.</p> <p>System.NotSupportedException Thrown when the specified interval is not supported by the alignment logic.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#datetimeoffsetextensionssubtractintervalthis-datetimeoffset-iinterval-itimezone-iintervalfactory-method","title":"DateTimeOffsetExtensions.SubtractInterval(this DateTimeOffset, IInterval, ITimeZone, IIntervalFactory) Method","text":"<p>Subtracts a given IInterval to the specified System.DateTimeOffsetstartTime while taking into account the rules of the provided ITimeZone. This ensures that daylight saving time changes are correctly handled.</p> C#<pre><code>public static System.DateTimeOffset SubtractInterval(this System.DateTimeOffset startTime, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone timeZone, HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory intervalFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#parameters_3","title":"Parameters","text":"<p><code>startTime</code> System.DateTimeOffset</p> <p>The point in time to which the interval will be subtracted.</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval representing the duration to apply.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The ITimeZone that provides context for how the interval should be applied,  especially around ambiguous or invalid times due to daylight saving.</p> <p></p> <p><code>intervalFactory</code> IIntervalFactory</p> <p>The IIntervalFactory used internally to construct adjusted intervals when needed for complex time shifting logic.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/DateTimeOffsetExtensions/#returns_3","title":"Returns","text":"<p>System.DateTimeOffset A System.DateTimeOffset representing the new point in time after applying the interval in the given time zone context.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/","title":"HAKOM.TSM.Net.Api.Time.Extensions.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/#hakomtsmnetapitimeextensionsexceptions-namespace","title":"HAKOM.TSM.Net.Api.Time.Extensions.Exceptions Namespace","text":"Classes StartOfTimeIsAfterGivenDateException Gets thrown when StartDate is greater than the given date in the alignment methods: align previous or align next"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/","title":"StartOfTimeIsAfterGivenDateException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Extensions.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/#startoftimeisaftergivendateexception-class","title":"StartOfTimeIsAfterGivenDateException Class","text":"<p>Gets thrown when StartDate is greater than the given date in the alignment methods: align previous or align next</p> C#<pre><code>public sealed class StartOfTimeIsAfterGivenDateException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 StartOfTimeIsAfterGivenDateException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/#remarks","title":"Remarks","text":"<p>When aligning a System.DateTimeOffset to the grid of the time series with AlignWithPrevious(this DateTimeOffset, IInterval, ITimeZone, DateTimeOffset, IIntervalFactory, ITimeSeriesDataFactory) or AlignWithNext(this DateTimeOffset, IInterval, ITimeZone, DateTimeOffset, IIntervalFactory, ITimeSeriesDataFactory), the specified StartOfTime must be before the System.DateTimeOffset to be aligned.  </p> <p>This exception is identified by error code HK15035.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/#startoftimeisaftergivendateexceptionequivalenthttpstatuscode-property","title":"StartOfTimeIsAfterGivenDateException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Extensions/Exceptions/StartOfTimeIsAfterGivenDateException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/","title":"HAKOM.TSM.Net.Api.Time.Intervals","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/#hakomtsmnetapitimeintervals-namespace","title":"HAKOM.TSM.Net.Api.Time.Intervals Namespace","text":"Structs IntervalTransformationMethod A struct representing the interval transformation method. It is used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series. IntervalType Represents a common duration for use as a base duration in intervals. Interfaces IInterval Represents a relative time duration (hour, 15 minutes, 2 years, etc.). IIntervalFactory Used for creating intervals (relative durations)."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/","title":"IInterval","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#iinterval-interface","title":"IInterval Interface","text":"<p>Represents a relative time duration (hour, 15 minutes, 2 years, etc.).</p> C#<pre><code>public interface IInterval :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IInterval&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IInterval&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#iintervalmultiplier-property","title":"IInterval.Multiplier Property","text":"<p>Gets ghw many of the base types durations constitute the duration of the entire interval. i.e. 15 with interval type minute represents a 15 minute interval.</p> C#<pre><code>int Multiplier { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#property-value","title":"Property Value","text":"<p>System.Int32</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#iintervaltype-property","title":"IInterval.Type Property","text":"<p>Gets the base type of the interval (hour, minute, year, etc.).</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Type { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#property-value_1","title":"Property Value","text":"<p>IntervalType</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#iintervaltrygetmillisecondslong-method","title":"IInterval.TryGetMilliseconds(long) Method","text":"<p>Tries to get the interval length in milliseconds. If Type is greater than an hour, it will return false, since other interval types have variable lengths, because of daylight saving time and leap years.</p> C#<pre><code>bool TryGetMilliseconds(out long milliseconds);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#parameters","title":"Parameters","text":"<p><code>milliseconds</code> System.Int64</p> <p>The interval length in milliseconds.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IInterval/#returns","title":"Returns","text":"<p>System.Boolean True if the Type has a fixed length, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/","title":"IIntervalFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#iintervalfactory-interface","title":"IIntervalFactory Interface","text":"<p>Used for creating intervals (relative durations).</p> C#<pre><code>public interface IIntervalFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#iintervalfactorycreateintervaltype-int-method","title":"IIntervalFactory.Create(IntervalType, int) Method","text":"<p>Creates an interval with the given multiplier and type.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval Create(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType type, int multiplier=1);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#parameters","title":"Parameters","text":"<p><code>type</code> IntervalType</p> <p>The IntervalType (hour, minute, etc.).</p> <p></p> <p><code>multiplier</code> System.Int32</p> <p>The amount of base type durations constituting the duration of the interval.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#returns","title":"Returns","text":"<p>IInterval A new IInterval.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#iintervalfactorytrycreateintervaltype-int-method","title":"IIntervalFactory.TryCreate(IntervalType, int) Method","text":"<p>Attempts to create an interval with the given multiplier and type.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Intervals.IInterval&gt; TryCreate(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType type, int multiplier=1);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#parameters_1","title":"Parameters","text":"<p><code>type</code> IntervalType</p> <p>The IntervalType (hour, minute, etc.).</p> <p></p> <p><code>multiplier</code> System.Int32</p> <p>The amount of base type durations constituting the duration of the interval.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IIntervalFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IInterval&gt; A Result&lt;TValue&gt; that contains either the new IInterval or an error that describes why it could not be created.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/","title":"IntervalTransformationMethod","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethod-struct","title":"IntervalTransformationMethod Struct","text":"<p>A struct representing the interval transformation method.  It is used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series.</p> C#<pre><code>public readonly struct IntervalTransformationMethod :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod, int&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IntervalTransformationMethod&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;IntervalTransformationMethod,System.Int32&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;IntervalTransformationMethod&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodvalue-property","title":"IntervalTransformationMethod.Value Property","text":"<p>Gets the System.Int32 representing the type of interval transformation method.</p> C#<pre><code>public int Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#property-value","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodabsmax-method","title":"IntervalTransformationMethod.AbsMax() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing an 'AbsMax' interval transformation method. The AbsMax rule determines the absolute (modulus of a real number) maximum of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod AbsMax();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing an 'AbsMax' interval transformation method (Value=8).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodabsmin-method","title":"IntervalTransformationMethod.AbsMin() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing an 'AbsMin' interval transformation method. The AbsMin rule determines the absolute (modulus of a real number) minimum of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod AbsMin();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_1","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing an 'AbsMin' interval transformation method (Value=7).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodaverage-method","title":"IntervalTransformationMethod.Average() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing an 'Average' interval transformation method. The Average rule determines the average of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Average();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_2","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing an 'Average' interval transformation method (Value=2).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodcreateint-method","title":"IntervalTransformationMethod.Create(int) Method","text":"<p>Creates a new instance of IntervalTransformationMethod with a custom value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Create(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The System.Int32 id of the interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_3","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#exceptions","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when value is outside the allowed range (1-10).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#remarks","title":"Remarks","text":"<p>Sometimes input (or output) data interval might differ from the interval of the target (or source) time series.  In such cases interval transformation methods become active to transform across different intervals.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodcreatestring-method","title":"IntervalTransformationMethod.Create(string) Method","text":"<p>Creates a new instance of IntervalTransformationMethod based on its name.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Create(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name id of the interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_4","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when name is not one of the known interval transformation methods.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#remarks_1","title":"Remarks","text":"<p>Sometimes input (or output) data interval might differ from the interval of the target (or source) time series.  In such cases interval transformation methods become active to transform across different intervals.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethoddefault-method","title":"IntervalTransformationMethod.Default() Method","text":"<p>Creates a new default instance of IntervalTransformationMethod. The default instance is an average transformation method.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_5","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of the default IntervalTransformationMethod (Value=default).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodequalsintervaltransformationmethod-method","title":"IntervalTransformationMethod.Equals(IntervalTransformationMethod) Method","text":"<p>Compares the value of this interval transformation method to another interval transformation method returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_2","title":"Parameters","text":"<p><code>other</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_6","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval transformation methods are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodequalsobject-method","title":"IntervalTransformationMethod.Equals(object) Method","text":"<p>Compares the value of this interval transformation method to another interval transformation method returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The IntervalTransformationMethod, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_7","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval transformation methods are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodfirstvalue-method","title":"IntervalTransformationMethod.FirstValue() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'FirstValue' interval transformation method. The FirstValue rule determines the first value out of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod FirstValue();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_8","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'FirstValue' interval transformation method (Value=9).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodgetall-method","title":"IntervalTransformationMethod.GetAll() Method","text":"<p>Returns all available IntervalTransformationMethod.</p> C#<pre><code>public static System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; GetAll();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_9","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;IntervalTransformationMethod&gt; A collection of interval transformation methods.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodgethashcode-method","title":"IntervalTransformationMethod.GetHashCode() Method","text":"<p>Creates the hash code for this interval transformation method, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_10","title":"Returns","text":"<p>System.Int32 A hash code for this interval transformation method.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodisabsmax-method","title":"IntervalTransformationMethod.IsAbsMax() Method","text":"<p>Checks if the current interval transformation method is 'AbsMax' (value: 8).</p> C#<pre><code>public bool IsAbsMax();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_11","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'AbsMax'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodisabsmin-method","title":"IntervalTransformationMethod.IsAbsMin() Method","text":"<p>Checks if the current interval transformation method is 'AbsMin' (value: 7).</p> C#<pre><code>public bool IsAbsMin();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_12","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'AbsMin'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodisaverage-method","title":"IntervalTransformationMethod.IsAverage() Method","text":"<p>Checks if the current interval transformation method is 'Average' (value: 2).</p> C#<pre><code>public bool IsAverage();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_13","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'Average'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodisdefault-method","title":"IntervalTransformationMethod.IsDefault() Method","text":"<p>Checks if the current value of the interval transformation method is equal to the default literal.</p> C#<pre><code>public bool IsDefault();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_14","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method value is equal (true) to the default literal.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodisfirstvalue-method","title":"IntervalTransformationMethod.IsFirstValue() Method","text":"<p>Checks if the current interval transformation method is 'FirstValue' (value: 9).</p> C#<pre><code>public bool IsFirstValue();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_15","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'FirstValue'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodislastvalue-method","title":"IntervalTransformationMethod.IsLastValue() Method","text":"<p>Checks if the current interval transformation method is 'LastValue' (value: 10).</p> C#<pre><code>public bool IsLastValue();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_16","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'LastValue'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodismax-method","title":"IntervalTransformationMethod.IsMax() Method","text":"<p>Checks if the current interval transformation method is 'Max' (value: 4).</p> C#<pre><code>public bool IsMax();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_17","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'Max'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodismin-method","title":"IntervalTransformationMethod.IsMin() Method","text":"<p>Checks if the current interval transformation method is 'Min' (value: 3).</p> C#<pre><code>public bool IsMin();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_18","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'Min'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodismostfrequently-method","title":"IntervalTransformationMethod.IsMostFrequently() Method","text":"<p>Checks if the current interval transformation method is 'MostFrequently' (value: 5).</p> C#<pre><code>public bool IsMostFrequently();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_19","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'MostFrequently'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodissum-method","title":"IntervalTransformationMethod.IsSum() Method","text":"<p>Checks if the current interval transformation method is 'Sum' (value: 1).</p> C#<pre><code>public bool IsSum();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_20","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the current interval transformation method is 'Sum'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodlastvalue-method","title":"IntervalTransformationMethod.LastValue() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'LastValue' interval transformation method. The LastValue rule determines the last value out of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod LastValue();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_21","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'LastValue' interval transformation method (Value=10).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodmax-method","title":"IntervalTransformationMethod.Max() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'Max' interval transformation method. The Max rule determines the maximum of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Max();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_22","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'Max' interval transformation method (Value=4).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodmin-method","title":"IntervalTransformationMethod.Min() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'Min' interval transformation method. The Min rule determines the minimum of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Min();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_23","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'Min' interval transformation method (Value=3).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodmostfrequently-method","title":"IntervalTransformationMethod.MostFrequently() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'MostFrequently' interval transformation method. The MostFrequently rule determines the most frequent of all values, when converting to a longer interval (e.g. quarter hour to hour), or repeats the value, when converting to a shorter interval (hour to quarter hour). If a two different values are equally frequent, the value occuring later will be taken, when converting from a shorter interval.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod MostFrequently();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_24","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'MostFrequently' interval transformation method (Value=5).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodsum-method","title":"IntervalTransformationMethod.Sum() Method","text":"<p>Creates a new instance of IntervalTransformationMethod representing a 'Sum' interval transformation method. The Sum rule determines the sum of all values, when converting to a longer interval (e.g. quarter hour to hour), or calculates the proportional value of the given target period inside the source period  (i.e. a division of the source value by the number of target data points within a given  source interval), when converting to a shorter interval (hour to quarter hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod Sum();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_25","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod representing a 'Sum' interval transformation method (Value=1).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodtointervaltransformationmethodint-method","title":"IntervalTransformationMethod.ToIntervalTransformationMethod(int) Method","text":"<p>Converts an System.Int32 to IntervalTransformationMethod.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod ToIntervalTransformationMethod(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_4","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The System.Int32 id of the interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_26","title":"Returns","text":"<p>IntervalTransformationMethod A new instance of IntervalTransformationMethod.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodtostring-method","title":"IntervalTransformationMethod.ToString() Method","text":"<p>Display the name and numeric value of the IntervalTransformationMethod as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_27","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodtrycreateint-method","title":"IntervalTransformationMethod.TryCreate(int) Method","text":"<p>Attempts to create a new instance of IntervalTransformationMethod with a custom value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; TryCreate(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_5","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The System.Int32 id of the interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_28","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IntervalTransformationMethod&gt; A new instance of IntervalTransformationMethod.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#exceptions_2","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when value is outside the allowed range (1-10).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#remarks_2","title":"Remarks","text":"<p>Sometimes input (or output) data interval might differ from the interval of the target (or source) time series.  In such cases interval transformation methods become active to transform across different intervals.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodtrycreatestring-method","title":"IntervalTransformationMethod.TryCreate(string) Method","text":"<p>Attempts to create a new instance of IntervalTransformationMethod with a custom value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; TryCreate(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_6","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_29","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IntervalTransformationMethod&gt; A new instance of IntervalTransformationMethod.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#exceptions_3","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when name is not one of the known interval transformation methods.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#remarks_3","title":"Remarks","text":"<p>Sometimes input (or output) data interval might differ from the interval of the target (or source) time series.  In such cases interval transformation methods become active to transform across different intervals.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodoperator-intervaltransformationmethod-intervaltransformationmethod-operator","title":"IntervalTransformationMethod.operator ==(IntervalTransformationMethod, IntervalTransformationMethod) Operator","text":"<p>Compares the value of two interval transformation methods using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod left, HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_7","title":"Parameters","text":"<p><code>left</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod on the left of the '==' operator.</p> <p></p> <p><code>right</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_30","title":"Returns","text":"<p>System.Boolean Returns a System.Boolean indicating if the values of the interval transformation methods are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodimplicit-operator-intervaltransformationmethodint-operator","title":"IntervalTransformationMethod.implicit operator IntervalTransformationMethod(int) Operator","text":"<p>Implicitly converts an integer (value of an interval transformation method) to an interval transformation method.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod implicit operator IntervalTransformationMethod(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_8","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The System.Int32 (number/id) of an interval transformation method.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_31","title":"Returns","text":"<p>IntervalTransformationMethod</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#intervaltransformationmethodoperator-intervaltransformationmethod-intervaltransformationmethod-operator_1","title":"IntervalTransformationMethod.operator !=(IntervalTransformationMethod, IntervalTransformationMethod) Operator","text":"<p>Compares the value of two interval transformation methods using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod left, HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#parameters_9","title":"Parameters","text":"<p><code>left</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod on the left of the '!=' operator.</p> <p></p> <p><code>right</code> IntervalTransformationMethod</p> <p>The IntervalTransformationMethod on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalTransformationMethod/#returns_32","title":"Returns","text":"<p>System.Boolean Returns a System.Boolean indicating if the values of the interval transformation methods are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/","title":"IntervalType","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltype-struct","title":"IntervalType Struct","text":"<p>Represents a common duration for use as a base duration in intervals.</p> C#<pre><code>public readonly struct IntervalType :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType, byte&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType&gt;,\nSystem.IParsable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IntervalType&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;IntervalType,System.Byte&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;IntervalType&gt;, System.IParsable&lt;IntervalType&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypename-property","title":"IntervalType.Name Property","text":"<p>Gets the System.String name of the interval type.</p> C#<pre><code>public string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypevalue-property","title":"IntervalType.Value Property","text":"<p>The value of the interval type</p> C#<pre><code>public byte Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#property-value_1","title":"Property Value","text":"<p>System.Byte</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypecreatebyte-method","title":"IntervalType.Create(byte) Method","text":"<p>Create an interval type from the id of a known interval type.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Create(byte value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters","title":"Parameters","text":"<p><code>value</code> System.Byte</p> <p>The id of the known interval type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns","title":"Returns","text":"<p>IntervalType A new IntervalType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#exceptions","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when value is outside the supported range (1-8, 10).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#remarks","title":"Remarks","text":"<p>Supported values are - 10 (Milliseconds) - 1 (Seconds) - 2 (Minutes) - 3 (Hours) - 4 (Days) - 5 (Weeks) - 6 (Months) - 7 (Quarters) - 8 (Years)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypecreatestring-method","title":"IntervalType.Create(string) Method","text":"<p>Create an interval type from the name of a known interval type.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Create(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the known interval type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_1","title":"Returns","text":"<p>IntervalType A new IntervalType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#exceptions_1","title":"Exceptions","text":"<p>System.ArgumentOutOfRangeException Thrown when name does not match any of the supported intrerval types. Supported values are MS, S, N (=Minute), H, D, W, M (=Month), Q or Y)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#remarks_1","title":"Remarks","text":"<p>Supported values are - MS (Milliseconds) - S (Seconds) - N (Minutes) - H (Hours) - D (Days) - W (Weeks) - M (Months) - Q (Quarters) - Y (Years)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeday-method","title":"IntervalType.Day() Method","text":"<p>Creates an interval type with a duration of 1 day.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Day();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_2","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypedefault-method","title":"IntervalType.Default() Method","text":"<p>Creates a default interval type. The default instance has hour as specified duration.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_3","title":"Returns","text":"<p>IntervalType A new IntervalType with the default value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeequalsintervaltype-method","title":"IntervalType.Equals(IntervalType) Method","text":"<p>Compares the value of this interval type to another interval type returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_2","title":"Parameters","text":"<p><code>other</code> IntervalType</p> <p>The IntervalType, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_4","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval types are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeequalsobject-method","title":"IntervalType.Equals(object) Method","text":"<p>Compares the value of this interval type to another interval type returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The IntervalType, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_5","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval types are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypegethashcode-method","title":"IntervalType.GetHashCode() Method","text":"<p>Creates the hash code for this interval type, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_6","title":"Returns","text":"<p>System.Int32 A hash code for this interval type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypehour-method","title":"IntervalType.Hour() Method","text":"<p>Creates an interval type with a duration of 1 hour.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Hour();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_7","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypemillisecond-method","title":"IntervalType.Millisecond() Method","text":"<p>Creates an interval type with a duration of 1 millisecond .</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Millisecond();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_8","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeminute-method","title":"IntervalType.Minute() Method","text":"<p>Creates an interval type with a duration of 1 minute.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Minute();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_9","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypemonth-method","title":"IntervalType.Month() Method","text":"<p>Creates an interval type with a duration of 1 Month.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Month();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_10","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeparsestring-iformatprovider-method","title":"IntervalType.Parse(string, IFormatProvider) Method","text":"<p>Parses the given string s into an instance of type IntervalType.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Parse(string s, System.IFormatProvider? provider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_4","title":"Parameters","text":"<p><code>s</code> System.String</p> <p>The string to parse.</p> <p></p> <p><code>provider</code> System.IFormatProvider</p> <p>This parameter is currently ignored and has no effect.</p> <p>Implements Parse(string, IFormatProvider)</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_11","title":"Returns","text":"<p>IntervalType The parsed IntervalType</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#remarks_2","title":"Remarks","text":"<p>Will throw an exception if the string does not consist of either an integer in the acceptable range or an existing interval type's name.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypequarter-method","title":"IntervalType.Quarter() Method","text":"<p>Creates an interval type with a duration of 1 Quarter.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Quarter();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_12","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypesecond-method","title":"IntervalType.Second() Method","text":"<p>Creates an interval type with a duration of 1 second .</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Second();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_13","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypetostring-method","title":"IntervalType.ToString() Method","text":"<p>Display the name and numeric value of the IntervalType as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_14","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypetrycreatebyte-method","title":"IntervalType.TryCreate(byte) Method","text":"<p>Attempts to create an interval type from the id of a known interval type.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType&gt; TryCreate(byte value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_5","title":"Parameters","text":"<p><code>value</code> System.Byte</p> <p>The id of the known interval type</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_15","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IntervalType&gt; A Result&lt;TValue&gt; that contains either the IntervalType if successful or an error describing why creation failed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#remarks_3","title":"Remarks","text":"<p>Supported values are - 10 (Milliseconds) - 1 (Seconds) - 2 (Minutes) - 3 (Hours) - 4 (Days) - 5 (Weeks) - 6 (Months) - 7 (Quarters) - 8 (Years)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypetrycreatestring-method","title":"IntervalType.TryCreate(string) Method","text":"<p>Attempts to an interval type from the name of a known interval type.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalType&gt; TryCreate(string name);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_6","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the known interval type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_16","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IntervalType&gt; A Result&lt;TValue&gt; that contains either the IntervalType if successful or an error describing why creation failed.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#remarks_4","title":"Remarks","text":"<p>Supported values are - MS (Milliseconds) - S (Seconds) - N (Minutes) - H (Hours) - D (Days) - W (Weeks) - M (Months) - Q (Quarters) - Y (Years)</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypetryparsestring-iformatprovider-intervaltype-method","title":"IntervalType.TryParse(string, IFormatProvider, IntervalType) Method","text":"<p>Attempts to parse the given string into an instance of IntervalType.</p> C#<pre><code>public static bool TryParse(string? s, System.IFormatProvider? provider, out HAKOM.TSM.Net.Api.Time.Intervals.IntervalType result);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_7","title":"Parameters","text":"<p><code>s</code> System.String</p> <p>The string to parse.</p> <p></p> <p><code>provider</code> System.IFormatProvider</p> <p>This parameter is currently ignored and has no effect.</p> <p></p> <p><code>result</code> IntervalType</p> <p>The parsed interval type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_17","title":"Returns","text":"<p>System.Boolean true if successful, false otherwise</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeweek-method","title":"IntervalType.Week() Method","text":"<p>Creates an interval type with a duration of 1 Week.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Week();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_18","title":"Returns","text":"<p>IntervalType A new IntervalType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeyear-method","title":"IntervalType.Year() Method","text":"<p>Creates an interval type with a duration of 1 Year.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Intervals.IntervalType Year();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_19","title":"Returns","text":"<p>IntervalType A new IntervalType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeoperator-intervaltype-intervaltype-operator","title":"IntervalType.operator ==(IntervalType, IntervalType) Operator","text":"<p>Compares the value of two interval types using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType left, HAKOM.TSM.Net.Api.Time.Intervals.IntervalType right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_8","title":"Parameters","text":"<p><code>left</code> IntervalType</p> <p>The IntervalType on the left of the '==' operator.</p> <p></p> <p><code>right</code> IntervalType</p> <p>The IntervalType on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_20","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval types are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#intervaltypeoperator-intervaltype-intervaltype-operator_1","title":"IntervalType.operator !=(IntervalType, IntervalType) Operator","text":"<p>Compares the value of two interval types using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType left, HAKOM.TSM.Net.Api.Time.Intervals.IntervalType right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#parameters_9","title":"Parameters","text":"<p><code>left</code> IntervalType</p> <p>The IntervalType on the left of the '!=' operator.</p> <p></p> <p><code>right</code> IntervalType</p> <p>The IntervalType on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/IntervalType/#returns_21","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the interval types are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/","title":"HAKOM.TSM.Net.Api.Time.Intervals.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/#hakomtsmnetapitimeintervalsexceptions-namespace","title":"HAKOM.TSM.Net.Api.Time.Intervals.Exceptions Namespace","text":"Classes IntervalTransformationMethodNotSupportedException Thrown whenever an IntervalTransformationMethod that is not supported in the given context. IntervalTypeNotSupportedException Thrown whenever an HAKOM.TSM.Net.Time.Intervals.Interval with IntervalType is not supported in the given context. InvalidIntervalMultiplierException Thrown whenever an invalid multiplier is used to create an HAKOM.TSM.Net.Time.Intervals.Interval."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/","title":"IntervalTransformationMethodNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/#intervaltransformationmethodnotsupportedexception-class","title":"IntervalTransformationMethodNotSupportedException Class","text":"<p>Thrown whenever an IntervalTransformationMethod that is not supported in the given context.</p> C#<pre><code>public sealed class IntervalTransformationMethodNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IntervalTransformationMethodNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/#remarks","title":"Remarks","text":"<p>When converting data from one unit to another using an integration conversion step anywhere in the path, the IntervalTransformationMethod must be either Sum or Average.  </p> <p>This exception is identified by error code HK15059.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/#intervaltransformationmethodnotsupportedexceptionequivalenthttpstatuscode-property","title":"IntervalTransformationMethodNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTransformationMethodNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/","title":"IntervalTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/#intervaltypenotsupportedexception-class","title":"IntervalTypeNotSupportedException Class","text":"<p>Thrown whenever an HAKOM.TSM.Net.Time.Intervals.Interval with IntervalType is not supported in the given context.</p> C#<pre><code>public sealed class IntervalTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 IntervalTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>When converting data from one unit to another using an integration conversion anywhere in the path, it must be possible to convert the interval type to milliseconds. (Millisecond, second, minute, hour). See also TryGetMilliseconds(long).  </p> <p>This exception is identified by error code HK15058.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/#intervaltypenotsupportedexceptionequivalenthttpstatuscode-property","title":"IntervalTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/IntervalTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/","title":"InvalidIntervalMultiplierException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/#invalidintervalmultiplierexception-class","title":"InvalidIntervalMultiplierException Class","text":"<p>Thrown whenever an invalid multiplier is used to create an HAKOM.TSM.Net.Time.Intervals.Interval.</p> C#<pre><code>public sealed class InvalidIntervalMultiplierException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidIntervalMultiplierException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/#remarks","title":"Remarks","text":"<p>The multiplier of an IInterval musst be greater than 0.  </p> <p>This exception is identified by error code HK15041.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/#invalidintervalmultiplierexceptionequivalenthttpstatuscode-property","title":"InvalidIntervalMultiplierException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Exceptions/InvalidIntervalMultiplierException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/","title":"HAKOM.TSM.Net.Api.Time.Intervals.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/#hakomtsmnetapitimeintervalsextensions-namespace","title":"HAKOM.TSM.Net.Api.Time.Intervals.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer that relate to describing time intervals between data along a time series."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Intervals.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer that relate to describing time intervals between data along a time series.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#containerextensionsusedefaultintervaltransformationmethodnamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultIntervalTransformationMethodNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual IntervalTransformationMethod values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultIntervalTransformationMethodNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#containerextensionsusedefaultintervaltypenamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultIntervalTypeNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual IntervalType values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultIntervalTypeNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Intervals/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/","title":"HAKOM.TSM.Net.Api.Time.Periods","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/#hakomtsmnetapitimeperiods-namespace","title":"HAKOM.TSM.Net.Api.Time.Periods Namespace","text":"Structs Period A struct used to describe periods of time."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/","title":"Period","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Periods</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#period-struct","title":"Period Struct","text":"<p>A struct used to describe periods of time.</p> C#<pre><code>public readonly struct Period :\nSystem.IComparable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt;\n</code></pre> <p>Implements System.IComparable&lt;Period&gt;, System.IEquatable&lt;Period&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodfrom-property","title":"Period.From Property","text":"<p>Gets the System.DateTimeOffset representing the beginning of the period.</p> C#<pre><code>public System.DateTimeOffset From { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#property-value","title":"Property Value","text":"<p>System.DateTimeOffset</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodto-property","title":"Period.To Property","text":"<p>Gets the System.DateTimeOffset representing the end of the period.</p> C#<pre><code>public System.DateTimeOffset To { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#property-value_1","title":"Property Value","text":"<p>System.DateTimeOffset</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodcomparetoperiod-method","title":"Period.CompareTo(Period) Method","text":"<p>Compares this period to the given other by their duration and, if their duration is the same, by their from parameters.</p> C#<pre><code>public int CompareTo(HAKOM.TSM.Net.Api.Time.Periods.Period other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters","title":"Parameters","text":"<p><code>other</code> Period</p> <p>The other Period used for the comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns","title":"Returns","text":"<p>System.Int32 - A negative System.Int32, if this period is shorter (or starts earlier, if they're equally long) than other - 0, if both have the same duration and start date - a positive System.Int32, if this period is longer (or starts later, if they're equally long) than other</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodcreatedatetimeoffset-datetimeoffset-method","title":"Period.Create(DateTimeOffset, DateTimeOffset) Method","text":"<p>Creates a new instance of Period with the given from and to.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Periods.Period Create(System.DateTimeOffset from, System.DateTimeOffset to);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_1","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the beginning of the new period.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the end of the new period.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_1","title":"Returns","text":"<p>Period A new instance of Period.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#perioddefault-method","title":"Period.Default() Method","text":"<p>Creates a default instance of Period with default values for the from and to parameters. The default instance exists to ensure, that periods not created by the static Create method have a from parameter, which is before their to parameter.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Periods.Period Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_2","title":"Returns","text":"<p>Period The default instance of Period.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodequalsperiod-method","title":"Period.Equals(Period) Method","text":"<p>Compares this period to the given other for equality.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Time.Periods.Period other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_2","title":"Parameters","text":"<p><code>other</code> Period</p> <p>The other Period used for the comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_3","title":"Returns","text":"<p>System.Boolean True, if the periods are equal in duration and start time, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodequalsobject-method","title":"Period.Equals(object) Method","text":"<p>Compares this period to the given obj for equality.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The other System.Object used for the comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_4","title":"Returns","text":"<p>System.Boolean True, if the object is a period with equal duration and start time, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodgethashcode-method","title":"Period.GetHashCode() Method","text":"<p>Creates a hash for this period, using its from and to parameters.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_5","title":"Returns","text":"<p>System.Int32 A hash code for this period.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodtoperioddatetimeoffsetdatetimeoffset-method","title":"Period.ToPeriod((DateTimeOffset,DateTimeOffset)) Method","text":"C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Periods.Period ToPeriod((System.DateTimeOffset,System.DateTimeOffset) range);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_4","title":"Parameters","text":"<p><code>range</code> &lt;System.DateTimeOffset,System.DateTimeOffset&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_6","title":"Returns","text":"<p>Period</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodtostring-method","title":"Period.ToString() Method","text":"<p>Used to get a string representation of the period, using its from and to properties, separated by a comma.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_7","title":"Returns","text":"<p>System.String A System.String representation of the period.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodtrycreatedatetimeoffset-datetimeoffset-method","title":"Period.TryCreate(DateTimeOffset, DateTimeOffset) Method","text":"<p>Attempts to create a new instance of Period with the given from and to.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.Periods.Period&gt; TryCreate(System.DateTimeOffset from, System.DateTimeOffset to);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_5","title":"Parameters","text":"<p><code>from</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the beginning of the new period.</p> <p></p> <p><code>to</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset representing the end of the new period.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_8","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;Period&gt; A Result&lt;TValue&gt; indicating if the period could successfully be created</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator","title":"Period.operator ==(Period, Period) Operator","text":"<p>Compares the given periods using the '==' operator.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_6","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '=='.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '=='.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_9","title":"Returns","text":"<p>System.Boolean True, if the given periods are equal, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator_1","title":"Period.operator &gt;(Period, Period) Operator","text":"<p>Compares the left Period to the right Period by their duration and,  if their duration is the same, by their from parameters using the '&gt;' operator.</p> C#<pre><code>public static bool operator &gt;(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_7","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '&gt;'.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '&gt;'.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_10","title":"Returns","text":"<p>System.Boolean True, if the left Period is longer (or starts later, if they're equally long)             than the right Period, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator_2","title":"Period.operator &gt;=(Period, Period) Operator","text":"<p>Compares the left Period to the right Period by their duration and,  if their duration is the same, by their from parameters using the '&gt;=' operator.</p> C#<pre><code>public static bool operator &gt;=(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_8","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '&gt;='.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '&gt;='.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_11","title":"Returns","text":"<p>System.Boolean True, if the left Period is longer (or starts later, if they're equally long)             than the right Period or both periods are equally long and start at the same time, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodimplicit-operator-perioddatetimeoffsetdatetimeoffset-operator","title":"Period.implicit operator Period((DateTimeOffset,DateTimeOffset)) Operator","text":"C#<pre><code>public static HAKOM.TSM.Net.Api.Time.Periods.Period implicit operator Period((System.DateTimeOffset,System.DateTimeOffset) range);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_9","title":"Parameters","text":"<p><code>range</code> &lt;System.DateTimeOffset,System.DateTimeOffset&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_12","title":"Returns","text":"<p>Period</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator_3","title":"Period.operator !=(Period, Period) Operator","text":"<p>Compares the given periods using the '!=' operator.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_10","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '!='.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '!='.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_13","title":"Returns","text":"<p>System.Boolean True, if the given periods are not equal, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator_4","title":"Period.operator &lt;(Period, Period) Operator","text":"<p>Compares the left Period to the right Period by their duration and,  if their duration is the same, by their from parameters using the '&lt;' operator.</p> C#<pre><code>public static bool operator &lt;(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_11","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '&lt;'.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '&lt;'.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_14","title":"Returns","text":"<p>System.Boolean True, if the left Period is shorter (or starts earlier, if they're equally long)              than the right Period, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#periodoperator-period-period-operator_5","title":"Period.operator &lt;=(Period, Period) Operator","text":"<p>Compares the left Period to the right Period by their duration and,  if their duration is the same, by their from parameters using the '&lt;=' operator.</p> C#<pre><code>public static bool operator &lt;=(HAKOM.TSM.Net.Api.Time.Periods.Period left, HAKOM.TSM.Net.Api.Time.Periods.Period right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#parameters_12","title":"Parameters","text":"<p><code>left</code> Period</p> <p>The Period on the left of the '&lt;='.</p> <p></p> <p><code>right</code> Period</p> <p>The Period on the right of the '&lt;='.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Period/#returns_15","title":"Returns","text":"<p>System.Boolean True, if the left Period is shorter (or starts earlier, if they're equally long)              than the right Period or both periods are equally long and start at the same time, otherwise false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/","title":"HAKOM.TSM.Net.Api.Time.Periods.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/#hakomtsmnetapitimeperiodsexceptions-namespace","title":"HAKOM.TSM.Net.Api.Time.Periods.Exceptions Namespace","text":"Classes FromIsNotBeforeToException Indicates, that an attempt was made to create a Period, where the from date is not before the to date."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/","title":"FromIsNotBeforeToException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Periods.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/#fromisnotbeforetoexception-class","title":"FromIsNotBeforeToException Class","text":"<p>Indicates, that an attempt was made to create a Period, where the from date is not before the to date.</p> C#<pre><code>public sealed class FromIsNotBeforeToException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 FromIsNotBeforeToException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/#remarks","title":"Remarks","text":"<p>The from System.DateTimeOffset of a Period has to be before the to System.DateTimeOffset.  </p> <p>This exception is identified by error code HK15029.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/#fromisnotbeforetoexceptionequivalenthttpstatuscode-property","title":"FromIsNotBeforeToException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Periods/Exceptions/FromIsNotBeforeToException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/","title":"HAKOM.TSM.Net.Api.Time.Serialization","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/#hakomtsmnetapitimeserialization-namespace","title":"HAKOM.TSM.Net.Api.Time.Serialization Namespace","text":"Enums TimeFormat The format to use when serializing times/dates"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/TimeFormat/","title":"TimeFormat","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Serialization</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/TimeFormat/#timeformat-enum","title":"TimeFormat Enum","text":"<p>The format to use when serializing times/dates</p> C#<pre><code>public enum TimeFormat\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/TimeFormat/#fields","title":"Fields","text":"<p><code>HakomSecond</code> 1</p> <p>Serialize as the number of seconds since January 1st 1972, 00:00h CET</p> <p></p> <p><code>Iso8601</code> 0</p> <p>Serialize as ISO-8601 string</p> <p></p> <p><code>UnixMillisecond</code> 3</p> <p>Serialize as the number of milliseconds since January 1st 1970, 00:00h UTC</p> <p></p> <p><code>UnixSecond</code> 2</p> <p>Serialize as the number of seconds since January 1st 1970, 00:00h UTC</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/","title":"HAKOM.TSM.Net.Api.Time.Serialization.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/#hakomtsmnetapitimeserializationexceptions-namespace","title":"HAKOM.TSM.Net.Api.Time.Serialization.Exceptions Namespace","text":"Classes TimeFormatNotSupportedException Thrown whenever an time format is used that is not supported and therefore can not be used."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/","title":"TimeFormatNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.Serialization.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/#timeformatnotsupportedexception-class","title":"TimeFormatNotSupportedException Class","text":"<p>Thrown whenever an time format is used that is not supported and therefore can not be used.</p> C#<pre><code>public sealed class TimeFormatNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeFormatNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/#remarks","title":"Remarks","text":"<p>When deserializing into a System.DateTime or System.DateTimeOffset the System.String  needs to be in a valid format.  </p> <p>This exception is identified by error code HK15067.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/#timeformatnotsupportedexceptionequivalenthttpstatuscode-property","title":"TimeFormatNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/Serialization/Exceptions/TimeFormatNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/","title":"HAKOM.TSM.Net.Api.Time.TimeBases","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/#hakomtsmnetapitimetimebases-namespace","title":"HAKOM.TSM.Net.Api.Time.TimeBases Namespace","text":"Structs TimeBase The time base used to convert the time when persisting data."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/","title":"TimeBase","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeBases</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebase-struct","title":"TimeBase Struct","text":"<p>The time base used to convert the time when persisting data.</p> C#<pre><code>public readonly struct TimeBase :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase, int&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase&gt;\n</code></pre> <p>Implements System.IEquatable&lt;TimeBase&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;TimeBase,System.Int32&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;TimeBase&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasevalue-property","title":"TimeBase.Value Property","text":"<p>The value of the time base</p> C#<pre><code>public int Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#property-value","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasecreateint-method","title":"TimeBase.Create(int) Method","text":"<p>Creates a time base with a custom value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase Create(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters","title":"Parameters","text":"<p><code>value</code> System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns","title":"Returns","text":"<p>TimeBase A new TimeBase instance.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasedefault-method","title":"TimeBase.Default() Method","text":"<p>Creates a default time base. The default instance is Hakom second.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_1","title":"Returns","text":"<p>TimeBase A new instance of TimeBase with the default value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseequalstimebase-method","title":"TimeBase.Equals(TimeBase) Method","text":"<p>Compares the value of this time base to another time base returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters_1","title":"Parameters","text":"<p><code>other</code> TimeBase</p> <p>The TimeBase used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_2","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the time bases are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseequalsobject-method","title":"TimeBase.Equals(object) Method","text":"<p>Compares the value of this time base to another time base returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters_2","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The TimeBase used for comparison.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_3","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the time bases are equal (true) or not equal(false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasegethashcode-method","title":"TimeBase.GetHashCode() Method","text":"<p>Creates the hash code for this time base, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_4","title":"Returns","text":"<p>System.Int32 A hash code for this time base.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasehakomsecond-method","title":"TimeBase.HakomSecond() Method","text":"<p>Creates a time base similar to unix seconds but with a different timezone (UTC+1) and starting point. (0 = 01.01.1972 00:00:00 UTC+1)</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase HakomSecond();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_5","title":"Returns","text":"<p>TimeBase A new TimeBase instance with value 0.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasetostring-method","title":"TimeBase.ToString() Method","text":"<p>Display the name and numeric value of the TimeBase as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_6","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebasetrycreateint-method","title":"TimeBase.TryCreate(int) Method","text":"<p>Attempts to create a time base based on the given value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase&gt; TryCreate(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters_3","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The value to create the time base from</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_7","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;TimeBase&gt; A Result&lt;TValue&gt; representing either success or failure of creating a time base with the given value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseunixmillisecond-method","title":"TimeBase.UnixMillisecond() Method","text":"<p>Creates a time base for unix milliseconds. The time is persisted in unix milliseconds (0 = 01.01.1970 00:00:00,000 UTC+0)</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase UnixMillisecond();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_8","title":"Returns","text":"<p>TimeBase A new TimeBase instance with value 2.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseunixsecond-method","title":"TimeBase.UnixSecond() Method","text":"<p>Creates a time base for unix seconds. The time is persisted in unix seconds (0 = 01.01.1970 00:00:00 UTC+0)</p> C#<pre><code>public static HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase UnixSecond();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_9","title":"Returns","text":"<p>TimeBase A new TimeBase instance with value 1.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseoperator-timebase-timebase-operator","title":"TimeBase.operator ==(TimeBase, TimeBase) Operator","text":"<p>Compares the value of two time bases using the operator '=='.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase left, HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters_4","title":"Parameters","text":"<p><code>left</code> TimeBase</p> <p>The TimeBase on the left of the '==' operator.</p> <p></p> <p><code>right</code> TimeBase</p> <p>The TimeBase on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_10","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the time bases are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#timebaseoperator-timebase-timebase-operator_1","title":"TimeBase.operator !=(TimeBase, TimeBase) Operator","text":"<p>Compares the value of two time bases using the operator '!='.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase left, HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#parameters_5","title":"Parameters","text":"<p><code>left</code> TimeBase</p> <p>The TimeBase on the left of the '!=' operator.</p> <p></p> <p><code>right</code> TimeBase</p> <p>The TimeBase on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/TimeBase/#returns_11","title":"Returns","text":"<p>System.Boolean A System.Boolean indicating if the values of the time bases are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/","title":"HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/#hakomtsmnetapitimetimebasesexceptions-namespace","title":"HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions Namespace","text":"Classes UnknownTimeBaseException This exception should be thrown when an undefined time base would be created."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/","title":"UnknownTimeBaseException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/#unknowntimebaseexception-class","title":"UnknownTimeBaseException Class","text":"<p>This exception should be thrown when an undefined time base would be created.</p> C#<pre><code>public sealed class UnknownTimeBaseException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnknownTimeBaseException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/#remarks","title":"Remarks","text":"<p>Creating a TimeBase with an unknown identifier throws this exception. Known default identifiers are:  0 = HakomSecond  1 = UnixSecond * 2 = UnixMillisecond  </p> <p>This exception is identified by error code HK15002.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/#unknowntimebaseexceptionequivalenthttpstatuscode-property","title":"UnknownTimeBaseException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Exceptions/UnknownTimeBaseException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/","title":"HAKOM.TSM.Net.Api.Time.TimeBases.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/#hakomtsmnetapitimetimebasesextensions-namespace","title":"HAKOM.TSM.Net.Api.Time.TimeBases.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer that relate to how time is stored in a repository."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeBases.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer that relate to how time is stored in a repository.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/#containerextensionsusedefaulttimebasenamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeBaseNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual TimeBase values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeBaseNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeBases/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/","title":"HAKOM.TSM.Net.Api.Time.TimeZones","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/#hakomtsmnetapitimetimezones-namespace","title":"HAKOM.TSM.Net.Api.Time.TimeZones Namespace","text":"Interfaces ICustomTimeZoneDefinition An interface which can be used to create custom time zone definitions. ITimeZone Represents a time zone ITimeZoneFactory Used to create time zones."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/","title":"ICustomTimeZoneDefinition","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeZones</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#icustomtimezonedefinition-interface","title":"ICustomTimeZoneDefinition Interface","text":"<p>An interface which can be used to create custom time zone definitions.</p> C#<pre><code>public interface ICustomTimeZoneDefinition\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#icustomtimezonedefinitionname-property","title":"ICustomTimeZoneDefinition.Name Property","text":"<p>Gets the name of the time zone definition.</p> C#<pre><code>string Name { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#property-value","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#icustomtimezonedefinitioncreateinstancestring-itimezonefactory-method","title":"ICustomTimeZoneDefinition.CreateInstance(string, ITimeZoneFactory) Method","text":"<p>Creates an instance of ICustomTimeZoneDefinition with the given id.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone CreateInstance(string id, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory timeZoneFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#parameters","title":"Parameters","text":"<p><code>id</code> System.String</p> <p>The System.String id representing the time zone definition.</p> <p></p> <p><code>timeZoneFactory</code> ITimeZoneFactory</p> <p>used to look up base time zones.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#returns","title":"Returns","text":"<p>ITimeZone A new ICustomTimeZoneDefinition.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#icustomtimezonedefinitionimplementsidstring-method","title":"ICustomTimeZoneDefinition.ImplementsId(string) Method","text":"<p>true if id is supported.</p> C#<pre><code>bool ImplementsId(string id);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#parameters_1","title":"Parameters","text":"<p><code>id</code> System.String</p> <p>the id of the timeZone</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ICustomTimeZoneDefinition/#returns_1","title":"Returns","text":"<p>System.Boolean true if the CreateInstance(string, ITimeZoneFactory) method supports the given id</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/","title":"ITimeZone","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeZones</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#itimezone-interface","title":"ITimeZone Interface","text":"<p>Represents a time zone</p> C#<pre><code>public interface ITimeZone :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone&gt;\n</code></pre> <p>Implements System.IEquatable&lt;ITimeZone&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#itimezonetimezoneinfo-property","title":"ITimeZone.TimeZoneInfo Property","text":"<p>The info of the time zone</p> C#<pre><code>System.TimeZoneInfo TimeZoneInfo { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#property-value","title":"Property Value","text":"<p>System.TimeZoneInfo</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#itimezonetrygetnextdaylightsavingtransitionfordatetimedatetimeoffset-nullabledatetimeoffset-method","title":"ITimeZone.TryGetNextDaylightSavingTransitionForDateTime(DateTimeOffset, Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Tries to get the next daylight saving time transition date after the given dateTimeOffset. It is possible, that the time zone used to have a daylight saving time and not anymore. In such cases, or when DST is not supported, this method will return false. Otherwise the output parameter transitionDateTimeOffset will be set to the next transition date and the method will return true.</p> C#<pre><code>bool TryGetNextDaylightSavingTransitionForDateTime(System.DateTimeOffset dateTimeOffset, out System.Nullable&lt;System.DateTimeOffset&gt; transitionDateTimeOffset);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#parameters","title":"Parameters","text":"<p><code>dateTimeOffset</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset used to calculate the next transition date.</p> <p></p> <p><code>transitionDateTimeOffset</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The next transition date.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#returns","title":"Returns","text":"<p>System.Boolean True, if the next date was found, otherwise false.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#itimezonetrygetpreviousdaylightsavingtransitionfordatetimedatetimeoffset-nullabledatetimeoffset-method","title":"ITimeZone.TryGetPreviousDaylightSavingTransitionForDateTime(DateTimeOffset, Nullable&lt;DateTimeOffset&gt;) Method","text":"<p>Tries to get the previous daylight saving time transition date before the given dateTimeOffset. It is possible, that the time zone used to have a daylight saving time and not anymore. In such cases, or when DST is not supported, this method will return false. Otherwise the output parameter transitionDateTimeOffset will be set to the previous transition date and the method will return true.</p> C#<pre><code>bool TryGetPreviousDaylightSavingTransitionForDateTime(System.DateTimeOffset dateTimeOffset, out System.Nullable&lt;System.DateTimeOffset&gt; transitionDateTimeOffset);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#parameters_1","title":"Parameters","text":"<p><code>dateTimeOffset</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset used to calculate the previous transition date.</p> <p></p> <p><code>transitionDateTimeOffset</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The previous transition date.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZone/#returns_1","title":"Returns","text":"<p>System.Boolean True, if the previous date was found, otherwise false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/","title":"ITimeZoneFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Time.TimeZones</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#itimezonefactory-interface","title":"ITimeZoneFactory Interface","text":"<p>Used to create time zones.</p> C#<pre><code>public interface ITimeZoneFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#itimezonefactorycreatefromidstring-method","title":"ITimeZoneFactory.CreateFromId(string) Method","text":"<p>Creates a time zone based on a given id. The ID can be specified in the following formats:  - Custom timezone ID  - IANA ID  - Window ID  </p> <p>Please note that the IANA and Windows timezones contain adjustment rules.  On non NT platforms like Linux, BSD and Mac Os, the Windows ID will map to an  equivalent IANA timezone, according to TimeZoneConverter.  </p> <p>IANA ID: <p><code> Text Only<pre><code>var ianaTimeZone = timeZoneFactory.CreateFromId(\"Europe/Vienna\");\n</code></pre> <p></p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone CreateFromId(string id);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#parameters","title":"Parameters","text":"<p><code>id</code> System.String</p> <p>The IANA ID, Windows ID or UTC + offset of the time zone.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#returns","title":"Returns","text":"<p>ITimeZone A new instance of ITimeZone.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#itimezonefactorycreatelocal-method","title":"ITimeZoneFactory.CreateLocal() Method","text":"<p>Creates a time zone based on the time zone of the computer/server where the application runs.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone CreateLocal();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#returns_1","title":"Returns","text":"<p>ITimeZone A new instance of ITimeZone.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#itimezonefactorytrycreatefromidstring-itimezone-method","title":"ITimeZoneFactory.TryCreateFromId(string, ITimeZone) Method","text":"<p>A non throwing variant of: CreateFromId(string).</p> C#<pre><code>bool TryCreateFromId(string id, out HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#parameters_1","title":"Parameters","text":"<p><code>id</code> System.String</p> <p>The id to use</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>If successful, contains the time zone.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Time/TimeZones/ITimeZoneFactory/#returns_2","title":"Returns","text":"<p>System.Boolean True if successful</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/","title":"HAKOM.TSM.Net.Api.TimeSeries","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/#hakomtsmnetapitimeseries-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries Namespace","text":"Structs FunctionType The FunctionType of a time series. Interfaces IAssignableToTimeSeries Objects implementing this interface can be assigned to ITimeSeries. ITimeSeries The time series object. ITimeSeriesDefaults Unspecified properties for time series objects ITimeSeriesFactory For creating time series and associated data ITimeSeriesValidator Validates the correctness of the settings of ITimeSeries objects."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/","title":"FunctionType","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontype-struct","title":"FunctionType Struct","text":"<p>The FunctionType of a time series.</p> C#<pre><code>public readonly struct FunctionType :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType, int&gt;,\nHAKOM.TSM.Net.Api.IEnumeration&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt;\n</code></pre> <p>Implements System.IEquatable&lt;FunctionType&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;FunctionType,System.Int32&gt;, HAKOM.TSM.Net.Api.IEnumeration&lt;FunctionType&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#remarks","title":"Remarks","text":"<p>This defines the validity period of data points along a time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypevalue-property","title":"FunctionType.Value Property","text":"<p>The value of the function type.</p> C#<pre><code>public int Value { get; set; }\n</code></pre> <p>Implements Value</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#property-value","title":"Property Value","text":"<p>System.Int32</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypecreateint-method","title":"FunctionType.Create(int) Method","text":"<p>Creates a new FunctionType by a number value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.TimeSeries.FunctionType Create(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The integer value of the type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns","title":"Returns","text":"<p>FunctionType A new FunctionType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypecreatestring-method","title":"FunctionType.Create(string) Method","text":"<p>Creates a new FunctionType by a string value.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.TimeSeries.FunctionType Create(string value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_1","title":"Parameters","text":"<p><code>value</code> System.String</p> <p>The string value of the type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_1","title":"Returns","text":"<p>FunctionType A new FunctionType.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypedefault-method","title":"FunctionType.Default() Method","text":"<p>Creates a instance of FunctionType with the default value. The default type is 'StepRight'.</p> C#<pre><code>public static HAKOM.TSM.Net.Api.TimeSeries.FunctionType Default();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_2","title":"Returns","text":"<p>FunctionType A new FunctionType with the default value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypeequalsfunctiontype-method","title":"FunctionType.Equals(FunctionType) Method","text":"<p>Compares one Value with another returning a boolean.</p> C#<pre><code>public bool Equals(HAKOM.TSM.Net.Api.TimeSeries.FunctionType other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_2","title":"Parameters","text":"<p><code>other</code> FunctionType</p> <p>The FunctionType, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_3","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the  FunctionType are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypeequalsobject-method","title":"FunctionType.Equals(object) Method","text":"<p>Compares one Value with another returning a boolean.</p> C#<pre><code>public override bool Equals(object? obj);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_3","title":"Parameters","text":"<p><code>obj</code> System.Object</p> <p>The FunctionType, which is used for comparison</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_4","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the  FunctionType are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypegethashcode-method","title":"FunctionType.GetHashCode() Method","text":"<p>Creates the hash code for this  FunctionType, using its value.</p> C#<pre><code>public override int GetHashCode();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_5","title":"Returns","text":"<p>System.Int32 A hash code for this function type.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypestepleft-method","title":"FunctionType.StepLeft() Method","text":"<p>Creates a new FunctionType of type 'StepLeft'. Step-Left stands for a piecewise-constant function, where the value of a data point applies to the interval ending at the data point's time. Example: Energy values (watt hour).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.TimeSeries.FunctionType StepLeft();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_6","title":"Returns","text":"<p>FunctionType A new FunctionType of type 'StepLeft'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypestepright-method","title":"FunctionType.StepRight() Method","text":"<p>Creates a new FunctionType of type 'StepRight'. Step-Right stands for a piecewise-constant function, where the value of a data point applies to the interval beginning at the data point's time. Example: Power values (watts).</p> C#<pre><code>public static HAKOM.TSM.Net.Api.TimeSeries.FunctionType StepRight();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_7","title":"Returns","text":"<p>FunctionType A new FunctionType of type 'StepRight'.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypetostring-method","title":"FunctionType.ToString() Method","text":"<p>Display the name and numeric value of the FunctionType as formated string.</p> C#<pre><code>public override string ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_8","title":"Returns","text":"<p>System.String The name and numeric value in the following format Name (Value).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypetrycreateint-method","title":"FunctionType.TryCreate(int) Method","text":"<p>Creates a new FunctionType by a number value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; TryCreate(int value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_4","title":"Parameters","text":"<p><code>value</code> System.Int32</p> <p>The integer value of the type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_9","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;FunctionType&gt; A new Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypetrycreatestring-method","title":"FunctionType.TryCreate(string) Method","text":"<p>Creates a new FunctionType by a string value.</p> C#<pre><code>public static HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; TryCreate(string value);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_5","title":"Parameters","text":"<p><code>value</code> System.String</p> <p>The string value of the type.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_10","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;FunctionType&gt; A new Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#operators","title":"Operators","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypeoperator-functiontype-functiontype-operator","title":"FunctionType.operator ==(FunctionType, FunctionType) Operator","text":"<p>Compares one Value with another using the '==' operator.</p> C#<pre><code>public static bool operator ==(HAKOM.TSM.Net.Api.TimeSeries.FunctionType left, HAKOM.TSM.Net.Api.TimeSeries.FunctionType right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_6","title":"Parameters","text":"<p><code>left</code> FunctionType</p> <p>The FunctionType on the left of the '==' operator.</p> <p></p> <p><code>right</code> FunctionType</p> <p>The FunctionType on the right of the '==' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_11","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the types are equal (true) or not equal (false).</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#functiontypeoperator-functiontype-functiontype-operator_1","title":"FunctionType.operator !=(FunctionType, FunctionType) Operator","text":"<p>Compares one Value with another using the '!=' operator.</p> C#<pre><code>public static bool operator !=(HAKOM.TSM.Net.Api.TimeSeries.FunctionType left, HAKOM.TSM.Net.Api.TimeSeries.FunctionType right);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#parameters_7","title":"Parameters","text":"<p><code>left</code> FunctionType</p> <p>The FunctionType on the left of the '!=' operator.</p> <p></p> <p><code>right</code> FunctionType</p> <p>The FunctionType on the right of the '!=' operator.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/FunctionType/#returns_12","title":"Returns","text":"<p>System.Boolean A boolean indicating if the values of the types are not equal (true) or equal (false).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/IAssignableToTimeSeries/","title":"IAssignableToTimeSeries","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/IAssignableToTimeSeries/#iassignabletotimeseries-interface","title":"IAssignableToTimeSeries Interface","text":"<p>Objects implementing this interface can be assigned to ITimeSeries.</p> C#<pre><code>public interface IAssignableToTimeSeries\n</code></pre> <p>Derived \u21b3 IAttribute \u21b3 ITimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/","title":"ITimeSeries","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseries-interface","title":"ITimeSeries Interface","text":"<p>The time series object.</p> C#<pre><code>public interface ITimeSeries :\nHAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries\n</code></pre> <p>Implements IAssignableToTimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriescompressionmode-property","title":"ITimeSeries.CompressionMode Property","text":"<p>Gets the CompressionMode.</p> C#<pre><code>HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode CompressionMode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value","title":"Property Value","text":"<p>CompressionMode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriescompressionmultiplier-property","title":"ITimeSeries.CompressionMultiplier Property","text":"<p>Gets the compression multiplier of the time series.</p> C#<pre><code>System.Nullable&lt;int&gt; CompressionMultiplier { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;System.Int32&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriescyclic-property","title":"ITimeSeries.Cyclic Property","text":"<p>Gets a System.Boolean indicating whether the values along the time axis are cyclic or not.</p> C#<pre><code>bool Cyclic { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_2","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesdescription-property","title":"ITimeSeries.Description Property","text":"<p>Gets or sets the free-text description for additional info.</p> C#<pre><code>string? Description { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_3","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesformula-property","title":"ITimeSeries.Formula Property","text":"<p>Gets the IFormula of the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula? Formula { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_4","title":"Property Value","text":"<p>IFormula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesfunction-property","title":"ITimeSeries.Function Property","text":"<p>Gets the FunctionType specifying how values are applied along the time axis.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.FunctionType Function { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_5","title":"Property Value","text":"<p>FunctionType</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesinterval-property","title":"ITimeSeries.Interval Property","text":"<p>Gets the IInterval of the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval Interval { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_6","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesintervaltransformationmethod-property","title":"ITimeSeries.IntervalTransformationMethod Property","text":"<p>Gets or sets the IntervalTransformationMethod type of the time series.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; IntervalTransformationMethod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_7","title":"Property Value","text":"<p>System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesname-property","title":"ITimeSeries.Name Property","text":"<p>Gets or sets the name of the time series.</p> C#<pre><code>string Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_8","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriespreserveauditlog-property","title":"ITimeSeries.PreserveAuditLog Property","text":"<p>Gets a System.Boolean value indicating whether changes made to the time series and its data should be recorded for auditing purposes.</p> C#<pre><code>bool PreserveAuditLog { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_9","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriespreserveduplicatedvalues-property","title":"ITimeSeries.PreserveDuplicatedValues Property","text":"<p>Gets or sets a System.Boolean indicating whether the duplicate data values should be reduced to one value, or whether they should continue to be stored in duplicate.</p> C#<pre><code>bool PreserveDuplicatedValues { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_10","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriespreservehistoricdata-property","title":"ITimeSeries.PreserveHistoricData Property","text":"<p>Gets a System.Boolean indicating whether or not historic data is preserved.</p> C#<pre><code>bool PreserveHistoricData { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_11","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesquotation-property","title":"ITimeSeries.Quotation Property","text":"<p>Gets a System.Boolean indicating whether the time series allows quotations (An additional dimension to historization).</p> C#<pre><code>bool Quotation { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_12","title":"Property Value","text":"<p>System.Boolean</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesquotationdefaultbehavior-property","title":"ITimeSeries.QuotationDefaultBehavior Property","text":"<p>Gets or sets the default QuotationBehavior.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; QuotationDefaultBehavior { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_13","title":"Property Value","text":"<p>System.Nullable&lt;QuotationBehavior&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesstartoftime-property","title":"ITimeSeries.StartOfTime Property","text":"<p>Gets or sets the start time of the time series data mesh.</p> C#<pre><code>System.Nullable&lt;System.DateTimeOffset&gt; StartOfTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_14","title":"Property Value","text":"<p>System.Nullable&lt;System.DateTimeOffset&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriestimezone-property","title":"ITimeSeries.TimeZone Property","text":"<p>Gets the ITimeZone of the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_15","title":"Property Value","text":"<p>ITimeZone</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesunit-property","title":"ITimeSeries.Unit Property","text":"<p>Gets the IUnitReference of the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#property-value_16","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesgetcompressionmultiplierordefault-method","title":"ITimeSeries.GetCompressionMultiplierOrDefault() Method","text":"<p>Gets the compression mode of the time series.</p> C#<pre><code>int GetCompressionMultiplierOrDefault();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#returns","title":"Returns","text":"<p>System.Int32 Integer representing the compression mode of the time series.            If it is null the default compression multiplier for the interval of the time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesgetstartoftimeordefault-method","title":"ITimeSeries.GetStartOfTimeOrDefault() Method","text":"<p>Gets the StartOfTime or its default.  The default is 01.01.1970 00:00:00 in the TimeZone of the time series.</p> C#<pre><code>System.DateTimeOffset GetStartOfTimeOrDefault();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#returns_1","title":"Returns","text":"<p>System.DateTimeOffset System.DateTimeOffset representing the start of time of the time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#itimeseriesgettimezoneordefault-method","title":"ITimeSeries.GetTimeZoneOrDefault() Method","text":"<p>Gets the TimeZone or if null the configured default.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone GetTimeZoneOrDefault();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeries/#returns_2","title":"Returns","text":"<p>ITimeZone ITimeZone of the time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/","title":"ITimeSeriesDefaults","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#itimeseriesdefaults-interface","title":"ITimeSeriesDefaults Interface","text":"<p>Unspecified properties for time series objects</p> C#<pre><code>public interface ITimeSeriesDefaults\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#itimeseriesdefaultsstartoftime-property","title":"ITimeSeriesDefaults.StartOfTime Property","text":"<p>The default starting time for the time series objects. It is provided in the same time zone as TimeZone.</p> C#<pre><code>System.DateTime StartOfTime { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#property-value","title":"Property Value","text":"<p>System.DateTime</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#itimeseriesdefaultstimezone-property","title":"ITimeSeriesDefaults.TimeZone Property","text":"<p>The default ITimeZone for the time series objects.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone TimeZone { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesDefaults/#property-value_1","title":"Property Value","text":"<p>ITimeZone</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/","title":"ITimeSeriesFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#itimeseriesfactory-interface","title":"ITimeSeriesFactory Interface","text":"<p>For creating time series and associated data</p> C#<pre><code>public interface ITimeSeriesFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#itimeseriesfactorydefaults-property","title":"ITimeSeriesFactory.Defaults Property","text":"<p>Gets default values for some properties of the time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults Defaults { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#property-value","title":"Property Value","text":"<p>ITimeSeriesDefaults</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#itimeseriesfactorycreatestring-iinterval-bool-functiontype-iunitreference-string-iformula-itimezone-nullableintervaltransformationmethod-nullabledatetimeoffset-bool-bool-bool-bool-nullablequotationbehavior-compressionmode-nullableint-bool-method","title":"ITimeSeriesFactory.Create(string, IInterval, bool, FunctionType, IUnitReference, string, IFormula, ITimeZone, Nullable&lt;IntervalTransformationMethod&gt;, Nullable&lt;DateTimeOffset&gt;, bool, bool, bool, bool, Nullable&lt;QuotationBehavior&gt;, CompressionMode, Nullable&lt;int&gt;, bool) Method","text":"<p>Creates a new time series.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries Create(string name, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, string? description=null, HAKOM.TSM.Net.Api.Formulas.IFormula? formula=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime=null, bool preserveDuplicatedValues=false, bool preserveHistoricData=false, bool preserveAuditLog=false, bool quotation=false, System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; quotationDefaultBehavior=null, HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode=default(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode), System.Nullable&lt;int&gt; compressionMultiplier=null, bool validate=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the time series</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval of the time series.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>A System.Boolean indicating whether the values along the time axis are cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference of the time series.</p> <p></p> <p><code>description</code> System.String</p> <p>The description of the time series</p> <p></p> <p><code>formula</code> IFormula</p> <p>The IFormula attached to the time series.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The System.TimeZone of the time series.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod of the time series.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The start time of the time series data mesh.</p> <p></p> <p><code>preserveDuplicatedValues</code> System.Boolean</p> <p>A System.Boolean indicating if duplicate value types should be preserved.</p> <p></p> <p><code>preserveHistoricData</code> System.Boolean</p> <p>A System.Boolean indicating if historic data for this time series should be preserved.</p> <p></p> <p><code>preserveAuditLog</code> System.Boolean</p> <p>A System.Boolean value indicating whether changes made to the time series and its data should be recorded for auditing purposes.</p> <p></p> <p><code>quotation</code> System.Boolean</p> <p>A System.Boolean indicating if the time series should allow quotation.</p> <p></p> <p><code>quotationDefaultBehavior</code> System.Nullable&lt;QuotationBehavior&gt;</p> <p>The QuotationBehavior.</p> <p></p> <p><code>compressionMode</code> CompressionMode</p> <p>The CompressionMode.</p> <p></p> <p><code>compressionMultiplier</code> System.Nullable&lt;System.Int32&gt;</p> <p>An System.Int32representing compression multiplier of the time series.</p> <p></p> <p><code>validate</code> System.Boolean</p> <p>A System.Boolean indicating whether the time series should be validated. There should be no reason to set this to false unless one deliberately attempts to create a corrupt time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#returns","title":"Returns","text":"<p>ITimeSeries A new ITimeSeries object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#itimeseriesfactorytrycreatestring-iinterval-bool-functiontype-iunitreference-string-iformula-itimezone-nullableintervaltransformationmethod-nullabledatetimeoffset-bool-bool-bool-bool-nullablequotationbehavior-compressionmode-nullableint-bool-method","title":"ITimeSeriesFactory.TryCreate(string, IInterval, bool, FunctionType, IUnitReference, string, IFormula, ITimeZone, Nullable&lt;IntervalTransformationMethod&gt;, Nullable&lt;DateTimeOffset&gt;, bool, bool, bool, bool, Nullable&lt;QuotationBehavior&gt;, CompressionMode, Nullable&lt;int&gt;, bool) Method","text":"<p>Creates a new time series.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt; TryCreate(string name, HAKOM.TSM.Net.Api.Time.Intervals.IInterval interval, bool cyclic, HAKOM.TSM.Net.Api.TimeSeries.FunctionType function, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, string? description=null, HAKOM.TSM.Net.Api.Formulas.IFormula? formula=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime=null, bool preserveDuplicatedValues=false, bool preserveHistoricData=false, bool preserveAuditLog=false, bool quotation=false, System.Nullable&lt;HAKOM.TSM.Net.Api.Quotations.QuotationBehavior&gt; quotationDefaultBehavior=null, HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode compressionMode=default(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode), System.Nullable&lt;int&gt; compressionMultiplier=null, bool validate=true);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#parameters_1","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The name of the time series</p> <p></p> <p><code>interval</code> IInterval</p> <p>The IInterval of the time series.</p> <p></p> <p><code>cyclic</code> System.Boolean</p> <p>A System.Boolean indicating whether the values along the time axis are cyclic or not.</p> <p></p> <p><code>function</code> FunctionType</p> <p>The FunctionType.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>The IUnitReference of the time series.</p> <p></p> <p><code>description</code> System.String</p> <p>The description of the time series</p> <p></p> <p><code>formula</code> IFormula</p> <p>The IFormula attached to the time series.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>The System.TimeZone of the time series.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>The IntervalTransformationMethod of the time series.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>The start time of the time series data mesh.</p> <p></p> <p><code>preserveDuplicatedValues</code> System.Boolean</p> <p>A System.Boolean indicating if duplicate value types should be preserved.</p> <p></p> <p><code>preserveHistoricData</code> System.Boolean</p> <p>A System.Boolean indicating if historic data for this time series should be preserved.</p> <p></p> <p><code>preserveAuditLog</code> System.Boolean</p> <p>A System.Boolean value indicating whether changes made to the time series and its data should be recorded for auditing purposes.</p> <p></p> <p><code>quotation</code> System.Boolean</p> <p>A System.Boolean indicating if the time series should allow quotation.</p> <p></p> <p><code>quotationDefaultBehavior</code> System.Nullable&lt;QuotationBehavior&gt;</p> <p>The QuotationBehavior.</p> <p></p> <p><code>compressionMode</code> CompressionMode</p> <p>The CompressionMode.</p> <p></p> <p><code>compressionMultiplier</code> System.Nullable&lt;System.Int32&gt;</p> <p>An System.Int32representing compression multiplier of the time series.</p> <p></p> <p><code>validate</code> System.Boolean</p> <p>A System.Boolean indicating whether the time series should be validated. There should be no reason to set this to false unless one deliberately attempts to create a corrupt time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeries&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeries.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/","title":"ITimeSeriesValidator","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#itimeseriesvalidator-interface","title":"ITimeSeriesValidator Interface","text":"<p>Validates the correctness of the settings of ITimeSeries objects.</p> C#<pre><code>public interface ITimeSeriesValidator\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#itimeseriesvalidatortryvalidateitimeseries-method","title":"ITimeSeriesValidator.TryValidate(ITimeSeries) Method","text":"<p>Tries to validate the given timeSeries.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;bool&gt; TryValidate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#parameters","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be validated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Boolean&gt; A Result containing either a boolean, if successful, or exceptions, if not.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#itimeseriesvalidatorvalidateitimeseries-method","title":"ITimeSeriesValidator.Validate(ITimeSeries) Method","text":"<p>Tries to validate the given timeSeries and returns an exception if this fails.</p> C#<pre><code>bool Validate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#parameters_1","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be validated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/ITimeSeriesValidator/#returns_1","title":"Returns","text":"<p>System.Boolean True if the validation was successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/","title":"HAKOM.TSM.Net.Api.TimeSeries.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/#hakomtsmnetapitimeseriesexceptions-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Exceptions Namespace","text":"Classes CouldNotParseDateTimeException Indicates that the provided date time string could not be parsed."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/CouldNotParseDateTimeException/","title":"CouldNotParseDateTimeException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/CouldNotParseDateTimeException/#couldnotparsedatetimeexception-class","title":"CouldNotParseDateTimeException Class","text":"<p>Indicates that the provided date time string could not be parsed.</p> C#<pre><code>public sealed class CouldNotParseDateTimeException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotParseDateTimeException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/CouldNotParseDateTimeException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/CouldNotParseDateTimeException/#couldnotparsedatetimeexceptionequivalenthttpstatuscode-property","title":"CouldNotParseDateTimeException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Exceptions/CouldNotParseDateTimeException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/","title":"HAKOM.TSM.Net.Api.TimeSeries.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/#hakomtsmnetapitimeseriesextensions-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer that are related to managing time series and their properties. ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer that are related to managing time series and their properties.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#containerextensionsusedefaultfunctiontypenamesthis-icontainer-method","title":"ContainerExtensions.UseDefaultFunctionTypeNames(this IContainer) Method","text":"<p>Registers an implementation of IEnumerationPropertyProvider&lt;TStruct&gt; that provides string representations for individual FunctionType values.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultFunctionTypeNames(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register the names with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining additional registration calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#containerextensionsusedefaulttimeseriesassignmentfactoriesthis-icontainer-method","title":"ContainerExtensions.UseDefaultTimeSeriesAssignmentFactories(this IContainer) Method","text":"<p>Registers factories for instantiating types related to the assignment of additional data to individual time series (i.e. IAttributes or other time series to be used to convert data between specific units).</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseDefaultTimeSeriesAssignmentFactories(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the factories with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The IContainer itself.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstime_series_resource_type-field","title":"ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of timeseries resources.</p> C#<pre><code>public const string TIME_SERIES_RESOURCE_TYPE = TimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.TimeSeriesResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new timeseries IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeSeriesResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new timeseries IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.TimeSeriesResource(this IResourceFactory, string) Method","text":"<p>Creates a new timeseries IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#parameters_2","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#returns_2","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimeseriesresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeSeriesResource(this IResourceFactory) Method","text":"<p>Creates a new timeseries IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeSeriesResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#parameters_3","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Extensions/ResourceFactoryExtensions/#returns_3","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIME_SERIES_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/#hakomtsmnetapitimeseriespersistence-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence Namespace","text":"Interfaces ITimeSeriesAttributeSearchParameters Defines parameters for searching time series by attributes. ITimeSeriesAttributeSearchParametersFactory Used to create ITimeSeriesAttributeSearchParameters objects. ITimeSeriesSearchParameters Parameters for searching time series. ITimeSeriesSearchParametersFactory Factory for creating parameters for the time series search. ITimeSeriesStore TimeSeriesStore to load, save, delete and find time series. Should only be instantiated by an ITimeSeriesStoreFactory. ITimeSeriesStore&lt;TIdentifier&gt; Defines a store used for permanently storing ITimeSeries that can by uniquely identified by a value of type TIdentifier. ITimeSeriesStoreFactory A factory used to create instances of ITimeSeriesStore. ITimeSeriesValidator&lt;TStorageProvider&gt; Validates the correctness of the settings of ITimeSeries objects for the storage provider."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/","title":"ITimeSeriesAttributeSearchParameters","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#itimeseriesattributesearchparameters-interface","title":"ITimeSeriesAttributeSearchParameters Interface","text":"<p>Defines parameters for searching time series by attributes.</p> C#<pre><code>public interface ITimeSeriesAttributeSearchParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#itimeseriesattributesearchparametersattributename-property","title":"ITimeSeriesAttributeSearchParameters.AttributeName Property","text":"<p>Filter for ITimeSeries by the Name of an assigned IAttribute. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string AttributeName { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#property-value","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#itimeseriesattributesearchparametersattributevalue-property","title":"ITimeSeriesAttributeSearchParameters.AttributeValue Property","text":"<p>Filter for ITimeSeries by the value of an assigned IAttribute. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? AttributeValue { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParameters/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/","title":"ITimeSeriesAttributeSearchParametersFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/#itimeseriesattributesearchparametersfactory-interface","title":"ITimeSeriesAttributeSearchParametersFactory Interface","text":"<p>Used to create ITimeSeriesAttributeSearchParameters objects.</p> C#<pre><code>public interface ITimeSeriesAttributeSearchParametersFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/#itimeseriesattributesearchparametersfactorycreatestring-string-method","title":"ITimeSeriesAttributeSearchParametersFactory.Create(string, string) Method","text":"<p>Used to create ITimeSeriesAttributeSearchParameters objects with the given attributeName and attributeValue.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters Create(string attributeName, string? attributeValue=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/#parameters","title":"Parameters","text":"<p><code>attributeName</code> System.String</p> <p>The name of the new ITimeSeriesAttributeSearchParameters object.</p> <p></p> <p><code>attributeValue</code> System.String</p> <p>The value of the new ITimeSeriesAttributeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesAttributeSearchParametersFactory/#returns","title":"Returns","text":"<p>ITimeSeriesAttributeSearchParameters A new ITimeSeriesAttributeSearchParameters object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/","title":"ITimeSeriesSearchParameters","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparameters-interface","title":"ITimeSeriesSearchParameters Interface","text":"<p>Parameters for searching time series.</p> C#<pre><code>public interface ITimeSeriesSearchParameters\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersattributesearchparameters-property","title":"ITimeSeriesSearchParameters.AttributeSearchParameters Property","text":"<p>Filter for time series by assigned IAttribute.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters&gt; AttributeSearchParameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;ITimeSeriesAttributeSearchParameters&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparameterscyclic-property","title":"ITimeSeriesSearchParameters.Cyclic Property","text":"<p>Filter for time series by it beeing 'cyclic' or not.</p> C#<pre><code>System.Nullable&lt;bool&gt; Cyclic { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_1","title":"Property Value","text":"<p>System.Nullable&lt;System.Boolean&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersdescription-property","title":"ITimeSeriesSearchParameters.Description Property","text":"<p>Filter for time series by the content of their Description.  Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? Description { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_2","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersformula-property","title":"ITimeSeriesSearchParameters.Formula Property","text":"<p>Filter for time series by their IFormula.</p> C#<pre><code>HAKOM.TSM.Net.Api.Formulas.IFormula? Formula { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_3","title":"Property Value","text":"<p>IFormula</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersfunction-property","title":"ITimeSeriesSearchParameters.Function Property","text":"<p>Filter for time series by their FunctionType.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; Function { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_4","title":"Property Value","text":"<p>System.Nullable&lt;FunctionType&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersinterval-property","title":"ITimeSeriesSearchParameters.Interval Property","text":"<p>Filter for time series by their IInterval.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval? Interval { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_5","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersintervaltransformationmethod-property","title":"ITimeSeriesSearchParameters.IntervalTransformationMethod Property","text":"<p>Filter for time series by their IntervalTransformationMethod.</p> C#<pre><code>System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; IntervalTransformationMethod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_6","title":"Property Value","text":"<p>System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersname-property","title":"ITimeSeriesSearchParameters.Name Property","text":"<p>Filter for time series by their Name. Wildcard characters may be used. Possible wildcards are: - '*' = substitutes 0 or more of any characters - '?' = substitutes 1 character The wildcards can be escaped with a backslash '\\'.</p> C#<pre><code>string? Name { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_7","title":"Property Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersstartoftime-property","title":"ITimeSeriesSearchParameters.StartOfTime Property","text":"<p>Filter for time series by their StartOfTime.</p> C#<pre><code>System.Nullable&lt;System.DateTimeOffset&gt; StartOfTime { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_8","title":"Property Value","text":"<p>System.Nullable&lt;System.DateTimeOffset&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparameterstimezone-property","title":"ITimeSeriesSearchParameters.TimeZone Property","text":"<p>Filter for time series by their ITimeZone.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? TimeZone { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_9","title":"Property Value","text":"<p>ITimeZone</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#itimeseriessearchparametersunit-property","title":"ITimeSeriesSearchParameters.Unit Property","text":"<p>Filter for time series by their IUnitReference.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? Unit { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParameters/#property-value_10","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/","title":"ITimeSeriesSearchParametersFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#itimeseriessearchparametersfactory-interface","title":"ITimeSeriesSearchParametersFactory Interface","text":"<p>Factory for creating parameters for the time series search.</p> C#<pre><code>public interface ITimeSeriesSearchParametersFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#itimeseriessearchparametersfactoryattributesearchparameters-property","title":"ITimeSeriesSearchParametersFactory.AttributeSearchParameters Property","text":"<p>A factory for creating ITimeSeriesAttributeSearchParameters.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParametersFactory AttributeSearchParameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#property-value","title":"Property Value","text":"<p>ITimeSeriesAttributeSearchParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#itimeseriessearchparametersfactorycreatestring-string-iinterval-nullablebool-nullablefunctiontype-iunitreference-nullableintervaltransformationmethod-iformula-itimezone-nullabledatetimeoffset-ienumerableitimeseriesattributesearchparameters-method","title":"ITimeSeriesSearchParametersFactory.Create(string, string, IInterval, Nullable&lt;bool&gt;, Nullable&lt;FunctionType&gt;, IUnitReference, Nullable&lt;IntervalTransformationMethod&gt;, IFormula, ITimeZone, Nullable&lt;DateTimeOffset&gt;, IEnumerable&lt;ITimeSeriesAttributeSearchParameters&gt;) Method","text":"<p>Creates a ITimeSeriesSearchParameters object for the time series search.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters Create(string? name=null, string? description=null, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? interval=null, System.Nullable&lt;bool&gt; cyclic=null, System.Nullable&lt;HAKOM.TSM.Net.Api.TimeSeries.FunctionType&gt; function=null, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? unit=null, System.Nullable&lt;HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod&gt; intervalTransformationMethod=null, HAKOM.TSM.Net.Api.Formulas.IFormula? formula=null, HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone? timeZone=null, System.Nullable&lt;System.DateTimeOffset&gt; startOfTime=null, System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters&gt;? attributeSearchParameters=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#parameters","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>Filter for time series by their Name. Wildcard characters may be used.</p> <p></p> <p><code>description</code> System.String</p> <p>Filter for time series by their Description. Wildcard characters may be used.</p> <p></p> <p><code>interval</code> IInterval</p> <p>Filter for time series by their IInterval.</p> <p></p> <p><code>cyclic</code> System.Nullable&lt;System.Boolean&gt;</p> <p>Filter for time series by it being 'cyclic' or not.</p> <p></p> <p><code>function</code> System.Nullable&lt;FunctionType&gt;</p> <p>Filter for time series by their FunctionType.</p> <p></p> <p><code>unit</code> IUnitReference</p> <p>Filter for time series by their IUnitReference.</p> <p></p> <p><code>intervalTransformationMethod</code> System.Nullable&lt;IntervalTransformationMethod&gt;</p> <p>Filter for time series by their IntervalTransformationMethod.</p> <p></p> <p><code>formula</code> IFormula</p> <p>Filter for time series by their IFormula.</p> <p></p> <p><code>timeZone</code> ITimeZone</p> <p>Filter for time series by their ITimeZone.</p> <p></p> <p><code>startOfTime</code> System.Nullable&lt;System.DateTimeOffset&gt;</p> <p>Filter for time series by their StartOfTime.</p> <p></p> <p><code>attributeSearchParameters</code> System.Collections.Generic.IEnumerable&lt;ITimeSeriesAttributeSearchParameters&gt;</p> <p>Filter for time series by their ITimeSeriesAttributeSearchParameters.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesSearchParametersFactory/#returns","title":"Returns","text":"<p>ITimeSeriesSearchParameters</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/","title":"ITimeSeriesStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstore-interface","title":"ITimeSeriesStore Interface","text":"<p>TimeSeriesStore to load, save, delete and find time series. Should only be instantiated by an ITimeSeriesStoreFactory.</p> C#<pre><code>public interface ITimeSeriesStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 ITimeSeriesStore&lt;TIdentifier&gt; \u21b3 ISqlTimeSeriesStore</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresearchparameters-property","title":"ITimeSeriesStore.SearchParameters Property","text":"<p>Gets the ITimeSeriesSearchParametersFactory associated with this store.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParametersFactory SearchParameters { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#property-value","title":"Property Value","text":"<p>ITimeSeriesSearchParametersFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks","title":"Remarks","text":"<p>This should be used in order to create search parameters for use with the Find/TryFind methods.  </p> Finding Time Series with Search Parameters<pre><code>var tsm = ITsm.Create();  \nvar repository = await tsm.Repositories.Load(\"My repository\");  \nvar timeSeriesStore = await repository.GetTimeSeriesStore();  \nvar results = timeSeriesStore.Find(  \n    timeSeriesStore.SearchParameters.Create(  \n        name: \"*\",  \n        description: \"time series number ?\"  \n    )  \n);  \nawait foreach (ITimeSeriesReference result in results) {  \n    ITimeSeries timeSeries = await result.Resolve();  \n    Console.WriteLine(timeSeries.Name);  \n}  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreconfigureistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeSeriesStore.Configure(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Configures the time series store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstorecountcancellationtoken-method","title":"ITimeSeriesStore.Count(CancellationToken) Method","text":"<p>Counts the amount of time series objects in the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;long&gt; Count(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;System.Int64&gt; A System.Threading.Tasks.Task containing the amount as a System.Int64.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoredeleteitimeseriesreference-bool-cancellationtoken-method","title":"ITimeSeriesStore.Delete(ITimeSeriesReference, bool, CancellationToken) Method","text":"<p>Deletes a given timeSeriesReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeries object representing the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the timeseries.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoredeletestring-bool-cancellationtoken-method","title":"ITimeSeriesStore.Delete(string, bool, CancellationToken) Method","text":"<p>Deletes a time series from the repository based on the given name.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string name, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_3","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the time series.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoredeleteassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.DeleteAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Deletes an assignment from the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task DeleteAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_4","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to delete.</p> <p></p> <p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to delete the assignable reference from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoredeleteassignmenttassigneditimeseriesassignmentreferencetassigned-cancellationtoken-method","title":"ITimeSeriesStore.DeleteAssignment&lt;TAssigned&gt;(ITimeSeriesAssignmentReference&lt;TAssigned&gt;, CancellationToken) Method","text":"<p>Deletes a given ITimeSeriesAssignmentReference&lt;TAssigned&gt;.</p> C#<pre><code>System.Threading.Tasks.Task DeleteAssignment&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt; timeSeriesAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_1","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_5","title":"Parameters","text":"<p><code>timeSeriesAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;</p> <p>The reference of the time series assignment (ITimeSeriesAssignmentReference&lt;TAssigned&gt;) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoredeleteassignmentstassigneditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.DeleteAssignments&lt;TAssigned&gt;(ITimeSeriesReference, CancellationToken) Method","text":"<p>Deletes all assignments of type TAssigned from the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task DeleteAssignments&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_2","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_6","title":"Parameters","text":"<p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference object representing the time series to delete the assignable references from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstorefinditimeseriessearchparameters-rangeitimeseries-ienumerableorderitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.Find(ITimeSeriesSearchParameters, Range&lt;ITimeSeries&gt;, IEnumerable&lt;Order&lt;ITimeSeries&gt;&gt;, CancellationToken) Method","text":"<p>Finds time series as ITimeSeriesReference based on the given parameters, sorts them based on the given orderings and returns only a specified range from the results for pagination.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters? parameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_7","title":"Parameters","text":"<p><code>parameters</code> ITimeSeriesSearchParameters</p> <p>The ITimeSeriesSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;ITimeSeries&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;ITimeSeries&gt;&gt;</p> <p>A list of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_7","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;ITimeSeriesReference&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing the found time series as ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_1","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstorefindassignmentstassigneditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.FindAssignments&lt;TAssigned&gt;(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll all assignments from the given ITimeSeriesReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; FindAssignments&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_3","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_8","title":"Parameters","text":"<p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to find the assignable references from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_8","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of ITimeSeriesAssignmentReference&lt;TAssigned&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloaditimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Load(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_9","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The reference of the time series (ITimeSeriesReference) which will be reloaded.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the ITimeSeriesReference object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloaditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.Load(ITimeSeriesReference, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_10","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The reference of the time series (ITimeSeriesReference) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the ITimeSeriesReference object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloadstring-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Load(string, DateTimeOffset, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(string name, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_11","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the time series.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the ITimeSeriesReference object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloadstring-cancellationtoken-method","title":"ITimeSeriesStore.Load(string, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_12","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the time series.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the ITimeSeriesReference object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloadassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.LoadAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Loads a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; LoadAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_4","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_13","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to load.</p> <p></p> <p><code>to</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to load the assignable reference from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_13","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; A System.Threading.Tasks.Task containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoreloadassignmenttassigneditimeseriesassignmentreferencetassigned-cancellationtoken-method","title":"ITimeSeriesStore.LoadAssignment&lt;TAssigned&gt;(ITimeSeriesAssignmentReference&lt;TAssigned&gt;, CancellationToken) Method","text":"<p>Loads a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; LoadAssignment&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt; timeSeriesAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_5","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_14","title":"Parameters","text":"<p><code>timeSeriesAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;</p> <p>The reference of the time series assignment (ITimeSeriesAssignmentReference&lt;TAssigned&gt;) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_14","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; A System.Threading.Tasks.Task containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save a new time series with information about where its data is stored and further includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_15","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_15","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseries-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeries, IStorageInformation, CancellationToken) Method","text":"<p>Saves a new time series with information about where its data is stored.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_16","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_16","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeries, DateTimeOffset, CancellationToken) Method","text":"<p>Saves a new time series including information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_17","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_17","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; An System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeries, CancellationToken) Method","text":"<p>Saves a new time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_18","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_18","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseriesreference-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeriesReference, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Saves a new time series based on a reference.  Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_19","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_19","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseriesreference-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeriesReference, IStorageInformation, CancellationToken) Method","text":"<p>Saves a new time series based on a reference. Further takes information about where its data is stored. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_20","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_20","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Saves a new time series based on a reference.  Further takes information about where its data is stored and further includes information about the exact point in time, at which the time series was in the given state. It includes information about the exact point in time, at which the time series was in the given state. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_21","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_21","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveitimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.Save(ITimeSeriesReference, CancellationToken) Method","text":"<p>Saves a new time series based on a reference.  May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_22","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_22","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.SaveAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Saves an assignment onto the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; SaveAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_6","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_23","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to store.</p> <p></p> <p><code>to</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to store the assignable reference on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_23","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; A System.Threading.Tasks.Task containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Saves or updates the given time series. Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_24","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_24","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseries-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeries, IStorageInformation, CancellationToken) Method","text":"<p>Saves or updates the given time series. Further takes information about where its data is stored and further includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_25","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_25","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeries, DateTimeOffset, CancellationToken) Method","text":"<p>Saves or updates the given time series. Includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_26","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_26","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeries, CancellationToken) Method","text":"<p>Saves or updates the given time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_27","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_27","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseriesreference-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeriesReference, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Saves or updates the given time series based on a reference.  Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_28","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_28","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseriesreference-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeriesReference, IStorageInformation, CancellationToken) Method","text":"<p>Saves or updates the given time series based on a reference. Further takes information about where its data is stored. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_29","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_29","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Saves or updates the given time series based on a reference.  It includes information about the exact point in time, at which the time series was in the given state. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_30","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_30","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoresaveorupdateitimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.SaveOrUpdate(ITimeSeriesReference, CancellationToken) Method","text":"<p>Saves or updates the given time series based on a reference. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_31","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_31","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A System.Threading.Tasks.Task containing the saved ITimeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrycountcancellationtoken-method","title":"ITimeSeriesStore.TryCount(CancellationToken) Method","text":"<p>Tries to count the amount of time series objects in the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;long&gt;&gt; TryCount(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_32","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_32","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Int64&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the amount as a System.Int64.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrydeleteitimeseriesreference-bool-cancellationtoken-method","title":"ITimeSeriesStore.TryDelete(ITimeSeriesReference, bool, CancellationToken) Method","text":"<p>Deletes a given timeSeriesReference from the repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_33","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeries object representing the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the timeseries.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_33","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrydeletestring-bool-cancellationtoken-method","title":"ITimeSeriesStore.TryDelete(string, bool, CancellationToken) Method","text":"<p>Deletes a time series from the repository based on the given name.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(string name, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_34","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The System.String name of the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the timeseries.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_34","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrydeleteassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TryDeleteAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Deletes an assignment from the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDeleteAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_7","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_35","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to delete.</p> <p></p> <p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to delete the assignable reference from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_35","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrydeleteassignmenttassigneditimeseriesassignmentreferencetassigned-cancellationtoken-method","title":"ITimeSeriesStore.TryDeleteAssignment&lt;TAssigned&gt;(ITimeSeriesAssignmentReference&lt;TAssigned&gt;, CancellationToken) Method","text":"<p>Attempts to delete a given ITimeSeriesAssignmentReference&lt;TAssigned&gt;.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDeleteAssignment&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt; timeSeriesAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_8","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_36","title":"Parameters","text":"<p><code>timeSeriesAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;</p> <p>The reference of the time series assignment (ITimeSeriesAssignmentReference&lt;TAssigned&gt;) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_36","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrydeleteassignmentstassigneditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TryDeleteAssignments&lt;TAssigned&gt;(ITimeSeriesReference, CancellationToken) Method","text":"<p>Deletes all assignments of type TAssigned from the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDeleteAssignments&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_9","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_37","title":"Parameters","text":"<p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference object representing the time series to delete the assignable references from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_37","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_6","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryfinditimeseriessearchparameters-rangeitimeseries-ienumerableorderitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.TryFind(ITimeSeriesSearchParameters, Range&lt;ITimeSeries&gt;, IEnumerable&lt;Order&lt;ITimeSeries&gt;&gt;, CancellationToken) Method","text":"<p>Finds time series as ITimeSeriesReference based on the given parameters, sorts them based on the given orderings and returns only a specified range from the results for pagination.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters? parameters=null, HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt; range=default(HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;), System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;&gt;? orderings=null, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_38","title":"Parameters","text":"<p><code>parameters</code> ITimeSeriesSearchParameters</p> <p>The ITimeSeriesSearchParameters by which the search will be filtered.</p> <p></p> <p><code>range</code> HAKOM.Persistence.Core.Net.Api.Paging.Range&lt;ITimeSeries&gt;</p> <p>An optional System.Range by which the results should be limited.</p> <p></p> <p><code>orderings</code> System.Collections.Generic.IEnumerable&lt;HAKOM.Persistence.Core.Net.Api.Ordering.Order&lt;ITimeSeries&gt;&gt;</p> <p>A list of Order&lt;TResult&gt; by which the results will be ordered.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_38","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing a Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_7","title":"Remarks","text":"<p>Removes consecutive duplicate orderings, retaining only the last specified Direction for each.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryfindassignmentstassigneditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TryFindAssignments&lt;TAssigned&gt;(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll all assignments from the given ITimeSeriesReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; TryFindAssignments&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference from, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_10","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_39","title":"Parameters","text":"<p><code>from</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to find the assignable references from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_39","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; of a Result&lt;TValue&gt; of a  ITimeSeriesAssignmentReference&lt;TAssigned&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloaditimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TryLoad(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_40","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The reference of the time series (ITimeSeriesReference) which will be reloaded.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_40","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the ITimeSeriesReference object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_8","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloaditimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TryLoad(ITimeSeriesReference, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_41","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The reference of the time series (ITimeSeriesReference) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_41","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing              the ITimeSeriesReference object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_9","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloadstring-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TryLoad(string, DateTimeOffset, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(string name, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_42","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the time series.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_42","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing              the ITimeSeriesReference object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_10","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloadstring-cancellationtoken-method","title":"ITimeSeriesStore.TryLoad(string, CancellationToken) Method","text":"<p>Loads a single time series as ITimeSeriesReference from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(string name, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_43","title":"Parameters","text":"<p><code>name</code> System.String</p> <p>The unique name of the time series.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_43","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the ITimeSeriesReference object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_11","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloadassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TryLoadAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Attempts to load a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; TryLoadAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_11","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_44","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to load.</p> <p></p> <p><code>to</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to load the assignable reference from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_44","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_12","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretryloadassignmenttassigneditimeseriesassignmentreferencetassigned-cancellationtoken-method","title":"ITimeSeriesStore.TryLoadAssignment&lt;TAssigned&gt;(ITimeSeriesAssignmentReference&lt;TAssigned&gt;, CancellationToken) Method","text":"<p>Attempts to load a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; TryLoadAssignment&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt; timeSeriesAssignmentReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_12","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_45","title":"Parameters","text":"<p><code>timeSeriesAssignmentReference</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;</p> <p>The reference of the time series assignment (ITimeSeriesAssignmentReference&lt;TAssigned&gt;) which will be reloaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_45","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_13","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save a new time series with information about where its data is stored and further includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_46","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_46","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_14","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseries-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeries, IStorageInformation, CancellationToken) Method","text":"<p>Tries to save a new time series with information about where its data is stored.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_47","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>ToDO</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_47","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_15","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeries, DateTimeOffset, CancellationToken) Method","text":"<p>Saves a new time series including information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_48","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_48","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the              saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_16","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeries, CancellationToken) Method","text":"<p>Saves a new time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_49","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_49","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_17","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseriesreference-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeriesReference, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save a new time series based on a reference.  Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_50","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_50","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_18","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseriesreference-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeriesReference, IStorageInformation, CancellationToken) Method","text":"<p>Tries to saves a new time series based on a reference.  Further takes information about where its data is stored. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_51","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_51","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_19","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save a new time series based on a reference.  It includes information about the exact point in time, at which the time series was in the given state. May be used to copy a time series to another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_52","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be retrieved and saved.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_52","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_20","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveitimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TrySave(ITimeSeriesReference, CancellationToken) Method","text":"<p>Tries to saves a new time series based on a reference.  May be used to copy a time series to another repository. The data storage will be the same as the original timeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_53","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeries to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_53","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_21","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveassignmenttassignedireferencetassigned-itimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveAssignment&lt;TAssigned&gt;(IReference&lt;TAssigned&gt;, ITimeSeriesReference, CancellationToken) Method","text":"<p>Saves an assignment onto the given ITimeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; TrySaveAssignment&lt;TAssigned&gt;(HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assigned, HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference to, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#type-parameters_13","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_54","title":"Parameters","text":"<p><code>assigned</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the IAssignableToTimeSeries to store.</p> <p></p> <p><code>to</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference representing the time series to store the assignable reference on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_54","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_22","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save or update the given time series. Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_55","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_55","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_23","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseries-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeries, IStorageInformation, CancellationToken) Method","text":"<p>Saves or updates the given time series. Further takes information about where its data is stored.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_56","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_56","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_24","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeries, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save or update the given time series. Includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_57","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_57","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_25","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseries-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeries, CancellationToken) Method","text":"<p>Saves or updates the given time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_58","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_58","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_26","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseriesreference-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeriesReference, IStorageInformation, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save or update the given time series based on a reference.  Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_59","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_59","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_27","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseriesreference-istorageinformation-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeriesReference, IStorageInformation, CancellationToken) Method","text":"<p>Tries to save or update the given time series based on a reference. Further takes information about where its data is stored. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_60","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_60","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_28","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseriesreference-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeriesReference, DateTimeOffset, CancellationToken) Method","text":"<p>Tries to save or update the given time series based on a reference.  It includes information about the exact point in time, at which the time series was in the given state. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_61","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_61","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_29","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#itimeseriesstoretrysaveorupdateitimeseriesreference-cancellationtoken-method","title":"ITimeSeriesStore.TrySaveOrUpdate(ITimeSeriesReference, CancellationToken) Method","text":"<p>Tries to save or update the given time series based on a reference. May be used to copy or update a time series from another repository.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#parameters_62","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to be saved or updated.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#returns_62","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing             the saved ITimeSeriesReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStore/#remarks_30","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/","title":"ITimeSeriesStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#itimeseriesstorefactory-interface","title":"ITimeSeriesStoreFactory Interface","text":"<p>A factory used to create instances of ITimeSeriesStore.</p> C#<pre><code>public interface ITimeSeriesStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#itimeseriesstorefactorycreateistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeSeriesStoreFactory.Create(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Creates an instance of an ITimeSeriesStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created ITimeSeriesStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#itimeseriesstorefactorytrycreateistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeSeriesStoreFactory.TryCreate(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeSeriesStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeSeriesStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/","title":"ITimeSeriesStore&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifier-interface","title":"ITimeSeriesStore&lt;TIdentifier&gt; Interface","text":"<p>Defines a store used for permanently storing ITimeSeries that can by uniquely identified by a value of type TIdentifier.</p> C#<pre><code>public interface ITimeSeriesStore&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier to be used to retrieve specific ITimeSeries.</p> <p>Derived \u21b3 ISqlTimeSeriesStore</p> <p>Implements ITimeSeriesStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks","title":"Remarks","text":"<p>This interface extends ITimeSeriesStore with methods that allow for the retrieval of individual ITimeSeries by a unique idendifier other than their name. For example, a SQL-database based time series store, may allow for retrieval of time series by their numeric primary key or an automatically assigned System.Guid.  </p> <p>In order to use these methods, match the ITimeSeriesStore against this interface with the expected TIdentifier, then call the respective methods.  </p> <p>Note that different implementations may support different types of identifiers and there is no way of knowing which one is supported by the configured store at compile time.  </p> Loading a time series by integer id<pre><code>int timeSeriesId = 32452;  \n\nITsm tsm = ITsm.Create();  \nvar repository = await tsm.Repositories.GetAll(\"TestRepository\");  \nvar timeSeriesStore = await repository.GetTimeSeriesStore();  \nif (timeSeriesStore is ITimeSeriesStore&lt;int&gt; integerTimeSeriesStore) {  \n   var timeSeries = await integerTimeSeriesStore.GetAll(timeSeriesId);  \n} else {  \n   //make sure to always handle this case too!  \n}  \n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstorereferences-property","title":"ITimeSeriesStore.References Property <p>Used to create references to time series in this store.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory&lt;TIdentifier&gt; References { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#property-value","title":"Property Value","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory&lt;TIdentifier&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifierdeletetidentifier-bool-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.Delete(TIdentifier, bool, CancellationToken) Method <p>Deletes a time series from the repository based on the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task Delete(TIdentifier identifier, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the timeseries.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifierloadtidentifier-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.Load(TIdentifier, DateTimeOffset, CancellationToken) Method <p>Loads a single time series from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(TIdentifier identifier, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>Date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A Task containing the ITimeSeries.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifierloadtidentifier-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.Load(TIdentifier, CancellationToken) Method <p>Loads a single time series from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; Load(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt; A Task containing the ITimeSeries.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifierloadassignmenttassignedtidentifier-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.LoadAssignment&lt;TAssigned&gt;(TIdentifier, CancellationToken) Method <p>Loads a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; LoadAssignment&lt;TAssigned&gt;(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier identifier of the time series assignment.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt; A System.Threading.Tasks.Task containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiersaveorupdatetidentifier-itimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.SaveOrUpdate(TIdentifier, ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method <p>Saves or updates the the time series with the given identifier by the given time series. If no time series with the given identifier was found the time series will be saved or updated based on the time series name. Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the time series to update.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiersaveorupdatetidentifier-itimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.SaveOrUpdate(TIdentifier, ITimeSeries, DateTimeOffset, CancellationToken) Method <p>Saves or updates the the time series with the given identifier by the given time series. If no time series with the given identifier was found the time series will be saved or updated based on the time series name. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt; SaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_5","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the time series to update.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeSeriesReference&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertrydeletetidentifier-bool-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TryDelete(TIdentifier, bool, CancellationToken) Method <p>Tries to delete a time series from the repository based on the given identifier.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(TIdentifier identifier, bool cascade=true, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_6","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series to be deleted.</p> <p></p> <p><code>cascade</code> System.Boolean</p> <p>If set to true (default) it also deletes all data referenced to the timeseries.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertryloadtidentifier-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TryLoad(TIdentifier, DateTimeOffset, CancellationToken) Method <p>Loads a single time series from storage in the state from a specific date and time.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(TIdentifier identifier, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_7","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>Date and time of the state in which the time series is loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the ITimeSeries object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertryloadtidentifier-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TryLoad(TIdentifier, CancellationToken) Method <p>Loads a single time series from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TryLoad(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_8","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier id of the time series.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the read operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the ITimeSeries object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertryloadassignmenttassignedtidentifier-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TryLoadAssignment&lt;TAssigned&gt;(TIdentifier, CancellationToken) Method <p>Attempts to load a single time series assignment as ITimeSeriesAssignmentReference&lt;TAssigned&gt; from storage.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; TryLoadAssignment&lt;TAssigned&gt;(TIdentifier identifier, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#type-parameters_2","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_9","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The TIdentifier identifier of the time series assignment.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; containing the ITimeSeriesAssignmentReference&lt;TAssigned&gt; object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertrysaveorupdatetidentifier-itimeseries-istorageinformation-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TrySaveOrUpdate(TIdentifier, ITimeSeries, IStorageInformation, DateTimeOffset, CancellationToken) Method <p>Tries to saves or update the the time series with the given identifier by the given time series. If no time series with the given identifier was found the time series will be saved or updated based on the time series name. Further takes information about where its data is stored. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_10","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the time series to update.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation the data will be saved on.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_5","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#itimeseriesstoretidentifiertrysaveorupdatetidentifier-itimeseries-datetimeoffset-cancellationtoken-method","title":"ITimeSeriesStore&lt;TIdentifier&gt;.TrySaveOrUpdate(TIdentifier, ITimeSeries, DateTimeOffset, CancellationToken) Method <p>Tries to saves or update the the time series with the given identifier by the given time series. If no time series with the given identifier was found the time series will be saved or updated based on the time series name. It includes information about the exact point in time, at which the time series was in the given state.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;&gt; TrySaveOrUpdate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, System.DateTimeOffset historicDateTime, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#parameters_11","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier of the time series to update.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be saved or updated.</p> <p></p> <p><code>historicDateTime</code> System.DateTimeOffset</p> <p>The System.DateTimeOffset object representing the historic date and time of saving the time series definition.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesStoreOf1/#remarks_6","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/","title":"ITimeSeriesValidator&lt;TStorageProvider&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#itimeseriesvalidatortstorageprovider-interface","title":"ITimeSeriesValidator&lt;TStorageProvider&gt; Interface","text":"<p>Validates the correctness of the settings of ITimeSeries objects for the storage provider.</p> C#<pre><code>public interface ITimeSeriesValidator&lt;TStorageProvider&gt;\n    where TStorageProvider : HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#type-parameters","title":"Type parameters","text":"<p><code>TStorageProvider</code></p> <p>Type of the storage provider.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#itimeseriesvalidatortstorageprovidertryvalidateforstorageitimeseries-method","title":"ITimeSeriesValidator&lt;TStorageProvider&gt;.TryValidateForStorage(ITimeSeries) Method","text":"<p>Tries to validate the given timeSeries and returns one exception or an aggregate exception in the Result if validation failures occur.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;bool&gt; TryValidateForStorage(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#parameters","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be validated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#returns","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Boolean&gt; A Result containing either a boolean, if successful, or exceptions, if not.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#itimeseriesvalidatortstorageprovidervalidateforstorageitimeseries-method","title":"ITimeSeriesValidator&lt;TStorageProvider&gt;.ValidateForStorage(ITimeSeries) Method","text":"<p>Validates the time series and throws one exception or an aggregate exception if multiple validation failures occur.</p> C#<pre><code>bool ValidateForStorage(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#parameters_1","title":"Parameters","text":"<p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries to be validated.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/ITimeSeriesValidatorOf1/#returns_1","title":"Returns","text":"<p>System.Boolean True if the validation was successful.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/#hakomtsmnetapitimeseriespersistenceassignment-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment Namespace","text":"Interfaces ITimeSeriesAssignment&lt;TAssigned&gt; Signifies the association between an assigned entity and the referenced ITimeSeries it is related to. ITimeSeriesAssignmentFactory Used to create ITimeSeriesAssignment&lt;TAssigned&gt; objects."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/","title":"ITimeSeriesAssignmentFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#itimeseriesassignmentfactory-interface","title":"ITimeSeriesAssignmentFactory Interface","text":"<p>Used to create ITimeSeriesAssignment&lt;TAssigned&gt; objects.</p> C#<pre><code>public interface ITimeSeriesAssignmentFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#itimeseriesassignmentfactorycreatetassigneditimeseriesreference-ireferencetassigned-method","title":"ITimeSeriesAssignmentFactory.Create&lt;TAssigned&gt;(ITimeSeriesReference, IReference&lt;TAssigned&gt;) Method","text":"<p>Creates an instance of an ITimeSeriesAssignment&lt;TAssigned&gt;.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt; Create&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assignedReference)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#type-parameters","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference the assignedReference is associated with.</p> <p></p> <p><code>assignedReference</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the assigned object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt; The ITimeSeriesAssignment&lt;TAssigned&gt; which signifies the association of the two references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#itimeseriesassignmentfactorytrycreatetassigneditimeseriesreference-ireferencetassigned-method","title":"ITimeSeriesAssignmentFactory.TryCreate&lt;TAssigned&gt;(ITimeSeriesReference, IReference&lt;TAssigned&gt;) Method","text":"<p>Creates an instance of an ITimeSeriesAssignment&lt;TAssigned&gt;.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt; TryCreate&lt;TAssigned&gt;(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; assignedReference)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#type-parameters_1","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference the assignedReference is associated with.</p> <p></p> <p><code>assignedReference</code> HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p>The IReference&lt;TReferred&gt; of the assigned object.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt; A Result of the created ITimeSeriesAssignment&lt;TAssigned&gt; which signifies the association of the two references.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/","title":"ITimeSeriesAssignment&lt;TAssigned&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#itimeseriesassignmenttassigned-interface","title":"ITimeSeriesAssignment&lt;TAssigned&gt; Interface","text":"<p>Signifies the association between an assigned entity and the referenced ITimeSeries it is related to.</p> C#<pre><code>public interface ITimeSeriesAssignment&lt;TAssigned&gt;\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#type-parameters","title":"Type parameters","text":"<p><code>TAssigned</code></p> <p>The type of the object that is assigned to the time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#itimeseriesassignmentassignedreference-property","title":"ITimeSeriesAssignment.AssignedReference Property <p>Gets the reference to the assigned object.</p> C#<pre><code>HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt; AssignedReference { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#property-value","title":"Property Value","text":"<p>HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TAssigned&gt;</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#itimeseriesassignmenttimeseriesreference-property","title":"ITimeSeriesAssignment.TimeSeriesReference Property <p>Gets the reference to the time series to which TAssigned is assigned to.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference TimeSeriesReference { get; }\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/ITimeSeriesAssignmentOf1/#property-value_1","title":"Property Value","text":"<p>ITimeSeriesReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/#hakomtsmnetapitimeseriespersistenceassignmentreferences-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References Namespace","text":"Interfaces ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; Represents a reference to a ITimeSeriesAssignment&lt;TAssigned&gt;. ITimeSeriesAssignmentReference&lt;TAssigned&gt; Represents a reference to a ITimeSeriesAssignment&lt;TAssigned&gt;. ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt; A factory for creating ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifier-interface","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt; Interface","text":"<p>A factory for creating ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p> C#<pre><code>public interface ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier for the ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifierconfigureitimeseriesstoretidentifier-method","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;.Configure(ITimeSeriesStore&lt;TIdentifier&gt;) Method","text":"<p>Configures the ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt; for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;TIdentifier&gt; timeSeriesStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesStore</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;TIdentifier&gt;</p> <p>The ITimeSeriesStore&lt;TIdentifier&gt; for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifiercreatetassignedtidentifier-itimeseriesassignmenttassigned-method","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;.Create&lt;TAssigned&gt;(TIdentifier, ITimeSeriesAssignment&lt;TAssigned&gt;) Method","text":"<p>Creates a ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; Create&lt;TAssigned&gt;(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt; timeSeriesAssignment)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#type-parameters_1","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p> <p></p> <p><code>timeSeriesAssignment</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;</p> <p>The ITimeSeriesAssignment&lt;TAssigned&gt; associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; The created ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifiercreatetassignedtidentifier-method","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;.Create&lt;TAssigned&gt;(TIdentifier) Method","text":"<p>Creates a ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; Create&lt;TAssigned&gt;(TIdentifier identifier)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#type-parameters_2","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; The created ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifiertrycreatetassignedtidentifier-itimeseriesassignmenttassigned-method","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;.TryCreate&lt;TAssigned&gt;(TIdentifier, ITimeSeriesAssignment&lt;TAssigned&gt;) Method","text":"<p>Tries to create a ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;&gt; TryCreate&lt;TAssigned&gt;(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt; timeSeriesAssignment)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#type-parameters_3","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p> <p></p> <p><code>timeSeriesAssignment</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;</p> <p>The ITimeSeriesAssignment&lt;TAssigned&gt; associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#itimeseriesassignmentreferencefactorytidentifiertrycreatetassignedtidentifier-method","title":"ITimeSeriesAssignmentReferenceFactory&lt;TIdentifier&gt;.TryCreate&lt;TAssigned&gt;(TIdentifier) Method","text":"<p>Tries to create a ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;&gt; TryCreate&lt;TAssigned&gt;(TIdentifier identifier)\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#type-parameters_4","title":"Type parameters","text":"<p><code>TAssigned</code></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceFactoryOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf1/","title":"ITimeSeriesAssignmentReference&lt;TAssigned&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf1/#itimeseriesassignmentreferencetassigned-interface","title":"ITimeSeriesAssignmentReference&lt;TAssigned&gt; Interface","text":"<p>Represents a reference to a ITimeSeriesAssignment&lt;TAssigned&gt;.</p> C#<pre><code>public interface ITimeSeriesAssignmentReference&lt;TAssigned&gt; :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;,\nSystem.IFormattable\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TAssigned</code></p> <p>The type of the object that is assigned to the time series.</p> <p>Derived \u21b3 ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;, IReference, System.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf2/","title":"ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf2/#itimeseriesassignmentreferencetassignedtidentifier-interface","title":"ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; Interface","text":"<p>Represents a reference to a ITimeSeriesAssignment&lt;TAssigned&gt;.</p> C#<pre><code>public interface ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt; :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nHAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;,\nSystem.IFormattable,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned, TIdentifier&gt;&gt;\n    where TAssigned : HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Assignment/References/ITimeSeriesAssignmentReferenceOf2/#type-parameters","title":"Type parameters","text":"<p><code>TAssigned</code></p> <p>The type of the object that is assigned to the time series.</p> <p></p> <p><code>TIdentifier</code></p> <p>The type of the unique identifier used to retrieve the objects data from the store.</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment&lt;TAssigned&gt;&gt;, IReference, HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned&gt;&gt;, System.IFormattable, System.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference&lt;TAssigned,TIdentifier&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/#hakomtsmnetapitimeseriespersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions Namespace","text":"Classes AssignmentAlreadyExistsException Indicates that an attempt was made to assign something like an attribute to a time series even though that specific assignment already exists (i.e. that particular attribute is already assigned to that particular time series). AssignmentNotFoundException Indicates that an attempt was made to interact with an assignment that is not defined in the given store. AssignmentTypeNotSupportedException Indicates that an attempt was made to save, load or delete the assignment of an unsupported type. InvalidStorageInformationRepositoryException Indicates that an attempt was made to save or delete an assignment of a time series to or from a time series with an different repository. InvalidTimeSeriesIdentifierException Indicates that a time series operation was attempted with an invalid time series identifier. TimeSeriesDeletionFailedException Indicates that there was a failed attempt to delete a time series. TimeSeriesIdNotAllowedOnSaveException Indicates that an attempt was made to manually save a time series id. TimeSeriesNameAlreadyExistsException Indicates that an attempt was made to create a new time series with a name, that already exists in the repository. TimeSeriesNotFoundException Thrown when an attempt to access a non-existent time series was made. TimeSeriesValidationException Abstract class for all time series validation exceptions."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/","title":"AssignmentAlreadyExistsException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/#assignmentalreadyexistsexception-class","title":"AssignmentAlreadyExistsException Class","text":"<p>Indicates that an attempt was made to assign something like an attribute to a time series even though that specific assignment already exists (i.e. that particular attribute is already assigned to that particular time series).</p> C#<pre><code>public sealed class AssignmentAlreadyExistsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AssignmentAlreadyExistsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/#remarks","title":"Remarks","text":"<p>This exception is typically raised when trying to assign something like an attribute or another time series to a time series when that assignment already exists.  </p> <p>This exception is identified by error code HK15127.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/#assignmentalreadyexistsexceptionequivalenthttpstatuscode-property","title":"AssignmentAlreadyExistsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentAlreadyExistsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/","title":"AssignmentNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/#assignmentnotfoundexception-class","title":"AssignmentNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with an assignment that is not defined in the given store.</p> C#<pre><code>public sealed class AssignmentNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AssignmentNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/#remarks","title":"Remarks","text":"<p>This exception is typically raised when trying to access an assignment that does not exist in the specified store. Ensure that the correct store is being accessed.  </p> <p>This exception is identified by error code HK15105.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/#assignmentnotfoundexceptionequivalenthttpstatuscode-property","title":"AssignmentNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/","title":"AssignmentTypeNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/#assignmenttypenotsupportedexception-class","title":"AssignmentTypeNotSupportedException Class","text":"<p>Indicates that an attempt was made to save, load or delete the assignment of an unsupported type.</p> C#<pre><code>public sealed class AssignmentTypeNotSupportedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 AssignmentTypeNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/#remarks","title":"Remarks","text":"<p>When saving or deleting assignments in the ITimeSeriesStore only supported assignment types can be saved or deleted. Currently only objects of type ITimeSeries are supported for assignment.  </p> <p>This exception is identified by error code HK15045.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/#assignmenttypenotsupportedexceptionequivalenthttpstatuscode-property","title":"AssignmentTypeNotSupportedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/AssignmentTypeNotSupportedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/","title":"InvalidStorageInformationRepositoryException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/#invalidstorageinformationrepositoryexception-class","title":"InvalidStorageInformationRepositoryException Class","text":"<p>Indicates that an attempt was made to save or delete an assignment of a time series  to or from a time series with an different repository.</p> C#<pre><code>public sealed class InvalidStorageInformationRepositoryException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidStorageInformationRepositoryException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/#remarks","title":"Remarks","text":"<p>When saving or deleting assignments in the ITimeSeriesStore both objects  (the object to be assigned and the time series to which the object is to be assigned) must be in  the same repository.  </p> <p>This exception is identified by error code HK15049.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/#invalidstorageinformationrepositoryexceptionequivalenthttpstatuscode-property","title":"InvalidStorageInformationRepositoryException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidStorageInformationRepositoryException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidTimeSeriesIdentifierException/","title":"InvalidTimeSeriesIdentifierException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidTimeSeriesIdentifierException/#invalidtimeseriesidentifierexception-class","title":"InvalidTimeSeriesIdentifierException Class","text":"<p>Indicates that a time series operation was attempted with an invalid time series identifier.</p> C#<pre><code>public sealed class InvalidTimeSeriesIdentifierException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeSeriesIdentifierException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidTimeSeriesIdentifierException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidTimeSeriesIdentifierException/#invalidtimeseriesidentifierexceptionequivalenthttpstatuscode-property","title":"InvalidTimeSeriesIdentifierException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/InvalidTimeSeriesIdentifierException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/","title":"TimeSeriesDeletionFailedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/#timeseriesdeletionfailedexception-class","title":"TimeSeriesDeletionFailedException Class","text":"<p>Indicates that there was a failed attempt to delete a time series.</p> C#<pre><code>public sealed class TimeSeriesDeletionFailedException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesDeletionFailedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/#remarks","title":"Remarks","text":"<p>The deletion may have failed due to many reasons. The exact reason can be found in the System.Exception.InnerException.  </p> <p>This exception is identified by error code HK15005.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/#timeseriesdeletionfailedexceptionequivalenthttpstatuscode-property","title":"TimeSeriesDeletionFailedException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesDeletionFailedException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/","title":"TimeSeriesIdNotAllowedOnSaveException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/#timeseriesidnotallowedonsaveexception-class","title":"TimeSeriesIdNotAllowedOnSaveException Class","text":"<p>Indicates that an attempt was made to manually save a time series id.</p> C#<pre><code>public sealed class TimeSeriesIdNotAllowedOnSaveException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesIdNotAllowedOnSaveException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/#remarks","title":"Remarks","text":"<p>The IStorageInformation of the time series to be saved already contained an id. The id of a time series cannot be set manually. If an update was intended, use SaveOrUpdate(ITimeSeries, CancellationToken).  </p> <p>This exception is identified by error code HK15014.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/#timeseriesidnotallowedonsaveexceptionequivalenthttpstatuscode-property","title":"TimeSeriesIdNotAllowedOnSaveException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesIdNotAllowedOnSaveException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/","title":"TimeSeriesNameAlreadyExistsException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/#timeseriesnamealreadyexistsexception-class","title":"TimeSeriesNameAlreadyExistsException Class","text":"<p>Indicates that an attempt was made to create a new time series with a name, that already exists in the repository.</p> C#<pre><code>public sealed class TimeSeriesNameAlreadyExistsException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesNameAlreadyExistsException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/#remarks","title":"Remarks","text":"<p>The name of a new time series to be saved must be unique in this repository.  </p> <p>This exception is identified by error code HK15015.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/#timeseriesnamealreadyexistsexceptionequivalenthttpstatuscode-property","title":"TimeSeriesNameAlreadyExistsException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNameAlreadyExistsException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/","title":"TimeSeriesNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/#timeseriesnotfoundexception-class","title":"TimeSeriesNotFoundException Class","text":"<p>Thrown when an attempt to access a non-existent time series was made.</p> C#<pre><code>public sealed class TimeSeriesNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/#remarks","title":"Remarks","text":"<p>Make sure the requested time series exists in the ITimeSeriesStore that you are using to access the time series.  </p> <p>This exception is identified by error code HK15039.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/#timeseriesnotfoundexceptionequivalenthttpstatuscode-property","title":"TimeSeriesNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/","title":"TimeSeriesValidationException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#timeseriesvalidationexception-class","title":"TimeSeriesValidationException Class","text":"<p>Abstract class for all time series validation exceptions.</p> C#<pre><code>public abstract class TimeSeriesValidationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException</p> <p>Derived \u21b3 InvalidTimeSeriesNameException \u21b3 NonCyclicTimeSeriesCompressionNotSupportedException \u21b3 PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException \u21b3 PreservingHistoricDataWithoutAuditLogsNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#timeseriesvalidationexceptionstring-string-constructor","title":"TimeSeriesValidationException(string, string) Constructor","text":"<p>Generates an exception with message indicating which property of the time series failed validation and adds a custom message.</p> C#<pre><code>protected TimeSeriesValidationException(string property, string message);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#parameters","title":"Parameters","text":"<p><code>property</code> System.String</p> <p>System.String name of the time series property which failed validation.</p> <p></p> <p><code>message</code> System.String</p> <p>Exception message explaining in detail why the property failed validation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#timeseriesvalidationexceptionequivalenthttpstatuscode-property","title":"TimeSeriesValidationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/#hakomtsmnetapitimeseriespersistenceexceptionstimeseriesvalidationexceptions-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions Namespace","text":"Classes InvalidTimeSeriesNameException Abstract class for time series validation exceptions stemming from incorrect naming. NonCyclicTimeSeriesCompressionNotSupportedException Indicates that there was an attempt to process or save a time series with cyclic false and any other CompressionMode than \"NoCompression\". PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException Thrown when an attempt was made to persist a ITimeSeries instance, which had a formula and PreserveHistoricData set to true. PreservingHistoricDataWithoutAuditLogsNotPossibleException Indicates that there was an attempt to process or save a time series with historic data where preserving audit logs not enabled."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameException/","title":"InvalidTimeSeriesNameException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameException/#invalidtimeseriesnameexception-class","title":"InvalidTimeSeriesNameException Class","text":"<p>Abstract class for time series validation exceptions stemming from incorrect naming.</p> C#<pre><code>public abstract class InvalidTimeSeriesNameException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 InvalidTimeSeriesNameException</p> <p>Derived \u21b3 TimeSeriesNameIsEmptyException \u21b3 TimeSeriesNameIsPaddedWithWhiteSpaceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/NonCyclicTimeSeriesCompressionNotSupportedException/","title":"NonCyclicTimeSeriesCompressionNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/NonCyclicTimeSeriesCompressionNotSupportedException/#noncyclictimeseriescompressionnotsupportedexception-class","title":"NonCyclicTimeSeriesCompressionNotSupportedException Class","text":"<p>Indicates that there was an attempt to process or save a time series with cyclic false and any other CompressionMode than \"NoCompression\".</p> C#<pre><code>public sealed class NonCyclicTimeSeriesCompressionNotSupportedException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 NonCyclicTimeSeriesCompressionNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/NonCyclicTimeSeriesCompressionNotSupportedException/#remarks","title":"Remarks","text":"<p>When saving a time series with the ITimeSeriesStore or writing data with the ITimeSeriesDataStore the time series with a CompressionMode other than \"NoCompression\" cannot be set to not cyclic.  </p> <p>This exception is identified by error code HK15008.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException/","title":"PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException/#preservehistoricdataonformulatimeseriesnotsupportedexception-class","title":"PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException Class","text":"<p>Thrown when an attempt was made to persist a ITimeSeries instance, which had a formula and PreserveHistoricData set to true.</p> C#<pre><code>public sealed class PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/PreservingHistoricDataWithoutAuditLogsNotPossibleException/","title":"PreservingHistoricDataWithoutAuditLogsNotPossibleException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/PreservingHistoricDataWithoutAuditLogsNotPossibleException/#preservinghistoricdatawithoutauditlogsnotpossibleexception-class","title":"PreservingHistoricDataWithoutAuditLogsNotPossibleException Class","text":"<p>Indicates that there was an attempt to process or save a time series with historic data where preserving audit logs not enabled.</p> C#<pre><code>public sealed class PreservingHistoricDataWithoutAuditLogsNotPossibleException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 PreservingHistoricDataWithoutAuditLogsNotPossibleException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/PreservingHistoricDataWithoutAuditLogsNotPossibleException/#remarks","title":"Remarks","text":"<p>Preserving historic data requires the preservation of the audit logs.  </p> <p>This exception is identified by error code HK15115.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/#hakomtsmnetapitimeseriespersistenceexceptionstimeseriesvalidationexceptionsinvalidtimeseriesnameexceptions-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions Namespace","text":"Classes TimeSeriesNameIsEmptyException Indicates that there was an attempt to process or save a time series whose name is null or an empty string. TimeSeriesNameIsPaddedWithWhiteSpaceException Indicates that there was an attempt to process or save a time series, containing whitespaces at the beginning or end of its name."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsEmptyException/","title":"TimeSeriesNameIsEmptyException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsEmptyException/#timeseriesnameisemptyexception-class","title":"TimeSeriesNameIsEmptyException Class","text":"<p>Indicates that there was an attempt to process or save a time series whose name is null or an empty string.</p> C#<pre><code>public sealed class TimeSeriesNameIsEmptyException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 InvalidTimeSeriesNameException \ud83e\udc52 TimeSeriesNameIsEmptyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsEmptyException/#remarks","title":"Remarks","text":"<p>When saving a time series with the ITimeSeriesStore the name of the time series has to be a not null or empty string.  </p> <p>This exception is identified by error code HK15009.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsPaddedWithWhiteSpaceException/","title":"TimeSeriesNameIsPaddedWithWhiteSpaceException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsPaddedWithWhiteSpaceException/#timeseriesnameispaddedwithwhitespaceexception-class","title":"TimeSeriesNameIsPaddedWithWhiteSpaceException Class","text":"<p>Indicates that there was an attempt to process or save a time series, containing whitespaces at the beginning or end of its name.</p> C#<pre><code>public sealed class TimeSeriesNameIsPaddedWithWhiteSpaceException : HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesValidationException \ud83e\udc52 InvalidTimeSeriesNameException \ud83e\udc52 TimeSeriesNameIsPaddedWithWhiteSpaceException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Exceptions/TimeSeriesValidationExceptions/InvalidTimeSeriesNameExceptions/TimeSeriesNameIsPaddedWithWhiteSpaceException/#remarks","title":"Remarks","text":"<p>When saving a time series with the ITimeSeriesStore the name of the time series may not contain whitespaces at the beginning or end.  </p> <p>This exception is identified by error code HK15010.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.References","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/#hakomtsmnetapitimeseriespersistencereferences-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.References Namespace","text":"Interfaces ITimeSeriesReference Represents a reference to a time series permanently stored in a repository. ITimeSeriesReference&lt;TIdentifier&gt; Represents a reference to a time series permanently stored and uniquely identified by a specific identifier in a repository. ITimeSeriesReferenceFactory&lt;TIdentifier&gt; A factory for creating ITimeSeriesReference&lt;TIdentifier&gt;."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReference/","title":"ITimeSeriesReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReference/#itimeseriesreference-interface","title":"ITimeSeriesReference Interface","text":"<p>Represents a reference to a time series permanently stored in a repository.</p> C#<pre><code>public interface ITimeSeriesReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;,\nSystem.IFormattable\n</code></pre> <p>Derived \u21b3 ITimeSeriesReference&lt;TIdentifier&gt;</p> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;ITimeSeries&gt;, IReference, System.IEquatable&lt;ITimeSeriesReference&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReference/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReference/#itimeseriesreferencedatastorageinformation-property","title":"ITimeSeriesReference.DataStorageInformation Property","text":"<p>Gets information about where the data for the time series is stored (may be in a different repository).</p> C#<pre><code>HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation DataStorageInformation { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReference/#property-value","title":"Property Value","text":"<p>IStorageInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifier-interface","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt; Interface","text":"<p>A factory for creating ITimeSeriesReference&lt;TIdentifier&gt;.</p> C#<pre><code>public interface ITimeSeriesReferenceFactory&lt;TIdentifier&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier for the ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifierconfigureitimeseriesstoretidentifier-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.Configure(ITimeSeriesStore&lt;TIdentifier&gt;) Method","text":"<p>Configures the ITimeSeriesReferenceFactory&lt;TIdentifier&gt; for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;TIdentifier&gt; timeSeriesStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters","title":"Parameters","text":"<p><code>timeSeriesStore</code> HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;TIdentifier&gt;</p> <p>The ITimeSeriesStore&lt;TIdentifier&gt; for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiercreatetidentifier-itimeseries-istorageinformation-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier, ITimeSeries, IStorageInformation) Method","text":"<p>Creates a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; Create(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries associated with the reference.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation associated with the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; The created ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiercreatetidentifier-itimeseries-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier, ITimeSeries) Method","text":"<p>Creates a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; Create(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns_1","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; The created ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiercreatetidentifier-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.Create(TIdentifier) Method","text":"<p>Creates a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; Create(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns_2","title":"Returns","text":"<p>HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt; The created ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiertrycreatetidentifier-itimeseries-istorageinformation-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier, ITimeSeries, IStorageInformation) Method","text":"<p>Tries to create a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation dataStorageInformation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries associated with the reference.</p> <p></p> <p><code>dataStorageInformation</code> IStorageInformation</p> <p>The IStorageInformation associated with the data storage.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiertrycreatetidentifier-itimeseries-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier, ITimeSeries) Method","text":"<p>Tries to create a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries timeSeries);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_5","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p> <p></p> <p><code>timeSeries</code> ITimeSeries</p> <p>The ITimeSeries associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns_4","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#itimeseriesreferencefactorytidentifiertrycreatetidentifier-method","title":"ITimeSeriesReferenceFactory&lt;TIdentifier&gt;.TryCreate(TIdentifier) Method","text":"<p>Tries to create a ITimeSeriesReference&lt;TIdentifier&gt; with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; TryCreate(TIdentifier identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#parameters_6","title":"Parameters","text":"<p><code>identifier</code> TIdentifier</p> <p>The identifier for the  ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#returns_5","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt; A Result&lt;TValue&gt; of the created ITimeSeriesReference&lt;TIdentifier&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceFactoryOf1/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceOf1/","title":"ITimeSeriesReference&lt;TIdentifier&gt;","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceOf1/#itimeseriesreferencetidentifier-interface","title":"ITimeSeriesReference&lt;TIdentifier&gt; Interface","text":"<p>Represents a reference to a time series permanently stored and uniquely identified by a specific identifier in a repository.</p> C#<pre><code>public interface ITimeSeriesReference&lt;TIdentifier&gt; :\nHAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&gt;,\nSystem.IFormattable,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier, HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt;\n    where TIdentifier : System.IEquatable&lt;TIdentifier&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/References/ITimeSeriesReferenceOf1/#type-parameters","title":"Type parameters","text":"<p><code>TIdentifier</code></p> <p>The type of the identifier that can be used to uniquely identify the time series.</p> <p>Implements ITimeSeriesReference, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;ITimeSeries&gt;, IReference, System.IEquatable&lt;ITimeSeriesReference&gt;, System.IFormattable, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;TIdentifier,ITimeSeries&gt;, System.IEquatable&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference&lt;TIdentifier&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Sql/","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Sql","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Sql/#hakomtsmnetapitimeseriespersistencesql-namespace","title":"HAKOM.TSM.Net.Api.TimeSeries.Persistence.Sql Namespace","text":"Interfaces ISqlTimeSeriesStore SqlTimeSeriesStore to load, save, delete and find time series."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Sql/ISqlTimeSeriesStore/","title":"ISqlTimeSeriesStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.TimeSeries.Persistence.Sql</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/TimeSeries/Persistence/Sql/ISqlTimeSeriesStore/#isqltimeseriesstore-interface","title":"ISqlTimeSeriesStore Interface","text":"<p>SqlTimeSeriesStore to load, save, delete and find time series.</p> C#<pre><code>public interface ISqlTimeSeriesStore :\nHAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;int&gt;,\nHAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&lt;System.Int32&gt;, ITimeSeriesStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/","title":"HAKOM.TSM.Net.Api.Units","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/#hakomtsmnetapiunits-namespace","title":"HAKOM.TSM.Net.Api.Units Namespace","text":"Interfaces IConstantUnitConversion A type of unit conversion that provides a constant conversion between units. IConstantUnitConversionFactory A factory for creating constant unit conversions. ITimeDependentUnitConversion Represents conversion time series for time dependent conversion rules between units. ITimeDependentUnitConversionFactory A factory for creating time dependent unit conversions. IUnit The unit of time series data. It is used in conversions and interval transformations. IUnitConversion Represents conversion rules between units. IUnitFactory Used to create an instance of IUnit."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/","title":"IConstantUnitConversion","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#iconstantunitconversion-interface","title":"IConstantUnitConversion Interface","text":"<p>A type of unit conversion that provides a constant conversion between units.</p> C#<pre><code>public interface IConstantUnitConversion :\nHAKOM.TSM.Net.Api.Units.IUnitConversion,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;\n</code></pre> <p>Implements IUnitConversion, System.IEquatable&lt;IUnitConversion&gt;, System.IEquatable&lt;IConstantUnitConversion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#iconstantunitconversionfactor-property","title":"IConstantUnitConversion.Factor Property","text":"<p>Gets or sets the conversion factor.</p> C#<pre><code>decimal Factor { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#property-value","title":"Property Value","text":"<p>System.Decimal</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#iconstantunitconversionintegrationinterval-property","title":"IConstantUnitConversion.IntegrationInterval Property","text":"<p>Gets the IInterval used for the integration.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IInterval? IntegrationInterval { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#property-value_1","title":"Property Value","text":"<p>IInterval</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#iconstantunitconversionoffset-property","title":"IConstantUnitConversion.Offset Property","text":"<p>Gets or sets the conversion offset.</p> C#<pre><code>decimal Offset { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversion/#property-value_2","title":"Property Value","text":"<p>System.Decimal</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/","title":"IConstantUnitConversionFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/#iconstantunitconversionfactory-interface","title":"IConstantUnitConversionFactory Interface","text":"<p>A factory for creating constant unit conversions.</p> C#<pre><code>public interface IConstantUnitConversionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/#iconstantunitconversionfactorycreateiunitreference-iunitreference-decimal-decimal-iinterval-istorageinformation-method","title":"IConstantUnitConversionFactory.Create(IUnitReference, IUnitReference, decimal, decimal, IInterval, IStorageInformation) Method","text":"<p>Creates a new IConstantUnitConversion object.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.IConstantUnitConversion Create(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference unit, HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? conversionUnit=null, decimal factor=1m, decimal offset=0m, HAKOM.TSM.Net.Api.Time.Intervals.IInterval? integrationInterval=null, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation? storage=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/#parameters","title":"Parameters","text":"<p><code>unit</code> IUnitReference</p> <p>The IUnitReference to which the conversion rules will apply.</p> <p></p> <p><code>conversionUnit</code> IUnitReference</p> <p>The IUnitReference to which the conversion can be made.</p> <p></p> <p><code>factor</code> System.Decimal</p> <p>A System.Decimal value used for the conversion.</p> <p></p> <p><code>offset</code> System.Decimal</p> <p>A System.Decimal value used for the conversion.</p> <p></p> <p><code>integrationInterval</code> IInterval</p> <p>The IInterval used for the integration.</p> <p></p> <p><code>storage</code> IStorageInformation</p> <p>The IStorageInformation about how the object is stored in a repository.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IConstantUnitConversionFactory/#returns","title":"Returns","text":"<p>IConstantUnitConversion A new IConstantUnitConversion object with the given values.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/","title":"ITimeDependentUnitConversion","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#itimedependentunitconversion-interface","title":"ITimeDependentUnitConversion Interface","text":"<p>Represents conversion time series for time dependent conversion rules between units.</p> C#<pre><code>public interface ITimeDependentUnitConversion :\nHAKOM.TSM.Net.Api.Units.IUnitConversion,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt;\n</code></pre> <p>Implements IUnitConversion, System.IEquatable&lt;IUnitConversion&gt;, System.IEquatable&lt;ITimeDependentUnitConversion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#itimedependentunitconversionreaddatatvalueitimeseriesdatareadingoptions-cancellationtoken-method","title":"ITimeDependentUnitConversion.ReadData&lt;TValue&gt;(ITimeSeriesDataReadingOptions, CancellationToken) Method","text":"<p>Reads the time series data of the conversion time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; ReadData&lt;TValue&gt;(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions readingOptions, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken))\n    where TValue : System.IComparable&lt;TValue&gt;, System.IEquatable&lt;TValue&gt;;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#type-parameters","title":"Type parameters","text":"<p><code>TValue</code></p> <p>The type of the values of the data points to be read.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#parameters","title":"Parameters","text":"<p><code>readingOptions</code> ITimeSeriesDataReadingOptions</p> <p>ITimeSeriesDataReadingOptions on how the data should be read.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversion/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection&lt;TValue&gt;&gt; A ITimeSeriesDataCollection&lt;TValue&gt; with additional information (unit, etc).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/","title":"ITimeDependentUnitConversionFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#itimedependentunitconversionfactory-interface","title":"ITimeDependentUnitConversionFactory Interface","text":"<p>A factory for creating time dependent unit conversions.</p> C#<pre><code>public interface ITimeDependentUnitConversionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#itimedependentunitconversionfactorycreateitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionFactory.Create(ITimeSeriesReference, CancellationToken) Method","text":"<p>Creates an instance of an ITimeDependentUnitConversion for the specified timeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt; Create(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#parameters","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The time series from which the new ITimeDependentUnitConversion object will be created.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeDependentUnitConversion&gt; A new ITimeDependentUnitConversion object created from the time series or null if the given time series is not a conversion time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#itimedependentunitconversionfactorytrycreateitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionFactory.TryCreate(ITimeSeriesReference, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeDependentUnitConversion for the specified timeSeriesReference.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt;&gt; TryCreate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The time series from which the new ITimeDependentUnitConversion object will be created.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversion&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeDependentUnitConversion  from the time series when it is a conversion time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/ITimeDependentUnitConversionFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/","title":"IUnit","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#iunit-interface","title":"IUnit Interface","text":"<p>The unit of time series data. It is used in conversions and interval transformations.</p> C#<pre><code>public interface IUnit :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.IUnit&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IUnit&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#iunitintervaltransformationmethod-property","title":"IUnit.IntervalTransformationMethod Property","text":"<p>Gets the or sets the IntervalTransformationMethod used for the conversion.</p> C#<pre><code>HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod IntervalTransformationMethod { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#property-value","title":"Property Value","text":"<p>IntervalTransformationMethod</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#iunitsymbol-property","title":"IUnit.Symbol Property","text":"<p>Gets or sets the symbol identifying the unit (kWh, K, etc.).</p> C#<pre><code>string Symbol { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnit/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/","title":"IUnitConversion","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#iunitconversion-interface","title":"IUnitConversion Interface","text":"<p>Represents conversion rules between units.</p> C#<pre><code>public interface IUnitConversion :\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;\n</code></pre> <p>Derived \u21b3 IConstantUnitConversion \u21b3 ITimeDependentUnitConversion</p> <p>Implements System.IEquatable&lt;IUnitConversion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#iunitconversionconversionunit-property","title":"IUnitConversion.ConversionUnit Property","text":"<p>Get or sets an IUnitReference to which the conversion can be made.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference? ConversionUnit { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#property-value","title":"Property Value","text":"<p>IUnitReference</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#iunitconversionstorage-property","title":"IUnitConversion.Storage Property","text":"<p>Gets or sets the IStorageInformation.</p> C#<pre><code>HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation? Storage { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#property-value_1","title":"Property Value","text":"<p>IStorageInformation</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#iunitconversionunit-property","title":"IUnitConversion.Unit Property","text":"<p>Get or sets an IUnitReference to which the conversion rules apply.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference Unit { get; set; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitConversion/#property-value_2","title":"Property Value","text":"<p>IUnitReference</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/","title":"IUnitFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#iunitfactory-interface","title":"IUnitFactory Interface","text":"<p>Used to create an instance of IUnit.</p> C#<pre><code>public interface IUnitFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#iunitfactorycreatestring-intervaltransformationmethod-method","title":"IUnitFactory.Create(string, IntervalTransformationMethod) Method","text":"<p>Create a unit with the given symbol.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.IUnit Create(string symbol, HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod intervalTransformationMethod);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#parameters","title":"Parameters","text":"<p><code>symbol</code> System.String</p> <p>The System.String symbol of the unit to be created</p> <p></p> <p><code>intervalTransformationMethod</code> IntervalTransformationMethod</p> <p>determines how data is transformed along the time axis</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#returns","title":"Returns","text":"<p>IUnit A new IUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#iunitfactorycreatestring-method","title":"IUnitFactory.Create(string) Method","text":"<p>Create a unit with the given symbol.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.IUnit Create(string symbol);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#parameters_1","title":"Parameters","text":"<p><code>symbol</code> System.String</p> <p>The System.String symbol of the unit to be created</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/IUnitFactory/#returns_1","title":"Returns","text":"<p>IUnit A new IUnit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/","title":"HAKOM.TSM.Net.Api.Units.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/#hakomtsmnetapiunitsexceptions-namespace","title":"HAKOM.TSM.Net.Api.Units.Exceptions Namespace","text":"Classes TimeSeriesUnitDoesNotSupportConversionException Indicates that the provided ITimeSeries is not supported for conversions."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/","title":"TimeSeriesUnitDoesNotSupportConversionException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/#timeseriesunitdoesnotsupportconversionexception-class","title":"TimeSeriesUnitDoesNotSupportConversionException Class","text":"<p>Indicates that the provided ITimeSeries is not supported for conversions.</p> C#<pre><code>public sealed class TimeSeriesUnitDoesNotSupportConversionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeSeriesUnitDoesNotSupportConversionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/#remarks","title":"Remarks","text":"<p>A time series for creating a ITimeDependentUnitConversion must have a unit containing a \"/\" (e.g. km/h).  </p> <p>This exception is identified by error code HK15066.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/#timeseriesunitdoesnotsupportconversionexceptionequivalenthttpstatuscode-property","title":"TimeSeriesUnitDoesNotSupportConversionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Exceptions/TimeSeriesUnitDoesNotSupportConversionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/","title":"HAKOM.TSM.Net.Api.Units.Extensions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/#hakomtsmnetapiunitsextensions-namespace","title":"HAKOM.TSM.Net.Api.Units.Extensions Namespace","text":"Classes ResourceFactoryExtensions Extension methods for creating IResource objects. Used for authorization."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/","title":"ResourceFactoryExtensions","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensions-class","title":"ResourceFactoryExtensions Class","text":"<p>Extension methods for creating IResource objects. Used for authorization.</p> C#<pre><code>public static class ResourceFactoryExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ResourceFactoryExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsconstant_unit_conversion_resource_type-field","title":"ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of constant unit conversion resources.</p> C#<pre><code>public const string CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE = ConstantUnitConversion;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#field-value","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimedependent_unit_conversion_resource_type-field","title":"ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of time dependent unit conversion resources.</p> C#<pre><code>public const string TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE = TimeDependentUnitConversion;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#field-value_1","title":"Field Value","text":"<p>System.String</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsunit_resource_type-field","title":"ResourceFactoryExtensions.UNIT_RESOURCE_TYPE Field","text":"<p>A constant used for the creation of unit resources.</p> C#<pre><code>public const string UNIT_RESOURCE_TYPE = Unit;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#field-value_2","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsconstantunitconversionresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.ConstantUnitConversionResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new constant unit conversion IResource with the given identifier and associates it with the given storage provider.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource ConstantUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsconstantunitconversionresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.ConstantUnitConversionResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new constant unit conversion IResource and associates it with the given storage provider.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource ConstantUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_1","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider associated to the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_1","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsconstantunitconversionresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.ConstantUnitConversionResource(this IResourceFactory, string) Method","text":"<p>Creates a new constant unit conversion IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource ConstantUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_2","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_2","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsconstantunitconversionresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.ConstantUnitConversionResource(this IResourceFactory) Method","text":"<p>Creates a new constant unit conversion IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource ConstantUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_3","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_3","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimedependentunitconversionresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.TimeDependentUnitConversionResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new time dependent unit conversion IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeDependentUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_4","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_4","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimedependentunitconversionresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.TimeDependentUnitConversionResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new time dependent unit conversion IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeDependentUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_5","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the resource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_5","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimedependentunitconversionresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.TimeDependentUnitConversionResource(this IResourceFactory, string) Method","text":"<p>Creates a new time dependent unit conversion IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeDependentUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_6","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_6","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionstimedependentunitconversionresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.TimeDependentUnitConversionResource(this IResourceFactory) Method","text":"<p>Creates a new time dependent unit conversion IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource TimeDependentUnitConversionResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_7","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_7","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsunitresourcethis-iresourcefactory-istorageprovider-string-method","title":"ResourceFactoryExtensions.UnitResource(this IResourceFactory, IStorageProvider, string) Method","text":"<p>Creates a new unit IResource with the given identifier and associates the resource with a given storage provider.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource UnitResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_8","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the unit.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_8","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to UNIT_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsunitresourcethis-iresourcefactory-istorageprovider-method","title":"ResourceFactoryExtensions.UnitResource(this IResourceFactory, IStorageProvider) Method","text":"<p>Creates a new unit IResource associated with the given storage provider.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource UnitResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_9","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used to access the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_9","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to UNIT_RESOURCE_TYPE.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsunitresourcethis-iresourcefactory-string-method","title":"ResourceFactoryExtensions.UnitResource(this IResourceFactory, string) Method","text":"<p>Creates a new unit IResource with the given identifier.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource UnitResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory, string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_10","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p> <p></p> <p><code>identifier</code> System.String</p> <p>The System.String identifier used in the creation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_10","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to UNIT_RESOURCE_TYPE and its Identifier equal to the given identifier.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#resourcefactoryextensionsunitresourcethis-iresourcefactory-method","title":"ResourceFactoryExtensions.UnitResource(this IResourceFactory) Method","text":"<p>Creates a new unit IResource.</p> C#<pre><code>public static HAKOM.Security.Core.Net.Api.Authorization.IResource UnitResource(this HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory resourceFactory);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#parameters_11","title":"Parameters","text":"<p><code>resourceFactory</code> IResourceFactory</p> <p>The IResourceFactory used to create the IResource.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Extensions/ResourceFactoryExtensions/#returns_11","title":"Returns","text":"<p>IResource The newly created IResource with its Type equal to UNIT_RESOURCE_TYPE.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/","title":"HAKOM.TSM.Net.Api.Units.Persistence","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/#hakomtsmnetapiunitspersistence-namespace","title":"HAKOM.TSM.Net.Api.Units.Persistence Namespace","text":"Interfaces IConstantUnitConversionStore A data store used to create, read, update or delete constant unit conversions. Should only be instantiated by an IConstantUnitConversionStoreFactory. IConstantUnitConversionStoreFactory A factory used to create instances of IConstantUnitConversionStore. ITimeDependentUnitConversionStore A store to find conversion time series. Should only be instantiated by an ITimeDependentUnitConversionStoreFactory. ITimeDependentUnitConversionStoreFactory A factory used to create instances of ITimeDependentUnitConversionStore. IUnitConversionStore A data store used to create, read, update or delete unit conversions. Should only be instantiated by an IUnitConversionStoreFactory. IUnitConversionStoreFactory A factory used to create instances of IUnitConversionStore. IUnitStore A data store used to create, read, update or delete units. Should only be instantiated by an IUnitStoreFactory. IUnitStoreFactory A factory used to create instances of IUnitStore."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/","title":"IConstantUnitConversionStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstore-interface","title":"IConstantUnitConversionStore Interface","text":"<p>A data store used to create, read, update or delete constant unit conversions. Should only be instantiated by an IConstantUnitConversionStoreFactory.</p> C#<pre><code>public interface IConstantUnitConversionStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Derived \u21b3 ISqlConstantUnitConversionStore</p> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoreconfigureistorageprovider-iunitstore-cancellationtoken-method","title":"IConstantUnitConversionStore.Configure(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Configures the constant unit conversion store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoredeletestring-cancellationtoken-method","title":"IConstantUnitConversionStore.Delete(string, CancellationToken) Method","text":"<p>Deletes the constant unit conversion with the given unit.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_1","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit of the conversion,which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstorefindcancellationtoken-method","title":"IConstantUnitConversionStore.Find(CancellationToken) Method","text":"<p>Finds all currently available constant unit conversions.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_2","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IConstantUnitConversion&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available constant unit conversions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoreloadiconstantunitconversionreference-cancellationtoken-method","title":"IConstantUnitConversionStore.Load(IConstantUnitConversionReference, CancellationToken) Method","text":"<p>Loads the constant unit conversion.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt; Load(HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference constantUnitConversionReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_3","title":"Parameters","text":"<p><code>constantUnitConversionReference</code> IConstantUnitConversionReference</p> <p>The IConstantUnitConversionReference that will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IConstantUnitConversionReference&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing the constant unit conversion with the given unit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoreloadstring-cancellationtoken-method","title":"IConstantUnitConversionStore.Load(string, CancellationToken) Method","text":"<p>Loads the constant unit conversion with the given unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt; Load(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_4","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The System.String unit of the constant unit conversion, which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IConstantUnitConversionReference&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing the constant unit conversion with the given unit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoresaveiconstantunitconversion-cancellationtoken-method","title":"IConstantUnitConversionStore.Save(IConstantUnitConversion, CancellationToken) Method","text":"<p>Saves a given unitConversion.</p> C#<pre><code>System.Threading.Tasks.Task Save(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion unitConversion, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_5","title":"Parameters","text":"<p><code>unitConversion</code> IConstantUnitConversion</p> <p>The IConstantUnitConversion to be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task&lt;&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoresaveorupdateiconstantunitconversion-cancellationtoken-method","title":"IConstantUnitConversionStore.SaveOrUpdate(IConstantUnitConversion, CancellationToken) Method","text":"<p>Saves a new or updates an existing unitConversion.</p> C#<pre><code>System.Threading.Tasks.Task SaveOrUpdate(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion unitConversion, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_6","title":"Parameters","text":"<p><code>unitConversion</code> IConstantUnitConversion</p> <p>The IConstantUnitConversion to look for and persist.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretrydeletestring-cancellationtoken-method","title":"IConstantUnitConversionStore.TryDelete(string, CancellationToken) Method","text":"<p>Deletes the constant unit conversion with the given unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_7","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit of the conversion,which will be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_7","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretryfindcancellationtoken-method","title":"IConstantUnitConversionStore.TryFind(CancellationToken) Method","text":"<p>Finds all currently available constant unit conversions.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_8","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversion&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available constant unit conversions in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretryloadiconstantunitconversionreference-cancellationtoken-method","title":"IConstantUnitConversionStore.TryLoad(IConstantUnitConversionReference, CancellationToken) Method","text":"<p>Loads the constant unit conversion.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference constantUnitConversionReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_9","title":"Parameters","text":"<p><code>constantUnitConversionReference</code> IConstantUnitConversionReference</p> <p>The IConstantUnitConversionReference that will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversionReference&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the constant unit conversion with the given unit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretryloadstring-cancellationtoken-method","title":"IConstantUnitConversionStore.TryLoad(string, CancellationToken) Method","text":"<p>Loads the constant unit conversion with the given unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt;&gt; TryLoad(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_10","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The System.String unit of the constant unit conversion, which will be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversionReference&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the constant unit conversion with the given unit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretrysaveiconstantunitconversion-cancellationtoken-method","title":"IConstantUnitConversionStore.TrySave(IConstantUnitConversion, CancellationToken) Method","text":"<p>Saves a given unitConversion.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TrySave(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion unitConversion, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_11","title":"Parameters","text":"<p><code>unitConversion</code> IConstantUnitConversion</p> <p>The IConstantUnitConversion to be persisted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#iconstantunitconversionstoretrysaveorupdateiconstantunitconversion-cancellationtoken-method","title":"IConstantUnitConversionStore.TrySaveOrUpdate(IConstantUnitConversion, CancellationToken) Method","text":"<p>Saves a new or updates an existing unitConversion.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion unitConversion, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#parameters_12","title":"Parameters","text":"<p><code>unitConversion</code> IConstantUnitConversion</p> <p>The IConstantUnitConversion to look for and persist.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#returns_12","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStore/#remarks_4","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/","title":"IConstantUnitConversionStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#iconstantunitconversionstorefactory-interface","title":"IConstantUnitConversionStoreFactory Interface","text":"<p>A factory used to create instances of IConstantUnitConversionStore.</p> C#<pre><code>public interface IConstantUnitConversionStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#iconstantunitconversionstorefactorycreateistorageprovider-iunitstore-cancellationtoken-method","title":"IConstantUnitConversionStoreFactory.Create(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Creates an instance of an IConstantUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IConstantUnitConversionStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IConstantUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#iconstantunitconversionstorefactorytrycreateistorageprovider-iunitstore-cancellationtoken-method","title":"IConstantUnitConversionStoreFactory.TryCreate(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Tries to create an instance of an IConstantUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IConstantUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IConstantUnitConversionStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/","title":"ITimeDependentUnitConversionStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstore-interface","title":"ITimeDependentUnitConversionStore Interface","text":"<p>A store to find conversion time series. Should only be instantiated by an ITimeDependentUnitConversionStoreFactory.</p> C#<pre><code>public interface ITimeDependentUnitConversionStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoreconfigureistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.Configure(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Configures the dependent unit conversion store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoredeleteitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.Delete(ITimeSeriesReference, CancellationToken) Method","text":"<p>Removes a given timeSeriesReference from default conversion time series.</p> C#<pre><code>System.Threading.Tasks.Task Delete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to to be removed from default conversion time series. The time series itself will not be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task A task that finishes when the timeSeriesReference is removed from default conversion time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstorefinditimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.Find(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll conversion time series of a given timeSeriesReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt; Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;ITimeDependentUnitConversion&gt; A System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all conversion time series of timeSeriesReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstorefindcancellationtoken-method","title":"ITimeDependentUnitConversionStore.Find(CancellationToken) Method","text":"<p>GetAll default conversion time series which are configured to be used without assignment to a time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_3","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_3","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;ITimeDependentUnitConversion&gt; A System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all default conversion time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstorefindallitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.FindAll(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll all conversion time series which can be used for a conversion. This includes conversion time series of a given timeSeriesReference and the default conversion time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt; FindAll(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_4","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_4","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;ITimeDependentUnitConversion&gt; A System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all conversion time series of timeSeriesReference and default conversion time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoresaveitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.Save(ITimeSeriesReference, CancellationToken) Method","text":"<p>Sets a given timeSeriesReference to a default conversion time series and saves the configuration.</p> C#<pre><code>System.Threading.Tasks.Task Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_5","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to to be set as default conversion time series. The time series must already be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task A task that finishes when the timeSeriesReference is saved as default conversion time series.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoretrydeleteitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.TryDelete(ITimeSeriesReference, CancellationToken) Method","text":"<p>Removes a given timeSeriesReference from default conversion time series.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_6","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to to be removed from default conversion time series. The time series itself will not be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result that finishes when the timeSeriesReference is removed from default conversion time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoretryfinditimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.TryFind(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll conversion time series of a given timeSeriesReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt;&gt; TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_7","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_7","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversion&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all conversion time series of timeSeriesReference in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoretryfindcancellationtoken-method","title":"ITimeDependentUnitConversionStore.TryFind(CancellationToken) Method","text":"<p>GetAll default conversion time series which are configured to be used without assignment to a time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_8","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_8","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversion&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all default conversion time series in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoretryfindallitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.TryFindAll(ITimeSeriesReference, CancellationToken) Method","text":"<p>GetAll all conversion time series which can be used for a conversion. This includes converstion timeseries of a given timeSeriesReference and the default conversion time series.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion&gt;&gt; TryFindAll(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_9","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_9","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversion&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; with all conversion time series of timeSeriesReference and default conversion time series represented as Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#itimedependentunitconversionstoretrysaveitimeseriesreference-cancellationtoken-method","title":"ITimeDependentUnitConversionStore.TrySave(ITimeSeriesReference, CancellationToken) Method","text":"<p>Sets a given timeSeriesReference to a default conversion time series and saves the configuration.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#parameters_10","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to to be set as default conversion time series. The time series must already be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result that finishes when the timeSeriesReference is saved as default conversion time series.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/","title":"ITimeDependentUnitConversionStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#itimedependentunitconversionstorefactory-interface","title":"ITimeDependentUnitConversionStoreFactory Interface","text":"<p>A factory used to create instances of ITimeDependentUnitConversionStore.</p> C#<pre><code>public interface ITimeDependentUnitConversionStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#itimedependentunitconversionstorefactorycreateistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeDependentUnitConversionStoreFactory.Create(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Creates an instance of an ITimeDependentUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;ITimeDependentUnitConversionStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created ITimeDependentUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#itimedependentunitconversionstorefactorytrycreateistorageprovider-iunitstore-cancellationtoken-method","title":"ITimeDependentUnitConversionStoreFactory.TryCreate(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Tries to create an instance of an ITimeDependentUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeDependentUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created ITimeDependentUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/ITimeDependentUnitConversionStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/","title":"IUnitConversionStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#iunitconversionstore-interface","title":"IUnitConversionStore Interface","text":"<p>A data store used to create, read, update or delete unit conversions. Should only be instantiated by an IUnitConversionStoreFactory.</p> C#<pre><code>public interface IUnitConversionStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#iunitconversionstoreconfigureistorageprovider-iunitstore-cancellationtoken-method","title":"IUnitConversionStore.Configure(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Configures the unit conversion store with the given parameters.</p> C#<pre><code>System.Threading.Tasks.Task Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>Propagates a notification if the operations should be canceled.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#iunitconversionstorefinditimeseriesreference-cancellationtoken-method","title":"IUnitConversionStore.Find(ITimeSeriesReference, CancellationToken) Method","text":"<p>Finds all currently available unit conversions.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt; Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#parameters_1","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IUnitConversion&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available unit conversions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#iunitconversionstoretryfinditimeseriesreference-cancellationtoken-method","title":"IUnitConversionStore.TryFind(ITimeSeriesReference, CancellationToken) Method","text":"<p>Finds all currently available unit conversions.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.IUnitConversion&gt;&gt; TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference timeSeriesReference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#parameters_2","title":"Parameters","text":"<p><code>timeSeriesReference</code> ITimeSeriesReference</p> <p>The ITimeSeriesReference to load the assigned conversion time series from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStore/#returns_2","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitConversion&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available unit conversions in  the form of Result&lt;TValue&gt;.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/","title":"IUnitConversionStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#iunitconversionstorefactory-interface","title":"IUnitConversionStoreFactory Interface","text":"<p>A factory used to create instances of IUnitConversionStore.</p> C#<pre><code>public interface IUnitConversionStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#iunitconversionstorefactorycreateistorageprovider-iunitstore-cancellationtoken-method","title":"IUnitConversionStoreFactory.Create(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Creates an instance of an IUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitConversionStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IUnitConversionStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#iunitconversionstorefactorytrycreateistorageprovider-iunitstore-cancellationtoken-method","title":"IUnitConversionStoreFactory.TryCreate(IStorageProvider, IUnitStore, CancellationToken) Method","text":"<p>Tries to create an instance of an IUnitConversionStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore used for creating unit references.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitConversionStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IUnitConversionStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitConversionStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/","title":"IUnitStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstore-interface","title":"IUnitStore Interface","text":"<p>A data store used to create, read, update or delete units. Should only be instantiated by an IUnitStoreFactory.</p> C#<pre><code>public interface IUnitStore :\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstorereferences-property","title":"IUnitStore.References Property","text":"<p>The IUnitReferenceFactory which can create a reference to an IUnit.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory References { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#property-value","title":"Property Value","text":"<p>IUnitReferenceFactory</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoredeletestring-cancellationtoken-method","title":"IUnitStore.Delete(string, CancellationToken) Method","text":"<p>Deletes the unit by the given unit symbol.</p> C#<pre><code>System.Threading.Tasks.Task Delete(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task A System.Threading.Tasks.Task</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstorefindcancellationtoken-method","title":"IUnitStore.Find(CancellationToken) Method","text":"<p>Finds all currently available units as IUnitReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; Find(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_1","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;IUnitReference&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available units.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoreloadiunitreference-cancellationtoken-method","title":"IUnitStore.Load(IUnitReference, CancellationToken) Method","text":"<p>Loads an existing unit as IUnitReference from the store.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; Load(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference reference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_2","title":"Parameters","text":"<p><code>reference</code> IUnitReference</p> <p>A reference to the existing unit that should be retrieved from the store.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that can be used to attempt to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing the requested unit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoreloadstring-cancellationtoken-method","title":"IUnitStore.Load(string, CancellationToken) Method","text":"<p>Loads the unit as IUnitReference by the given unit symbol.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; Load(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_3","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitReference&gt; A System.Threading.Tasks.Task&lt;&gt; containing the requested unit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#exceptions","title":"Exceptions","text":"<p>UnitNotFoundException May be thrown (depending on implementation) if the unit identified by unit is not found in the store.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoresaveiunit-cancellationtoken-method","title":"IUnitStore.Save(IUnit, CancellationToken) Method","text":"<p>Saves a given unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; Save(HAKOM.TSM.Net.Api.Units.IUnit unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_4","title":"Parameters","text":"<p><code>unit</code> IUnit</p> <p>The IUnit to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitReference&gt; A System.Threading.Tasks.Task containing the saved IUnitReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoresaveorupdateiunit-cancellationtoken-method","title":"IUnitStore.SaveOrUpdate(IUnit, CancellationToken) Method","text":"<p>Saves a new or updates an existing unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; SaveOrUpdate(HAKOM.TSM.Net.Api.Units.IUnit unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_5","title":"Parameters","text":"<p><code>unit</code> IUnit</p> <p>The IUnit to look for and to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_5","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitReference&gt; A System.Threading.Tasks.Task containing the saved IUnitReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretrydeletestring-cancellationtoken-method","title":"IUnitStore.TryDelete(string, CancellationToken) Method","text":"<p>Deletes the unit by the given unit symbol.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_6","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit to be deleted.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_6","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; A System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretryfindcancellationtoken-method","title":"IUnitStore.TryFind(CancellationToken) Method","text":"<p>Finds all currently available units as IUnitReference.</p> C#<pre><code>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;&gt; TryFind(System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_7","title":"Parameters","text":"<p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_7","title":"Returns","text":"<p>System.Collections.Generic.IAsyncEnumerable&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt;&gt; An System.Collections.Generic.IAsyncEnumerable&lt;&gt; containing all available units in the form of Result&lt;TValue&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretryloadiunitreference-cancellationtoken-method","title":"IUnitStore.TryLoad(IUnitReference, CancellationToken) Method","text":"<p>Attempts to load the given existing unit as IUnitReference from the store.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;&gt; TryLoad(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference reference, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_8","title":"Parameters","text":"<p><code>reference</code> IUnitReference</p> <p>A reference to the existing unit that should be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A System.Threading.CancellationToken that can be used to attempt to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_8","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the requested IUnit.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretryloadstring-cancellationtoken-method","title":"IUnitStore.TryLoad(string, CancellationToken) Method","text":"<p>Loads the unit as IUnitReference by the given unit symbol.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;&gt; TryLoad(string unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_9","title":"Parameters","text":"<p><code>unit</code> System.String</p> <p>The symbol of the unit to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_9","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the requested IUnit.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretrysaveiunit-cancellationtoken-method","title":"IUnitStore.TrySave(IUnit, CancellationToken) Method","text":"<p>Saves a given unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;&gt; TrySave(HAKOM.TSM.Net.Api.Units.IUnit unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_10","title":"Parameters","text":"<p><code>unit</code> IUnit</p> <p>The IUnit to be saved.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_10","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the saved IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#remarks_2","title":"Remarks","text":"<p>The Result will provide additional information about success or failure of the operation.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#iunitstoretrysaveorupdateiunit-cancellationtoken-method","title":"IUnitStore.TrySaveOrUpdate(IUnit, CancellationToken) Method","text":"<p>Saves a new or updates an existing unit.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;&gt; TrySaveOrUpdate(HAKOM.TSM.Net.Api.Units.IUnit unit, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#parameters_11","title":"Parameters","text":"<p><code>unit</code> IUnit</p> <p>The IUnit to look for and to save.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#returns_11","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the saved IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStore/#remarks_3","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/","title":"IUnitStoreFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#iunitstorefactory-interface","title":"IUnitStoreFactory Interface","text":"<p>A factory used to create instances of IUnitStore.</p> C#<pre><code>public interface IUnitStoreFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#iunitstorefactorycreateistorageprovider-cancellationtoken-method","title":"IUnitStoreFactory.Create(IStorageProvider, CancellationToken) Method","text":"<p>Creates an instance of an IUnitStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore&gt; Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#parameters","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IUnitStore&gt; A System.Threading.Tasks.Task&lt;&gt; of the created IUnitStore.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#iunitstorefactorytrycreateistorageprovider-cancellationtoken-method","title":"IUnitStoreFactory.TryCreate(IStorageProvider, CancellationToken) Method","text":"<p>Tries to create an instance of an IUnitStore using the specified storageProvider.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore&gt;&gt; TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider storageProvider, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#parameters_1","title":"Parameters","text":"<p><code>storageProvider</code> IStorageProvider</p> <p>The IStorageProvider used for read and write operations on the storage.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the created IUnitStore.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/IUnitStoreFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/","title":"HAKOM.TSM.Net.Api.Units.Persistence.Exceptions","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/#hakomtsmnetapiunitspersistenceexceptions-namespace","title":"HAKOM.TSM.Net.Api.Units.Persistence.Exceptions Namespace","text":"Classes ConstantUnitConversionNotFoundException Indicates that an attempt was made to interact with a constant unit conversion that is not defined in the given store. InvalidTimeDependentUnitConversionException Indicates that an attempt was made to save a ITimeDependentUnitConversion with an invalid unit. TimeDependentUnitConversionNotFoundException Indicates that an attempt was made to interact with a time dependent unit conversion that is not defined in the given store. UnitConversionExistsAlreadyException Indicates that an attempt was made to save a unit conversion with the same properties (i.e. Unit/ConversionUnit combination) as one that already exists. UnitNotFoundException Indicates that an attempt was made to interact with a unit that is not defined in the given store."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/","title":"ConstantUnitConversionNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/#constantunitconversionnotfoundexception-class","title":"ConstantUnitConversionNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with a constant unit conversion that is not defined in the given store.</p> C#<pre><code>public sealed class ConstantUnitConversionNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 ConstantUnitConversionNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/#remarks","title":"Remarks","text":"<p>Make sure that the correct store is being accessed or define the unit in the current  store by calling Save(IConstantUnitConversion, CancellationToken) or a similar overload.  </p> <p>This exception is identified by error code HK15106.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/#constantunitconversionnotfoundexceptionequivalenthttpstatuscode-property","title":"ConstantUnitConversionNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/ConstantUnitConversionNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/","title":"InvalidTimeDependentUnitConversionException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/#invalidtimedependentunitconversionexception-class","title":"InvalidTimeDependentUnitConversionException Class","text":"<p>Indicates that an attempt was made to save a ITimeDependentUnitConversion with an invalid unit.</p> C#<pre><code>public sealed class InvalidTimeDependentUnitConversionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidTimeDependentUnitConversionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/#remarks","title":"Remarks","text":"<p>The timeseries of a ITimeDependentUnitConversion must have a unit containing a \"/\" (e.g. km/h) in order to be saved.  </p> <p>This exception is identified by error code HK15055.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/#invalidtimedependentunitconversionexceptionequivalenthttpstatuscode-property","title":"InvalidTimeDependentUnitConversionException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/InvalidTimeDependentUnitConversionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/","title":"TimeDependentUnitConversionNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/#timedependentunitconversionnotfoundexception-class","title":"TimeDependentUnitConversionNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with a time dependent unit conversion that is not defined in the given store.</p> C#<pre><code>public sealed class TimeDependentUnitConversionNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 TimeDependentUnitConversionNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/#remarks","title":"Remarks","text":"<p>Make sure that the correct store is being accessed or define the unit in the current  store by calling Save(ITimeSeriesReference, CancellationToken) or a similar overload.  </p> <p>This exception is identified by error code HK15107.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/#timedependentunitconversionnotfoundexceptionequivalenthttpstatuscode-property","title":"TimeDependentUnitConversionNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/TimeDependentUnitConversionNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/","title":"UnitConversionExistsAlreadyException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/#unitconversionexistsalreadyexception-class","title":"UnitConversionExistsAlreadyException Class","text":"<p>Indicates that an attempt was made to save a unit conversion with the same properties (i.e. Unit/ConversionUnit combination) as one that already exists.</p> C#<pre><code>public sealed class UnitConversionExistsAlreadyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnitConversionExistsAlreadyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/#remarks","title":"Remarks","text":"<p>Either delete the existing unit conversion from the store, modify the new one to represent a unique conversion or call SaveOrUpdate(IConstantUnitConversion, CancellationToken) instead of Save(IConstantUnitConversion, CancellationToken) if an update was intended.  </p> <p>This exception is identified by error code HK15030.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/#unitconversionexistsalreadyexceptionequivalenthttpstatuscode-property","title":"UnitConversionExistsAlreadyException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs in the context of an HTTP request, the service should respond with a 409 status code (Conflict).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitConversionExistsAlreadyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/","title":"UnitNotFoundException","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/#unitnotfoundexception-class","title":"UnitNotFoundException Class","text":"<p>Indicates that an attempt was made to interact with a unit that is not defined in the given store.</p> C#<pre><code>public sealed class UnitNotFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnitNotFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/#remarks","title":"Remarks","text":"<p>Make sure that the correct store is being accessed or define the unit in the current store by calling Save(IUnit, CancellationToken) or a similar overload.  </p> <p>This exception is identified by error code HK15071.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/#unitnotfoundexceptionequivalenthttpstatuscode-property","title":"UnitNotFoundException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Exceptions/UnitNotFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/","title":"HAKOM.TSM.Net.Api.Units.Persistence.References","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/#hakomtsmnetapiunitspersistencereferences-namespace","title":"HAKOM.TSM.Net.Api.Units.Persistence.References Namespace","text":"Interfaces IConstantUnitConversionReference Represents a reference to a constant unit conversion rule (see IConstantUnitConversion) stored within a repository. IConstantUnitConversionReferenceFactory A factory for creating IConstantUnitConversionReference. IUnitReference Represents a reference to a unit stored in a repository. IUnitReferenceFactory A factory for creating IUnitReference."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReference/","title":"IConstantUnitConversionReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReference/#iconstantunitconversionreference-interface","title":"IConstantUnitConversionReference Interface","text":"<p>Represents a reference to a constant unit conversion rule (see IConstantUnitConversion) stored within a repository.</p> C#<pre><code>public interface IConstantUnitConversionReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;int, HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Units.IConstantUnitConversion&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt;,\nSystem.IFormattable\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;System.Int32,IConstantUnitConversion&gt;, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IConstantUnitConversion&gt;, IReference, System.IEquatable&lt;IConstantUnitConversionReference&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/","title":"IConstantUnitConversionReferenceFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#iconstantunitconversionreferencefactory-interface","title":"IConstantUnitConversionReferenceFactory Interface","text":"<p>A factory for creating IConstantUnitConversionReference.</p> C#<pre><code>public interface IConstantUnitConversionReferenceFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#iconstantunitconversionreferencefactoryconfigureiconstantunitconversionstore-method","title":"IConstantUnitConversionReferenceFactory.Configure(IConstantUnitConversionStore) Method","text":"<p>Configures the IConstantUnitConversionReferenceFactory for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore constantUnitConversionStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#parameters","title":"Parameters","text":"<p><code>constantUnitConversionStore</code> IConstantUnitConversionStore</p> <p>The IUnitStore for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#iconstantunitconversionreferencefactorycreateint-istorageinformation-iconstantunitconversionstore-method","title":"IConstantUnitConversionReferenceFactory.Create(int, IStorageInformation, IConstantUnitConversionStore) Method","text":"<p>Creates a IConstantUnitConversionReference with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference Create(int identifier, HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation storageInformation, HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore unitConversionStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> System.Int32</p> <p>The identifier for the unit conversion.</p> <p></p> <p><code>storageInformation</code> IStorageInformation</p> <p>Information about the storage of theIConstantUnitConversion.</p> <p></p> <p><code>unitConversionStore</code> IConstantUnitConversionStore</p> <p>The IStore&lt;TStorageProvider&gt; for the IConstantUnitConversions referenced by objects created in this factory.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IConstantUnitConversionReferenceFactory/#returns","title":"Returns","text":"<p>IConstantUnitConversionReference The created IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReference/","title":"IUnitReference","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReference/#iunitreference-interface","title":"IUnitReference Interface","text":"<p>Represents a reference to a unit stored in a repository.</p> C#<pre><code>public interface IUnitReference :\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;string, HAKOM.TSM.Net.Api.Units.IUnit&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference&lt;HAKOM.TSM.Net.Api.Units.IUnit&gt;,\nHAKOM.Persistence.Core.Net.Api.References.IReference,\nSystem.IEquatable&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt;,\nSystem.IFormattable\n</code></pre> <p>Implements HAKOM.Persistence.Core.Net.Api.References.IReference&lt;System.String,IUnit&gt;, HAKOM.Persistence.Core.Net.Api.References.IReference&lt;IUnit&gt;, IReference, System.IEquatable&lt;IUnitReference&gt;, System.IFormattable</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReference/#remarks","title":"Remarks","text":"<p>Note that units must always have a string value within a repository to identify them. Usually this would be the symbol of that unit, i.e. kWh or \u00b0C since it does make sense to have different definitions for the same symbol (especially within one repository).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/","title":"IUnitReferenceFactory","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.References</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactory-interface","title":"IUnitReferenceFactory Interface","text":"<p>A factory for creating IUnitReference.</p> C#<pre><code>public interface IUnitReferenceFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactoryconfigureiunitstore-method","title":"IUnitReferenceFactory.Configure(IUnitStore) Method","text":"<p>Configures the IUnitReferenceFactory for usage.</p> C#<pre><code>void Configure(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore unitStore);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#parameters","title":"Parameters","text":"<p><code>unitStore</code> IUnitStore</p> <p>The IUnitStore for loading the references.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactorycreatestring-iunit-method","title":"IUnitReferenceFactory.Create(string, IUnit) Method","text":"<p>Creates a IUnitReference with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference Create(string identifier, HAKOM.TSM.Net.Api.Units.IUnit unit);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#parameters_1","title":"Parameters","text":"<p><code>identifier</code> System.String</p> <p>The identifier for the IUnitReference.</p> <p></p> <p><code>unit</code> IUnit</p> <p>The IUnit to be associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#returns","title":"Returns","text":"<p>IUnitReference The created IUnitReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactorycreatestring-method","title":"IUnitReferenceFactory.Create(string) Method","text":"<p>Creates a IUnitReference with the specified identifier.</p> C#<pre><code>HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference Create(string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#parameters_2","title":"Parameters","text":"<p><code>identifier</code> System.String</p> <p>The identifier for the unit reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#returns_1","title":"Returns","text":"<p>IUnitReference The created IUnitReference.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactorytrycreatestring-iunit-method","title":"IUnitReferenceFactory.TryCreate(string, IUnit) Method","text":"<p>Tries to create a IUnitReference with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; TryCreate(string identifier, HAKOM.TSM.Net.Api.Units.IUnit unit);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#parameters_3","title":"Parameters","text":"<p><code>identifier</code> System.String</p> <p>The identifier for the IUnitReference.</p> <p></p> <p><code>unit</code> IUnit</p> <p>The IUnit to be associated with the reference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt; A Result&lt;TValue&gt; of the created IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#iunitreferencefactorytrycreatestring-method","title":"IUnitReferenceFactory.TryCreate(string) Method","text":"<p>Tries to create a IUnitReference with the specified identifier.</p> C#<pre><code>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference&gt; TryCreate(string identifier);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#parameters_4","title":"Parameters","text":"<p><code>identifier</code> System.String</p> <p>The identifier for the IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitReference&gt; A Result&lt;TValue&gt; of the created IUnitReference.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/References/IUnitReferenceFactory/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/","title":"HAKOM.TSM.Net.Api.Units.Persistence.Sql","text":"<p>Assembly: HAKOM.TSM.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/#hakomtsmnetapiunitspersistencesql-namespace","title":"HAKOM.TSM.Net.Api.Units.Persistence.Sql Namespace","text":"Interfaces ISqlConstantUnitConversionStore A store for CRUD operations on unit conversions for sql databases."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/","title":"ISqlConstantUnitConversionStore","text":"<p>Assembly: HAKOM.TSM.Net</p> <p>Namespace: HAKOM.TSM.Net.Api.Units.Persistence.Sql</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#isqlconstantunitconversionstore-interface","title":"ISqlConstantUnitConversionStore Interface","text":"<p>A store for CRUD operations on unit conversions for sql databases.</p> C#<pre><code>public interface ISqlConstantUnitConversionStore :\nHAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore,\nHAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider&gt;\n</code></pre> <p>Implements IConstantUnitConversionStore, HAKOM.Persistence.Core.Net.Api.Storage.IStore&lt;IStorageProvider&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#isqlconstantunitconversionstoredeleteint-cancellationtoken-method","title":"ISqlConstantUnitConversionStore.Delete(int, CancellationToken) Method","text":"<p>Deletes the unit conversion with the given id.</p> C#<pre><code>System.Threading.Tasks.Task Delete(int id, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#parameters","title":"Parameters","text":"<p><code>id</code> System.Int32</p> <p>The System.Int32 id of the unit conversion to delete.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token, that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task An awaitable System.Threading.Tasks.Task.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#isqlconstantunitconversionstoreloadint-cancellationtoken-method","title":"ISqlConstantUnitConversionStore.Load(int, CancellationToken) Method","text":"<p>Loads the unit conversion with the given id.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt; Load(int id, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#parameters_1","title":"Parameters","text":"<p><code>id</code> System.Int32</p> <p>The System.Int32 id of the unit conversion to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token, that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;IConstantUnitConversionReference&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; containing the unit conversion with the given id.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#isqlconstantunitconversionstoretrydeleteint-cancellationtoken-method","title":"ISqlConstantUnitConversionStore.TryDelete(int, CancellationToken) Method","text":"<p>Deletes the unit conversion with the given id.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&gt; TryDelete(int id, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#parameters_2","title":"Parameters","text":"<p><code>id</code> System.Int32</p> <p>The System.Int32 id of the unit conversion to delete.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#returns_2","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;Result&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#remarks","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#isqlconstantunitconversionstoretryloadint-cancellationtoken-method","title":"ISqlConstantUnitConversionStore.TryLoad(int, CancellationToken) Method","text":"<p>Loads the unit conversion with the given id.</p> C#<pre><code>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference&gt;&gt; TryLoad(int id, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#parameters_3","title":"Parameters","text":"<p><code>id</code> System.Int32</p> <p>The System.Int32 id of the unit conversion to be loaded.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token, that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IConstantUnitConversionReference&gt;&gt; An awaitable System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt; containing the unit conversion with the given id..</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/API/Units/Persistence/Sql/ISqlConstantUnitConversionStore/#remarks_1","title":"Remarks","text":"<p>The Result will provide additional information about success or failure.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/","title":"HAKOM.TSM.Http.Net","text":"<p>Assembly: HAKOM.TSM.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/#hakomtsmhttpnet-assembly","title":"HAKOM.TSM.Http.Net Assembly","text":"Namespaces HAKOM.TSM.Http.Net.Api HAKOM.TSM.Http.Net.Api.Exceptions HAKOM.TSM.Http.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/","title":"HAKOM.TSM.Http.Net.Api","text":"<p>Assembly: HAKOM.TSM.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/#hakomtsmhttpnetapi-namespace","title":"HAKOM.TSM.Http.Net.Api Namespace","text":"Classes EnumerationController&lt;TStruct,TValue&gt; Base class for controllers exposing endpoints for looking up known values of IEnumeration&lt;TStruct&gt; implementing types along with any additional properties that have been assigned to them."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/","title":"EnumerationController&lt;TStruct,TValue&gt;","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollertstructtvalue-class","title":"EnumerationController&lt;TStruct,TValue&gt; Class","text":"<p>Base class for controllers exposing endpoints for looking up known values of IEnumeration&lt;TStruct&gt; implementing types along with any additional properties that have been assigned to them.</p> C#<pre><code>public abstract class EnumerationController&lt;TStruct,TValue&gt; : Microsoft.AspNetCore.Mvc.Controller\n    where TStruct : struct, HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct, TValue&gt;, System.IEquatable&lt;TStruct&gt;, System.ValueType, System.ValueType\n    where TValue : System.Numerics.INumber&lt;TValue&gt;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#type-parameters","title":"Type parameters","text":"<p><code>TStruct</code></p> <p>The type of struct for which to expose endpoints.</p> <p></p> <p><code>TValue</code></p> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ControllerBase \ud83e\udc52 Microsoft.AspNetCore.Mvc.Controller \ud83e\udc52 EnumerationController"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#remarks","title":"Remarks","text":"<p>Implementations must have a Microsoft.AspNetCore.Mvc.RouteAttribute specifying the root of the endpoints underneath.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#constructors","title":"Constructors","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollerienumerable-ihttpfailurefactory-constructor","title":"EnumerationController(IEnumerable&gt;, IHttpFailureFactory) Constructor <p>Creates an instance of the controller. Call this from derived types.</p> C#<pre><code>protected EnumerationController(System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.IEnumerationPropertyProvider&lt;TStruct&gt;&gt; propertyProviders, HAKOM.ErrorHandling.Http.Net.Api.IHttpFailureFactory httpFailureFactory);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#parameters","title":"Parameters","text":"<p><code>propertyProviders</code> System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.IEnumerationPropertyProvider&lt;TStruct&gt;&gt;</p> <p>A collection of all the registered IEnumerationPropertyProvider&lt;TStruct&gt; implementations for TStruct.</p> <p></p> <p><code>httpFailureFactory</code> IHttpFailureFactory</p> <p>Used to generate common errors.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollertstructtvaluefindallknownenumerations-method","title":"EnumerationController&lt;TStruct,TValue&gt;.FindAllKnownEnumerations() Method <p>Returns all known values of TStruct along with any properties mapped to it.</p> C#<pre><code>protected System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt; FindAllKnownEnumerations();\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#returns","title":"Returns","text":"<p>System.Collections.Generic.IEnumerable&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#remarks_1","title":"Remarks","text":"<p>Any value of TStruct is considered known if it has one or more properties mapped to it by an implementation of IEnumerationPropertyProvider&lt;TStruct&gt;.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollertstructtvaluegetenumerationbypropertystring-string-method","title":"EnumerationController&lt;TStruct,TValue&gt;.GetEnumerationByProperty(string, string) Method <p>Returns the TStruct with a property named propertyName mapped to a value of propertyValue along with any additional properties mapped to it.</p> C#<pre><code>protected HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt; GetEnumerationByProperty(string propertyName, string propertyValue);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#parameters_1","title":"Parameters","text":"<p><code>propertyName</code> System.String</p> <p>The name of the property by which to look up the TStruct for which to retrieve its properties.</p> <p></p> <p><code>propertyValue</code> System.String</p> <p>The value of the property mapped to the TStruct for which to retrieve its properties.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#returns_1","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt; A Result indicating success or failure of retrieving the TStruct with the property identified by propertyName being mapped to the given propertyValue.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollertstructtvaluegetenumerationbyvaluetvalue-method","title":"EnumerationController&lt;TStruct,TValue&gt;.GetEnumerationByValue(TValue) Method <p>Returns the TStruct with the given value along with any additional properties mapped to it.</p> C#<pre><code>protected HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt; GetEnumerationByValue(TValue value);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#parameters_2","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value of the TStruct for which to retrieve its properties.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#returns_2","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.IEnumeration&lt;TStruct,TValue&gt;&gt; A Result indicating success or failure of retrieving the TStruct with the given value.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#enumerationcontrollertstructtvaluegetenumerationpropertybyvaluetvalue-string-method","title":"EnumerationController&lt;TStruct,TValue&gt;.GetEnumerationPropertyByValue(TValue, string) Method <p>Returns the value of the property identified by propertyName for the TStruct with the given value.</p> C#<pre><code>protected HAKOM.ErrorHandling.Core.Net.Api.Result&lt;object&gt; GetEnumerationPropertyByValue(TValue value, string propertyName);\n</code></pre>","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#parameters_3","title":"Parameters","text":"<p><code>value</code> TValue</p> <p>The value of the TStruct for which to retrieve the value of the property with the given propertyName.</p> <p></p> <p><code>propertyName</code> System.String</p> <p>The name of the property for which to retrieve the value mapped to the TStruct with the given value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/EnumerationControllerOf2/#returns_3","title":"Returns","text":"<p>HAKOM.ErrorHandling.Core.Net.Api.Result&lt;System.Object&gt; A Result indicating success or failure of retrieving a value for the property of TStruct with the given value.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/","title":"HAKOM.TSM.Http.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.TSM.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/#hakomtsmhttpnetapiexceptions-namespace","title":"HAKOM.TSM.Http.Net.Api.Exceptions Namespace","text":"Classes UnableToGetAttributeStoreForRequestException Indicates that the current request depends on a IAttributeTypeStore that is currently not available. UnableToGetAttributeTypeStoreForRequestException Indicates that the current request depends on a IAttributeTypeStore that is currently not available. UnableToGetTimeSeriesStoreForRequestException Indicates that the current request depends on a ITimeSeriesStore that is currently not available. UnableToGetUnitStoreForRequestException Indicates that the current request depends on a IUnitStore that is currently not available."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/","title":"UnableToGetAttributeStoreForRequestException","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/#unabletogetattributestoreforrequestexception-class","title":"UnableToGetAttributeStoreForRequestException Class","text":"<p>Indicates that the current request depends on a IAttributeTypeStore that is currently not available.</p> C#<pre><code>public sealed class UnableToGetAttributeStoreForRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnableToGetAttributeStoreForRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/#remarks","title":"Remarks","text":"<p>Make sure the request is within the context of a ITsmRepository (i.e. have a path/route-parameter of type ITsmRepository) and that that parameter is bound properly.  </p> <p>This exception is identified by error code HK15097</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/#unabletogetattributestoreforrequestexceptionequivalenthttpstatuscode-property","title":"UnableToGetAttributeStoreForRequestException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeStoreForRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/","title":"UnableToGetAttributeTypeStoreForRequestException","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/#unabletogetattributetypestoreforrequestexception-class","title":"UnableToGetAttributeTypeStoreForRequestException Class","text":"<p>Indicates that the current request depends on a IAttributeTypeStore that is currently not available.</p> C#<pre><code>public sealed class UnableToGetAttributeTypeStoreForRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnableToGetAttributeTypeStoreForRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/#remarks","title":"Remarks","text":"<p>Make sure the request is within the context of a ITsmRepository (i.e. have a path/route-parameter of type ITsmRepository) and that that parameter is bound properly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/#unabletogetattributetypestoreforrequestexceptionequivalenthttpstatuscode-property","title":"UnableToGetAttributeTypeStoreForRequestException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetAttributeTypeStoreForRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/","title":"UnableToGetTimeSeriesStoreForRequestException","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/#unabletogettimeseriesstoreforrequestexception-class","title":"UnableToGetTimeSeriesStoreForRequestException Class","text":"<p>Indicates that the current request depends on a ITimeSeriesStore that is currently not available.</p> C#<pre><code>public sealed class UnableToGetTimeSeriesStoreForRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnableToGetTimeSeriesStoreForRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/#remarks","title":"Remarks","text":"<p>Make sure the request is within the context of a ITsmRepository (i.e. have a path/route-parameter of type ITsmRepository) and that parameter is bound properly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/#unabletogettimeseriesstoreforrequestexceptionequivalenthttpstatuscode-property","title":"UnableToGetTimeSeriesStoreForRequestException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetTimeSeriesStoreForRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/","title":"UnableToGetUnitStoreForRequestException","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/#unabletogetunitstoreforrequestexception-class","title":"UnableToGetUnitStoreForRequestException Class","text":"<p>Indicates that the current request depends on a IUnitStore that is currently not available.</p> C#<pre><code>public sealed class UnableToGetUnitStoreForRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 UnableToGetUnitStoreForRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/#remarks","title":"Remarks","text":"<p>Make sure the request is within the context of a ITsmRepository (i.e. have a path/route-parameter of type ITsmRepository) and that parameter is bound properly.  </p> <p>This exception is identified by error code HK15100.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/#unabletogetunitstoreforrequestexceptionequivalenthttpstatuscode-property","title":"UnableToGetUnitStoreForRequestException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Exceptions/UnableToGetUnitStoreForRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/","title":"HAKOM.TSM.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.TSM.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/#hakomtsmhttpnetapiextensions-namespace","title":"HAKOM.TSM.Http.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Provides extension methods on IContainer for registering types used by the HTTP API. HttpContextExtensions Contains extension methods for passing state between middleware using Microsoft.AspNetCore.Http.HttpContext.Items."},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides extension methods on IContainer for registering types used by the HTTP API.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#containerextensionsusetsmmodelbindersthis-icontainer-method","title":"ContainerExtensions.UseTsmModelBinders(this IContainer) Method","text":"<p>Registers custom model binders for mapping of incoming request data.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmModelBinders(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the custom model binders.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#containerextensionsusetsmswaggeroptionsetupsthis-icontainer-method","title":"ContainerExtensions.UseTsmSwaggerOptionSetups(this IContainer) Method","text":"<p>Registers custom type mappers for various TSM related types so that they are correctly represented in automatically generated OpenAPI documents describing the TSM HTTP API.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseTsmSwaggerOptionSetups(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the setup action with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/ContainerExtensions/#remarks","title":"Remarks","text":"<p>Registers an instance of System.Action&lt;&gt; as a singleton with the container which gets picked up and called by AddDocumentation(this IMvcBuilder, string, string, string, string, string, string, Action&lt;SwaggerGenOptions&gt;).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/","title":"HttpContextExtensions","text":"<p>Assembly: HAKOM.TSM.Http.Net</p> <p>Namespace: HAKOM.TSM.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensions-class","title":"HttpContextExtensions Class","text":"<p>Contains extension methods for passing state between middleware using Microsoft.AspNetCore.Http.HttpContext.Items.</p> C#<pre><code>public static class HttpContextExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 HttpContextExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionssetrequestrepositorythis-httpcontext-itsmrepository-method","title":"HttpContextExtensions.SetRequestRepository(this HttpContext, ITsmRepository) Method","text":"<p>Whenever a request occurs in the context of a repository (i.e. /repositories//...) this method can be used to add that repository to the Microsoft.AspNetCore.Http.HttpContext.Items dictionary so that other methods within the request pipeline do not have to repeat the call to Load(string, CancellationToken). C#<pre><code>public static void SetRequestRepository(this Microsoft.AspNetCore.Http.HttpContext context, HAKOM.TSM.Net.Api.Persistence.ITsmRepository repository);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext to add the repository to.</p> <p></p> <p><code>repository</code> ITsmRepository</p> <p>The ITsmRepository to use for this request.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetrequestattributestorethis-httpcontext-cancellationtoken-method","title":"HttpContextExtensions.TryGetRequestAttributeStore(this HttpContext, CancellationToken) Method","text":"<p>Attempts to get the IAttributeStore to use for this request.</p> C#<pre><code>public static System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore&gt;&gt; TryGetRequestAttributeStore(this Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters_1","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext to get the store from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#returns","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeStore&gt;&gt; The IAttributeStore set for this request. If there isn't one, a new instance will be created with the repository from  the httpContext.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetrequestattributetypestorethis-httpcontext-cancellationtoken-method","title":"HttpContextExtensions.TryGetRequestAttributeTypeStore(this HttpContext, CancellationToken) Method","text":"<p>Attempts to get the IAttributeTypeStore to use for this request.</p> C#<pre><code>public static System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore&gt;&gt; TryGetRequestAttributeTypeStore(this Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters_2","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext to get the store from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#returns_1","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IAttributeTypeStore&gt;&gt; The IAttributeTypeStore set for this request. If there isn't one, a new instance will be created with the repository from  the httpContext.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetrequestrepositorythis-httpcontext-itsmrepository-method","title":"HttpContextExtensions.TryGetRequestRepository(this HttpContext, ITsmRepository) Method","text":"<p>Attempts to get the ITsmRepository to use for this request.</p> C#<pre><code>public static bool TryGetRequestRepository(this Microsoft.AspNetCore.Http.HttpContext context, out HAKOM.TSM.Net.Api.Persistence.ITsmRepository repository);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters_3","title":"Parameters","text":"<p><code>context</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext to get the repository from.</p> <p></p> <p><code>repository</code> ITsmRepository</p> <p>Returns the repository previously set by SetRequestRepository(this HttpContext, ITsmRepository).</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#returns_2","title":"Returns","text":"<p>System.Boolean true if there is a repository set for this request. false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetrequesttimeseriesstorethis-httpcontext-cancellationtoken-method","title":"HttpContextExtensions.TryGetRequestTimeSeriesStore(this HttpContext, CancellationToken) Method","text":"<p>Attempts to get the ITimeSeriesStore to use for this request.</p> C#<pre><code>public static System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore&gt;&gt; TryGetRequestTimeSeriesStore(this Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters_4","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p>The Microsoft.AspNetCore.Http.HttpContext to get the store from.</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p> <p>A token that may be used to cancel the operation.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#returns_3","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;ITimeSeriesStore&gt;&gt; The ITimeSeriesStore set for this request. If there isn't one, a new instance will be created with the repository from  the httpContext.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#httpcontextextensionstrygetrequestunitstorethis-httpcontext-cancellationtoken-method","title":"HttpContextExtensions.TryGetRequestUnitStore(this HttpContext, CancellationToken) Method","text":"<p>Retrieves the IUnitStore for HTTP requests.</p> C#<pre><code>public static System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore&gt;&gt; TryGetRequestUnitStore(this Microsoft.AspNetCore.Http.HttpContext httpContext, System.Threading.CancellationToken cancellationToken=default(System.Threading.CancellationToken));\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#parameters_5","title":"Parameters","text":"<p><code>httpContext</code> Microsoft.AspNetCore.Http.HttpContext</p> <p></p> <p><code>cancellationToken</code> System.Threading.CancellationToken</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/TSM/Http/API/Extensions/HttpContextExtensions/#returns_4","title":"Returns","text":"<p>System.Threading.Tasks.Task&lt;HAKOM.ErrorHandling.Core.Net.Api.Result&lt;IUnitStore&gt;&gt; A System.Threading.Tasks.Task&lt;&gt; of Result&lt;TValue&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/","title":"HAKOM.Versioning.Core.Net","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/#hakomversioningcorenet-assembly","title":"HAKOM.Versioning.Core.Net Assembly","text":"Namespaces HAKOM.Versioning.Core.Net.Api HAKOM.Versioning.Core.Net.Api.Exceptions HAKOM.Versioning.Core.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/","title":"HAKOM.Versioning.Core.Net.Api","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/#hakomversioningcorenetapi-namespace","title":"HAKOM.Versioning.Core.Net.Api Namespace","text":"Interfaces IVersion Describes the version of a piece of software. IVersionFactory Used to create instances of IVersion. IVersionProvider Provides a list of versions available within an application context"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/","title":"IVersion","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversion-interface","title":"IVersion Interface","text":"<p>Describes the version of a piece of software.</p> C#<pre><code>public interface IVersion :\nSystem.IEquatable&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt;,\nSystem.IComparable&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt;\n</code></pre> <p>Implements System.IEquatable&lt;IVersion&gt;, System.IComparable&lt;IVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#fields","title":"Fields","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversionparameter_name-field","title":"IVersion.PARAMETER_NAME Field","text":"<p>The default name to use for version parameters (i.e. the key in parameter collections).</p> C#<pre><code>const string PARAMETER_NAME = api-version;\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#field-value","title":"Field Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversioniscompatiblewithiversion-method","title":"IVersion.IsCompatibleWith(IVersion) Method","text":"<p>Returns wether or not software with this version should be compatible with software having the version given in other.</p> C#<pre><code>bool IsCompatibleWith(HAKOM.Versioning.Core.Net.Api.IVersion other);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#parameters","title":"Parameters","text":"<p><code>other</code> IVersion</p> <p>The other version to check compatibility with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#returns","title":"Returns","text":"<p>System.Boolean True if this version is compatible with the other.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversionisprerelease-method","title":"IVersion.IsPrerelease() Method","text":"<p>Wether or not this version should be considered a - possibly unstable - prerelease or not.</p> C#<pre><code>bool IsPrerelease();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#returns_1","title":"Returns","text":"<p>System.Boolean True if this version is a prerelease and may contain unstable features.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversionisrange-method","title":"IVersion.IsRange() Method","text":"<p>Returns wether this version describes one exact version or a range of versions.</p> C#<pre><code>bool IsRange();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#returns_2","title":"Returns","text":"<p>System.Boolean True if this instance describes a range of versions. False if it describes an exact version.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversiontostring-method","title":"IVersion.ToString() Method","text":"<p>Produces a string representation of this version instance.</p> C#<pre><code>string? ToString();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#returns_3","title":"Returns","text":"<p>System.String The string describing this version.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#remarks","title":"Remarks","text":"<p>This is the same as calling ToString(bool, bool) with both parameters set to true.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#iversiontostringbool-bool-method","title":"IVersion.ToString(bool, bool) Method","text":"<p>Produces a string representation of this version instance. With the parameters the format of the string can be modified.</p> C#<pre><code>string ToString(bool includePrereleaseInformation, bool includeWildcards);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#parameters_1","title":"Parameters","text":"<p><code>includePrereleaseInformation</code> System.Boolean</p> <p>Produces a string representation of this version with the prerelease information, if set to true.</p> <p></p> <p><code>includeWildcards</code> System.Boolean</p> <p>Produces a string representation of this version, where wildcards are ignored, if set to false.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersion/#returns_4","title":"Returns","text":"<p>System.String The string describing this version.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/","title":"IVersionFactory","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#iversionfactory-interface","title":"IVersionFactory Interface","text":"<p>Used to create instances of IVersion.</p> C#<pre><code>public interface IVersionFactory\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#iversionfactorycreatestring-method","title":"IVersionFactory.Create(string) Method","text":"<p>Creates an IVersion instance from the given versionString.</p> C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion Create(string versionString);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#parameters","title":"Parameters","text":"<p><code>versionString</code> System.String</p> <p>The version System.String to create the IVersion from.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#returns","title":"Returns","text":"<p>IVersion The created IVersion instance.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#exceptions","title":"Exceptions","text":"<p>CouldNotParseVersionException Thrown if the versionString could not be parsed successfully.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#iversionfactorycreateassembly-method","title":"IVersionFactory.Create(Assembly) Method","text":"<p>Retrieves version information from the given assembly.</p> C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion Create(System.Reflection.Assembly assembly);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#parameters_1","title":"Parameters","text":"<p><code>assembly</code> System.Reflection.Assembly</p> <p>The System.Reflection.Assembly to get version information from.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#returns_1","title":"Returns","text":"<p>IVersion The IVersion that describes the version of the assembly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#exceptions_1","title":"Exceptions","text":"<p>CouldNotRetrieveVersionFromAssemblyException Thrown if assembly does not contain any version information.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#iversionfactorytrycreatestring-iversion-method","title":"IVersionFactory.TryCreate(string, IVersion) Method","text":"<p>Attempts to parse the string representation given in versionString.</p> C#<pre><code>bool TryCreate(string versionString, out HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#parameters_2","title":"Parameters","text":"<p><code>versionString</code> System.String</p> <p>The version System.String to parse.</p> <p></p> <p><code>version</code> IVersion</p> <p>If parsing is successful, version holds the created IVersion instance. Otherwise null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#returns_2","title":"Returns","text":"<p>System.Boolean True if the System.String was parsed successfully, false otherwise.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#iversionfactorytrycreateassembly-iversion-method","title":"IVersionFactory.TryCreate(Assembly, IVersion) Method","text":"<p>Attempts to retrieve version information from the given assembly.</p> C#<pre><code>bool TryCreate(System.Reflection.Assembly assembly, out HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#parameters_3","title":"Parameters","text":"<p><code>assembly</code> System.Reflection.Assembly</p> <p>The System.Reflection.Assembly to get an IVersion for.</p> <p></p> <p><code>version</code> IVersion</p> <p>If successful, version holds the created IVersion that describes the version of the assembly. Otherwise null.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionFactory/#returns_3","title":"Returns","text":"<p>System.Boolean True if successful, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionProvider/","title":"IVersionProvider","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionProvider/#iversionprovider-interface","title":"IVersionProvider Interface","text":"<p>Provides a list of versions available within an application context</p> C#<pre><code>public interface IVersionProvider\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionProvider/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionProvider/#iversionprovidergetversions-method","title":"IVersionProvider.GetVersions() Method","text":"<p>Gets all the available versions.</p> C#<pre><code>System.Collections.Generic.IReadOnlyList&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt; GetVersions();\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/IVersionProvider/#returns","title":"Returns","text":"<p>System.Collections.Generic.IReadOnlyList&lt;IVersion&gt; A list of all the available versions.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/","title":"HAKOM.Versioning.Core.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/#hakomversioningcorenetapiexceptions-namespace","title":"HAKOM.Versioning.Core.Net.Api.Exceptions Namespace","text":"Classes CouldNotParseVersionException Indicates that a System.String could not be parsed into an IVersion instance. CouldNotRetrieveVersionFromAssemblyException Indicates that an System.Reflection.Assembly did not contain any version information that could be retrieved. InvalidBuildInformationException Indicates that an attempt to parse a version string into a semantic version has failed because the build information (the part after the '+') did not meet some requirement.For a description of the requirements, see https://semver.org/spec/v2.0.0.html#spec-item-10 InvalidPrereleaseInformationException Indicates that an attempt to parse a version string into a semantic version has failed because the pre-release version (the part after the '-') did not meet some requirement.For a description of the requirements, see https://semver.org/spec/v2.0.0.html#spec-item-9 MalformedLegacyVersionStringException Indicates that an attempt was made to parse a legacy version string that was not in the correct format. MalformedSemanticVersionStringException Indicates that an attempt was made to parse a SemVer version string that was not in the correct format."},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/","title":"CouldNotParseVersionException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#couldnotparseversionexception-class","title":"CouldNotParseVersionException Class","text":"<p>Indicates that a System.String could not be parsed into an IVersion instance.</p> C#<pre><code>public sealed class CouldNotParseVersionException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotParseVersionException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#couldnotparseversionexceptionequivalenthttpstatuscode-property","title":"CouldNotParseVersionException.EquivalentHttpStatusCode Property","text":"<p>Indicates that - when thrown while handling an HTTP request, an System.Net.HttpStatusCode of 500 (Internal Server Error) should be returned with the response.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#couldnotparseversionexceptionversionstring-property","title":"CouldNotParseVersionException.VersionString Property","text":"<p>The System.String that could not be parsed.</p> C#<pre><code>public string? VersionString { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotParseVersionException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotRetrieveVersionFromAssemblyException/","title":"CouldNotRetrieveVersionFromAssemblyException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotRetrieveVersionFromAssemblyException/#couldnotretrieveversionfromassemblyexception-class","title":"CouldNotRetrieveVersionFromAssemblyException Class","text":"<p>Indicates that an System.Reflection.Assembly did not contain any version information that could be retrieved.</p> C#<pre><code>public sealed class CouldNotRetrieveVersionFromAssemblyException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 CouldNotRetrieveVersionFromAssemblyException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotRetrieveVersionFromAssemblyException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotRetrieveVersionFromAssemblyException/#couldnotretrieveversionfromassemblyexceptionequivalenthttpstatuscode-property","title":"CouldNotRetrieveVersionFromAssemblyException.EquivalentHttpStatusCode Property","text":"<p>Indicates that - when thrown while handling an HTTP request, an System.Net.HttpStatusCode of 500 (Internal Server Error) should be returned with the response.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/CouldNotRetrieveVersionFromAssemblyException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidBuildInformationException/","title":"InvalidBuildInformationException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidBuildInformationException/#invalidbuildinformationexception-class","title":"InvalidBuildInformationException Class","text":"<p>Indicates that an attempt to parse a version string into a semantic version has failed because the build information (the part after the '+') did not meet some requirement. For a description of the requirements, see https://semver.org/spec/v2.0.0.html#spec-item-10</p> C#<pre><code>public sealed class InvalidBuildInformationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidBuildInformationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidBuildInformationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidBuildInformationException/#invalidbuildinformationexceptionequivalenthttpstatuscode-property","title":"InvalidBuildInformationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidBuildInformationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidPrereleaseInformationException/","title":"InvalidPrereleaseInformationException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidPrereleaseInformationException/#invalidprereleaseinformationexception-class","title":"InvalidPrereleaseInformationException Class","text":"<p>Indicates that an attempt to parse a version string into a semantic version has failed because the pre-release version (the part after the '-') did not meet some requirement. For a description of the requirements, see https://semver.org/spec/v2.0.0.html#spec-item-9</p> C#<pre><code>public sealed class InvalidPrereleaseInformationException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 InvalidPrereleaseInformationException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidPrereleaseInformationException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidPrereleaseInformationException/#invalidprereleaseinformationexceptionequivalenthttpstatuscode-property","title":"InvalidPrereleaseInformationException.EquivalentHttpStatusCode Property","text":"<p>If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/InvalidPrereleaseInformationException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/","title":"MalformedLegacyVersionStringException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#malformedlegacyversionstringexception-class","title":"MalformedLegacyVersionStringException Class","text":"<p>Indicates that an attempt was made to parse a legacy version string that was not in the correct format.</p> C#<pre><code>public sealed class MalformedLegacyVersionStringException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MalformedLegacyVersionStringException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#remarks","title":"Remarks","text":"<p>The default IVersionFactory implementation supports two different formats of version strings: - Semantic Versioning 2.0 - Four-part versions loosely based on Microsofts version format.  </p> <p>This exception is thrown when an attempt is made to parse a version that does not meet the requirements the latter format.  </p> <p>When this occurs while reading the version of an assembly (i.e. calling Create(Assembly), make sure the System.Reflection.AssemblyVersionAttribute of the assembly has a full four part version number as its value.  </p> <p>This error can be identified by its code HK18007.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#malformedlegacyversionstringexceptionequivalenthttpstatuscode-property","title":"MalformedLegacyVersionStringException.EquivalentHttpStatusCode Property","text":"<p>When this exception occurs during an HTTP request, the service shoul respond with an error and status code 500 (Internal server error), since this is most likely due to some invalid setup of the service and unlikely to be fixed by modifying the request.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#malformedlegacyversionstringexceptionversionstring-property","title":"MalformedLegacyVersionStringException.VersionString Property","text":"<p>The version string that could not be parsed.</p> C#<pre><code>public string? VersionString { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedLegacyVersionStringException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/","title":"MalformedSemanticVersionStringException","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#malformedsemanticversionstringexception-class","title":"MalformedSemanticVersionStringException Class","text":"<p>Indicates that an attempt was made to parse a SemVer version string that was not in the correct format.</p> C#<pre><code>public sealed class MalformedSemanticVersionStringException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MalformedSemanticVersionStringException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#remarks","title":"Remarks","text":"<p>The default IVersionFactory implementation supports two different formats of version strings: - Semantic Versioning 2.0 - Four-part versions loosely based on Microsofts version format.  </p> <p>This exception is thrown when an attempt is made to parse a version that does not meet the requirements the former format.  </p> <p>When this occurs while reading the version of an assembly (i.e. calling Create(Assembly), make sure the System.Reflection.AssemblyInformationalVersionAttribute of the assembly has a proper SemVer 2.0 compliant version string as its value.  </p> <p>This error can be identified by its code HK18008.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#malformedsemanticversionstringexceptionequivalenthttpstatuscode-property","title":"MalformedSemanticVersionStringException.EquivalentHttpStatusCode Property","text":"<p>When this exception occurs during an HTTP request, the service shoul respond with an error and status code 500 (Internal server error), since this is most likely due to some invalid setup of the service and unlikely to be fixed by modifying the request.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#malformedsemanticversionstringexceptionversionstring-property","title":"MalformedSemanticVersionStringException.VersionString Property","text":"<p>The version string that could not be parsed.</p> C#<pre><code>public string? VersionString { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Exceptions/MalformedSemanticVersionStringException/#property-value_1","title":"Property Value","text":"<p>System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/","title":"HAKOM.Versioning.Core.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/#hakomversioningcorenetapiextensions-namespace","title":"HAKOM.Versioning.Core.Net.Api.Extensions Namespace","text":"Classes AssemblyExtensions Used to get version information about an assembly ContainerExtensions Extension methods for adding versioning functionality to an IContainer. MediaTypeHeaderValueExtensions Provides extension methods for handling version information embedded in media types. StringExtensions Provides extension methods for parsing IVersion instances from strings."},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/","title":"AssemblyExtensions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#assemblyextensions-class","title":"AssemblyExtensions Class","text":"<p>Used to get version information about an assembly</p> C#<pre><code>public static class AssemblyExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 AssemblyExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#assemblyextensionsgetsemanticversionthis-assembly-method","title":"AssemblyExtensions.GetSemanticVersion(this Assembly) Method","text":"<p>Returns the version defined in an assembly. Assumes the assembly is marked with an System.Reflection.AssemblyInformationalVersionAttribute that contains a string matching the specification described here: https://semver.org/spec/v2.0.0.html</p> C#<pre><code>public static HAKOM.Versioning.Core.Net.Api.IVersion GetSemanticVersion(this System.Reflection.Assembly assembly);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#parameters","title":"Parameters","text":"<p><code>assembly</code> System.Reflection.Assembly</p> <p>The System.Reflection.Assembly to get the version for.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#returns","title":"Returns","text":"<p>IVersion The version defined in the assembly.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if assembly is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#assemblyextensionsgetsemanticversionforalltypesbynamespacethis-assembly-iversion-method","title":"AssemblyExtensions.GetSemanticVersionForAllTypesByNamespace(this Assembly, IVersion[]) Method","text":"<p>Returns a System.Collections.Generic.IReadOnlyDictionary&lt;&gt; that, for each namespace present in the assembly, holds its version. A namespaces version can be either defined by the assembly or by the namespace containing some part resembling the pattern \"vX_Y_Z\" with X being the major version, Y the minor and Z the patch as described in https://semver.org/spec/v2.0.0.html.  </p> <p>For example, say an assembly has the System.Reflection.AssemblyInformationalVersionAttribute \"1.0.0\" and exposes a type \"SomeNamespace.SomeClass\" as well as a type \"SomeNamespace.v0_0_5.SomeClass\" then this will  return the \"SomeNamespace\" key with a value of \"1.0.0\" and the \"SomeNamespace.v0_0_5\" key with version \"0.0.5\".  </p> <p>In addition, the out parameter distinctVersions will hold all versions defined within the assembly either via System.Reflection.AssemblyInformationalVersionAttribute or via namespace.</p> C#<pre><code>public static System.Collections.Generic.IReadOnlyDictionary&lt;string,HAKOM.Versioning.Core.Net.Api.IVersion&gt; GetSemanticVersionForAllTypesByNamespace(this System.Reflection.Assembly assembly, out HAKOM.Versioning.Core.Net.Api.IVersion[] distinctVersions);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#parameters_1","title":"Parameters","text":"<p><code>assembly</code> System.Reflection.Assembly</p> <p></p> <p><code>distinctVersions</code> IVersion[]</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/AssemblyExtensions/#returns_1","title":"Returns","text":"<p>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,IVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Extension methods for adding versioning functionality to an IContainer.</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#containerextensionsuseversioningthis-icontainer-method","title":"ContainerExtensions.UseVersioning(this IContainer) Method","text":"<p>Registers a default implementation for IVersionFactory with the container, which handles versions according to https://semver.org/spec/v2.0.0.html</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersioning(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The IContainer to register semantic versioning with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container for chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#exceptions","title":"Exceptions","text":"<p>System.ArgumentNullException Thrown if container is null.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#containerextensionsuseversionsfromassemblyandnamespacesttypeinassemblythis-icontainer-method","title":"ContainerExtensions.UseVersionsFromAssemblyAndNamespaces&lt;TTypeInAssembly&gt;(this IContainer) Method","text":"<p>Registers three singletons with the container: 1. An instance of IVersion corresponding to the version defined in the System.Reflection.AssemblyInformationalVersionAttribute of the System.Reflection.Assembly that contains TTypeInAssembly. 2. An instance of System.Collections.Generic.IReadOnlyList&lt;&gt; that holds all versions defined in the System.Reflection.Assembly that contains TTypeInAssembly, either by System.Reflection.AssemblyInformationalVersionAttribute or by a namespace that has the format \"vX_Y_Z\" with X, Y and Z being the major, minor and patch of a semantic version respectively. 3. An instance of System.Collections.Generic.IReadOnlyDictionary&lt;&gt; that holds all the namespaces contained in the assembly along with its version (which may be defined either by the assemblys System.Reflection.AssemblyInformationalVersionAttribute or the namespace itself.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersionsFromAssemblyAndNamespaces&lt;TTypeInAssembly&gt;(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#type-parameters","title":"Type parameters","text":"<p><code>TTypeInAssembly</code></p> <p>A type within the assembly for which to load the version information.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to register the aforementoned singletons with.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container itself for call chaining.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/","title":"MediaTypeHeaderValueExtensions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/#mediatypeheadervalueextensions-class","title":"MediaTypeHeaderValueExtensions Class","text":"<p>Provides extension methods for handling version information embedded in media types.</p> C#<pre><code>public static class MediaTypeHeaderValueExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MediaTypeHeaderValueExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/#mediatypeheadervalueextensionstrygetversionthis-mediatypeheadervalue-iversionfactory-iversion-method","title":"MediaTypeHeaderValueExtensions.TryGetVersion(this MediaTypeHeaderValue, IVersionFactory, IVersion) Method","text":"<p>Attempts to extract the API version from a media type.</p> C#<pre><code>public static bool TryGetVersion(this System.Net.Http.Headers.MediaTypeHeaderValue mediaType, HAKOM.Versioning.Core.Net.Api.IVersionFactory versionFactory, out HAKOM.Versioning.Core.Net.Api.IVersion version);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/#parameters","title":"Parameters","text":"<p><code>mediaType</code> System.Net.Http.Headers.MediaTypeHeaderValue</p> <p>The media type to extract the version from</p> <p></p> <p><code>versionFactory</code> IVersionFactory</p> <p>Required to parse the media type parameter into a IVersion.</p> <p></p> <p><code>version</code> IVersion</p> <p>The version as parsed from the media type. May be null if there is no version information contained in mediaType.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/MediaTypeHeaderValueExtensions/#returns","title":"Returns","text":"<p>System.Boolean true if a version has been parsed from the media type, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/","title":"StringExtensions","text":"<p>Assembly: HAKOM.Versioning.Core.Net</p> <p>Namespace: HAKOM.Versioning.Core.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#stringextensions-class","title":"StringExtensions Class","text":"<p>Provides extension methods for parsing IVersion instances from strings.</p> C#<pre><code>public static class StringExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 StringExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#stringextensionstryparseversionfromnamespacethis-string-iversion-iversionfactory-iversion-method","title":"StringExtensions.TryParseVersionFromNamespace(this string, IVersion, IVersionFactory, IVersion) Method","text":"<p>Attempts to parse a version from the given namespace.</p> C#<pre><code>public static bool TryParseVersionFromNamespace(this string @namespace, HAKOM.Versioning.Core.Net.Api.IVersion @default, HAKOM.Versioning.Core.Net.Api.IVersionFactory versionFactory, out HAKOM.Versioning.Core.Net.Api.IVersion parsedOrDefault);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#parameters","title":"Parameters","text":"<p><code>namespace</code> System.String</p> <p>The namespace to parse.</p> <p></p> <p><code>default</code> IVersion</p> <p>The default version to return if no version was successfully parsed.</p> <p></p> <p><code>versionFactory</code> IVersionFactory</p> <p>An instance of IVersionFactory used to parse the version string once normalized to a period separated version string.</p> <p></p> <p><code>parsedOrDefault</code> IVersion</p> <p>Either the parsed version or default.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#returns","title":"Returns","text":"<p>System.Boolean true if a version was parsed successfully, false otherwise.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Core/API/Extensions/StringExtensions/#remarks","title":"Remarks","text":"<p>Given a fully qualified namespace, it finds the last ocurrence of a section that is prefixed by a \"v\" followed by one or more underscore-separated integers and attempts to parse that into a version.  </p> <p>For example, the namespace \"Company.v4_1.v4_1_3.Namespace\" returns the version 4.1.3.  </p> <p>This is first done by normalizing the prefixed and underscore-separated namespace part (i.e. v4_1_3) to a period-separated representation without the prefix (i.e. 4.1.3) and than passing that to an implementation of IVersionFactory.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/","title":"HAKOM.Versioning.Http.Net","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/#hakomversioninghttpnet-assembly","title":"HAKOM.Versioning.Http.Net Assembly","text":"Namespaces HAKOM.Versioning.Http.Net.Api HAKOM.Versioning.Http.Net.Api.Exceptions HAKOM.Versioning.Http.Net.Api.Extensions"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/","title":"HAKOM.Versioning.Http.Net.Api","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/#hakomversioninghttpnetapi-namespace","title":"HAKOM.Versioning.Http.Net.Api Namespace","text":"Classes VersionInformationController Provides version-related information about an HTTP API. Interfaces IUnacceptableHandler Handler for requests that are not acceptable based on the given \"Accept\"-header. IUnsupportedVersionStatusCode Used to define the type of status code that should be returned if a request is made with an api-version media type parameter that the endpoint does not support.When calling SelectEndpointsByNamespaceAndMediaTypeVersion(this IMvcBuilder, HttpStatusCode) a default implementation of this interface is registered as a singleton causing these requests to fail with the given status code. IVersionedServiceInformation Describes a versioned HTTP API."},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/","title":"IUnacceptableHandler","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#iunacceptablehandler-interface","title":"IUnacceptableHandler Interface","text":"<p>Handler for requests that are not acceptable based on the given \"Accept\"-header.</p> C#<pre><code>public interface IUnacceptableHandler\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#iunacceptablehandlerdefaultmediatypetouse-property","title":"IUnacceptableHandler.DefaultMediaTypeToUse Property","text":"<p>The default media type that should be used to serialize the response of the Endpoint if those present in the \"Accept\"-header cannot be used.</p> C#<pre><code>System.Net.Http.Headers.MediaTypeHeaderValue DefaultMediaTypeToUse { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#property-value","title":"Property Value","text":"<p>System.Net.Http.Headers.MediaTypeHeaderValue</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#iunacceptablehandlerendpoint-property","title":"IUnacceptableHandler.Endpoint Property","text":"<p>The Microsoft.AspNetCore.Http.Endpoint that handles requests that cannot be accepted.</p> C#<pre><code>Microsoft.AspNetCore.Http.Endpoint Endpoint { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnacceptableHandler/#property-value_1","title":"Property Value","text":"<p>Microsoft.AspNetCore.Http.Endpoint</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnsupportedVersionStatusCode/","title":"IUnsupportedVersionStatusCode","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnsupportedVersionStatusCode/#iunsupportedversionstatuscode-interface","title":"IUnsupportedVersionStatusCode Interface","text":"<p>Used to define the type of status code that should be returned if a request is made with an api-version media type parameter that the endpoint does not support.  </p> <p>When calling SelectEndpointsByNamespaceAndMediaTypeVersion(this IMvcBuilder, HttpStatusCode) a default implementation of this interface is registered as a singleton causing these requests to fail with the given status code.</p> C#<pre><code>public interface IUnsupportedVersionStatusCode\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnsupportedVersionStatusCode/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnsupportedVersionStatusCode/#iunsupportedversionstatuscodevalue-property","title":"IUnsupportedVersionStatusCode.Value Property","text":"<p>The status code that should be returned if the requested endpoint cannot satisfy any of the api-version parameters present in the \"Accept\"-header.</p> C#<pre><code>System.Net.HttpStatusCode Value { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IUnsupportedVersionStatusCode/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/","title":"IVersionedServiceInformation","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#iversionedserviceinformation-interface","title":"IVersionedServiceInformation Interface","text":"<p>Describes a versioned HTTP API.</p> C#<pre><code>public interface IVersionedServiceInformation :\nHAKOM.Http.Core.Net.Api.IServiceInformation\n</code></pre> <p>Implements IServiceInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#iversionedserviceinformationsupportedapiversions-property","title":"IVersionedServiceInformation.SupportedApiVersions Property","text":"<p>Gets all the API versions supported by one or more endpoints the service.</p> C#<pre><code>System.Collections.Generic.IEnumerable&lt;HAKOM.Versioning.Core.Net.Api.IVersion&gt; SupportedApiVersions { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#property-value","title":"Property Value","text":"<p>System.Collections.Generic.IEnumerable&lt;IVersion&gt;</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#remarks","title":"Remarks","text":"<p>Note that this does not mean that all endpoints of the service must necessarily support all these API versions.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#iversionedserviceinformationversion-property","title":"IVersionedServiceInformation.Version Property","text":"<p>Gets the services version.</p> C#<pre><code>HAKOM.Versioning.Core.Net.Api.IVersion Version { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/IVersionedServiceInformation/#property-value_1","title":"Property Value","text":"<p>IVersion</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/","title":"VersionInformationController","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/#versioninformationcontroller-class","title":"VersionInformationController Class","text":"<p>Provides version-related information about an HTTP API.</p> C#<pre><code>public sealed class VersionInformationController : Microsoft.AspNetCore.Mvc.Controller\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 Microsoft.AspNetCore.Mvc.ControllerBase \ud83e\udc52 Microsoft.AspNetCore.Mvc.Controller \ud83e\udc52 VersionInformationController</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/#versioninformationcontrollergetserviceinformationiversionedserviceinformation-method","title":"VersionInformationController.GetServiceInformation(IVersionedServiceInformation) Method","text":"<p>Retrieves information about the API including its version.</p> C#<pre><code>public HAKOM.Versioning.Http.Net.Api.IVersionedServiceInformation GetServiceInformation(HAKOM.Versioning.Http.Net.Api.IVersionedServiceInformation serviceInformation);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/#parameters","title":"Parameters","text":"<p><code>serviceInformation</code> IVersionedServiceInformation</p> <p>Injected. The registered instance of IVersionedServiceInformation determines what's returned by this endpoint.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/VersionInformationController/#returns","title":"Returns","text":"<p>IVersionedServiceInformation</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/","title":"HAKOM.Versioning.Http.Net.Api.Exceptions","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/#hakomversioninghttpnetapiexceptions-namespace","title":"HAKOM.Versioning.Http.Net.Api.Exceptions Namespace","text":"Classes MissingAcceptHeaderInRequestException Thrown when a request was made that did not include an Accept header. NoCompatibleVersionFoundException This error indicates that a request was made against an endpoint using an Accept header that includes an api-version"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/","title":"MissingAcceptHeaderInRequestException","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/#missingacceptheaderinrequestexception-class","title":"MissingAcceptHeaderInRequestException Class","text":"<p>Thrown when a request was made that did not include an Accept header.</p> C#<pre><code>public sealed class MissingAcceptHeaderInRequestException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 MissingAcceptHeaderInRequestException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/#remarks","title":"Remarks","text":"<p>Ensure that a valid Accept header is included in your request.  </p> <p>This exception is identified by error code HK18005.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/#missingacceptheaderinrequestexceptionequivalenthttpstatuscode-property","title":"MissingAcceptHeaderInRequestException.EquivalentHttpStatusCode Property","text":"<p>A request that does not include an Accept header should return a status code 406 (Not Acceptable).</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/MissingAcceptHeaderInRequestException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/","title":"NoCompatibleVersionFoundException","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api.Exceptions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/#nocompatibleversionfoundexception-class","title":"NoCompatibleVersionFoundException Class","text":"<p>This error indicates that a request was made against an endpoint using an Accept header that includes an api-version</p> C#<pre><code>public sealed class NoCompatibleVersionFoundException : HAKOM.ErrorHandling.Core.Net.Api.HakomException\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 System.Exception \ud83e\udc52 HakomException \ud83e\udc52 NoCompatibleVersionFoundException</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/#remarks","title":"Remarks","text":"<p>Ensure, that 'Accept' header specifies an api-version parameter supported by this endpoint (check the 'X-Supported-Api-Versions' header of the response) or don't include an api-version parameter to request the services default version.  </p> <p>If the service has enabled version information endpoints, you may also check these to determine supported api versions.  </p> <p>This exception is identified by error code HK18006.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/#properties","title":"Properties","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/#nocompatibleversionfoundexceptionequivalenthttpstatuscode-property","title":"NoCompatibleVersionFoundException.EquivalentHttpStatusCode Property","text":"<p>Defines the HTTP status code that a web service should respond with if the current request fails due to this exception.</p> C#<pre><code>protected override System.Net.HttpStatusCode EquivalentHttpStatusCode { get; }\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Exceptions/NoCompatibleVersionFoundException/#property-value","title":"Property Value","text":"<p>System.Net.HttpStatusCode</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/","title":"HAKOM.Versioning.Http.Net.Api.Extensions","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/#hakomversioninghttpnetapiextensions-namespace","title":"HAKOM.Versioning.Http.Net.Api.Extensions Namespace","text":"Classes ContainerExtensions Provides methods for registering services with an instance of IContainer for working with versions in HTTP APIs MvcBuilderExtensions Defines extension methods for adding version-related capabilities and endpoints to an MVC framework based HTTP API."},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/","title":"ContainerExtensions","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#containerextensions-class","title":"ContainerExtensions Class","text":"<p>Provides methods for registering services with an instance of IContainer for working with versions in HTTP APIs</p> C#<pre><code>public static class ContainerExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 ContainerExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#containerextensionsuseversionedopenapischemasthis-icontainer-method","title":"ContainerExtensions.UseVersionedOpenApiSchemas(this IContainer) Method","text":"<p>Registers an impementation of Swashbuckle.AspNetCore.SwaggerGen.IDocumentFilter with the container that adds api-version parameters to the request and response content types.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersionedOpenApiSchemas(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#parameters","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to add the service to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#returns","title":"Returns","text":"<p>IContainer The container itself for chaining additional setup calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#containerextensionsuseversionedserviceinformationthis-icontainer-method","title":"ContainerExtensions.UseVersionedServiceInformation(this IContainer) Method","text":"<p>Registers an instance of IVersionedServiceInformation that contains information about the version of the HTTP API.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersionedServiceInformation(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#parameters_1","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to add the service to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#returns_1","title":"Returns","text":"<p>IContainer The container itself for chaining additional setup calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#containerextensionsuseversionedserviceinformationserializersthis-icontainer-method","title":"ContainerExtensions.UseVersionedServiceInformationSerializers(this IContainer) Method","text":"<p>Registers a serializer (see ISerializer) for IVersionedServiceInformation instances.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersionedServiceInformationSerializers(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#parameters_2","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to add the service to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#returns_2","title":"Returns","text":"<p>IContainer The container itself for chaining additional setup calls.</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#containerextensionsuseversionstringserializersthis-icontainer-method","title":"ContainerExtensions.UseVersionStringSerializers(this IContainer) Method","text":"<p>Registers a serializer (see ISerializer) for IVersion instances that serializes to/from a simple string.</p> C#<pre><code>public static HAKOM.DependencyInjection.Core.Net.Api.IContainer UseVersionStringSerializers(this HAKOM.DependencyInjection.Core.Net.Api.IContainer container);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#parameters_3","title":"Parameters","text":"<p><code>container</code> IContainer</p> <p>The container to add the service to.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/ContainerExtensions/#returns_3","title":"Returns","text":"<p>IContainer The container itself for chaining additional setup calls.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/","title":"MvcBuilderExtensions","text":"<p>Assembly: HAKOM.Versioning.Http.Net</p> <p>Namespace: HAKOM.Versioning.Http.Net.Api.Extensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensions-class","title":"MvcBuilderExtensions Class","text":"<p>Defines extension methods for adding version-related capabilities and endpoints to an MVC framework based HTTP API.</p> C#<pre><code>public static class MvcBuilderExtensions\n</code></pre> <p>Inheritance System.Object \ud83e\udc52 MvcBuilderExtensions</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#methods","title":"Methods","text":""},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsaddversionedserviceinformationendpointsthis-imvcbuilder-string-method","title":"MvcBuilderExtensions.AddVersionedServiceInformationEndpoints(this IMvcBuilder, string) Method","text":"<p>Adds an additional endpoint</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder AddVersionedServiceInformationEndpoints(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, string? basePath=null);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#parameters","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p></p> <p><code>basePath</code> System.String</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#returns","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p></p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#mvcbuilderextensionsselectendpointsbynamespaceandmediatypeversionthis-imvcbuilder-httpstatuscode-method","title":"MvcBuilderExtensions.SelectEndpointsByNamespaceAndMediaTypeVersion(this IMvcBuilder, HttpStatusCode) Method","text":"<p>Adds media type based API versioning to an MVC framework based HTTP API.</p> C#<pre><code>public static Microsoft.Extensions.DependencyInjection.IMvcBuilder SelectEndpointsByNamespaceAndMediaTypeVersion(this Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder, System.Net.HttpStatusCode statusCodeOnUnmatchedVersion=System.Net.HttpStatusCode.NotFound);\n</code></pre>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#parameters_1","title":"Parameters","text":"<p><code>mvcBuilder</code> Microsoft.Extensions.DependencyInjection.IMvcBuilder</p> <p>The Microsoft.Extensions.DependencyInjection.IMvcBuilder used to setup the application.</p> <p></p> <p><code>statusCodeOnUnmatchedVersion</code> System.Net.HttpStatusCode</p> <p>The HTTP status code that should be returned by the application if no matching endpoint can be found for a requested API version.</p>"},{"location":"API%20Reference/_.NET%20API/HAKOM/Versioning/Http/API/Extensions/MvcBuilderExtensions/#returns_1","title":"Returns","text":"<p>Microsoft.Extensions.DependencyInjection.IMvcBuilder</p>"},{"location":"Core%20Concepts/","title":"Core Concepts","text":"<p>TODO</p>"},{"location":"Getting%20Started/","title":"Getting Started","text":"<p>TODO</p>"},{"location":"Getting%20Started/#bapenada","title":"BAPENADA","text":""}]}