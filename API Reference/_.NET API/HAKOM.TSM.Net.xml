<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HAKOM.TSM.Net</name>
    </assembly>
    <members>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions">
            <summary>
            Provides extension methods for registering interface implementations of Attributes with the container.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseDefaultAttributeTypeFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factories for types and stores related to time series attribute types with the container.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseDefaultAttributeFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factories for types and stores related to attributes with the container.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseAttributeTypeStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> implementation with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the AttributeType store.</typeparam>
            <typeparam name="TAttributeTypeStore">The class of the AttributeType store which implements the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>interface.</typeparam>
            <param name="container">The container to register the AttributeType store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseDefaultAttributeTypeStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> implementations for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the AttributeType stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseAttributeStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/> implementation with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the attribute store.</typeparam>
            <typeparam name="TAttributeStore">The class of the attribute store which implements the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/>interface.</typeparam>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ContainerExtensions.UseDefaultAttributeStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/> implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the attribute stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes.ContainerExtensions">
            <summary>
            Provides extension methods for registering interface implementations of Nodes with the container.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes.ContainerExtensions.UseDefaultNodeFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factories for types and stores related to nodes with the container.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes.ContainerExtensions.UseNodeStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> implementation with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the node store.</typeparam>
            <typeparam name="TNodeStore">The class of the node store which implements the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>interface.</typeparam>
            <param name="container">The container to register the node store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.Nodes.ContainerExtensions.UseDefaultNodeStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the node stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions">
            <summary>
            Extension methods for creating <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> objects. Used for authorization.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of attribute resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of attribute type resources.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new attribute <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new attribute <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new attribute <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new attribute <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeTypeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new attribute type <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeTypeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new attribute type <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeTypeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new attribute type <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.AttributeTypeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new attribute type <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Extensions.ResourceFactoryExtensions.ATTRIBUTE_TYPE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions">
            <summary>
            Extension methods for creating <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> objects. Used for authorization.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NODE_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of node resources.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NodeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new node <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NODE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NodeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new node <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NODE_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NodeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new node <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NODE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NodeResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new node <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Attributes.Nodes.Extensions.ResourceFactoryExtensions.NODE_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode">
            <summary>
            A simple interface describing the relevant fields of a Node.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Root">
            <summary>
            Gets the reference to the root attribute associated with the node.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Name">
            <summary>
            Gets the name of the Node.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Parent">
            <summary>
            Gets the reference to the parent of the node or <see langword="null"/> if the node does not have a parent.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Children">
            <summary>
            Provides a read-only dictionary mapping child node names to their references.
            <para>
            - <b>Key</b>: Child node name (<see cref="T:System.String"/>)<br/>
            - <b>Value</b>: Reference to the child node (<see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/>)
            </para>
            <para>
            Returns an empty dictionary if the node has no children.
            </para>
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory.Create(System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference)">
            <summary>
            Create an attribute with the given <paramref name="name"/>, <paramref name="parent"/>, <paramref name="root"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new Node.</param>
            <param name="parent">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the new Node.</param>
            <param name="root">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> of the new Node.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory.TryCreate(System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference)">
            <summary>
            Attempts to create an attribute with the given <paramref name="name"/>, <paramref name="parent"/>, <paramref name="root"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new Node.</param>
            <param name="parent">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the new Node.</param>
            <param name="root">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> of the new Node.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory.Create(System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Collections.Generic.IReadOnlyDictionary{System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference})">
            <summary>
            Create an attribute with the given <paramref name="name"/>, <paramref name="parent"/>, <paramref name="root"/>, <paramref name="children"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new Node.</param>
            <param name="parent">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the new Node.</param>
            <param name="root">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> of the new Node.</param>
            <param name="children">Dictionary of the references referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> 
            children of the new Node. 
            - <b>Key</b>: Child node name (<see cref="T:System.String"/>)<br/>
            - <b>Value</b>: Reference to the child node (<see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/>)
            </param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.INodeFactory.TryCreate(System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Collections.Generic.IReadOnlyDictionary{System.String,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference})">
            <summary>
            Attempts to create an attribute with the given <paramref name="name"/>, <paramref name="parent"/>, <paramref name="root"/>, <paramref name="children"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new Node.</param>
            <param name="parent">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the new Node.</param>
            <param name="root">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> of the new Node.</param>
            <param name="children">Dictionary of the references referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> 
            children of the new Node. 
            - <b>Key</b>: Child node name (<see cref="T:System.String"/>)<br/>
            - <b>Value</b>: Reference to the child node (<see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/>)
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters">
            <summary>
            Defines parameters for searching nodes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters.Name">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Name"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters.Root">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Root"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters.Parent">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Parent"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParametersFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParametersFactory.Create(System.String,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference)">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> objects with the given <paramref name="name"/>, <paramref name="root"/> and <paramref name="parent"/>.
            </summary>
            <param name="name">The name of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> object.</param>
            <param name="root">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> root of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> object.</param>
            <param name="parent">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> parent of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> object.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore">
            <summary>
            Used to find, load, save or delete <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>s. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStoreFactory"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.SearchParameters">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParametersFactory"/> for creating new search parameters.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.String,System.Threading.CancellationToken)">
            <summary>
            Uses the given parameters to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> it refers to.
            </summary>
            <param name="rootReference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> which is the root of the node to be loaded.</param>
            <param name="parentReference">The reference to the parent of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> which will be loaded.</param>
            <param name="name">The name of the node which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the desired node.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to use the given parameters to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> it refers to.
            </summary>
            <param name="rootReference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> which is the root of the node to be loaded.</param>
            <param name="parentReference">The reference to the parent of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> which will be loaded.</param>
            <param name="name">The name of the node which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired node.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Load(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Uses the given <paramref name="reference"/> to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> it refers to.
            </summary>
            <param name="reference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the node to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the desired node.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TryLoad(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to use the given <paramref name="reference"/> to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> it refers to.
            </summary>
            <param name="reference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> of the node to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired node.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Save(HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Persists the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> to the repository.
            </summary>
            <param name="node">The node which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted node.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TrySave(HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Attempts to persist the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> to the repository.
            </summary>
            <param name="node">The node which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted node.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Update(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Modifies the given <paramref name="oldNode"/> with the <paramref name="modifiedNode"/> and persist it to the repository.
            </summary>
            <param name="oldNode">The node which will be updated with the <paramref name="modifiedNode"/>.</param>
            <param name="modifiedNode">The node which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted node.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TryUpdate(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Attempts to modify the given <paramref name="oldNode"/> with the <paramref name="modifiedNode"/> and persist it to the repository.
            </summary>
            <param name="oldNode">The node which will be updated with the <paramref name="modifiedNode"/>.</param>
            <param name="modifiedNode">The node which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted node.</returns>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted node.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Deletes all <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> with the given <paramref name="rootReference"/> from the repository.
            </summary>
            <param name="rootReference">The root of the nodes which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating that the process is finished.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> with the given <paramref name="rootReference"/> from the repository.
            </summary>
            <param name="rootReference">The root of the nodes which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating that the process is finished.</returns>
            <remarks>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> contains an error, when the operation fails.</remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.Find(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.Attributes.Nodes.INode},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.Attributes.Nodes.INode}},System.Threading.CancellationToken)">
            <summary>
            Finds <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> objects by the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/>.
            </summary>
            <param name="searchParameters">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A collection of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken"></param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore.TryFind(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.Attributes.Nodes.INode},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.Attributes.Nodes.INode}},System.Threading.CancellationToken)">
            <summary>
            Finds <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> objects by the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/>.
            </summary>
            <param name="searchParameters">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A collection of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken"></param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> .</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStoreFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Attempts to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1">
            <summary>
            Used to find, load, save or delete <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>s. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStoreFactory"/>.
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> objects.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.References">
            <summary>
            Gets a factory used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.Load(`0,System.Threading.CancellationToken)">
            <summary>
            Loads the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The unique identifier of the node in the repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns
            >A <see cref="T:System.Threading.Tasks.Task`1"/> containing an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> to 
            the desired <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.TryLoad(`0,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The unique identifier of the node in the repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired Node.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.Update(`0,HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Modifies the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> in the repository identified by <paramref name="identifier"/> using the data from the provided <paramref name="node"/>.
            </summary>
            <param name="identifier">The unique identifier of the node in the repository.</param>
            <param name="node">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted node.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.TryUpdate(`0,HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)">
            <summary>
            Attempts to modify <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> in the repository identified by <paramref name="identifier"/> using the data from the provided <paramref name="node"/>.
            </summary>
            <param name="identifier">The unique identifier of the node in the repository.</param>
            <param name="node">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted node.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference">
            <summary>
            Represents a reference to a node that is stored permanently in some repository
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> objects.
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1.Configure(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore{`0})">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1"/> for usage.
            </summary>
            <param name="NodeStore">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1"/> for loading the references.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1.Create(`0)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1.TryCreate(`0)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1.Create(`0,HAKOM.TSM.Net.Api.Attributes.Nodes.INode)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</param>
            <param name="node">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReferenceFactory`1.TryCreate(`0,HAKOM.TSM.Net.Api.Attributes.Nodes.INode)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</param>
            <param name="node">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1">
            <summary>
            Represents a reference to a node permanently stored in a repository and uniquely identified by a specific identifier in a repository..
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.INode"/> object.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.IAttribute">
            <summary>
            A simple interface describing the relevant fields of an attribute.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Name">
            <summary>
            Gets or Sets the name of the attribute.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Description">
            <summary>
            Gets or Sets the description of the attribute.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Type">
            <summary>
            Gets the type of the attribute.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.IAttributeFactory">
            <summary>
            A factory to create attributes.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.IAttributeFactory.Create(System.String,System.String,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference)">
            <summary>
            Create an attribute with the given <paramref name="name"/>, <paramref name="description"/> and <paramref name="type"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new attribute.</param>
            <param name="description">The <see cref="T:System.String"/> description of the new attribute.</param>
            <param name="type">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> of the new attribute.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.IAttributeFactory.TryCreate(System.String,System.String,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference)">
            <summary>
            Attempts to create an attribute with the given <paramref name="name"/>, <paramref name="description"/> and <paramref name="type"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the new attribute.</param>
            <param name="description">The <see cref="T:System.String"/> description of the new attribute.</param>
            <param name="type">The reference referring the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> of the new attribute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType">
            <summary>
            The type of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.IAttributeType.Name">
            <summary>
            The name of the type of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.IAttributeTypeFactory">
            <summary>
            Used to create new instances of <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> for <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>s.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.IAttributeTypeFactory.Create(System.String)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> with a specific <paramref name="name"/>.
            </summary>
            <param name="name">The name of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</param>
            <returns>the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.IAttributeTypeFactory.TryCreate(System.String)">
            <summary>
            Attempts to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> with a specific <paramref name="name"/>.
            </summary>
            <param name="name">The name of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeNameAlreadyExistsException">
            <summary>
            Indicates that an attempt was made to save or update an attribute with a name, wich already exists in the repository.
            </summary>
            <remarks>
            <para>
            Make sure you have written the name correctly. If you wish to modify the existing attribute, use
            <see cref="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Load(System.String,System.Threading.CancellationToken)"/> to load the attribute first, then save the changes.
            </para>
            <para>
            This exception is identified by error code HK15091.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeNameAlreadyExistsException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with an attribute that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            This exception is typically raised when trying to access an attribute that does not exist in the specified store.
            Ensure that the correct store is being accessed.
            </para>
            <para>
            This exception is identified by error code HK15104.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeTypeNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with an attribute type that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            Make sure that the correct store is being accessed or define the attribute type in the current store by calling <see cref="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Save(HAKOM.TSM.Net.Api.Attributes.IAttributeType,System.Threading.CancellationToken)"/> or a similar overload.
            </para>
            <para>
            This exception is identified by error code HK15089.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.AttributeTypeNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CannotChangeNodeRootException">
            <summary>
            Indicates that an attempt was made to change the root of an existing node.
            </summary>
            <remarks>
            <para>
            The given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> does not exist. 
            (e.g. the reference given in <see cref="M:HAKOM.TSM.Net.Attributes.Nodes.Persistence.NodeStore`1.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)"/> 
            does not exist.)
            </para>
            <para>
            This exception is identified by error code HK15131.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CannotChangeNodeRootException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CircularNodeTreeException">
            <summary>
            Indicates an attempt to save or update a node that would result in an invalid tree structure.
            A valid tree structure does not contain circles (A grandparent of a node is also its child).
            Make sure that there are no circles in the node structure.
            </summary>
            <remarks>
            <para>
            The root, parent and name of the node where the circle was detected.
            </para>
            <para>
            This exception is identified by error code HK15129.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CircularNodeTreeException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotDeleteAttributeDataException">
            <summary>
            Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15108.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotDeleteAttributeDataException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotUpdateAttributeValueException">
            <summary>
            Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15107.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotUpdateAttributeValueException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotWriteAttributeDataException">
            <summary>
            Indicates that an attempt to write attribute data for the configured time series-attribute assignment has failed.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15109.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.CouldNotWriteAttributeDataException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.DeletingAttributeDataAndAttributeValueFailedException">
            <summary>
            Indicates that the attribute data from the configured time series-attribute assignment could not be deleted.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15108.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.DeletingAttributeDataAndAttributeValueFailedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.InvalidAttributeTypeIdentifierException">
            <summary>
            Indicates that a attribute type operation was attempted with an invalid attribute type identifier.
            </summary>
            <remarks>
            <para>
            Make sure you have written the name or id correctly. 
            </para>
            <para>
            This exception is identified by error code HK15113.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.InvalidAttributeTypeIdentifierException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.InvalidNodeStorageInformationException">
            <summary>
            Indicates that an attempt was made to load, save, update or delete a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/> 
            to or from a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/> with an different repository or the parent or root of the node has a different repository.
            </summary>
            <remarks>
            <para>
            When loading, saving, updating or deleting <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/>, the 
            <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>, <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference"/>,
            the parent of the node and the root of the node must be in the same repository.
            </para>
            <para>
            This exception is identified by error code HK15133.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.InvalidNodeStorageInformationException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NoAttributeDataFoundException">
            <summary>
            Indicates that no attribute data was found for the configured time series-attribute assignment.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15110.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NoAttributeDataFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeAlreadyExistsException">
            <summary>
            Indicates that an attempt was made to create a node with <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Parent"/>, <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Root"/> and <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Name"/> combination that already exists.
            Since the truple (name, parent and root) is a unique identifier for a node, you cannot have 2 Nodes with the same (name, parent and root).
            </summary>
            <remarks>
            <para>
            The combination of <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Name"/>, id of <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Root"/>, and id of <see cref="P:HAKOM.TSM.Net.Api.Attributes.Nodes.INode.Parent"/> of the node has to be unique in the repository.
            </para>
            <para>
            This exception is identified by error code HK15128.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeAlreadyExistsException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeNotFoundException">
            <summary>
            Indicates that an attempt was made to manually save a node id.
            </summary>
            <remarks>
            <para>
            The id given in <see cref="M:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1.Update(`0,HAKOM.TSM.Net.Api.Attributes.Nodes.INode,System.Threading.CancellationToken)"/> 
            does not exist and saving a node with a predefined id is not permitted.
            </para>
            <para>
            This exception is identified by error code HK15130.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeRootNotFoundException">
            <summary>
            Indicates that an attempt was made to access/modify/delete the root of a node that has a non-existent attribute id.
            </summary>
            <remarks>
            <para>
            The given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> does not exist. 
            (e.g. the reference given in <see cref="M:HAKOM.TSM.Net.Attributes.Nodes.Persistence.NodeStore`1.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)"/> 
            does not exist.)
            </para>
            <para>
            This exception is identified by error code HK15131.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.Exceptions.NodeRootNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters">
            <summary>
            Defines parameters for searching attributes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters.Name">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Name"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters.Description">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Description"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters.Type">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> by their <see cref="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Type"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParametersFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParametersFactory.Create(System.String,System.String,HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference)">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> objects with the given <paramref name="name"/>, <paramref name="description"/> and <paramref name="type"/>.
            </summary>
            <param name="name">The name of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> object.</param>
            <param name="description">The description of the new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> object.</param>
            <param name="type">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> of the new  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> object.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore">
            <summary>
            Used to find, load, save or delete <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>s. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStoreFactory"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.SearchParameters">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParametersFactory"/> for creating new search parameters.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Load(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads a single <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> from storage, if one with the given <paramref name="name"/> exists.
            </summary>
            <param name="name">The unique name of the attribute.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the desired attribute.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TryLoad(System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to load a single <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> from storage, if one with the given <paramref name="name"/> exists.
            </summary>
            <param name="name">The unique name of the attribute.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Uses the given <paramref name="attributeReference"/> to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> it refers to.
            </summary>
            <param name="attributeReference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the desired attribute.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to use the given <paramref name="attributeReference"/> to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> it refers to.
            </summary>
            <param name="attributeReference">The reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Save(HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Persists the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository.
            </summary>
            <param name="attribute">The attribute which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted attribute.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TrySave(HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Attempts to persist the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository.
            </summary>
            <param name="attribute">The attribute which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.SaveOrUpdate(HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Persists the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository or updates it, if it already exists.
            </summary>
            <param name="attribute">The attribute which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted attribute.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Attempts to persist the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository or updates it, if it already exists.
            </summary>
            <param name="attribute">The attribute which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> with the given <paramref name="name"/> from the repository.
            </summary>
            <param name="name">The name of the attribute which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating that the process is finished.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TryDelete(System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> with the given <paramref name="name"/> from the repository.
            </summary>
            <param name="name">The name of the attribute which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating that the process is finished.</returns>
            <remarks>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> contains an error, when the operation fails.</remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> referred to by the given <paramref name="attributeReference"/> from the repository.
            </summary>
            <param name="attributeReference">
            An <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be deleted.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating that the process is finished.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> referred to by the given <paramref name="attributeReference"/> from the repository.
            </summary>
            <param name="attributeReference">
            An <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be deleted.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating that the process is finished.</returns>
            <remarks>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> contains an error, when the operation fails.</remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.Find(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.Attributes.IAttribute}},System.Threading.CancellationToken)">
            <summary>
            Finds <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects by the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/>.
            </summary>
            <param name="searchParameters">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A collection of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken"></param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.TryFind(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.Attributes.IAttribute}},System.Threading.CancellationToken)">
            <summary>
            Finds <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects by the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/>.
            </summary>
            <param name="searchParameters">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A collection of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken"></param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> .</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStoreFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="attributeTypeStore">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> used for creating attribute type references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="attributeTypeStore">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> used for creating attribute type references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1">
            <summary>
            Used to find, load, save or delete <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>s. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStoreFactory"/>.
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.References">
            <summary>
            Gets a factory used to create <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.Load(`0,System.Threading.CancellationToken)">
            <summary>
            Loads the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The unique identifier of the attribute in the repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns
            >A <see cref="T:System.Threading.Tasks.Task`1"/> containing an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> to 
            the desired <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.TryLoad(`0,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The unique identifier of the attribute in the repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the desired attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.SaveOrUpdate(`0,HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Persists the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository or updates it, if it already exists.
            </summary>
            <param name="identifier">The unique identifier of the attribute in the repository.</param>
            <param name="attribute">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing a reference to the persisted attribute.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.TrySaveOrUpdate(`0,HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)">
            <summary>
            Attempts to persist the given <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> to the repository or updates it, if it already exists.
            </summary>
            <param name="identifier">The unique identifier of the attribute in the repository.</param>
            <param name="attribute">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a reference to the persisted attribute.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> referred to by the given <paramref name="attributeReference"/> from the repository.
            </summary>
            <param name="attributeReference">
            An <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be deleted.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> indicating that the process is finished.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference{`0},System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> referred to by the given <paramref name="attributeReference"/> from the repository.
            </summary>
            <param name="attributeReference">
            An <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> which will be deleted.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> indicating that the process is finished.</returns>
            <remarks>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> contains an error, when the operation fails.</remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore">
            <summary>
            A store to manage attribute types. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStoreFactory"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Find(System.Threading.CancellationToken)">
            <summary>
            Finds all currently available <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available attribute types.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TryFind(System.Threading.CancellationToken)">
            <summary>
            Attempts to find all currently available <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available attribute types in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Load(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name of the attribute type to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the requested attribute type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TryLoad(System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name of the attribute type to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the requested <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Load(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference,System.Threading.CancellationToken)">
            <summary>
            Loads the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> by the specified <paramref name="attributeTypeReference"/>.
            </summary>
            <param name="attributeTypeReference">The reference of the attribute type (<see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>) which will be reloaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TryLoad(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> by the specified <paramref name="attributeTypeReference"/>.
            </summary>
            <param name="attributeTypeReference">The reference of the attribute type (<see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>) which will be reloaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing 
            the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Save(HAKOM.TSM.Net.Api.Attributes.IAttributeType,System.Threading.CancellationToken)">
            <summary>
            Saves the provided <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.
            </summary>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TrySave(HAKOM.TSM.Net.Api.Attributes.IAttributeType,System.Threading.CancellationToken)">
            <summary>
            Attempts to save a provided <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.
            </summary>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name of the attribute type to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TryDelete(System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name of the attribute type to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.Delete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference,System.Threading.CancellationToken)">
            <summary>
            Deletes the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> by the given <paramref name="attributeTypeReference"/>.
            </summary>
            <param name="attributeTypeReference">The reference of the attribute type to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore.TryDelete(HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> by the given <paramref name="attributeTypeReference"/>.
            </summary>
            <param name="attributeTypeReference">The reference of the attribute type to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Attempts to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1">
            <summary>
            A store to manage <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStoreFactory"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.References">
            <summary>
            The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1" /> which can create a reference to an <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.Load(`0,System.Threading.CancellationToken)">
            <summary>
            Loads the<see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref = "T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference" /> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the attribute type.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.TryLoad(`0,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the<see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> as <see cref = "T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference" /> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the attribute type.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.Update(`0,HAKOM.TSM.Net.Api.Attributes.IAttributeType,System.Threading.CancellationToken)">
            <summary>
            Updates the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> with the specified <paramref name="identifier"/> by the provided <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> data.
            </summary>
            <param name="identifier">The identifier of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to update.</param>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A reference to the updated <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.TryUpdate(`0,HAKOM.TSM.Net.Api.Attributes.IAttributeType,System.Threading.CancellationToken)">
            <summary>
            Attempts to update the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> with the specified <paramref name="identifier"/> by the provided <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> data.
            </summary>
            <param name="identifier">The identifier of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to update.</param>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the reference to the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.Delete(`0,System.Threading.CancellationToken)">
            <summary>
            Deletes a <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> from the repository based on the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1.TryDelete(`0,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete a <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> from the repository based on the specified <paramref name="identifier"/>.
            </summary>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference">
            <summary>
            Represents a reference to an attribute that is stored permanently in some repository
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1">
            <summary>
            Creates <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> objects.
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1.Configure(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore{`0})">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1"/> for usage.
            </summary>
            <param name="attributeStore">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore`1"/> for loading the references.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1.Create(`0)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1.TryCreate(`0)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1.Create(`0,HAKOM.TSM.Net.Api.Attributes.IAttribute)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</param>
            <param name="attribute">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReferenceFactory`1.TryCreate(`0,HAKOM.TSM.Net.Api.Attributes.IAttribute)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</param>
            <param name="attribute">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeReference`1">
            <summary>
            Represents a reference to an attribute permanently stored in a repository.
            </summary>
            <typeparam name="TIdentifier">The type of unique identifier used to refer to <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> objects.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference">
            <summary>
            Represents a reference to an attribute type permanently stored in a repository.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference`1"/>.
            </summary>
            <typeparam name="TIdentifier">The type of the identifier for the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference`1"/>.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1.Configure(HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore{`0})">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1"/> for usage.
            </summary>
            <param name="attributeTypeStore">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore`1"/> for loading the references.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1.Create(`0)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The identifier for the time series reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1.TryCreate(`0)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1.Create(`0,HAKOM.TSM.Net.Api.Attributes.IAttributeType)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</param>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReferenceFactory`1.TryCreate(`0,HAKOM.TSM.Net.Api.Attributes.IAttributeType)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/> with the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</param>
            <param name="attributeType">The <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttributeType"/> to be associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attributes.Persistence.References.IAttributeTypeReference`1">
            <summary>
            Represents a reference to an attribute type permanently stored and uniquely identified by a specific identifier in a repository.
            </summary>
            <typeparam name="TIdentifier">The type of the identifier that can be used to uniquely identify the attribute type.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions.AttributeIdNotAllowedOnSaveException">
            <summary>
            Indicates that an attempt was made to manually save an attribute id.
            </summary>
            <remarks>
            <para>
            The id given in <see cref="M:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore.SaveOrUpdate(HAKOM.TSM.Net.Api.Attributes.IAttribute,System.Threading.CancellationToken)"/> 
            does not exist and saving an attribute with a predefined id is not permitted. 
            </para>
            <para>
            This exception is identified by error code HK15094.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Attribute.Persistence.Exceptions.AttributeIdNotAllowedOnSaveException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions.ReadingDataForAggregationException">
            <summary>
            Indicates that reading data from time series for aggregation has failed.
            </summary>
            <remarks>
            <para>
            When aggregating time series, the repository and the time series data must be loaded for the aggregation.
            Further details on the specific loading error can be found in the inner exception.
            </para>
            <para>
            This exception is identified by error code HK15116.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Aggregation.Exceptions.ReadingDataForAggregationException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions">
            <summary>
            Represents options for aggregating time series data. It defines how the data for the defined <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be retrieved.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions.TimeSeriesReferences">
            <summary>
            Gets a list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> the data should be retrieved for.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions.Unit">
            <summary>
            Gets a reference to the unit determining how the data should be read.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions.HistoricDateTime">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> that is used to define which historic data set should be read.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions.IntervalTransformationMethod">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptionsFactory">
            <summary>
            Used for creating new <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptionsFactory.Create(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod})">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="timeSeriesReferences">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> the data should be retrieved for.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptionsFactory.TryCreate(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod})">
            <summary>
            Tries to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="timeSeriesReferences">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> the data should be retrieved for.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator">
            <summary>
            Non-generic marker interface for <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/> implementations.
            Used to register implementations for use by an <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregatorFactory"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregatorFactory">
            <summary>
            Used for creating a new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregatorFactory.Create``1">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to aggregate.</typeparam>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregatorFactory.TryCreate``1">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to aggregate.</typeparam>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1">
            <summary>
            Aggregates time series data.
            </summary>
            <typeparam name="TValue">The type of the data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesReferences"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that defines which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.TryAggregate(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesReferences"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="aggregationTimeSeriesDataReadingOptions"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="aggregationTimeSeriesDataReadingOptions">A list of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            This method is similar to <see cref="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)"/> 
            but allows to define <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> for each <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> separately.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.TryAggregate(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="aggregationTimeSeriesDataReadingOptions"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="aggregationTimeSeriesDataReadingOptions">A list of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            <para>
            This method is similar to <see cref="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)"/> 
            but allows to define <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> for each <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> separately.
            </para>
            <para>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.TryAggregate(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.TryAggregate(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>from the provided <paramref name="timeSeriesReferences"/> and based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/> and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1.Aggregate(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>from the provided <paramref name="timeSeriesReferences"/> and based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/> and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.CompilationOfCalculationContextFailedException">
            <summary>
            When thrown, the compilation of the script which creates a new <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/> child class failed.
            </summary>
            <remarks>
            <para>
            This exception is most likely caused by a bug. Please report this exception to the HAKOM Support.
            </para>
            <para>
            This exception is identified by error code HK15084.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CompilationOfCalculationContextFailedException.CompilationErrors">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> which holds all compilation errors occured during the 
            compilation of the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CompilationOfCalculationContextFailedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionsNotFoundException">
            <summary>
            Indicates that a formula used during calculation referred to a custom function but no custom function with this name can be found in the directory.
            </summary>
            <remarks>
            <para>
            When using custom functions in <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> be sure to put the file with the custom function in the directory 
            of the assemblies of HAKOM and set the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute"/> to the name how you want to call the 
            function in the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>.
            </para>
            <para>
            This exception is identified by error code HK15087.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionsNotFoundException.MissingFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionsNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionTypeHasErrorException">
            <summary>
            Indicates that a formula used during calculation referred to a custom function but the custom function had an compilation error.
            </summary>
            <remarks>
            <para>
            When using custom functions in <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> check if the custom function can be compiled.
            </para>
            <para>
            This exception is identified by error code HK15082.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionTypeHasErrorException.CustomFunctionCompileErrors">
            <summary>
            Contains a list of all compile errors.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.CustomFunctionTypeHasErrorException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.DefaultRepositoryCannotBeNullException">
            <summary>
            Thrown when the given defaultRepositoryName is null and the formula time series doesn't have a repository name in
            its storage information.
            </summary>
            <para>
            Ensure, that the given defaultRepositoryName is not null and, if it is, that the given formula time series has a
            repository name in its storage information.
            </para>
            <para>
            This exception is identified by error code HK15078.
            </para>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.DefaultRepositoryCannotBeNullException.EquivalentHttpStatusCode">
            <summary>
            When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.FormulaContainsACyclicReferenceException">
            <summary>
            Thrown when the given formula contains a cyclic reference.
            </summary>
            <para>
            Ensure, that the formula doesn't contain any cyclic references. A cyclic reference occurs, when a formula references a formula time series,
            which itself references the time series, containing the original formula. Since formulas can reference multiple formula time series, it's
            important to go through all of their references, because the formula, which completes the cycle, could be multiple "levels" down from the
            formula time series it references.
            </para>
            <para>
            This exception is identified by error code HK15076.
            </para>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.FormulaContainsACyclicReferenceException.EquivalentHttpStatusCode">
            <summary>
            When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.FormulaResultCannotBeMatchedToTimeSeriesDataException">
            <summary>
            The result of the calculated formula cannot be matched to an object of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.
            </summary>
            <remarks>
            <para>
            Make sure, that the result of the formula can be converted to an object of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.
            </para>
            <para>
            This exception is identified by error code HK15079.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.FormulaResultCannotBeMatchedToTimeSeriesDataException.EquivalentHttpStatusCode">
            <summary>
            When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.InstanceOfCustomFunctionCouldNotBeCreatedException">
            <summary>
            An instance of a custom function could not be created.
            <remarks>
            <para>
            Make sure that a constructor with no paramaters is available for all custom functions.
            </para>
            <para>
            This exception is identified by error code HK15085.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.InstanceOfCustomFunctionCouldNotBeCreatedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.InvalidTimeSeriesReferenceInFormulaException">
            <summary>
            Thrown when a time series reference cannot be resolved due to to many dots or commas in the reference.
            </summary>
            <remarks>
            <para>
            If the time series reference contains dots or commas in either the time series or repository name, the name must be escaped by quotation marks.
            </para>
            <para>
            This exception is identified by error code HK15080.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.InvalidTimeSeriesReferenceInFormulaException.EquivalentHttpStatusCode">
            <summary>
            When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.MultipleCustomFunctionsWithTheSameNameException">
            <summary>
            Indicates that an attempt was made to use a custom function but multiple custom functions have the same name.
            </summary>
            <remarks>
            <para>
            When using custom functions in <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> be sure to create only custom functions with unique "Name" properties.
            </para>
            <para>
            This exception is identified by error code HK15083.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.MultipleCustomFunctionsWithTheSameNameException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Exceptions.TimeSeriesDoesNotContainAFormulaException">
            <summary>
            Thrown when the given time series isn't a formula time series (doesn't contain a formula).
            </summary>
            <para>
            Ensure, that the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Formula"/> property has a value.
            </para>
            <para>
            This exception is identified by error code HK15077.
            </para>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Exceptions.TimeSeriesDoesNotContainAFormulaException.EquivalentHttpStatusCode">
            <summary>
            When this error occurs while handling an HTTP request, the response should be terminated with a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions">
            <summary>
            Defines extension methods on <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> for registering services used to work with calculations.
            </summary>
            
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseDefaultCalculationFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factory implementations for calculations.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseDefaultFormulaCalculator(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseCalculationDefaults(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers implementations for all calculation related services.
            </summary>
            <param name="container">The container to register the services with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseFormulaCalculator(HAKOM.DependencyInjection.Core.Net.Api.IContainer,System.Type)">
            <summary>
            Registers a custom implementation of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/>.
            </summary>
            <param name="container">The container to register the data converter with.</param>
            <param name="implementation">The concrete implementing type to use for this registration.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseDefaultAggregator(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Calculation.Aggregation.Aggregator`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Extensions.ContainerExtensions.UseAggregator(HAKOM.DependencyInjection.Core.Net.Api.IContainer,System.Type)">
            <summary>
            Registers a custom implementation of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregator`1"/>.
            </summary>
            <param name="container">The container to register the data converter with.</param>
            <param name="implementation">The concrete implementing type to use for this registration.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1">
            <summary>
            Base class for calculation context classes that provide functionality for calling custom functions from a formula.
            </summary>
            <typeparam name="TValue">The value type of the formula.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1.CustomFunctionContext">
            <summary>
            The custom function context to initialize custom functions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1.#ctor(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext{`0})">
            <summary>
            Constructor creates a new CalculationContext object and sets the <see cref="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1.CustomFunctionContext"/>.
            </summary>
            <param name="customFunctionContext">The custom function context for initializing custom functions.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute">
            <summary>
            Attribute holding the name of a custom function.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute.Name">
            <summary>
            Name of the custom function.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute.#ctor(System.String)">
            <summary>
            Constructor for the custom function name attribute.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction">
            <summary>
            Base interface for custom functions. This interface provides all properties and methods which are 
            independent of the parameters and return type of the implemented custom function.
            </summary>
            <remarks>
            Please use one of the sub-interfaces for implementing a custom function.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction.Initialize``1(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext{``0})">
            <summary>
            Is called once for every calculation of an <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>, regardless if the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>
            is used in the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> or not. Therefor, the method should require as little runtime and memory as possible.
            </summary>
            <typeparam name="TValue">The type of the values, which will be calculated.</typeparam>
            <param name="context">
            The <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> which provides properties like referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> for the calculation.
            </param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction.TryGetReference``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{``0},HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext{``0},HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData{``0}@)">
            <summary>
            Tries to get the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> and <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data in the reading 
            period of a time series reference using an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. If the given <paramref name="data"/>
            does not result form a time series reference this method returns false.
            </summary>
            <typeparam name="TValue">The type of the values, which will be calculated.</typeparam>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>, which will be used to get the reference.</param>
            <param name="context">
            The <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/>, which provides properties like the referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> for the calculation.
            </param>
            <param name="reference">A tuple containing the referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> and the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> holding its data.</param>
            <returns>True if a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> and <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> could be found to the given <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContextFactory">
            <summary>
            A factory for creating the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> object.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContextFactory.Create``1(HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.Collections.Generic.IDictionary{System.Int32,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData{``0}},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference)">
            <summary>
            Creates the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> with the following user-defined properties:
            </summary>
            <typeparam name="TValue">Type of the data returned by the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`1"/>.</typeparam>
            <param name="calculationOptions"> An <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> with default settings for reading in the data used
            in the calculation of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="readingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="sourceTimeSeries">A dictionary containing all time series referenced by the formula.</param>
            <param name="rootTimeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object to which the formula string was assigned as property.
            Should be set to null if the formula string is not provided from an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> object. </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1">
            <summary>
            Facility for providing formula and computation properties
            necessary for the calculation of a custom function.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.TimeSeriesDataFactory">
            <summary>
            Facility for creating objects representing time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.ArithmeticOperations">
            <summary>
            Facility for executing arithmetic operations.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.CalculationOptions">
            <summary>
            Settings for reading in the data used in the calculation
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object. Applied to the time series
            that are referenced from the formula string an not to the root time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.ReadingOptions">
             <summary>
            An<see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
             desired properties of the return value.
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.RootTimeSeriesReference">
            <summary>
            Time series to which the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object was assigned as a property.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.SourceTimeSeries">
            <summary>
            Contains all time series referenced in the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.
            Time series appear in the order in which they are found in the formula string.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.CreateResult(System.DateTimeOffset,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0})">
            <summary>
            Coverts the given <paramref name= "data"/> to the return type to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. 
            </summary>
            <param name="calculationTime">The time of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</param>
            <param name="data">The value of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1.CreateResult(System.DateTimeOffset,`0)">
            <summary>
            Coverts the given <paramref name= "data"/> to the return type to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. 
            </summary>
            <param name="calculationTime">The time of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</param>
            <param name="data">The value of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`10">
            <summary>
            Interface for the for the custom function implementations with nine parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TParameter5">The fifth parameter of the custom function.
            Its type is <typeparamref name="TParameter5"/>.</typeparam>
            <typeparam name="TParameter6">The sixth parameter of the custom function.
            Its type is <typeparamref name="TParameter6"/>.</typeparam>
            <typeparam name="TParameter7">The seventh parameter of the custom function.
            Its type is <typeparamref name="TParameter7"/>.</typeparam>
            <typeparam name="TParameter8">The eighth parameter of the custom function.
            Its type is <typeparamref name="TParameter8"/>.</typeparam>
            <typeparam name="TParameter9">The ninth parameter of the custom function. 
            Its type is <typeparamref name="TParameter9"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`10.PerformBeforeCalculation(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <param name="parameter8">The eighth parameter of type <typeparamref name="TParameter8"/>.</param>
            <param name="parameter9">The ninth parameter of type <typeparamref name="TParameter9"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`10.Evaluate(System.DateTimeOffset,`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <param name="parameter8">The eighth parameter of type <typeparamref name="TParameter8"/>.</param>
            <param name="parameter9">The ninth parameter of type <typeparamref name="TParameter9"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`9">
            <summary>
            Interface for the for the custom function implementations with eight parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TParameter5">The fifth parameter of the custom function.
            Its type is <typeparamref name="TParameter5"/>.</typeparam>
            <typeparam name="TParameter6">The sixth parameter of the custom function.
            Its type is <typeparamref name="TParameter6"/>.</typeparam>
            <typeparam name="TParameter7">The seventh parameter of the custom function.
            Its type is <typeparamref name="TParameter7"/>.</typeparam>
            <typeparam name="TParameter8">The eighth parameter of the custom function.
            Its type is <typeparamref name="TParameter8"/>.
            .</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`9.PerformBeforeCalculation(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <param name="parameter8">The eighth parameter of type <typeparamref name="TParameter8"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`9.Evaluate(System.DateTimeOffset,`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <param name="parameter8">The eighth parameter of type <typeparamref name="TParameter8"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`8">
            <summary>
            Interface for the for the custom function implementations with eight parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TParameter5">The fifth parameter of the custom function.
            Its type is <typeparamref name="TParameter5"/>.</typeparam>
            <typeparam name="TParameter6">The sixth parameter of the custom function.
            Its type is <typeparamref name="TParameter6"/>.</typeparam>
            <typeparam name="TParameter7">The seventh parameter of the custom function.
            Its type is <typeparamref name="TParameter7"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`8.PerformBeforeCalculation(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`8.Evaluate(System.DateTimeOffset,`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <param name="parameter7">The seventh parameter of type <typeparamref name="TParameter7"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`7">
            <summary>
            Interface for the for the custom function implementations with six parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TParameter5">The fifth parameter of the custom function.
            Its type is <typeparamref name="TParameter5"/>.</typeparam>
            <typeparam name="TParameter6">The sixth parameter of the custom function.
            Its type is <typeparamref name="TParameter6"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`7.PerformBeforeCalculation(`0,`1,`2,`3,`4,`5)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`7.Evaluate(System.DateTimeOffset,`0,`1,`2,`3,`4,`5)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <param name="parameter6">The sixth parameter of type <typeparamref name="TParameter6"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`6">
            <summary>
            Interface for the for the custom function implementations with five parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TParameter5">The fifth parameter of the custom function.
            Its type is <typeparamref name="TParameter5"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`6.PerformBeforeCalculation(`0,`1,`2,`3,`4)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`6.Evaluate(System.DateTimeOffset,`0,`1,`2,`3,`4)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <param name="parameter5">The fifth parameter of type <typeparamref name="TParameter5"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`5">
            <summary>
            Interface for the for the custom function implementations with four parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TParameter4">The fourth parameter of the custom function.
            Its type is <typeparamref name="TParameter4"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`5.PerformBeforeCalculation(`0,`1,`2,`3)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`5.Evaluate(System.DateTimeOffset,`0,`1,`2,`3)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <param name="parameter4">The fourth parameter of type <typeparamref name="TParameter4"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`4">
            <summary>
            Interface for the for the custom function implementations with eight parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TParameter3">The third parameter of the custom function.
            Its type is <typeparamref name="TParameter3"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`4.PerformBeforeCalculation(`0,`1,`2)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <returns>an awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`4.Evaluate(System.DateTimeOffset,`0,`1,`2)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <param name="parameter3">The third parameter of type <typeparamref name="TParameter3"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`3">
            <summary>
            Interface for custom function implementations with two parameters.
            </summary>
            <typeparam name="TParameter1">The first parameter of the custom function.
            Its type is <typeparamref name="TParameter1"/>.</typeparam>
            <typeparam name="TParameter2">The second parameter of the custom function.
            Its type is <typeparamref name="TParameter2"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`3.PerformBeforeCalculation(`0,`1)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <returns>an awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`3.Evaluate(System.DateTimeOffset,`0,`1)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <param name="parameter1">The first parameter of type <typeparamref name="TParameter1"/>.</param>
            <param name="parameter2">The second parameter of type <typeparamref name="TParameter2"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`2">
            <summary>
            Interface for the for the custom function implementations with one parameter.
            </summary>
            <typeparam name="TParameter">The parameter of the custom function.
            Its type is <typeparamref name="TParameter"/>.</typeparam>
            <typeparam name="TResult"> Type of the return value of the custom function.
            </typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`2.PerformBeforeCalculation(`0)">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <param name="parameter">A parameter of type <typeparamref name="TParameter"/>.</param>
            <returns>an awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`2.Evaluate(System.DateTimeOffset,`0)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime"></param>
            <param name="parameter">A parameter of type <typeparamref name="TParameter"/>.</param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`1">
            <summary>
            Interface for the for the custom function implementations without parameters.
            </summary>
            <typeparam name="TResult">Type of the return value.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`1.PerformBeforeCalculation">
            <summary>
            PerformBeforeCalculation is called once before the calculation starts to perform for each time stamp.
            </summary>
            <returns>an awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction`1.Evaluate(System.DateTimeOffset)">
            <summary>
            Evaluate is called for every time stamp of the calculation.
            </summary>
            <param name="calculationTime">The current time stamp of <see cref="T:System.DateTimeOffset"/> to </param>
            <returns>The result returned by the custom function.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionOptions">
            <summary>
            Contains information on where custom function files are stored.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionOptions.DEFAULT_CUSTOM_FUNCTIONS_PATH">
            <summary>
            Gets the default location for custom function files.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionOptions.CUSTOM_FUNCTIONS_SECTION">
            <summary>
            Gets the configuration section containing custom function options.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionOptions.CustomFunctionPaths">
            <summary>
            Gets all paths where custom functions can be stored as <see cref="T:System.String"/> objects.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionProvider">
            <summary>
            Interface for the class used for obtaining them implementations of ICustomFunction from 
            user-provided .csx and .dll files.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionProvider.GetCustomFunctionTypes">
            <summary>
            Obtains all implementations of ICustomFunction in the user-provided csx and dll files.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the types of the obtained
            implementations of ICustomFunction represented as key-value pairs with the 
            the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute"/> as keys and the retrieved types as values </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionProvider.TryGetCustomFunctionTypes">
            <summary>
            Obtains all implementations of ICustomFunction in the user-provided csx and dll files.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> whether the types of the obtained
            implementations of ICustomFunction are represented as key-value pairs with the 
            the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.CustomFunctionNameAttribute"/> as keys and the retrieved types as values </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.ICalculationContextFactory">
            <summary>
            Factory for creating and compiling an object which inherits the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.ICalculationContextFactory.Create``1(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext{``0},System.String@,System.String,System.Type@,System.Reflection.Assembly@,Microsoft.CodeAnalysis.MetadataReference@)">
            <summary>
            Creates a new object that inherits the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>. 
            The object contains instances for each <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/> used in the 
            given <paramref name="parsedFormula"/>. For each instance, it contains a method 
            wrapper that converts the method call to the associated <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.Evaluate 
            method using the name of the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>. It also implements that 
            the first time the customFunction is called, the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.PerformBeforeEvaluate
            method is called.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="customFunctionContext">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> for the instances of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.</param>
            <param name="parsedFormula">The formula which is already parsed with the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaParser"/>.</param>
            <param name="originalFormula">A <see cref="T:System.String"/> containing the original formula which was parsed.</param>
            <param name="globalType">Returns the type of the Return-object.</param>
            <param name="globalAssembly">Returns the compiled assembly of the Return-object.</param>
            <param name="reference">Returns the <paramref name="globalAssembly"/> as a <see cref="T:Microsoft.CodeAnalysis.MetadataReference"/>.</param>
            <returns>Returns a new object that inherits the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.ICalculationContextFactory.TryCreate``1(HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext{``0},System.String@,System.String,System.Type@,System.Reflection.Assembly@,Microsoft.CodeAnalysis.MetadataReference@)">
            <summary>
            Creates a new object that inherits the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>. 
            The object contains instances for each <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/> used in the 
            given <paramref name="parsedFormula"/>. For each instance, it contains a method 
            wrapper that converts the method call to the associated <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.Evaluate 
            method using the name of the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>. It also implements that 
            the first time the customFunction is called, the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.PerformBeforeEvaluatemethod is called.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="customFunctionContext">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunctionContext`1"/> for the instances of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CustomFunctions.ICustomFunction"/>.</param>
            <param name="parsedFormula">The formula which is already parsed with the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaParser"/>.</param>
            <param name="originalFormula">A <see cref="T:System.String"/> containing the original formula which was parsed.</param>
            <param name="globalType">Returns the type of the Return-object.</param>
            <param name="globalAssembly">Returns the compiled assembly of the Return-object.</param>
            <param name="reference">Returns the <paramref name="globalAssembly"/> as a <see cref="T:Microsoft.CodeAnalysis.MetadataReference"/>.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of a new object that inherits the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.CalculationContext`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator">
            <summary>
            Non-generic base interface for <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/> implementations.
            Used to register implementations for use by an <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculatorFactory"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculatorFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculatorFactory.Create``1">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculatorFactory.TryCreate``1">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1">
            <summary>
            Interface for the implementations that obtain calculated values from the unparsed formula string.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1.TryCalculate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="timeSeriesReference">An <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object containing the unparsed formula as a property.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns> A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> which holds the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1.TryCalculate(HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="formula">An <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object containing the unparsed formula string.</param>
            <param name="calculationOptions"> Holds default settings for reading in the data used in the calculation
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns> A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> which holds the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1.Calculate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
             <summary>
             Parses the formula, obtains the data and calculates values based on the provided options.
             </summary>
             <param name="timeSeriesReference">An <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object containing the unparsed formula as a property.</param>
             <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
             desired properties of the return value.</param>
             <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
             <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> holding the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaCalculator`1.Calculate(HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="formula">An <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object containing the unparsed formula string.</param>
            <param name="calculationOptions"> Holds default settings for reading in the data used in the calculation
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> holding the resulting time series data upon calculation.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaParser">
            <summary>
            Parses formulas of type <see cref="T:System.String"/> to <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaParser.ParseFormula``1(System.String,System.String,HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Gets a formula of type <see cref="T:System.String"/> and converts it to a <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/> so it can be called as a script:
            * Replaces the time series references of format "[repositoryName.TimeSeriesName, unit, aggregation]" with <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1"/>
            * Replaces vale, flag pairs "{value|flag}" with <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1"/>
            * adds a Func call at the beginning so it can be called with the current calculation time and time series referenced values.
            </summary>
            <typeparam name="TValue">The value type of the time series data.</typeparam>
            <param name="formula">The formula as <see cref="T:System.String"/> loaded from the time series or given as ad-hoc formula.</param>
            <param name="defaultRepositoryName">The default repository name for the time series references without given repository name.</param>
            <param name="readingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> in which the time series data should be read.</param>
            <param name="calculationOptions"> Holds default settings for reading in the data used in the calculation 
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="historicDateTime">The historic date and time, which will be used to fetch <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> and related data.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>a <see cref="T:System.Threading.Tasks.Task`1"/> containing information of the formula for the calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IFormulaParser.TryParseFormula``1(System.String,System.String,HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Gets a formula of type <see cref="T:System.String"/> and tries to convert it to a <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/> so it can be called as a script.
            </summary>
            <typeparam name="TValue">The value type of the time series data.</typeparam>
            <param name="formula">The formula as <see cref="T:System.String"/> loaded from the time series or given as ad-hoc formula.</param>
            <param name="defaultRepositoryName">The default repository name for the time series references without given repository name.</param>
            <param name="readingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> in which the time series data should be read.</param>
            <param name="calculationOptions"> Unspecified settings for reading in the data used in the calculation 
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="historicDateTime">The historic date and time, which will be used to fetch <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> and related data.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/> containing information of the formula for the calculation.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula">
            <summary>
            <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/> holds information to a formula which is parsed to run as an <see cref="T:Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.ReferencedTimeSeries">
            <summary>
            Holds all <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> which are referenced in the <see cref="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.Formula"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.ReferencedTimeSeriesReadingOptions">
            <summary>
            Contains all <see cref="T:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions"/> which describes which time series are referenced in the <see cref="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.Formula"/> and what reading options should be used to read their data.
            The key is an <see langword="int"/> which can be used in the <see cref="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.Formula"/> to access the correct reference.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.Formula">
            <summary>
            The parsed formula which can be run as a <see cref="T:Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula.OriginalFormula">
            <summary>
            The original formula which was parsed.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormulaFactory">
            <summary>
            Factory used to create an IParsedFormula object.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormulaFactory.Create(System.Collections.Generic.IDictionary{System.Int32,HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions},System.String,System.String)">
            <summary>
            Factory used to create an IParsedFormula object.
            </summary>
            <param name="referencedTimeSeriesReadingOptions">A dictionary holding the referenced 
            time series and the reading options for them. May contain the same time series 
            multiple times.
            </param>
            <param name="formula">The parsed string containing the formula in a form ready for execution 
            using CSharpScript.</param>
            <param name="originalFormula">A <see cref="T:System.String"/> containing the original formula before it was parsed.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.IParsedFormula"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1">
            <summary>
            A wrapper used for formula calculation.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.#ctor(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1"/>.
            </summary>
            <param name="underlying">The underlying <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> which will be used for this wrapper.</param>
            <param name="arithmeticOperations">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> which will be used for all calculations.</param>
            <param name="timeSeriesDataFactory">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory"/> which will be used to qcreate new data points.</param>
            <param name="index">The <see cref="T:System.Int32"/> index of the data in the formula, to which the wrapper is referring.</param>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Index">
            <summary>
            Gets the index of the data in the formula, to which the wrapper is referring.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Time">
            <summary>
            Gets the time of the data point.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Value">
            <summary>
            Gets the value of the data point.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Flag">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Flag"/> of the data point.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Addition(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Calls the Add method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrappers.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>The sum of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Addition(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},`0)">
            <summary>
            Calls the Add method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrapper and value.
            </summary>
            <param name="left">The first operand - the wrapper.</param>
            <param name="right">The second operand - the value.</param>
            <returns>The sum of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Subtraction(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Calls the Subtract method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrappers.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>The difference of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Subtraction(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},`0)">
            <summary>
            Calls the Subtract method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrapper and value.
            </summary>
            <param name="left">The first operand - the wrapper.</param>
            <param name="right">The second operand - the value.</param>
            <returns>The difference of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Multiply(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Calls the Multiply method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrappers.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>The product of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Multiply(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},`0)">
            <summary>
            Calls the Multiply method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrapper and value.
            </summary>
            <param name="left">The first operand - the wrapper.</param>
            <param name="right">The second operand - the value.</param>
            <returns>The product of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Division(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Calls the Divide method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrappers.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>The quotient of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Division(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},`0)">
            <summary>
            Calls the Divide method of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations"/> with the given wrapper and value.
            </summary>
            <param name="left">The first operand - the wrapper.</param>
            <param name="right">The second operand - the value.</param>
            <returns>The quotient of the operands.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Equality(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Compares the two operands for equality.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>True, if the operands are equal, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.op_Inequality(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0},HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Compares the two operands for inequality.
            </summary>
            <param name="left">The first operand.</param>
            <param name="right">The second operand.</param>
            <returns>False, if the operands are equal, otherwise true.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Equals(HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper{`0})">
            <summary>
            Compares this wrapper to the given <paramref name="other"/> wrapper for equality.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1"/> which will be used for the equality check.</param>
            <returns>True, if the wrappers are equal, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Equals(HAKOM.TSM.Net.Api.Data.IData{`0})">
            <summary>
            Compares this wrapper to the given <see cref="T:HAKOM.TSM.Net.Api.Data.IData`1"/> for equality.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Data.IData`1"/> which will be used for the equality check.</param>
            <returns>True, if this wrapper is equal to the given <see cref="T:HAKOM.TSM.Net.Api.Data.IData`1"/>, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.Equals(System.Object)">
            <summary>
            Compares this wrapper to the given <see cref="T:System.Object"/> for equality.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> which will be used for the equality check.</param>
            <returns>True, if this wrapper is equal to the given <see cref="T:System.Object"/>, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.GetHashCode">
            <summary>
            Gets the hash code of this wrapper using its Time, Value, Flag and Index.
            </summary>
            <returns>An <see cref="T:System.Int32"/> representation of the hash code of this wrapper.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.Formulas.TimeSeriesDataCalculationWrapper`1.ToString">
            <summary>
            Gets a string representation of this wrapper using its Time, Value, Flag and Index.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions">
            <summary>
            Holds properties for the calculation of <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>s.
            These properties will influence the calculation and how the referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> will be read for the calculation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.Cyclic">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether calculation of the values is performed cyclic along the time axis or not.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.Function">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> specifying how values are applied along the time axis.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.IntervalTransformationMethod">
            <summary>
            Gets the interval transformation method that is used to transform the calculated data to the specified <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.Interval">
            <summary>
            Gets the interval determining how the referenced data should be read and the calculation should be performed.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.Unit">
            <summary>
            Gets a reference to the unit determining how the referenced data should be read.
            </summary>
            <remarks>
            This can be overwritten by suppling a unit with the referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> in the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>.
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.TimeZone">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> in which the calculation should take place.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions.StartOfTime">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset"/> representing the start time of the calculation data mesh.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptionsFactory">
            <summary>
            Options for reading in time series data used in the calculation.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculationOptionsFactory.Create(System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{System.DateTimeOffset})">
            <summary>
            Contains options for calculations with time series data.
            </summary>
            <param name="cyclic">Gets or sets a <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.</param>
            <param name="function"> Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> specifying how values are applied along the time axis.</param>
            <param name="intervalTransformationMethod"> <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data to the specified <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/>.</param>
            <param name="interval"><see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the data in the computed result.</param>
            <param name="unit">Reference to the unit of the data in the computed result.</param>
            <param name="timeZone">
            Sets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> property of the resulting <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> object. If the given
            <paramref name="timeZone"/> is null, the default value will be used.
            </param>
            <param name="startOfTime">
            Sets the startOfTime of the resulting <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> object. If the given
            <paramref name="startOfTime"/> is null, the default value will be used.
            </param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.ICalculator">
            <summary>
            Non-generic base interface used to access implementations for all types of calculations.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculator.ReadingOptions">
            <summary>
            A factory for creating the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> which will determine, how the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> will be read after calculations are complete.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculator.CalculationOptions">
            <summary>
            A factory for creating the <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/>, which are used to read data from the time series specified in the calculation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ICalculator.AggregationTimeSeriesDataReadingOptions">
            <summary>
            A factory for creating the <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/>, which are used to aggregate data from multiple time series with different reading options.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryCalculate``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="timeSeriesReference">An <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object containing the unparsed formula as a property.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns> A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> which holds the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryCalculate``1(HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="formula">An <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object containing the unparsed formula string.</param>
            <param name="calculationOptions"> Holds default settings for reading in the data used in the calculation
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns> A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> which holds the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Calculate``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
             <summary>
             Parses the formula, obtains the data and calculates values based on the provided options.
             </summary>
             <param name="timeSeriesReference">An <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object containing the unparsed formula as a property.</param>
             <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
             desired properties of the return value.</param>
             <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
             <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> holding the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Calculate``1(HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the formula, obtains the data and calculates values based on the provided options.
            </summary>
            <param name="formula">An <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object containing the unparsed formula string.</param>
            <param name="calculationOptions"> Holds default settings for reading in the data used in the calculation
            of the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> object.</param>
            <param name="timeSeriesReadingOptions">An <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> object describing the
            desired properties of the return value.</param>
            <param name="defaultRepositoryName">Repository which is used if the formula string does not reference a repository.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> holding the resulting time series data upon calculation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Aggregate``1(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesReferences"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that defines which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryAggregate``1(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesReferences"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Aggregate``1(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="aggregationTimeSeriesDataReadingOptions"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="aggregationTimeSeriesDataReadingOptions">A list of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            This method is similar to <see cref="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Aggregate``1(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)"/> 
            but allows to define <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> for each <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> separately.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryAggregate``1(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="aggregationTimeSeriesDataReadingOptions"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="aggregationTimeSeriesDataReadingOptions">A list of <see cref="T:HAKOM.TSM.Net.Api.Calculation.Aggregation.IAggregationTimeSeriesDataReadingOptions"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            <para>
            This method is similar to <see cref="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryAggregate``1(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)"/> 
            but allows to define <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> for each <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> separately.
            </para>
            <para>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Aggregate``1(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryAggregate``1(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/>, and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.Aggregate``1(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Aggregates multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>from the provided <paramref name="timeSeriesReferences"/> and based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/> and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Calculation.ICalculator.TryAggregate``1(System.String,HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference},HAKOM.TSM.Net.Api.Calculation.ICalculationOptions,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.String,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag},HAKOM.TSM.Net.Api.Flags.FlagHandling,System.Threading.CancellationToken)">
            <summary>
            Tries to aggregate multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>from the provided <paramref name="timeSeriesReferences"/> and based on the provided 
            <paramref name="timeSeriesSearchParameters"/>, <paramref name="calculationOptions"/> and <paramref name="readingOptions"/>.
            </summary>
            <param name="searchRepository">The name of the repository where time series corresponding to the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> of <paramref name="timeSeriesSearchParameters"/> are to be looked for.</param>
            <param name="timeSeriesReferences">A list of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> that define which <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> should be aggregated.</param>
            <param name="timeSeriesSearchParameters"><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> used for searching <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that should be aggregated.</param>
            <param name="calculationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Calculation.ICalculationOptions"/> to apply during aggregation.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>, which specify the form in which the data is to be returned.</param>
            <param name="unitRepositoryName">The repository name for loading units for converting the result into a specific unit.</param>
            <param name="aggregationFlagsWhiteList">Defines which data points should be accounted for the aggregation based on their <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>. Uses all when null.</param> 
            <param name="flagHandling">Indicates which <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> is to be used for the result when aggregating values with different <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s. By default, the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority is used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the aggregated <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData`1">
            <summary>
            Represents a reference to a time series within a formula after the data required for calculation has already been read.
            </summary>
            <typeparam name="TValue">The type of data that the time series holds.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData`1.TimeSeriesReference">
            <summary>
            The time series referenced in the formula (including information about where it is stored).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithData`1.Data">
            <summary>
            The data that has been read for that time series to be used during calculation.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions">
            <summary>
            Represents a reference to a time series within a formula along with the parameters that should be used to read the data required for calculation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions.TimeSeriesReference">
            <summary>
            The time series referenced in the formula (including information about where it is stored).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Calculation.ITimeSeriesReferenceWithReadingOptions.ReadingOptions">
            <summary>
            The parameters that should be used to read the time series' data that is to be used during calculation.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions">
            <summary>
            Defines extension methods on <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> for registering services used to work with data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultsForData(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers implementations for all data related services.
            </summary>
            <param name="container">The container to register the services with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultDataFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factory implementations for work with data.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseAttributeDataStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a custom implementation of<see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access data in storage.</typeparam>
            <typeparam name="TAttributeDataStore">The type of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/> which will be registered.</typeparam>
            <param name="container">The container to register the store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultAttributeDataStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementations of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.
            </summary>
            <param name="container">The container to register the stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataStorageConfigurationReader``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage configuration reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the storage configuration reader.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data store configuration reader.</typeparam>
            <typeparam name="TTimeSeriesDataStorageConfigurationReader"></typeparam>
            <param name="container"></param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataStorageConfigurationWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage configuration writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the storage configuration writer.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data store configuration writer.</typeparam>
            <typeparam name="TTimeSeriesDataStorageConfigurationWriter">The class of the time series data collection storage configuration writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2"/> interface.</typeparam>
            <param name="container"></param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultTimeSeriesDataStorageConfigurationReaders(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers time series data storage collection reader implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container
            </summary>
            <param name="container">The container to register the time series data stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultTimeSeriesDataStorageConfigurationWriters(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers time series data storage collection writer implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container
            </summary>
            <param name="container">The container to register the time series data stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultTimeSeriesDataQueryBuilders(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1"/> implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the query builders with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataQueryBuilder``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1"/> with the container.
            </summary>
            <typeparam name="TParameter">The parameter, which implements <see cref="T:HAKOM.Persistence.Sql.Net.Api.ISqlParameter"/>.</typeparam>
            <typeparam name="TParameterFactory">The parameter factory, which implements <see cref="T:HAKOM.Persistence.Sql.Net.Api.ISqlParameterFactory`1"/>.</typeparam>
            <param name="container">The container to register the query builder with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a (non-compressed, non-quotation) time series data store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data store.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data store.</typeparam>
            <param name="container">The container to register the time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultTimeSeriesDataStorages(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the time series data stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataStorageReader``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data storage reader.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data storage reader.</typeparam>
            <typeparam name="TTimeSeriesDataStorageReader">The class of the time series data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/> interface.</typeparam>
            <param name="container">The container to register the reader with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataCollectionStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> interface, with the container.
            </summary>
            <typeparam name="TValue">Type of the data values, which can be saved with the storage provider.</typeparam>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data collection storage writer.</typeparam>
            <typeparam name="TTimeSeriesDataCollectionStorageWriter">The class of the time series data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> interface.</typeparam>
            <param name="container">The container to register the time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesDataStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data storage writer.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data storage writer.</typeparam>
            <typeparam name="TTimeSeriesDataStorageWriter">The class of the time series data storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2"/> interface.</typeparam>
            <param name="container">The container to register the time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseCompressedTimeSeriesDataStore``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a compressed (non-quotation) time series data store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> interface, with the container.
            </summary>
            <typeparam name="TCompressedValue">The type which will be used to store the compressed values.</typeparam>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data store.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data store.</typeparam>
            <param name="container">The container to register the time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultCompressedTimeSeriesDataStorages(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers compressed time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the compressed storages with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseCompressedTimeSeriesDataStorageReader``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data storage reader.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/>
            interface, for the time series data storage reader.</typeparam>
            <typeparam name="TTimeSeriesDataStorageReader">The class of the time series data storage reader, which implements the
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2"/> interface.</typeparam>
            <param name="container">The container to register the time series data stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseCompressedTimeSeriesDataCollectionStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any compressed time series block data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> interface, with the container.
            </summary>
            <typeparam name="TCompressedValue">Type of compressed values, which can be saved with the storage provider.</typeparam>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the compressed time series data collection storage writer.</typeparam>
            <typeparam name="TCompressedTimeSeriesDataCollectionStorageWriter">The class of the compressed time series data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> interface.</typeparam>
            <param name="container">The container to register the compressed time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseCompressedTimeSeriesDataStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any compressed time series data storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the compressed time series data storage writer.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the compressed time series data storage writer.</typeparam>
            <typeparam name="TCompressedTimeSeriesDataStorageWriter">The class of the compressed time series data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2"/> interface.</typeparam>
            <param name="container">The container to register the compressed time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesQuotationDataStore``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a (non-compressed) quotation time series data store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> interface, with the container.
            </summary>
            <typeparam name="TValue">The type which will be used to store the values.</typeparam>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data store.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series data store.</typeparam>
            <param name="container">The container to register the time series data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesQuotationDataStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2"/> interface, for time series with quotation enabled, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series quotation data storage writer.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> interface, for the time series quotation data storage writer.</typeparam>
            <typeparam name="TTimeSeriesQuotationDataStorageWriter">The class of the time series quotation data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2"/> interface.</typeparam>
            <param name="container">The container to register the time series quotation data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesQuotationDataCollectionStorageWriter``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series quotation data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> interface, with the container.
            </summary>
            <typeparam name="TValue">Type of values, which can be saved with the storage provider.</typeparam>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series quotation data collection storage writer.</typeparam>
            <typeparam name="TTimeSeriesQuotationDataCollectionStorageWriter">The class of the time series quotation data collection storage writer, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> interface.</typeparam>
            <param name="container">The container to register the time series quotation data store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseTimeSeriesQuotationDataStorageReader``3(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series data storage reader, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series data storage reader.</typeparam>
            <typeparam name="TConfiguration">Type of the data store configuration, which implements the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/>
            interface, for the time series data storage reader.</typeparam>
            <typeparam name="TTimeSeriesQuotationDataStorageReader">The class of the time series data storage reader, which implements the
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2"/> interface.</typeparam>
            <param name="container">The container to register the time series data stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ContainerExtensions.UseDefaultTimeSeriesQuotationDataStorages(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers compressed time series data storage implementations of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the compressed storages with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions">
            <summary>
            Extension methods for creating <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> objects. Used for authorization.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of timeseries data resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of timeseries audit data resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of timeseries quotation data resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of timeseries data configuration resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of attribute data resources.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new timeseries data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new timeseries data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new timeseries data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new timeseries data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesAuditDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new timeseries audit data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesAuditDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new timeseries audit data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesAuditDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new timeseries audit data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesAuditDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new timeseries audit data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_AUDIT_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesQuotationDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new timeseries quotation data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesQuotationDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new timeseries quotation data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_QUOTATION_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new timeseries data configuration <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new timeseries data configuration <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new timeseries data configuration <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TimeSeriesDataConfigurationResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new timeseries data configuration <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.TIME_SERIES_DATA_CONFIGURATION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.AttributeDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new attribute data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.AttributeDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new attribute data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> associated with the given storage provider.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the attribute data.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.AttributeDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new attribute data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.AttributeDataResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new attribute data <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Data.Extensions.ResourceFactoryExtensions.ATTRIBUTE_DATA_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.IData`1">
            <summary>
            Represents a single point of data along with information regarding the quality of that
            particular data point.
            </summary>
            <typeparam name="TValue">The type of the data.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.IData`1.Value">
            <summary>
            Gets or sets the value of the data point.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.IData`1.Flag">
            <summary>
            Gets or sets the <see cref="P:HAKOM.TSM.Net.Api.Data.IData`1.Flag"/> of the data point.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.NodeDataMustBeAssignedToAttributeOfTypeNodeException">
            <summary>
            Indicates that an attempt was made to read or write data from or to an attribute, which was not of type node.
            </summary>
            <remarks>
            <para>
            Node data can only be written to or read from attributes of type node.
            </para>
            <para>
            This exception is identified by error code HK15134.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.NodeDataMustBeAssignedToAttributeOfTypeNodeException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.UnsupportedNodeReferenceOrStoreTypeException">
            <summary>
            Indicates that an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference`1"/> or an <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore`1"/> was expected, but the incorrect TIdentifier type was found.
            </summary>
            <remarks>
            <para>
            Out of the box only <see cref="T:System.Int32"/> is supported.
            </para>
            <para>
            This exception is identified by error code HK15134.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.UnsupportedNodeReferenceOrStoreTypeException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException">
            <summary>
            Indicates that an attempt was made to write data collection of attributes but properties where invalid.
            </summary>
            <remarks>
            <para>
            The properties have to fulfill certain rules in order to be allowed for writing it as attribute data;
            <list type="bullet">
            <item><see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Cyclic"/> = <see langword="false"/></item>
            <item><see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Function"/> = <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/></item>
            <item><see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Unit"/> = <see langword="true"/></item>
            <item><see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.TimeZone"/> matches the time zone of the assigned <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.</item>
            </list>
            </para>
            <para>
            This exception is identified by error code HK15092.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.Exceptions.WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore">
            <summary>
            Used to read and write attribute data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Threading.CancellationToken)">
            <summary>
            Configures the data store with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="assignedAttribute">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> which contains the 
            <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/> whose data will be read or written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the configuration is complete.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Read(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads attribute data from the configured time series within the given <paramref name="period"/>.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> representing the read data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryRead(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Attempts to read attribute data from the configured time series within the given <paramref name="period"/>.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.ReadNodeAssignment(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads node data from the configured attribute and time series within the given <paramref name="period"/>.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> representing the read data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryReadNodeAssignment(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Attempts to read node data from the configured attribute and time series within the given <paramref name="period"/>.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Write(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{System.String},System.Threading.CancellationToken)">
            <summary>
            Writes attribute data to the configured time series.
            </summary>
            <param name="data">The attribute data which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWrite(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{System.String},System.Threading.CancellationToken)">
            <summary>
            Attempts to write attribute data to the configured time series.
            </summary>
            <param name="data">The attribute data which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Write(System.DateTimeOffset,System.String,System.Threading.CancellationToken)">
            <summary>
            Writes attribute data to the configured time series.
            </summary>
            <param name="time">The point of time the attribute will be written to.</param>
            <param name="value">The attribute which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWrite(System.DateTimeOffset,System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to write attribute data to the configured time series.
            </summary>
            <param name="time">The point of time the attribute will be written to.</param>
            <param name="value">The attribute which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Write(System.String,System.Threading.CancellationToken)">
            <summary>
            Writes attribute data to the configured time series.
            </summary>
            <param name="value">The attribute which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
            <remarks>
            It will write to the configured <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.StartOfTime"/>.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWrite(System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to write attribute data to the configured time series.
            </summary>
            <param name="value">The attribute which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            <para>It will write to the configured <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.StartOfTime"/>.</para>
            <para>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.</para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.WriteNodeAssignment(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference},System.Threading.CancellationToken)">
            <summary>
            Writes node data to the configured attribute and time series.
            </summary>
            <param name="data">The node data which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWriteNodeAssignment(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference},System.Threading.CancellationToken)">
            <summary>
            Attempts to write node data to the configured attribute and time series.
            </summary>
            <param name="data">The node data which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.WriteNodeAssignment(System.DateTimeOffset,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Writes node data to the configured attribute and time series.
            </summary>
            <param name="time">The point of time the attribute will be written to.</param>
            <param name="value">The node which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWriteNodeAssignment(System.DateTimeOffset,HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to write node data to the configured attribute and time series.
            </summary>
            <param name="time">The point of time the attribute will be written to.</param>
            <param name="value">The node which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.WriteNodeAssignment(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Writes node data to the configured attribute and time series.
            </summary>
            <param name="value">The node which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
            <remarks>
            It will write to the configured <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.StartOfTime"/>.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryWriteNodeAssignment(HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.References.INodeReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to write node data to the configured attribute and time series.
            </summary>
            <param name="value">The node which will be written.</param>
            <param name="cancellationToken">Propagates notification if the operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            <para>It will write to the configured <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.StartOfTime"/>.</para>
            <para>The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.</para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes all attribute data of the configured time series-attribute assignment.
            </summary>
            <param name="cancellationToken">Propagates notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> indicating the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore.TryDelete(System.Threading.CancellationToken)">
            <summary>
            Attempts to delete all attribute data of the configured time series-attribute assignment.
            </summary>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> indicating the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStoreFactory">
            <summary>
            Used for creating instances of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Threading.CancellationToken)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/> and configures it with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for the configuration.</param>
            <param name="assignedAttribute">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> used for the configuration.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>The new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Threading.CancellationToken)">
            <summary>
            Tries to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/> and configures it with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for the configuration.</param>
            <param name="assignedAttribute">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> used for the configuration.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.Exceptions.ValueTypeNotSupportedException">
            <summary>
            Abstract class for exceptions indicating an unsupported value type for a time series data read/write/delete operation
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.Exceptions.ValueTypeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.ActualDataTableNotSetException">
            <summary>
            The exception that is thrown when the table for time series data has not been set in the time series definition.
            </summary>
            <remarks>
            <para>
            If the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration"/> loaded for the time series to be read does not have the Table property or a configured fallback table set, the ActualTable property will be null and this exception will be thrown when reading data.
            </para>
            <para>
            This exception is identified by error code HK15040.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.ActualDataTableNotSetException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.ActualTablesForQuotationNotSetException">
            <summary>
            The exception that is thrown when the necessary tables for time series with quotations enabled has not been set in the time series definition.
            </summary>
            <remarks>
            <para>
            If the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration"/> loaded for the time series to be read or written does not 
            have the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.HistoricTable"/> property or a configured fallback table set, 
            the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.ActualHistoricTable"/> property will be null and this exception will 
            be thrown when reading or writing data. This error message is also thrown if the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.ActualAuditTable"/> has not been set.
            </para>
            <para>
            This exception is identified by error code HK15120.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.ActualTablesForQuotationNotSetException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.DbDataTypeMismatchException">
            <summary>
            The exception that is thrown when a value retrieved from the database does not match the expected type.
            </summary>
            <remarks>
            <para>
            The default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/> currently supports only the double value type for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. If the data retrieved from the database does not match double, an exception is thrown when reading the data.
            </para>
            <para>
            This exception is identified by error code HK15022.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.DbDataTypeMismatchException.ExpectedType">
            <summary>
            Gets the expected type.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.DbDataTypeMismatchException.DbValue">
            <summary>
            The value that could not be converted to the expected type.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.DbDataTypeMismatchException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidRepositoryException">
            <summary>
            The exception that is thrown when the repository of the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>
            differs from the repository in the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.
            </summary>
            <remarks>
            <para>
            A <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> must have the same repository as the DataStorageInformation property of the specified time series. If the DataStorageInformation is null, the StorageInformation property of the specified time series is used and compared to the specified repository. If they do not match, this exception is thrown when the Configure method of the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> is called.
            </para>
            <para>
            This exception is identified by error code HK15021.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidRepositoryException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException">
            <summary>
            Abstract class for Exceptions indicating that the time series given for reading or writing time series data 
            is invalid in the current context.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.DataWriteOnFormulaTimeSeriesNotSupportedException">
            <summary>
            Indicates that an attempt was made to write data to a formula time series, which is not supported.
            </summary>
            <remarks>
            <para>
            Writing data to a time series, which has a formula configured is not supported, because reading data from a time series with a formula set calculates the formula and thus does not read the data stored for that time series. The data could therefore never be read again.
            You can write the data to a time series without a configured formula and reference this time series in the formula of the time series with the formula.
            </para>
            <para>
            This exception is identified by error code HK15031.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.DataWriteOnFormulaTimeSeriesNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException">
            <summary>
            Indicates that an attempt was made to read <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> from a time series where <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData"/> is deactivated.
            </summary>
            <remarks>
            <para>
            Reading <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> is only supported for time series where <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Quotation"/> and <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData"/> is activated. 
            Otherwise the necessary information is not saved.
            </para>
            <para>
            This exception is identified by error code HK15125.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException">
            <summary>
            Indicates that an attempt was made when reading data with a quotation date from a time series that is not configured to support quotations.
            </summary>
            <remarks>
            <para>
            When reading time series data with a specific quotation date, the "Quotation" property of the time series must be set to true. Only then will the quotation data be saved and can be read at that specific time.
            Either a time series must be selected which supports quotations or no <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions"/> may be used to query the data.
            </para>
            <para>
            This exception is identified by error code HK15117.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException">
            <summary>
            Indicates that an attempt was made to read <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> from a time series where <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveAuditLog"/> is deactivated.
            </summary>
            <remarks>
            <para>
            Reading <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> is only supported for time series where <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Quotation"/> and <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveAuditLog"/> is activated. 
            Otherwise the necessary information is not saved.
            </para>
            <para>
            This exception is identified by error code HK15124.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException">
            <summary>
            Indicates that an attempt was made when reading data with a historic date and time to a time series that has not preserve historic data enabled.
            </summary>
            <remarks>
            <para>
            When reading time series data with a specific historical date, the "PreserveHistoricData" property of the time series must be set to true. Only then will the historical data be saved and can be read at that specific time. 
            If "PreserveHistoricData" is set to false, you can read data without a specific historical date(null).
            </para>
            <para>
            This exception is identified by error code HK15054.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException">
            <summary>
            Indicates that an attempt has been made to configure a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore`1"/> with a time series that does not support quotations.
            </summary>
            <remarks>
            <para>
            This should not happen. If this exception is thrown, the related implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore`1"/> was not registered correctly.
            </para>
            <para>
            This exception is identified by error code HK15118.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException">
            <summary>
            Indicates that an attempt was made to write data without a quotation date to a time series where quotation is enabled, which is not supported.
            </summary>
            <remarks>
            <para>
            Writing data to a time series which has quotations enabled without specifying a quotation date is not supported, because the quotation date is needed for saving the data.
            Please provide a quotation date with the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions"/>.
            </para>
            <para>
            This exception is identified by error code HK15121.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException">
            <summary>
            Indicates that an attempt was made when writing data with a quotation date to a time series that does not have quotations enabled.
            </summary>
            <remarks>
            <para>
            When writing time series data with a specific quotation date, the "Quotation" property of the time series must be set to true.
            </para>
            <para>
            This exception is identified by error code HK15119.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException">
            <summary>
            Indicates that an attempt was made to write data with a historic date and time to a time series that has not preserve historic data enabled.
            </summary>
            <remarks>
            <para>
            When writing time series data with a specific historical date, the PreserveHistoricData property of the time series must be set to true. Only then will the historical data be saved at that specific time.
            If "PreserveHistoricData" is set to false, you can write data without a specific historical date (null). This will overwrite the current time series data.
            </para>
            <para>
            This exception is identified by error code HK15053.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.InvalidTimeSeriesExceptions.WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.StorageProviderTypeNotSupportedException">
            <summary>
            Indicates that an <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> was provided, which is not supported in the current storage.
            </summary>
            <remarks>
            <para>
            When calling the Configure Method of the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> the type of the given <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> is checked and this exception is thrown if the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> is not supported.
            </para>
            <para>
            This exception is identified by error code HK15064.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.StorageProviderTypeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesCompressedValueTypeNotSupportedException">
            <summary>
            The exception that is thrown when an invoked method of the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>
            does not support the given value type, when dealing with compressed time series.
            </summary>
            <remarks>
            <para>
            If the implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2"/>,
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> or the 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2"/> does not support the
            specified value type of the data, this exception is thrown. Either create and inject classes for these
            interfaces or use a data type that is supported. The supported type of the default classes is string.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesDataConversionException">
            <summary>
            Indicates that an attempt has been made to convert between two units, where one unit is null.
            </summary>
            <remarks>
            <para>
            Data without a unit (null) cannot be converted to another unit. 
            When data is written and either the unit of the data is not specified (null) or the unit of the time series is not specified (null), this exception is thrown.If the unit of the time series is not specified (null), set the unit of the data to null to avoid this error.Otherwise, specify a unit for the data that can be converted to the unit of the time series.
            If data is read and the unit of the time series is not specified (null), the data can only be read without a unit.If the data is read without unit (Unit property of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> is null), the data is returned in the unit of the time series by default.
            </para>
            <para>
            This exception is identified by error code HK15028.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesDataConversionException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesDataStoreConfigurationTypeNotSupportedException">
            <summary>
            Indicates that the data store does not support the given <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> type.
            </summary>
            <remarks>
            <para>
            When using the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> has to be used as well.
            </para>
            <para>
            This exception is identified by error code HK15065.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesDataStoreConfigurationTypeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesValueTypeNotSupportedException">
            <summary>
            The exception that is thrown when an invoked method of the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>
            does not support the given value type, when dealing with non-compressed time series.
            </summary>
            <remarks>
            <para>
            If the implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/>,
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> or the
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2"/> does not support the
            specified value type of the data, this exception is thrown. Either create and inject classes for these
            interfaces or use a data type that is supported. The supported type of the default classes is double.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry">
            <summary>
            An interface used to describe an audit log entry, containing information about when the entry was recorded and the corresponding time span.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry.HistoricDateTime">
            <summary>
            Gets the timestamp, represented as a <see cref="T:System.DateTimeOffset"/>, indicating the moment when the audit entry was recorded.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter">
            <summary>
            Provides methods for writing compressed data to the configured storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter.ConfigureStorageProvider(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> with the provided <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for writing data to the store.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter.BeginWrite(System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of data.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriterFactory">
            <summary>
            Factory for creating <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> objects for writing compressed data to a storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriterFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="type">The <see cref="T:System.Type"/> of compressed data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> instance for writing compressed data to a storage.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriterFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="type">The <see cref="T:System.Type"/> of compressed data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter"/> for writing compressed data to a storage.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriterFactory.Create``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> object and calls the configure method.
            </summary>
            <typeparam name="TCompressedValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the compressed data should be written.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the compressed data is written.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the compressed data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> instance for writing compressed data to a storage.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriterFactory.TryCreate``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to create a new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> object and calls the configure method.
            </summary>
            <typeparam name="TCompressedValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the compressed data should be written.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the compressed data is written.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the compressed data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> for writing compressed data to a storage.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1">
            <summary>
            Provides methods to either collect single <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> entries and write them all at once 
            or stream the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> entries, depending on the storage.
            </summary>
            <typeparam name="TCompressedValue">The value type of the compressed data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset)">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing additional information where the compressed data should be stored to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the compressed data should be stored to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the compressed data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Write(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.WriteWithHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the storage and history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Write(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes a <paramref name="collection"/> to the storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)">
            <summary>
            Clears buffers and causes any buffered data to be written to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1.TryFlush(System.Threading.CancellationToken)">
            <summary>
            Attempts to clear buffers and write buffered data to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the success or failure of the attempt.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2">
            <summary>
            Provides method for reading data from the storage provider.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> from which the data is read.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <typeparamref name="TCompressedValue"/>.
            </summary>
            <typeparam name="TCompressedValue"></typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures this instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> of which the data should be read from.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be read from.</param>
            <param name="configuration">The data store configuration with more information about where to read the data from in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.Read``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series.
            </summary>
            <typeparam name="TCompressedValue">The type of the value of the data.</typeparam>
            <param name="period">The period of the data to be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A stream of compressed time series data for the given period.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.TryRead``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series.
            </summary>
            <typeparam name="TCompressedValue">The type of the value of the data.</typeparam>
            <param name="period">The period of the data to be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the read data <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.ReadAuditLogs(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads all data changes of the configured time series.
            </summary>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is a tuple containing the time of change and the period of the changed data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.TryReadAuditLogs(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads all data changes of the configured time series.
            </summary>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of a tuple containing the time of change and the period of the changed data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.ReadHistoricData``1(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific historic date and time.
            </summary>
            <typeparam name="TCompressedValue">The type of the value of the data.</typeparam>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the historic time series data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageReader`2.TryReadHistoricData``1(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific historic date and time.
            </summary>
            <typeparam name="TCompressedValue">The type of the value of the data.</typeparam>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A stream of results which - if successful - each contain a block of historic time series data.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2">
            <summary>
            Provides methods for writing compressed data to the storage provider.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> to which the compressed data is written.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to which the compressed data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the compressed data should be written to.</param>
            <param name="configuration">The data store configuration with more information about where the data should be written in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <typeparamref name="TCompressedValue"/>.
            </summary>
            <typeparam name="TCompressedValue">The type which should be checked for support.</typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.BeginWritingCollection``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of compressed data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> to perform the writing of compressed data.
            </summary>
            <typeparam name="TCompressedValue">The value type of the compressed data to write.</typeparam>
            <param name="historicDateTime">The date used for historical retention of the compressed data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataCollectionStorageWriter`1"/> to perform compressed data writing.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.Delete(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Deletes data of the configured time series in the given <paramref name="deletionPeriod"/>.
            </summary>
            <param name="deletionPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes all data of the configured time series in the current <see cref="N:HAKOM.Configuration"/>.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.Delete(`1,System.Threading.CancellationToken)">
            <summary>
            Deletes all data of the configured time series in the given <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The data store configuration where the data should be deleted from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ICompressedTimeSeriesDataStorageWriter`2.WriteAuditLog(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry,System.Threading.CancellationToken)">
            <summary>
            Writes an audit log entry for the configured time series.
            </summary>
            <param name="auditLogEntry">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> representing the from and to time of the written data.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod">
            <summary>
            Represents the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod.Period"/> part of the saved data for e.g. <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry"/>s.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod.Period">
            <summary>
            Gets the time period, represented by a <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> structure
            and specifies the period for which data was saved.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod`1">
            <summary>
            <para>
            Generic representation of a period of specific data. Applications of this interface include but are not limited to:
            <list type="bullet">
            	<item>
            		<description>representing a period of time in the audit log for which changes have been made to time series data. (see <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry"/>).</description>
            	</item>
            	<item>
            		<description>representing a period of time for which a quotation has been saved (see <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/>).</description>
            	</item>
            </list>
            </para>
            </summary>
            <typeparam name="TSelf">Is the type of the interface which implements <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod`1"/>.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod`1.Create(`0,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Creates a new instance of <typeparamref name="TSelf"/> with every property of the given <paramref name="original"/> and 
            the new given <paramref name="period"/>.
            </summary>
            <param name="original">The <typeparamref name="TSelf"/> with the properties except the <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the new <typeparamref name="TSelf"/>.</param>
            <param name="period">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> representing the time span of the new <typeparamref name="TSelf"/>.</param>
            <returns>A new instance of <typeparamref name="TSelf"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter">
            <summary>
            Provides methods for writing data to the configured storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> with the provided <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for writing data to the store.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter.BeginWrite(System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of data.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriterFactory">
            <summary>
            Factory for creating <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> objects for writing data to a storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriterFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="type">The <see cref="T:System.Type"/> of data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> instance for writing data to a storage.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriterFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="type">The <see cref="T:System.Type"/> of data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriterFactory.Create``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> using the specified <paramref name="storageProvider"/>. <br/>
            using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> instance for writing data to a storage.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriterFactory.TryCreate``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.<br/>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1">
            <summary>
            Provides methods to either collect single <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> entries and write them all at once 
            or stream the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> entries, depending on the storage.
            </summary>
            <typeparam name="TValue">The value type of the data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset)">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing additional information where the data should be stored to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be stored to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Write(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.WriteWithHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the storage and history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Write(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes a <paramref name="collection"/> to the storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection"></param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)">
            <summary>
            Clears buffers and causes any buffered data to be written to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1.TryFlush(System.Threading.CancellationToken)">
            <summary>
            Attempts to clear buffers and write buffered data to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the success or failure of the attempt.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions">
            <summary>
            Represents options for reading time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Period">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to be read from.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Cyclic">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Function">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> specifying how values are applied along the time axis.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.IntervalTransformationMethod">
            <summary>
            Gets the interval transformation method that is used to transform the data to the specified <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Interval"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Interval">
            <summary>
            Gets the interval determining how the data should be read.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.HistoricDateTime">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> that is used to define which historic data set should be read.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Unit">
            <summary>
            Gets a reference to the unit determining how the data should be read.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.TimeZone">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> determining the time zone in which the data should be read.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory">
            <summary>
            Used for creating new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory.Create(System.DateTimeOffset,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{System.Boolean},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="from">The <see cref="T:System.DateTimeOffset"/> representing the from date.</param>
            <param name="to">The <see cref="T:System.DateTimeOffset"/> representing the to date.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> determining how the data should be read.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the data is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> determining how the data should be read.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data to the specified <paramref name="interval"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> determining the time zone in which the data should be read.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory.Create(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{System.Boolean},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> determining how the data should be read.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the data is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> determining how the data should be read.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data to the specified <paramref name="interval"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> determining the time zone in which the data should be read.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory.CreateQuotationOptions(System.DateTimeOffset,System.DateTimeOffset,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Quotations.QuotationBehavior},HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{System.Boolean},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="from">The <see cref="T:System.DateTimeOffset"/> representing the from date.</param>
            <param name="to">The <see cref="T:System.DateTimeOffset"/> representing the to date.</param>
            <param name="quotationDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the quotation date and time for which the data should be read and if the data should be read exactly at the quotation date.</param>
            <param name="quotationBehavior">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> specifying how the quotation data should be read if the <paramref name="quotationDateTime"/> is not set.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> determining how the data should be read.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the data is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> determining how the data should be read.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data to the specified <paramref name="interval"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> determining the time zone in which the data should be read.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptionsFactory.CreateQuotationOptions(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Quotations.QuotationBehavior},HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{System.Boolean},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions"/> with the given parameters.
            </summary>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> determining how the data should be read.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the data is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> determining how the data should be read.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit determining how the data should be read.</param>
            <param name="historicDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the historic date and time for which the data should be read and if the data should be read exactly at the historic date and time.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is used to transform the data to the specified <paramref name="interval"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> determining the time zone in which the data should be read.</param>
            <param name="quotationDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> representing the quotation date and time for which the data should be read and if the data should be read exactly at the quotation date.</param>
            <param name="quotationBehavior">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> specifying how the quotation data should be read if the <paramref name="quotationDateTime"/> is not set.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2">
            <summary>
            Used to load configurations from the storage. 
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</typeparam>
            <typeparam name="TConfiguration">Propagates a notification if the operations should be canceled.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference)">
            <summary>
            Configures this instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> of which the data should be read from.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2.LoadConfiguration(System.Threading.CancellationToken)">
            <summary>
            Loads the data store configuration from the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The data store configuration from the storage.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2.LoadConfigurations(System.Threading.CancellationToken)">
            <summary>
            Loads all data store configurations (current and previous) of the configured time series from the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The data store configurations of the configured time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationReader`2.TryLoadConfigurations(System.Threading.CancellationToken)">
            <summary>
            Loads all data store configurations (current and previous) of the configured time series from the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the data store configurations of the configured time series represented as <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2">
            <summary>
            Used to write configurations to storage.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</typeparam>
            <typeparam name="TConfiguration">The data store configuration to save.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2.SaveConfiguration(`1,System.Threading.CancellationToken)">
            <summary>
            Saves a data store configuration to the storage and changes the <see cref="N:HAKOM.Configuration"/> property to the given <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The data store configuration to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2.TrySaveConfiguration(`1,System.Threading.CancellationToken)">
            <summary>
            Attempts to save the given <paramref name="config"/>.
            </summary>
            <param name="config">The configuration which will be saved.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> which can be used to interrupt the process.</param>
            <returns>
            An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.
            If the attempt was successful, the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will be a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Results.Success"/>, otherwise it will be a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Results.Failure"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageConfigurationWriter`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference)">
            <summary>
            Configures this instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> of which the data should be read from.</param>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2">
            <summary>
            Provides method for reading data from the storage provider.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> from which the data is read.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures this instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> of which the data should be read from.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be read from.</param>
            <param name="configuration">The data store configuration with more information about where to read the data from in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.GetPreviousData``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the last data point of a time series before (when FunctionType.Right) or before or at (when FunctionType.Left) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The last <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> before or at the given <paramref name="dateTime"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.GetNextData``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the next data point of time series after (when FunctionType.Left) or after or at (when FunctionType.Right) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the next data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The next <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> after or at the given <paramref name="dateTime"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.TryGetPreviousData``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to get the last data point of a time series before (when FunctionType.Right) or before or at (when FunctionType.Left) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing the last <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> before or at the given <paramref name="dateTime"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.TryGetNextData``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to get the next data point of time series after (when FunctionType.Left) or after or at (when FunctionType.Right) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the next data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing the next <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> after or at the given <paramref name="dateTime"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.Read``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="period">The period of the data to be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the read data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.TryRead``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="period">The period of the data to be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the read data in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.ReadAuditLogs(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads all data changes of the configured time series.
            </summary>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry"/> containing the time of change and the period of the changed data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.TryReadAuditLogs(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads all data changes of the configured time series.
            </summary>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry"/> containing the time of change and the period of the changed data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.ReadHistoricData``1(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific historic date and time.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the historic time series data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageReader`2.TryReadHistoricData``1(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific historic date and time.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the historic time series data in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2">
            <summary>
            Provides method for writing data to the storage provider.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> to which the data is written.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be written to.</param>
            <param name="configuration">The data store configuration with more information about where the data should be written in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.BeginWritingCollection``1(System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> to perform the writing of data.
            </summary>
            <typeparam name="TValue">The value type of the data to write.</typeparam>
            <param name="historicDateTime">The date used for historical retention of the data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> to perform data writing.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.Delete(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Deletes data of the configured time series in the given <paramref name="deletionPeriod"/>.
            </summary>
            <param name="deletionPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes all data of the configured time series in the current <see cref="N:HAKOM.Configuration"/>.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.Delete(`1,System.Threading.CancellationToken)">
            <summary>
            Deletes all data of the configured time series in the given <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The data store configuration where to delete the data from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStorageWriter`2.WriteAuditLog(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry,System.Threading.CancellationToken)">
            <summary>
            Writes an audit log entry for the configured time series.
            </summary>
            <param name="auditLogEntry">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry"/> of the written data.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore">
            <summary>
            A data store to read and write time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.SupportsRead">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating if the data store supports reading.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.SupportsWrite">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating if the data store supports writing.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.ReadingOptions">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.WritingOptions">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Read``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.Threading.CancellationToken)">
            <summary>
            Read data of a time series with the given reading options.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="readingOptions"><see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> on how the data should be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryRead``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.Threading.CancellationToken)">
            <summary>
            Try to read data of a time series with the given reading options.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="readingOptions"><see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> on how the data should be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Read``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Read data of a time series with the given <paramref name="from"/> and <paramref name="to"/> parameters.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="from">The start time of the reading period.</param>
            <param name="to">The end time of the reading period.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryRead``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Try to read data of a time series with the given <paramref name="from"/> and <paramref name="to"/> parameters.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="from">The start time of the reading period.</param>
            <param name="to">The end time of the reading period.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Read``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Read data of a time series with the given <paramref name="period"/>.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryRead``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Try to read data of a time series with the given <paramref name="period"/>.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which to read the data.</param>
            <param name="cancellationToken">Propagates notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Write``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Write data to a time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once all data has been written to the time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryWrite``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Try to write data to a time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that completes once all data has been written to the time series and contains a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure of the operation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Write``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Write data to a time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesDataWritingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.</param>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once all data has been written to the time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryWrite``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Try to write data to a time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesDataWritingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.</param>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that completes once all data has been written to the time series and contains a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure of the operation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Delete(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes all time series data.
            </summary>
            <param name="includePreviousConfigurations">If set to true, data from previous configurations will be deleted too.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once all data of a timeseries has been deleted.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryDelete(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Try delete all time series data.
            </summary>
            <param name="includePreviousConfigurations">If set to true, data from previous configurations will be deleted too.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that completes once all data of a timeseries has been deleted and containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure of the operation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Delete``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Deletes time series data in a time range.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be deleted.</typeparam>
            <param name="from">Start date of the time range in which the data will be deleted.</param>
            <param name="to">End date of the time range in which the data will be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once all data of a timeseries has been deleted.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryDelete``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Try to delete time series data in a time range.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be deleted.</typeparam>
            <param name="from">Start date of the time range in which the data will be deleted.</param>
            <param name="to">End date of the time range in which the data will be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that completes once all data of a timeseries has been deleted and containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure of the operation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Delete``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Deletes time series data in a time range.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be deleted.</typeparam>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which the data will be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes once all data of a timeseries has been deleted.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.TryDelete``1(HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Try to delete time series data in a time range.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be deleted.</typeparam>
            <param name="period">The time <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> from which the data will be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that completes once all data of a timeseries has been deleted and containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure of the operation.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.ConfigureStorageProvider(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Configures the data store with the given <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore,System.Threading.CancellationToken)">
            <summary>
            Configures the data store with the given parameters.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object for which this data store will be configured.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for various conversions when reading and writing data.</param>
            <param name="unitConversionStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> used for various conversions when reading and writing data.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration">
            <summary>
            Storage options of a time series for persistence.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfigurationFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> objects.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> for the specified <paramref name="timeSeriesReference"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to create the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> for.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for various conversions by the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</param>
            <param name="unitConversionStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> used for various conversions by the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of the created store.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> for the specified <paramref name="timeSeriesReference"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to create the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> for.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for various conversions by the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</param>
            <param name="unitConversionStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> used for various conversions by the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of the created store. May be null</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore`1">
            <summary>
            A data store used to read and write time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore`1.Configuration">
            <summary>
            Gets the current configuration of the data store.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore`1.SaveConfiguration(System.Threading.CancellationToken)">
            <summary>
            Persists the current configuration to the repository.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions">
            <summary>
            Represents options for writing time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions.HistoricDateTime">
            <summary>
            Gets the historic date and time with which the data will be saved, if historic data is preserved.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptionsFactory">
            <summary>
            Used for creating new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptionsFactory.Create(System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/> with the given parameters.
            </summary>
            <param name="historicDateTime">The historic date and time with which the data will be saved on a time series, when historic data is preserved.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptionsFactory.CreateQuotationOptions(System.DateTimeOffset,System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions"/> with the given parameters.
            </summary>
            <param name="quotationDateTime">The quotation date and time with which the data will be saved on a time series, when quotation is activated.</param>
            <param name="historicDateTime">The historic date and time with which the data will be saved on a time series, when historic data is preserved.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions.QuotationDefaultBehaviorConfigurationSettingNotValidException">
            <summary>
            The configuration setting "TSM:Persistence:Data:QuotationDefaultBehavior" has an invalid value.
            </summary>
            <remarks>
            <para>
            The configuration setting "TSM:Persistence:Data:QuotationDefaultBehavior" can have one of the following values:
            <list type="bullet">
            <item><term>0</term><description>Default QuotationBehavior -> defaults back to "1 - MaxExact"</description></item>
            <item><term>1</term><description>MaxExact</description></item>
            <item><term>2</term><description>MaxNotExact</description></item>
            <item><term>3</term><description>NowNotExact</description></item>
            </list>
            Please make sure to configure one of the listed numbers.
            </para>
            <para>
            This exception is identified by error code HK15122.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions.QuotationDefaultBehaviorConfigurationSettingNotValidException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions.ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException">
            <summary>
            Indicates an attempt was made to read quotation data with a <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> other than <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.NowNotExact"/>
            from a time series with <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveAuditLog"/> set to <see langword="false"/>.
            </summary>
            <remarks>
            <para>When reading from such a time series, please give a <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationDateTime"/> or use <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.NowNotExact"/>.</para>
            <para>
            This exception is identified by error code HK15126.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.Exceptions.ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry">
            <summary>
            Represents an individual quotation of data valid for the given <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry.QuotationDateTime"/> that has been modified at the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IAuditLogEntry.HistoricDateTime"/>
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry">
            <summary>
            Represents an individual quotation of data valid for the given <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry.QuotationDateTime"/> that contains data for the given <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry.QuotationDateTime">
            <summary>
            The date and time of the quotation for which the data period applies.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter">
            <summary>
            Provides methods for writing quotation data to the configured storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> with the provided <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for writing data to the store.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter.BeginWrite(System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of data.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory">
            <summary>
            Factory for creating <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> objects for writing quotation data to a storage.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations.</param>
            <param name="type">The <see cref="T:System.Type"/> of data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> instance for writing data.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Type,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/> of the specified <paramref name="type"/>
            using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations.</param>
            <param name="type">The <see cref="T:System.Type"/> of data that will be written.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>
            using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="auditedQuotationEntry">The information used for storing quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> instance for writing data to a storage.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="auditedQuotationEntry">The information used for storing quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.Create``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>
            using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="quotationEntry">The information used for storing quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> instance for writing data to a storage.
            </returns>
            <remarks>
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriterFactory.TryCreate``1(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> using the specified <paramref name="storageProvider"/>. <br/>
            Calls the configure method for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </summary> 
            <typeparam name="TValue">The value type of the data.</typeparam>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing the repository to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing information about the repository to which the data is written to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="quotationEntry">The information used for storing quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            Caller is responsible for disposing of the returned object.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1">
            <summary>
            Provides methods for writing quotation data.
            </summary>
            <remarks>
            <para>
            The implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> either collects single <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> entries and 
            writes them all at once or streams the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> entries, depending on the storage.
            </para>
            </remarks>
            <typeparam name="TValue">The value type of the data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration,System.DateTimeOffset,System.Nullable{System.DateTimeOffset})">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> containing additional information where the data should be stored to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be stored to.</param>
            <param name="configuration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with information about where to store the data in the repository.</param>
            <param name="quotationDateTime">The quotation date time for which data will be stored.</param> 
            <param name="historicDateTime">The historic date at which the operation was performed.</param> 
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.WriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.TryWriteHistoricData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Tries to write <paramref name="data"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with the success state of the method.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.WriteHistoricData(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes a <paramref name="collection"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.TryWriteHistoricData(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes to write a <paramref name="collection"/> to the history storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with the success state of the method.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.WriteData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Writes <paramref name="data"/> to the quotation storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> signifying that the process was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.TryWriteData(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Threading.CancellationToken)">
            <summary>
            Tries to write <paramref name="data"/> to the quotation storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with the success state of the method.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.WriteData(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes a <paramref name="collection"/> to the quotation storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> signifying that the process was completed</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.TryWriteData(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},System.Threading.CancellationToken)">
            <summary>
            Writes to write a <paramref name="collection"/> to the quotation storage of the configured store or adds it to a buffer which will be saved with <see cref="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="collection">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to save.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with the success state of the method.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.Flush(System.Threading.CancellationToken)">
            <summary>
            Clears buffers and causes any buffered data to be written to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1.TryFlush(System.Threading.CancellationToken)">
            <summary>
            Tries to clear buffers and causes any buffered data to be written to the storage.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>Returns a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with the success state of the method.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions">
            <summary>
            Represents options for reading time series data of time series with quotation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationDateTime">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> that is used to define which quotation date and time the data set should be read from.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationBehavior">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationBehavior"/> which is used for reading quotation data if the <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationDateTime"/> is not set.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2">
            <summary>
            Provides method for reading quotation data from a storage provider.
            </summary>
            <typeparam name="TStorageProvider">The specific type of the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> that this reader can access.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage reader supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures this instance of <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> of which the data should be read from.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be read from.</param>
            <param name="configuration">The data store configuration with more information about where to read the data from in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.GetPreviousData``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the last data point of a time series before (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/>) or before or at (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the previous data will be searched.</param>
            <param name="quotationDateTime">The date and time of the quotation for which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The last <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> before or at the given <paramref name="dateTime"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryGetPreviousData``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the last data point of a time series before (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/>) or before or at (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the previous data will be searched.</param>
            <param name="quotationDateTime">The date and time of the quotation for which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing the last <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> before or at the given <paramref name="dateTime"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.GetNextData``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the next data point of time series after (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>) or after or at (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/>) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the next data will be searched.</param>
            <param name="quotationDateTime">The date and time of the quotation for which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>The next <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> after or at the given <paramref name="dateTime"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryGetNextData``1(System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Gets the next data point of time series after (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>) or after or at (when <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/>) the given <paramref name="dateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="dateTime">The date and time from which the next data will be searched.</param>
            <param name="quotationDateTime">The date and time of the quotation for which the previous data will be searched.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing the next <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> after or at the given <paramref name="dateTime"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.ReadAuditedQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Reads the history of all changes made to the data of the underlying time series.
            </summary>
            <param name="quotationDateTime">The quotation date and time for which the changes should be loaded.</param>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="limit">A limit of the maximum amount of changes to load.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> containing the quotation date and time, the time of change and the period of the changed data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryReadAuditedQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Reads the history of all changes made to the data of the underlying time series.
            </summary>
            <param name="quotationDateTime">The quotation date and time for which the changes should be loaded.</param>
            <param name="historicDateTime">The historic date and time for which the changes should be loaded.</param>
            <param name="period">The period of the data for which the changes should be loaded.</param>
            <param name="limit">A limit of the maximum amount of changes to load.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> containing the quotation time, the time of change and the period of the changed data.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.ReadQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Reads quotation dates and times which have data in the given <paramref name="period"/> and returns those quotation dates and times and their corresponding saved data periods.
            </summary>
            <param name="quotationDateTime">The quotation date and time which should be loaded.</param>
            <param name="period">The period of the saved data for which the quotation dates and times should be loaded.</param>
            <param name="limit">A limit of the maximum amount of quotation dates and times to load.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> containing the quotation date and time and the period of the saved data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryReadQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Reads quotation dates and times which have data in the given <paramref name="period"/> and returns those quotation dates and times and their corresponding saved data periods.
            </summary>
            <param name="quotationDateTime">The quotation date and time which should be loaded.</param>
            <param name="period">The period of the saved data for which the quotation dates and times should be loaded.</param>
            <param name="limit">A limit of the maximum amount of quotation dates and times to load.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> containing the quotation date and time and the period of the saved data.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.ReadHistoricData``1(System.DateTimeOffset,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific <paramref name="quotationDateTime"/> and <paramref name="historicDateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="quotationDateTime">The quotation date and time for which the data should be read.</param>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the historic time series data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryReadHistoricData``1(System.DateTimeOffset,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the historic data of the configured time series for a specific <paramref name="quotationDateTime"/> and <paramref name="historicDateTime"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="quotationDateTime">The quotation date and time for which the data should be read.</param>
            <param name="historicDateTime">The historic date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the historic time series data in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.ReadData``1(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series for a specific <paramref name="quotationDateTime"/>.
            </summary>
            <remarks>
            Note that this method will fail if the time series associated with this store does not have <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData"/> set to <see langword="true"/>.
            </remarks>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="quotationDateTime">The quotation date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of the time series data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageReader`2.TryReadData``1(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore,HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Reads the data of the configured time series for a specific <paramref name="quotationDateTime"/>.
            </summary>
            <remarks>
            Note that this method will fail if the time series associated with this store does not have <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData"/> set to <see langword="true"/>.
            </remarks>
            <typeparam name="TValue">The type of the value of the data.</typeparam>
            <param name="quotationDateTime">The quotation date and time for which the data should be read.</param>
            <param name="period">The period of the data to be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the time series data in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2">
            <summary>
            Provides method for writing quotation data to the <typeparamref name="TStorageProvider"/>.
            </summary>
            <typeparam name="TStorageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> to which the data is written.</typeparam>
            <typeparam name="TConfiguration">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStoreConfiguration"/> with more specific information about the data storage.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.Configure(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation,`1,System.Threading.CancellationToken)">
            <summary>
            Configures the current <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for write operations on the storage.</param>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to which the data should be written to.</param>
            <param name="repositoryInformation">The <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> containing the repository where the data should be written to.</param>
            <param name="configuration">The data store configuration with more information about where the data should be written in the repository.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.SupportsValueType``1(System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.SupportsValueType(System.Type,System.Threading.CancellationToken)">
            <summary>
            Checks if the data storage writer supports the given <paramref name="type"/>.
            </summary>
            <param name="type">The type which should be checked for support.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing a boolean value, which indicates if the type is supported.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.BeginWritingCollection``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of quotation data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> to perform the writing of quotation data.
            </summary>
            <typeparam name="TValue">The value type of the data to write.</typeparam>
            <param name="auditedQuotationEntry">Information used for retention of the quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> to perform data writing.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryBeginWritingCollection``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to initialize the writing of quotation data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> to perform the writing of quotation data.
            </summary>
            <typeparam name="TValue">The value type of the data to write.</typeparam>
            <param name="auditedQuotationEntry">Information used for retention of the quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.BeginWritingCollection``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Initializes the writing of quotation data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> to perform the writing of quotation data.
            </summary>
            <typeparam name="TValue">The value type of the data to write.</typeparam>
            <param name="quotationEntry">Information used for retention of the quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataCollectionStorageWriter`1"/> to perform data writing.</returns>
            <remarks>This method of writing quotation data doesn't write historic data.</remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryBeginWritingCollection``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to initialize the writing of quotation data and returns a <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/> to perform the writing of quotation data.
            </summary>
            <typeparam name="TValue">The value type of the data to write.</typeparam>
            <param name="quotationEntry">Information used for retention of the quotation data.</param> 
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> 
            containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataCollectionStorageWriter`1"/>.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            This method of writing quotation data doesn't write historic data.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.WriteAuditedQuotationEntry(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Writes an audited quotation entry for the configured time series.
            </summary>
            <param name="auditedQuotationEntry">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> of the written data.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryWriteAuditedQuotationEntry(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry,System.Threading.CancellationToken)">
            <summary>
            Tries to write an audited quotation entry for the configured time series.
            </summary>
            <param name="auditedQuotationEntry">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> of the written data.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about success or failure.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes all quotation data of the configured time series in the current <see cref="N:HAKOM.Configuration"/>.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> signifying the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryDelete(System.Threading.CancellationToken)">
            <summary>
            Attempts to delete all quotation data of the configured time series in the current <see cref="N:HAKOM.Configuration"/>.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> signifying the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.Delete(`1,System.Threading.CancellationToken)">
            <summary>
            Deletes all quotation data of the configured time series in the given <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The data store configuration where to delete the data from.</param>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> signifying the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryDelete(`1,System.Threading.CancellationToken)">
            <summary>
            Attempts to delete all quotation data of the configured time series in the given <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The data store configuration where to delete the data from.</param>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> signifying the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.Delete(`1,HAKOM.TSM.Net.Api.Time.Periods.Period,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Deletes quotation data of the configured time series in the given <paramref name="configuration"/> within 
            the given <paramref name="period"/> at the provided <paramref name="quotationDateTime"/>.
            </summary>
            <param name="configuration">The data store configuration where to delete the data from.</param>
            <param name="period">The period in which the data will be deleted.</param>
            <param name="quotationDateTime">The quotation date at which the data will be deleted from.</param>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> signifying the operation was completed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStorageWriter`2.TryDelete(`1,HAKOM.TSM.Net.Api.Time.Periods.Period,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Deletes quotation data of the configured time series in the given <paramref name="configuration"/> within 
            the given <paramref name="period"/> at the provided <paramref name="quotationDateTime"/>.
            </summary>
            <param name="configuration">The data store configuration where to delete the data from.</param>
            <param name="cancellationToken">Propagates a notification if the operation should be canceled.</param>
            <param name="period">The period in which the data will be deleted.</param>
            <param name="quotationDateTime">The quotation date at which the data will be deleted from.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> signifying the operation was completed.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore">
            <summary>
            A data store to read and write data for quotation time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.ReadAuditedQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> objects for the configured time series based on the given parameters.
            </summary>
            <param name="quotationDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on quotation date and time."/></param>
            <param name="historicDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on historic date and time."/></param>
            <param name="period">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> of the time series data for which the search for quotation dates is performed.
            If no <paramref name="quotationDateTime"/> or <paramref name="historicDateTime"/> is given, all <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> results
            for the configured time series will be returned./>
            </param>
            <param name="limit">Limits the amount of results.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the relevant <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> objects.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.TryReadAuditedQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Attempts to retrieve <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> objects for the configured time series based on the given parameters.
            </summary>
            <param name="quotationDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on quotation date and time."/></param>
            <param name="historicDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on historic date and time."/></param>
            <param name="period">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> of the time series data for which the search for quotation dates is performed.
            If no <paramref name="quotationDateTime"/> or <paramref name="historicDateTime"/> is given, all <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> results
            for the configured time series will be returned./>
            </param>
            <param name="limit">Limits the amount of results.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>s of the attempt to retrieve the relevant <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> objects.
            If successful, the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>s will contain the desired <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> objects.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.ReadQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> objects for the configured time series based on the given parameters.
            </summary>
            <param name="quotationDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on quotation date and time."/></param>
            <param name="period">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> of the time series data for which the search for quotation dates is performed.
            If no <paramref name="quotationDateTime"/> is given, all <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> results
            for the configured time series will be returned./>
            </param>
            <param name="limit">Limits the amount of results.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the relevant <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> objects.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.TryReadQuotationEntries(System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Attempts to retrieve <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> objects for the configured time series based on the given parameters.
            </summary>
            <param name="quotationDateTime">A <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> used to filter the results on quotation date and time."/></param>
            <param name="period">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> of the time series data for which the search for quotation dates is performed.
            If no <paramref name="quotationDateTime"/> is given, all <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> results
            for the configured time series will be returned./>
            </param>
            <param name="limit">Limits the amount of results.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>s of the attempt to retrieve the relevant <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> objects.
            If successful, the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>s will contain the desired <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IQuotationEntry"/> objects.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.Read``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions,System.Threading.CancellationToken)">
            <summary>
            Read quotation data of a time series with the given options.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="readingOptions"><see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions"/> on how the data should be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.TryRead``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions,System.Threading.CancellationToken)">
            <summary>
            Try to read quotation data of a time series with the given options.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="readingOptions"><see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions"/> on how the data should be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created 
            <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.Write``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Write data to a quotation time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesQuotationDataWritingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.</param>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore.TryWrite``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Try to write data to a quotation time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be written.</typeparam>
            <param name="timeSeriesQuotationDataWritingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataWritingOptions"/>.</param>
            <param name="timeSeriesData">The time series data collection to be written.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> with information about the success of the operation.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataStore`1">
            <summary>
            A data store for reading and writing time series data for quotations.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions">
            <summary>
            Represents options for writing time series data. These can then be used to write data with specific quotations for time series that 
            support quotations (i.e. with <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Quotation"/> set to <see langword="true"/>)
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataWritingOptions.QuotationDateTime">
            <summary>
            Gets the quotation date and time with which the data will be saved, if quotation is activated.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration">
            <summary>
            Storage options of a time series for persistence in SQL databases.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.Table">
            <summary>
            Gets or sets the table, where the data is stored.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.HistoricTable">
            <summary>
            Gets or sets the table, where the historic data is stored (e.g. when historic data is preserved).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.ActualTable">
            <summary>
            Gets the default table, where the data is stored.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.ActualHistoricTable">
            <summary>
            Gets the default table, where the historic data is stored (e.g. when historic data is preserved).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration.ActualAuditTable">
            <summary>
            Gets the default table, where the audit data is stored.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfigurationFactory">
            <summary>
            Used to create new options for defining SQL storage specific properties.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfigurationFactory.Create(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration"/> object representing the data storage configuration
            of a time series.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object for which this data store is created.</param>
            <param name="table">
            The <see cref="T:System.String"/> name of the table in which the data will be stored. If the table is null the configured default table will be used.
            </param>
            <param name="historicTable">
            The <see cref="T:System.String"/> name of the table in which the historic data will be stored. If the table is null the configured default table will be used.
            </param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfigurationFactory.Create(System.Boolean,HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,System.Boolean,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ISqlTimeSeriesDataStoreConfiguration"/> object representing the data storage configuration
            of a time series.
            </summary>
            <param name="quotation">A <see cref="T:System.Boolean"/> indicating if the data is stored as quotation data.</param>
            <param name="compressionMode">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> of the data to be stored with this configuration.</param>
            <param name="preserveHistoricData">A <see cref="T:System.Boolean"/> indicating if historic data is stored too.</param>
            <param name="table">
            The <see cref="T:System.String"/> name of the table in which the data will be stored. If the table is null the configured default table will be used.
            </param>
            <param name="historicTable">
            The <see cref="T:System.String"/> name of the table in which the historic data will be stored. If the table is null the configured default table will be used.
            </param>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1">
            <summary>
            Builds SQL queries and related parameters for SQL storage readers/writers.
            </summary>
            <typeparam name="TParameter"></typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildReadDataQuery(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,System.String,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,System.Boolean)">
            <summary>
            Builds a query to read data from the given <paramref name="tableName"/>. The other parameters affect parts of the select and where clauses.
            </summary>
            <param name="compressionMode">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> of the time series, whose data will be read.
            If equal to NoCompression, a "flag" column is added to the select clause.
            </param>
            <param name="tableName">The name of the table used in the from clause.</param>
            <param name="cyclic">The Cyclic property of the time series, whose data will be read. Affects the where clause.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be read. Affects the where clause.</param>
            <param name="preserveHistoricData">The PreserveHistoricData property of the time series, whose data will be read. Affects the where clause.</param>
            <returns>An SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildReadHistoricQuotationDataQuery(System.String,System.String,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Builds a query to read data from the table given with the name given in <paramref name="historicTableName"/>.
            </summary>
            <param name="historicTableName">The name of the table used in the from clause, where the quotation data is saved.</param>
            <param name="quotationEntryTableName">The name of the table where the audited quotation entries are saved.</param>
            <param name="cyclic">The Cyclic property of the time series, whose data will be read. Affects the where clause.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be read. Affects the where clause.</param>
            <returns>An SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildReadQuotationDataExactQuery(System.String,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Builds a query to read data from the table given with the name given in <paramref name="tableName"/>.
            </summary>
            <param name="tableName">The name of the table used in the from clause, where the quotation data is saved.</param>
            <param name="cyclic">The Cyclic property of the time series, whose data will be read. Affects the where clause.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be read. Affects the where clause.</param>
            <returns>An SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildWhereClauseForFunctionTypeDependentDateRange(System.String,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,System.Boolean,System.Boolean)">
            <summary>
            Builds sub conditions of a query for filtering date ranges in a data reading query, depending on properties of the time series.
            </summary>
            <param name="tableName">The name of the table used in the from clause, where the data is saved.</param>
            <param name="cyclic">The Cyclic property of the time series, whose data will be read.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be read.</param>
            <param name="preserveHistoricData">The PreserveHistoricData property of the time series, whose data will be read.</param>
            <param name="quotation">The Quotation property of the time series, whose data will be read.</param>
            <returns>Additional filtering SQL query for data reading operations (starting with AND not WHERE).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildReadAuditDataQuery">
            <summary>
            Builds a query to read audit data for a time series. The time frame, which will be read, is defined by sql parameters.
            </summary>
            <returns>An full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildInsertAuditDataQuery(System.String)">
            <summary>
            Builds a query to insert audit data for a time series. The data to be written, is defined by sql parameters.
            </summary>
            <param name="auditTable">The table name of the data audit table.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildInsertAuditedQuotationEntryQuery(System.String)">
            <summary>
            Builds a query to insert <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.IAuditedQuotationEntry"/> for a time series. The data to be written, is defined by sql parameters.
            </summary>
            <param name="auditTable">The table name of the data audit table.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildDeleteAllQuery(System.String)">
            <summary>
            Builds a query to delete all data of a time series. The time series of which the data will be deleted, is defined by sql parameters.
            </summary>
            <param name="tableName">The table name of the data table where the data will be deleted.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildDeleteTimeRangeQuery(System.String,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Builds a query to delete all data of a time series in a time range. The time frame, which will be deleted, is defined by sql parameters.
            </summary>
            <param name="tableName">The table name of the data table where the data will be deleted.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be read. Affects the where clause.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildDeleteTimeRangeWithQuotationQuery(System.String,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Builds a query to delete all data of a time series in a time range. The time frame, which will be deleted, is defined by sql parameters.
            </summary>
            <param name="tableName">The table name of the data table where the data will be deleted.</param>
            <param name="cyclic">The Cyclic property of the time series, whose data will be deleted. Affects the where clause.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the time series, whose data will be deleted. Affects the where clause.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.BuildDeleteQuotationAndHistoricDataQuery(System.String,System.String)">
            <summary>
            Builds a query to delete all data of a quotation time series with <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData"/> set to <see langword="true"/>..
            </summary>
            <param name="historicTable">The name of the data table where the data will be deleted.</param>
            <param name="auditTable">The table name of the audit logs table where the logs will be deleted.</param>
            <returns>A full SQL query with placeholders for some relevant parameters.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateFromParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,System.DateTimeOffset)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> which will be used to calculate the exact value of the parameter.</param>
            <param name="from">The <see cref="T:System.DateTimeOffset"/> on which the parameter is based.</param>
            <returns>An SQL parameter corresponding to the "fromTime" placeholder of the queries in this type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateHistoricDateTimeParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,System.DateTimeOffset)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> which will be used to calculate the exact value of the parameter.</param>
            <param name="historicDateTime">The <see cref="T:System.DateTimeOffset"/> on which the parameter is based.</param>
            <returns>An SQL parameter corresponding to the "historicDateTime" placeholder of the queries in this type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateQuotationDateTimeParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,System.DateTimeOffset)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> which will be used to calculate the exact value of the parameter.</param>
            <param name="quotationDateTime">The <see cref="T:System.DateTimeOffset"/> on which the parameter is based.</param>
            <returns>An SQL parameter corresponding to the "quotationDateTime" placeholder of the queries in this type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateTimeSeriesIdParameter(System.Int32)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="identifier">The identifier of the time series the data is stored for.</param>
            <returns>An SQL parameter corresponding to the "id" placeholder of the queries in this type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateToParameter(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,System.DateTimeOffset)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> which will be used to calculate the exact value of the parameter.</param>
            <param name="to">The <see cref="T:System.DateTimeOffset"/> on which the parameter is based.</param>
            <returns>An SQL parameter corresponding to the "toTime" placeholder of the queries in this type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Sql.ITimeSeriesDataSqlQueryBuilder`1.CreateUserIdParameter(System.Int32)">
            <summary>
            Creates an SQL parameter for the queries in this type.
            </summary>
            <param name="userId">The user id on which the parameter is based.</param>
            <returns>An SQL parameter corresponding to the "userId" placeholder of the queries in this type.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode">
            <summary>
            In HAKOM terminology time series compression is a data storage technology, where individual time series values 
            are cascaded to fixed sized blocks, that are binary encoded and saved to the database. 
            The size of the blocks depends on the interval of the underlying data.
            The CompressionMode represents the type of compression.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Create(System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> with a custom value. 
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> id of the compression mode.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.NoCompression">
            <summary>
            Create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> representing that compression is turned off. 
            In case of conventional - uncompressed time series, each data row consists of a timestamp, value and flag.
            </summary>
            <returns>a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> representing that compression is turned off. </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Base64BlockCompression">
            <summary>
            Create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> representing a compression based on Base64 encoded blocks. 
            Individual time series values are cascaded to fixed sized blocks that are binary encoded and saved to the database. 
            The size of the blocks depends on the interval of the underlying data.
            A compressed time series with this mode does not save timestamp information for each value. 
            Instead adjacent value-flag pairs are combined together to a block. This reduces data storage space and the database index size. 
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> representing that the compression is turned on and based on Base64 encoded blocks.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Default">
            <summary>
            Creates a new default instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>.
            The default instance is no compression.
            </summary>
            <returns>A new instance of the default <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> (Value=default).</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Value">
            <summary>
            The number/id representing the type of compression
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.op_Equality(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Compares the value of two compression modes using the operator '=='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> on the right of the '==' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the compression modes are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.op_Inequality(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Compares the value of two compression modes using the operator '!='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> on the right of the '!=' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the compression modes are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Equals(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Compares the value of this compression mode to another compression mode returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>, which is used for comparison.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the compression modes are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.Equals(System.Object)">
            <summary>
            Compares the value of this compression mode to another compression mode returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>, which is used for comparison.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the compression modes are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.GetHashCode">
            <summary>
            Creates the hash code for this compression mode, using its value.
            </summary>
            <returns>A hash code for this compression mode.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions.CompressionModeNotSupportedException">
            <summary>
            Indicates that an attempt was made to configure a serializer with a wrong compression mode.
            </summary>
            <remarks>
            <para>
            When configuring the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> only permitted serializers can be used.
            </para>
            <para>
            This exception is identified by error code HK15069.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions.CompressionModeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions.IntervalOrTimeZoneDifferException">
            <summary>
            Thrown when an attempt was made to convert <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/>, where the 
            time zone and/or the interval does not match the time zone and/or interval of the configured time series.
            </summary>
            <remarks>
            <para>
            Ensure that time zone and/or interval of the given <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> matches the time zone and/or interval
            of the time series given in <see cref="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor.Configure(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)"/>.
            </para>
            <para>
            This exception is identified by error code HK15067.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Exceptions.IntervalOrTimeZoneDifferException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions.ContainerExtensions">
            <summary>
            Provides methods for registering services with an instance of <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that relate to time series data compression.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.Extensions.ContainerExtensions.UseDefaultCompressionModeNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor">
            <summary>
            Packs and unpacks the data of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> into blocks of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> 
            where the block size depends on the CompressionMultiplier of the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>. 
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor.Configure(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Configures the IBlockCompressor with the time series for which data the blocks should be created.
            </summary>
            <param name="timeSeries"></param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor.Compress``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Packs the data of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> into blocks of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the time series data.</typeparam>
            <param name="data">The data to be packed to <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> containing data with an interval using the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.CompressionMultiplier"/>.
            One block contains values and flags in the interval of the configured time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor.TryCompress``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0},System.Threading.CancellationToken)">
            <summary>
            Packs the data of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> into blocks of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the time series data.</typeparam>
            <param name="data">The data to be packed to <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing data with an interval using the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.CompressionMultiplier"/>.
            One block contains values and flags in the interval of the configured time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor.Decompress``1(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData{``0}},System.Threading.CancellationToken)">
            <summary>
            Unpacks the data of an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> to an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </summary>
            <typeparam name="TValue">The type of the value of the time series data.</typeparam>
            <param name="blockData">The data to be unpacked to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the unpacked data from an
            <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressorFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressorFactory.Create(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Creates a new BlockCompressor to convert <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> and vice versa.
            </summary>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressorFactory.TryCreate(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Tries to create a new BlockCompressor to convert <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> to <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> and vice versa.
            </summary>
            
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.IBlockCompressor"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesDataFactory">
            <summary>
            Creates <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesDataFactory.Create``1(System.DateTimeOffset,``0)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> object based on the given parameters.
            </summary>
            <typeparam name="TCompressedValue">The type of the compressed value.</typeparam>
            <param name="blockTime">The block's time (beginning or end, based on the Function property of the related time series).</param>
            <param name="blockData">The compressed data, valid for this time.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/>, containing the given compressed data, for the given time.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1">
            <summary>
            Container for compressed timeseries data.
            </summary>
            <typeparam name="TCompressedValue "></typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1.BlockTime">
            <summary>
            The duration of the blocked timeseries data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1.CompressedData">
            <summary>
            The compressed timeseries data.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataFactory">
            <summary>
            A factory to create <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataFactory.Create``1(System.DateTimeOffset,System.Collections.Generic.IAsyncEnumerable{System.ValueTuple{``0,HAKOM.TSM.Net.Api.Flags.Flag}})">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> object with the given values.
            </summary>
            <typeparam name="TValue">The type of TValue.</typeparam>
            <param name="blockTime">The block time of the new object.</param>
            <param name="block">The contents of the new object.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1">
            <summary>
            Represents a block of data, which begins at a specific time and contains the values and flags of multiple <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> objects.
            </summary>
            <typeparam name="TValue">The type of TValue for the data points.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1.BlockTime">
            <summary>
            The beginning or end of the block. Depends on the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>, which the block data is used for.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1.Block">
            <summary>
            The contents of the data block - values and flags for all data points in the block.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer">
            <summary>
            Interface for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializerFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> instances.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializerFactory.Create``2(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> instance.<br/>
            It will be configured with the specified compression mode media type resolver.
            </summary>
            <typeparam name="TValue">The type of values in the time series data.</typeparam>
            <typeparam name="TCompressedValue">The type of values in the compressed time series data.</typeparam>
            <param name="compressionMode">The compression mode.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> instance.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializerFactory.TryCreate``2(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> instance.<br/>
            It will be configured with the specified compression mode media type resolver.
            </summary>
            <typeparam name="TValue">The type of values in the time series data.</typeparam>
            <typeparam name="TCompressedValue">The type of values in the compressed time series data.</typeparam>
            <param name="compressionMode">The compression mode.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2"/> instance.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2">
            <summary>
            Interface for serializing and deserializing time series block data.
            </summary>
            <typeparam name="TValue">The type of values in the time series data.</typeparam>
            <typeparam name="TCompressedValue">The type of values in the compressed time series data.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2.Configure(HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode)">
            <summary>
            Configures the serializer for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>.
            </summary>
            <param name="compressionMode">The compression mode to use.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2.Serialize(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData{`0}},System.Threading.CancellationToken)">
            <summary>
            Serializes the given time series block data.
            </summary>
            <param name="timeSeriesBlockData">The list of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> to serialize.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of compressed time series block data.</returns>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2.TrySerialize(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData{`0}},System.Threading.CancellationToken)">
            <summary>
            Serializes the given time series block data.
            </summary>
            <param name="timeSeriesBlockData">The list of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockData`1"/> to serialize.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the serialized time series block data.</returns>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2.Deserialize(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`1}},System.Threading.CancellationToken)">
            <summary>
            Deserializes the given compressed time series data.
            </summary>
            <param name="compressedTimeSeriesData">The list of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to deserialize.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of time series block data.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ITimeSeriesBlockDataSerializer`2.TryDeserialize(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData{`1}},System.Threading.CancellationToken)">
            <summary>
            Deserializes the given serialized time series block data.
            </summary>
            <param name="compressedTimeSeriesData">The list of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.ICompressedTimeSeriesData`1"/> to deserialize.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A stream of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the deserialized time series block data.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.MultiPathConversionOnlySupportsFactorConversionException">
            <summary>
            Indicates that an attempt was made to convert a time series with multiple conversion paths not only containing factors.
            </summary>
            <remarks>
            <para>
            This exception is thrown if the conversion contains multiple paths (e.g. the conversion from m/s to km/h contains the conversion paths m -> km and s -> h) and at least one of these paths contains a conversion that is not factor-based (e.g. using integration, offset, or a time-based unit conversion).
            Make sure that each path can only use factor-based unit conversions or change either the source or the target unit.
            </para>
            <para>
            This exception is identified by error code HK15063.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.MultiPathConversionOnlySupportsFactorConversionException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 501 (Not Implemented).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.NonCyclicStepLeftFunctionDataIsNotSupportedException">
            <summary>
            Indicates that an attempt was made to use a combination of cyclic = false and function = <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>.
            </summary>
            <remarks>
            <para>
            The default implementation for processing data does not support data where cyclic is false and the function is <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft"/>. Use either data where cyclic is false and function is <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight"/> or data where cyclic is true.
            </para>
            <para>
            This exception is identified by error code HK15050.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.NonCyclicStepLeftFunctionDataIsNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException">
            <summary>
            Indicates that an attempt was made to transform a non-cyclic <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> into a collection of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/>, 
            without the last entry of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> having the <see cref = "M:HAKOM.TSM.Net.Api.Flags.Flag.Ignore" /> flag configured.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15093.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.TransformationIntoCyclicDataWithoutToDateNotSupportedException">
            <summary>
            Indicates, that an attempt was made to transform non cyclic data to cyclic data but the to date is missing.
            </summary>
            <remarks>
            <para>
            If <see cref="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.TransformFormat(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/> is called without a to-date, but the transformation requires converting non-cyclic data to cyclic data, this exception is thrown. Specify a to-date to avoid this exception.
            </para>
            <para>
            This exception is identified by error code HK15051.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.TransformationIntoCyclicDataWithoutToDateNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.UnitConversionPathForUnitConversionNotFoundException">
            <summary>
            Indicates that for the given conversion no <see cref="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath"/> was found.
            </summary>
            <remarks>
            <para>
            When converting data from one unit to another, <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion" />s must be provided to ensure a conversion path between these units. Either add a <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> to the specified unit conversions to ensure that a conversion path between the unit of the data and the target unit is possible, or change the target unit.
            </para>
            <para>
            This exception is identified by error code HK15056.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.UnitConversionPathForUnitConversionNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions.TimeSeriesDataCollectionExtensions">
            <summary>
            Class for extending the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> functionality.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Extensions.TimeSeriesDataCollectionExtensions.Memoized``1(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{``0})">
            <summary>
            Memoizes an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> to cache the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> and be able to reuse 
            the data while avoiding multiple calls to the Storage to reread the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.
            </summary>
            <typeparam name="TValue">The type of the data for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.</typeparam>
            <param name="timeSeriesDataCollection">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> to memoize.</param>
            <returns>A memoized <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> where the underlying <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>
            can be used multiple times without rereading it from the Storage.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter">
            <summary>
            Non-generic marker interface for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/> implementations.
            Used to register implementations for use by an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverterFactory"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverterFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverterFactory.Create``1(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore)">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <param name="unitStore">The unit store where the units for the conversion are stored.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverterFactory.TryCreate``1(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore)">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <param name="unitStore">The unit store where the units for the conversion are stored.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1">
            <summary>
            Converts time series data to a given unit.
            </summary>
            <typeparam name="TValue">The type of the values that will be worked with.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Units.IUnitConversion},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="unitConversions">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Units.IUnitConversion},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="unitConversions">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.ErrorHandling.Core.Net.Api.Result{HAKOM.TSM.Net.Api.Units.IUnitConversion}},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="unitConversionResults">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.ErrorHandling.Core.Net.Api.Result{HAKOM.TSM.Net.Api.Units.IUnitConversion}},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="unitConversionResults">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.ErrorHandling.Core.Net.Api.Result{HAKOM.TSM.Net.Api.Units.IConstantUnitConversion}},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="constantUnitConversionResults">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.TryConvert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.ErrorHandling.Core.Net.Api.Result{HAKOM.TSM.Net.Api.Units.IConstantUnitConversion}},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <summary>
            Converts the given <paramref name="data"/> to the given <paramref name="targetUnit"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be converted.</param>
            <param name="targetUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the <paramref name="data"/> will be converted.</param>
            <param name="constantUnitConversionResults">The necessary <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> where T is a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> to perform the conversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> in the <paramref name="targetUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1.Configure(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore)">
            <summary>
            Configures the data converter with the given <paramref name="unitStore"/>, which will be used to manage unit references and fetch conversion data from the repository.
            </summary>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used by the data converter.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation">
            <summary>
            Non-generic marker interface for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/> implementations.
            Used to register implementations for use by an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperationFactory"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperationFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperationFactory.Create``1">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperationFactory.TryCreate``1">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1">
            <summary>
            Performs operations with time series data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1.PerformOperation(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},System.Func{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0}},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Threading.CancellationToken)">
            <summary>
            Performs the given <paramref name="operation"/> on the data points of the given collections in the given <paramref name="period"/>.<br/>
            </summary>
            <param name="data1">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> used for performing the operation.</param>
            <param name="data2">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> used for performing the operation.</param>
            <param name="operation">The operation which will be performed.</param>
            <param name="period">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> in which the operation should be performed. </param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A new <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with all data points in the given <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with the same format as the first provided data.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer">
            <summary>
            Non-generic marker interface for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/> implementations.
            Used to register implementations for use by an <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformerFactory"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformerFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformerFactory.Create``1">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformerFactory.TryCreate``1">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to convert.</typeparam>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1">
            <summary>
            Transforms time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.IntervalTransformationOptions">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.TransformInterval(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions,System.Threading.CancellationToken)">
            <summary>
            Transforms the given <paramref name="data"/> based on the given <paramref name="intervalTransformationOptions"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be transformed.</param>
            <param name="intervalTransformationOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/> used for the transformation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The given data collection in the new interval.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.TransformFormat(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Transforms the format of the given data to the given function type and cyclic configuration.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be transformed.</param>
            <param name="function">
            The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> used for the transformation. If null is given, no argument is passed or if the target function type
            is the same as that of the source data, the function type will not be altered.
            </param>
            <param name="cyclic">
            The <see cref="T:System.Boolean"/> configuration for the cyclic nature of the data points. If null is given, no argument is passed, or if the target configuration
            is the same as that of the source data, the cyclic attribute will not be altered.
            </param>
            <param name="toDate">
            Limits the data for the transformation from non-cyclic to cyclic configuration, if the flag of the last element of the non-cyclic data is not <see cref="M:HAKOM.TSM.Net.Api.Flags.Flag.Ignore"/>.
            This parameter is ignored if null or no argument is passed to parameter <paramref name="cyclic"/>.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.TransformToTotal(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Time.Periods.Period,System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},System.Threading.CancellationToken)">
            <summary>
            Transforms the given <paramref name="data"/> to its total based on the given <paramref name="transformationMethod"/>.
            </summary>
            <param name="data">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be transformed.</param>
            <param name="period">The period used for the transformation.</param>
            <param name="transformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> used for the transformation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The total of the given data collection.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.FromSpan(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Converts <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </summary>
            <param name="timeSeriesDataSpan">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to convert.</param>
            <param name="unitReference">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit in which the data is provided.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> in which the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be created.</param>
            <param name="cyclic">The cyclic setting if the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be cyclic or not.</param>
            <param name="functionType">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="startOfTime">The start time of the time series data mesh. If the parameter is *not* provided the default start of 
            time from <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults"/> will be used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The converted <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.FromSpan(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan{`0}},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </summary>
            <param name="timeSeriesDataSpan">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to convert.</param>
            <param name="unitReference">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit in which the data is provided.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> in which the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be created.</param>
            <param name="cyclic">The cyclic setting if the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be cyclic or not.</param>
            <param name="functionType">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="startOfTime">The start time of the time series data mesh. If the parameter is *not* provided the default start of 
            time from <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults"/> will be used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The converted <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.FromSpan(System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan{`0}},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Converts an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.
            </summary>
            <param name="timeSeriesDataSpan">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/> to convert.</param>
            <param name="unitReference">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit in which the data is provided.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> in which the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be created.</param>
            <param name="cyclic">The cyclic setting if the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> should be cyclic or not.</param>
            <param name="functionType">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the target <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</param>
            <param name="startOfTime">The start time of the time series data mesh. If the parameter is *not* provided the default start of 
            time from <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults"/> will be used.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The converted <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1.ToSpan(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},System.Threading.CancellationToken)">
            <summary>
            Converts a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> into a collection of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/>.
            </summary>
            <remarks>
            Note that some implementations may require that the collection meet certain requirements.
            The default implementation, for example, requires that, when converting a non-cyclic <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/>,
            the last element in the collection has to be set with a <see cref="M:HAKOM.TSM.Net.Api.Flags.Flag.Ignore"/> flag.
            </remarks>
            <param name="timeSeriesDataCollection">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> containing the data, which will be transformed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to abort the procedure.</param>
            <returns>The data as collection of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions">
            <summary>
            Determines how data will be calculated, when a time series interval is transformed.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions.Period">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for which the transformation will be made.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions.Interval">
            <summary>
            Gets the target <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> for the transformation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions.IntervalTransformationMethod">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions.IntervalTransformationMethod"/>  used for the transformation.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions.TimeZone">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> used for the transformation.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptionsFactory">
            <summary>
            Factory for creating interval transformation options objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptionsFactory.Create(System.DateTimeOffset,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/> using the given parameters.
            </summary>
            <param name="from">Sets the <see cref="T:System.DateTimeOffset"/> From property of the transformation options.</param>
            <param name="to">Sets the <see cref="T:System.DateTimeOffset"/> To property of the transformation options.</param>
            <param name="interval">The target <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> for the transformation.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> which will be used for data calculations during the transformation.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> for the transformation.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptionsFactory.Create(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/> using the given parameters.
            </summary>
            <param name="period">Sets the <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the transformation.</param>
            <param name="interval">The target <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> for the transformation.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> which will be used for data calculations during the transformation.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> for the transformation.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IIntervalTransformationOptions"/></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1">
            <summary>
            ITimeSeriesDataCollection represents time series data in a time series independent way.
            The additional information (unit, interval, time zone) describes the time series data
            so that it can be used without the time series.
            </summary>
            <typeparam name="TValue">
            	The type of the data for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. The data has to implement <see cref="T:System.IComparable`1"/>
            	and <see cref="T:System.IEquatable`1"/>
            </typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Unit">
            <summary>
            Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit of the time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Interval">
            <summary>
            Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Cyclic">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.Function">
            <summary>
            Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> specifying how values are applied along the time axis.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1.TimeZone">
            <summary>
            Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the time series data.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory">
            <summary>
            Creates objects representing time series data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory.Create``1(System.DateTimeOffset,``0,HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> with the given <paramref name="time"/>, <paramref name="value"/> and
            <paramref name="flag"/>.
            </summary>
            <typeparam name="TValue">The type of value this data point has.</typeparam>
            <param name="time">The time of the data point.</param>
            <param name="value">The value of this data point.</param>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> of this data point.</param>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory.CreateCollection``1(HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{``0}})">
            <summary>
            Creates a time series data collection with additional information.
            </summary>
            <typeparam name="TValue">The type of the values of the data points in the collection.</typeparam>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the data collection.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the collection is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the data collection.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit of the data collection.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the data collection.</param>
            <param name="data">The list of time series data points.</param>
            <returns>A time series data collection.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory.CreateCollection``1(HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{``0}})">
            <summary>
            Creates a time series data collection with additional information.
            </summary>
            <typeparam name="TValue">The type of the values of the data points in the collection.</typeparam>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the data collection.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the collection is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of the data collection.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to the unit of the data collection.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the data collection.</param>
            <param name="data">The list of time series data points.</param>
            <returns>The time series data collection.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory.BuildCollection``1(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone)">
            <summary>
            Builds a collection of time series data.<br/>
            The <see cref="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1.Time"/> property of its items is determined from the given parameters.<br/>
            The <see cref="P:HAKOM.TSM.Net.Api.Data.IData`1.Flag"/> and the <see cref="P:HAKOM.TSM.Net.Api.Data.IData`1.Value"/> properties are set to their defaults.
            </summary>
            <typeparam name="TValue">The type of value these data points have.</typeparam>
            <param name="period">The period of time of the data point.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of this data point.</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the collection is cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of this data point.</param>
            <param name="timeZone">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> used to create the data points.</param>
            <returns>A collection of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1">
            <summary>
            Represents a single data point data along a time series with additional information
            regarding the quality of the value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1.Time">
            <summary>
            Gets the time of the data point.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1">
            <summary>
            Represents a data point along a time series that applies to the underlying time period. 
            It also includes information about the quality of the value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataSpan`1.Period">
            <summary>
            Gets the validity period of the data point.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations">
            <summary>
            Provides arithmetic operations
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperationsFactory">
            <summary>
            Creates objects of type <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperationsFactory.Create``1">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to operate.</typeparam>
            <returns>An <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperationsFactory.TryCreate``1">
            <summary>
            Tries to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> 
            </summary>
            <typeparam name="TValue">The value type of the data points to operate.</typeparam>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1">
            <summary>
            Provides arithmetic operations (addition, subtraction, multiplication, division) <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>"/>.
            </summary>
            <typeparam name="TValue">
            	The type of the data for <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>. The data has to implement <see cref="T:System.IComparable`1"/>
            	and <see cref="T:System.IEquatable`1"/>
            </typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Zero">
            <summary>
            Returns the equivalent of 0 for the type.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0})">
            <summary>
            Adds the given term and uses the flag with the highest priority for the result.
            </summary>
            <param name="term1">The first term of the addition.</param>
            <param name="term2">The second term of the addition.</param>
            <returns>The sum of the given terms.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Flags.FlagHandling)">
            <summary>
            Adds the given terms.
            </summary>
            <param name="term1">The first term of the addition.</param>
            <param name="term2">The second term of the addition.</param>
            <param name="flagHandling">Specifies which flag is to be used for the result.</param>
            <returns>The sum of the given terms.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0})">
            <summary>
            Subtracts the <paramref name="subtrahend"/> from the <paramref name="minuend"/> and uses the flag with the highest priority for the result.
            </summary>
            <param name="minuend">The minuend of the subtraction.</param>
            <param name="subtrahend">The subtrahend of the subtraction.</param>
            <returns>The difference of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Flags.FlagHandling)">
            <summary>
            Subtracts the <paramref name="subtrahend"/> from the <paramref name="minuend"/>.
            </summary>
            <param name="minuend">The minuend of the subtraction.</param>
            <param name="subtrahend">The subtrahend of the subtraction.</param>
            <param name="flagHandling">Specifies which flag is to be used for the result.</param>
            <returns>The difference of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0})">
            <summary>
            Multiplies the given factors and uses the flag with the highest priority for the result.
            </summary>
            <param name="factor1">The first factor of the multiplication.</param>
            <param name="factor2">The second factor of the multiplication.</param>
            <returns>The product of the given factors.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Flags.FlagHandling)">
            <summary>
            Multiplies the given factors.
            </summary>
            <param name="factor1">The first factor of the multiplication.</param>
            <param name="factor2">The second factor of the multiplication.</param>
            <param name="flagHandling">Specifies which flag is to be used for the result.</param>
            <returns>The product of the given factors.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0})">
            <summary>
            Divides the <paramref name="dividend"/> by the <paramref name="divisor"/> and uses the flag with the highest priority for the result.
            </summary>
            <param name="dividend">The dividend of the division.</param>
            <param name="divisor">The divisor of the division.</param>
            <returns>The quotient of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},HAKOM.TSM.Net.Api.Flags.FlagHandling)">
            <summary>
            Divides the <paramref name="dividend"/> by the <paramref name="divisor"/>.
            </summary>
            <param name="dividend">The dividend of the division.</param>
            <param name="divisor">The divisor of the division.</param>
            <param name="flagHandling">Specifies which flag is to be used for the result.</param>
            <returns>The quotient of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Add(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Decimal)">
            <summary>
            Adds the given terms.
            </summary>
            <param name="term1">The first term of the addition.</param>
            <param name="term2">The second term of the addition.</param>
            <returns>The sum of the given terms.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Subtract(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Decimal)">
            <summary>
            Subtracts the <paramref name="subtrahend"/> from the <paramref name="minuend"/>.
            </summary>
            <param name="minuend">The minuend of the subtraction.</param>
            <param name="subtrahend">The subtrahend of the subtraction.</param>
            <returns>The difference of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Multiply(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Decimal)">
            <summary>
            Multiplies the given factors.
            </summary>
            <param name="factor1">The first factor of the multiplication.</param>
            <param name="factor2">The second factor of the multiplication.</param>
            <returns>The product of the given factors.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Divide(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData{`0},System.Decimal)">
            <summary>
            Divides the <paramref name="dividend"/> by the <paramref name="divisor"/>.
            </summary>
            <param name="dividend">The dividend of the division.</param>
            <param name="divisor">The divisor of the division.</param>
            <returns>The quotient of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Add(`0,`0)">
            <summary>
            Adds the given terms.
            </summary>
            <param name="term1">The first term of the addition.</param>
            <param name="term2">The second term of the addition.</param>
            <returns>The sum of the given terms.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Subtract(`0,`0)">
            <summary>
            Subtracts the <paramref name="subtrahend"/> from the <paramref name="minuend"/>.
            </summary>
            <param name="minuend">The minuend of the subtraction.</param>
            <param name="subtrahend">The subtrahend of the subtraction.</param>
            <returns>The difference of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Multiply(`0,`0)">
            <summary>
            Multiplies the given factors.
            </summary>
            <param name="factor1">The first factor of the multiplication.</param>
            <param name="factor2">The second factor of the multiplication.</param>
            <returns>The product of the given factors.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Divide(`0,`0)">
            <summary>
            Divides the <paramref name="dividend"/> by the <paramref name="divisor"/>.
            </summary>
            <param name="dividend">The dividend of the division.</param>
            <param name="divisor">The divisor of the division.</param>
            <returns>The quotient of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Add(`0,System.Decimal)">
            <summary>
            Adds the given terms.
            </summary>
            <param name="term1">The first term of the addition.</param>
            <param name="term2">The second term of the addition.</param>
            <returns>The sum of the given terms.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Subtract(`0,System.Decimal)">
            <summary>
            Subtracts the <paramref name="subtrahend"/> from the <paramref name="minuend"/>.
            </summary>
            <param name="minuend">The minuend of the subtraction.</param>
            <param name="subtrahend">The subtrahend of the subtraction.</param>
            <returns>The difference of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Multiply(`0,System.Decimal)">
            <summary>
            Multiplies the given factors.
            </summary>
            <param name="factor1">The first factor of the multiplication.</param>
            <param name="factor2">The second factor of the multiplication.</param>
            <returns>The product of the given factors.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Divide(`0,System.Decimal)">
            <summary>
            Divides the <paramref name="dividend"/> by the <paramref name="divisor"/>.
            </summary>
            <param name="dividend">The dividend of the division.</param>
            <param name="divisor">The divisor of the division.</param>
            <returns>The quotient of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Max(`0,`0)">
            <summary>
            Finds the greater value of two values.
            </summary>
            <param name="value1">The first value to be checked.</param>
            <param name="value2">The second value to be checked.</param>
            <returns>The greatest of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Min(`0,`0)">
            <summary>
            Finds the lower value of two values.
            </summary>
            <param name="value1">The first value to be checked.</param>
            <param name="value2">The second value to be checked.</param>
            <returns>The lower of the given params.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.Abs(`0)">
            <summary>
            Computes the absolute value of the <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The absolute of the given value.</returns>
            <exception cref="T:System.OverflowException" />
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.GreaterThan(`0,`0)">
            <summary>
            Compares two values to determine which is greater.
            </summary>
            <param name="left">The value to compare with right.</param>
            <param name="right">The value to compare with left.</param>
            <returns><see langword="true"/> if <paramref name="left"/> is greater than <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.GreaterThanOrEqual(`0,`0)">
            <summary>
            Compares two values to determine which is greater or equal.
            </summary>
            <param name="left">The value to compare with right.</param>
            <param name="right">The value to compare with left.</param>
            <returns><see langword="true"/> if <paramref name="left"/> is greater than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.LessThan(`0,`0)">
            <summary>
            Compares two values to determine which is less.
            </summary>
            <param name="left">The value to compare with right.</param>
            <param name="right">The value to compare with left.</param>
            <returns><see langword="true"/> if <paramref name="left"/> is less than <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1.LessThanOrEqual(`0,`0)">
            <summary>
            Compares two values to determine which is less or equal.
            </summary>
            <param name="left">The value to compare with right.</param>
            <param name="right">The value to compare with left.</param>
            <returns><see langword="true"/> if <paramref name="left"/> is less than or equal to <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions">
            <summary>
            Class for extending the container functionality for registering interface implementations with the container.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseNumberArithmeticOperations(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an instance of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Math.IArithmeticOperations`1"/> for the chosen <see cref="T:System.Numerics.INumber`1"/>
            with the container used to run operation on a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/>.
            </summary>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultTimeZones(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the HAKOM-implementation of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory"/> with the container
            as well as custom time zones supported by HAKOM.
            </summary>
            <param name="container">The container to register the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory"/> with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTimeZones(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the HAKOM-implementation of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory"/> with the container.
            </summary>
            <param name="container">The container to register the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory"/> with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseCustomTimeZones(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
             <summary>
             Registers custom time zones supported by HAKOM with the container.<br />
             Without adjustment rules:<br />
             - Universal coordinated time with offset: UTC+hh:mm and UTC-hh:mm where hh > 0<br />
            
             </summary>
             <param name="container">The container to register the custom time zones with.</param>
             <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseCustomTimeZone``1(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any custom time zone, which implements the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition"/> interface, with the container.
            </summary>
            <typeparam name="TCustomTimeZoneDefinition">The class of the custom time zone which implements the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition"/>interface.</typeparam>
            <param name="container">The container to register the custom time zones with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTimeSeriesStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any time series store, which implements the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The class of the time series store which implements the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>interface.</typeparam>
            <typeparam name="TTimeSeriesStore">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the time series store.</typeparam>
            <param name="container">The container to register the time series store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultTimeSeriesStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers time series stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container
            as well as the implementation of the time series validation.
            </summary>
            <param name="container">The container to register the time series stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseConstantUnitConversionStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the attribute store.</typeparam>
            <typeparam name="TUnitConversionStore">The class of the unit conversion store which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>interface.</typeparam>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTimeDependentUnitConversionStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the attribute store.</typeparam>
            <typeparam name="TUnitConversionStore">The class of the unit conversion store which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>interface.</typeparam>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseUnitConversionStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the attribute store.</typeparam>
            <typeparam name="TUnitConversionStore">The class of the unit conversion store which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>interface.</typeparam>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultUnitConversionStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers unit conversion stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the unit conversion stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseUnitStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any store, which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the attribute store.</typeparam>
            <typeparam name="TUnitStore">The class of the unit store which implements the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>interface.</typeparam>
            <param name="container">The container to register the attribute store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultUnitStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers unit stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the unit stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDataOperation``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a custom implementation of the <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/>.
            </summary>
            <typeparam name="TOperation">The implementation itself.</typeparam>
            <typeparam name="TValue">The generic type of the operation implementation.</typeparam>
            <param name="container">The container to register the data operation with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultDataOperation(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataOperation`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDataTransformer``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a custom implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/>.
            </summary>
            <typeparam name="TTransformer">The implementation itself.</typeparam>
            <typeparam name="TValue">The generic type of the transformer implementation.</typeparam>
            <param name="container">The container to register the data transformer with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultDataTransformer(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultDataTransformer``1(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataTransformer`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDataConverter``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a custom implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/>.
            </summary>
            <typeparam name="TConverter">The implementation itself.</typeparam>
            <typeparam name="TValue">The generic type of the converter implementation.</typeparam>
            <param name="container">The container to register the data converter with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultDataConverter(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default implementation of <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.IDataConverter`1"/>.
            </summary>
            <param name="container">The container to register the default with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the IContainer is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTsmRepositoryInformationStore``2(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers any repository information store, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore"/> interface, with the container.
            </summary>
            <typeparam name="TStorageProvider">The storage provider, which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> interface, for the repository information store.</typeparam>
            <typeparam name="TRepositoryInformationStore">The class of the repository information store which implements the <see cref="T:HAKOM.Persistence.Core.Net.Api.IRepositoryInformationStore"/>interface.</typeparam>
            <param name="container">The container to register the repository information store with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTsmRepositoryInformationStores(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers repository information stores implementation of HAKOM for Oracle, PostgreSQL and SQLServer with the container.
            </summary>
            <param name="container">The container to register the repository information stores with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultSerializers(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers serializers implementation of HAKOM with the container.
            </summary>
            <param name="container">The container to register the serializer with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultBlockCompressor(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the block compressor and factory implementation of HAKOM with the container
            for creating time series block data in order to perform the compression feature.
            </summary>
            <param name="container">The container to register the serializer with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultTimeSeriesBlockDataSerializer(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the time series block data serializer implementation of HAKOM with the container
            for creating time series block data in order to perform the compression feature.
            </summary>
            <param name="container">The container to register the serializer with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultsForTimeSeriesProperties(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a service providing default values for some properties of the time series object.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultTsmRepositories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers repository implementation of HAKOM with the container.
            </summary>
            <param name="container">The container to register the repository with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseDefaultTsmFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factories implementation of HAKOM with the container.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTsmDefaults(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers a set of defaults that are usually required for the HAKOM TSM .NET API to work correctly.
            </summary>
            <remarks>
            TODO: insert a list of stuff that's registered along with an explanation of why it's needed.
            </remarks>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the defaults with.</param>
            <returns>The <paramref name="container"/> itself for chaining.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="container"/> is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTsm(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers implementation of <see cref="T:HAKOM.TSM.Net.Api.ITsm"/> of HAKOM with the container.
            </summary>
            <param name="container">The container to register the <see cref="T:HAKOM.TSM.Net.Api.ITsm"/> implementation with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Extensions.ContainerExtensions.UseTsmOnce(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers implementation of <see cref="T:HAKOM.TSM.Net.Api.ITsm"/> of HAKOM with the container.
            </summary>
            <param name="container">The container to register the <see cref="T:HAKOM.TSM.Net.Api.ITsm"/> implementation with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions">
            <summary>
            Defines extension methods on <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> for registering services used to work with <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s which describe the quality of data along a time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions.UseFlagPriorities(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default <see cref="T:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider"/> with the <paramref name="container"/>. This allows components to correctly rank and aggregate <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesData`1"/> instances.
            </summary>
            <param name="container"></param>
            <returns>The <paramref name="container"/> for chaining.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="container"/> is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions.UseFlagNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers the default <see cref="T:HAKOM.TSM.Net.Api.Flags.IFlagNameProvider"/> with the <paramref name="container"/>. This allows components to display a friendly name for <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s.
            </summary>
            <param name="container"></param>
            <returns>The <paramref name="container"/> for chaining.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="container"/> is null.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions.UseDefaultFlags(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers priorities and names of flags commonly used by HAKOM.
            </summary>
            <remarks>
            The following flags are commonly used by HAKOM:
            <list type="table">
            	<listheader>
            		<term>Flag Value</term><term>Flag Priority</term><term>Flag Name (Locale: en)</term>
            	</listheader>
            	<item>
            		<description>0</description><description>0</description><description>Ignore</description>
            	</item>
            	<item>
            		<description>5</description><description>20</description><description>ManuallyReplaced</description>
            	</item>
            	<item>
            		<description>7</description><description>60</description><description>Faulty</description>
            	</item>
            	<item>
            		<description>9</description><description>30</description><description>Valid</description>
            	</item>
            	<item>
            		<description>12</description><description>40</description><description>Scheduled</description>
            	</item>
            	<item>
            		<description>19</description><description>80</description><description>Missing</description>
            	</item>
            	<item>
            		<description>20</description><description>10</description><description>Accounted</description>
            	</item>
            	<item>
            		<description>21</description><description>50</description><description>Estimated</description>
            	</item>
            	<item>
            		<description>22</description><description>70</description><description>Interpolated</description>
            	</item>
            </list>
            </remarks>
            <param name="container">The container to register the <see cref="T:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider"/> with.</param>
            <returns>The <paramref name="container"/> itself for chaining.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions.UseCustomFlag(HAKOM.DependencyInjection.Core.Net.Api.IContainer,HAKOM.TSM.Net.Api.Flags.Flag,System.Int32,System.String)">
            <summary>
            Registers a custom <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> which allows for its priority to be respected during calculations and aggregations. Whenever possible it will also be displayed using the given <paramref name="name"/> instead of just its value.
            </summary>
            <param name="container">The container to register the custom <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with.</param>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> to register.</param>
            <param name="priority">The priority to assign to the <paramref name="flag"/>.</param>
            <param name="name">The friendly name to assign to the <paramref name="flag"/></param>
            <returns>The <paramref name="container"/> itself for chaining.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Extensions.ContainerExtensions.UseCustomFlag(HAKOM.DependencyInjection.Core.Net.Api.IContainer,System.Byte,System.Int32,System.String)">
            <summary>
            Registers additional information that is mapped to all <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s with the specified <paramref name="flagValue"/>. This allows for flags with that value to have their priority be respected properly during calculations and aggregations. Whenever possible <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s with that value will also be displayed using the given <paramref name="name"/> instead of just its value.
            </summary>
            <param name="container">The container to register custom flag information with.</param>
            <param name="flagValue">The value to register.</param>
            <param name="priority">The priority to assign to the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with value <paramref name="flagValue"/>.</param>
            <param name="name">The friendly name to assign to the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with value <paramref name="flagValue"/></param>
            <returns>The <paramref name="container"/> itself for chaining.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.Flag">
            <summary>
            Describes the quality of an individual data point.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Default">
            <summary>
            Creates a default flag of the type <see cref="M:HAKOM.TSM.Net.Api.Flags.Flag.Missing"/>
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Ignore">
            <summary>
            Creates a flag indicating that the value will be ignored in any operation.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.ManuallyReplaced">
            <summary>
            Creates a flag indicating that the value has been manually set.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Faulty">
            <summary>
            Creates a flag indicating that the value is faulty.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Valid">
            <summary>
            Creates a flag indicating that the value is "normal".
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Scheduled">
            <summary>
            Creates a flag indicating that the value is as scheduled.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Missing">
            <summary>
            Creates a flag indicating that the value should be considered missing.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Accounted">
            <summary>
            Creates a flag indicating that the value should be considered accounted for.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Estimated">
            <summary>
            Creates a flag indicating that the value is estimated.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Interpolated">
            <summary>
            Creates a flag indicating that the value is interpolated.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Flags.Flag.Value">
            <summary>
            The value of the flag.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.#ctor(System.Byte)">
            <summary>
            Use this constructor for custom flag values, please make sure your custom values are not in the range between:
            0-22
            </summary>
            <param name="value">Range: 0-22 Built in flag values.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Create(System.Byte)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> instance from the given <paramref name="value"/>.
            </summary>
            <param name="value">The value for the new flag.</param>
            <returns>The created flag.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Equals(HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Compares the value and priority of this flag to another flag returning a boolean.
            </summary>
            <param name="other">The flag, which is used for comparison.</param>
            <returns>Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.op_Equality(HAKOM.TSM.Net.Api.Flags.Flag,HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Compares the value and priority of two flags using the operator '=='.
            </summary>
            <param name="left">The flag on the left of the '==' operator.</param>
            <param name="right">The flag on the right of the '==' operator.</param>
            <returns>Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.op_Inequality(HAKOM.TSM.Net.Api.Flags.Flag,HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Compares the value and priority of two flags using the operator '!='.
            </summary>
            <param name="left">The flag on the left of the '!=' operator.</param>
            <param name="right">The flag on the right of the '!=' operator.</param>
            <returns>Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomAccounted">
            <summary>
            Returns true if the Flag is "Accounted".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomManuallyReplaced">
            <summary>
            Returns true if the Flag is "ManuallyReplaced".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomValid">
            <summary>
            Returns true if the Flag is "Valid".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomScheduled">
            <summary>
            Returns true if the Flag is "Schedule".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomEstimated">
            <summary>
            Returns true if the Flag is "Estimated".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomFaulty">
            <summary>
            Returns true if the Flag is "Faulty".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomMissing">
            <summary>
            Returns true if the Flag is "Missing".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomIgnore">
            <summary>
            Returns true if the Flag is "Ignore".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.IsHakomInterpolated">
            <summary>
            Returns true if the Flag is "Interpolated".
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.Equals(System.Object)">
            <summary>
            Compares the value and priority of this flag to another flag returning a boolean.
            </summary>
            <param name="obj">The flag, which is used for comparison.</param>
            <returns>Returns a boolean representing if the values and priorities of the flags are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.GetHashCode">
            <summary>
            Creates the hash code for this flag, using its value.
            </summary>
            <returns>A hash code for this flag.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.ToString">
            <summary>
            Returns a string representation of this <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.
            Flags with common values known to HAKOM will show both their name and value, whereas custom flags will only have their numeric value shown.
            </summary>
            <returns>The name and/or numeric value of this flag.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.Flag.ToString(HAKOM.TSM.Net.Api.Flags.IFlagNameProvider)">
            <summary>
            Returns a string representation of this <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.
            If <paramref name="flagNameProvider"/> returns a name for this flags value, the string will contain both its name and value. If not, the string will contain only the numeric value.
            </summary>
            <returns>The name and/or numeric value of this flag.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.FlagHandling">
            <summary>
            The method to be used if one of several <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s must be selected in the course of a calculation.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Flags.FlagHandling.UseHighestPriority">
            <summary>
            The flag with the highest priority should be used if one of several <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s must be selected during a calculation.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Flags.FlagHandling.UseLowestPriority">
            <summary>
            The flag with the lowest priority should be used if one of several <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s must be selected during a calculation.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping">
            <summary>
            Maps one or more <see cref="P:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping.Flag"/> values to a friendly name.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping.Flag">
            <summary>
            The identifying <see cref="P:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping.Flag"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping.Name">
            <summary>
            The friendly name.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.IFlagNameProvider">
            <summary>
            Attempts to find a friendly name assigned to a <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> of a specific value.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagNameProvider.GetName(HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Gets the friendly name of the given <paramref name="flag"/>. If none is found, <see cref="F:System.String.Empty"/> will be returned. Should never return null.
            </summary>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> for which to get the name.</param>
            <returns>The friendly name assigned to the <paramref name="flag"/> or <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagNameProvider.TryGetName(HAKOM.TSM.Net.Api.Flags.Flag,System.String@)">
            <summary>
            Attempts to get the friendly name for the given <paramref name="flag"/> from this <see cref="T:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping"/>.
            </summary>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> for which to get the name.</param>
            <param name="name">If successful, contains the name that represents the given <paramref name="flag"/>. Null otherwise.</param>
            <returns>True if this <see cref="T:HAKOM.TSM.Net.Api.Flags.IFlagNameMapping"/> contains a name for the given <paramref name="flag"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.IFlagPriorityMapping">
            <summary>
            Represents mapping between <see cref="P:HAKOM.TSM.Net.Api.Flags.IFlagPriorityMapping.Flag"/> objects and an integer value (=priority)
            that is used in aggregating multiple data points in order to determine the correct resulting value.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Flags.IFlagPriorityMapping.Flag">
            <summary>
            The <see cref="P:HAKOM.TSM.Net.Api.Flags.IFlagPriorityMapping.Flag"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Flags.IFlagPriorityMapping.Priority">
            <summary>
            The priority.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider">
            <summary>
            Finds and compares priorities of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> instances.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.GetPriority(HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Returns the priority for the given <paramref name="flag"/>.
            </summary>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> to resolve the priority value for.</param>
            <returns>The priority of the given <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.TryGetPriority(HAKOM.TSM.Net.Api.Flags.Flag,System.Int32@)">
            <summary>
            Tries to return the correct <paramref name="priority"/> priority for the given <paramref name="flag"/>.
            </summary>
            <param name="flag">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> for which a priority is requested.</param>
            <param name="priority">If successfully mapped, contains the priority of the given <paramref name="flag"/>. Otherwise it should return 0.</param>
            <returns>True if the mapping can successfully map the given <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> to a priority value. False otherwise </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.ComparePriorities(HAKOM.TSM.Net.Api.Flags.Flag,HAKOM.TSM.Net.Api.Flags.Flag)">
            <summary>
            Compares two instances of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> based on their respective priorities.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> to compare <paramref name="right"/> with.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> that is being compared to <paramref name="left"/>.</param>
            <returns>0 if both flags have the same priority, -1 if <paramref name="left"/> has a lower priority, 1 otherwise.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.LowestPriorityFlag(HAKOM.TSM.Net.Api.Flags.Flag[])">
            <summary>
            Returns the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the lowest priority of the ones given in <paramref name="flags"/>.
            </summary>
            <param name="flags">The list of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s to go through.</param>
            <returns>The flag within <paramref name="flags"/> with the lowest priority.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.LowestPriorityFlag(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag})">
            <summary>
            Returns the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the lowest priority of the ones given in <paramref name="flags"/>.
            </summary>
            <param name="flags">The list of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s to go through.</param>
            <returns>The flag within <paramref name="flags"/> with the lowest priority.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.HighestPriorityFlag(HAKOM.TSM.Net.Api.Flags.Flag[])">
            <summary>
            Returns the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority of the ones given in <paramref name="flags"/>.
            </summary>
            <param name="flags">The list of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s to go through.</param>
            <returns>The flag within <paramref name="flags"/> with the highest priority</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Flags.IFlagPriorityProvider.HighestPriorityFlag(System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.Flags.Flag})">
            <summary>
            Returns the <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/> with the highest priority of the ones given in <paramref name="flags"/>.
            </summary>
            <param name="flags">The list of <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>s to go through.</param>
            <returns>The flag within <paramref name="flags"/> with the highest priority</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.Exceptions.CsxFileCompilationFailedException">
            <summary>
            This exception is thrown when a csx file fails to compile.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15075.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Formulas.Exceptions.CsxFileCompilationFailedException.FileName">
            <summary>
            The name of the file which caused this error.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Formulas.Exceptions.CsxFileCompilationFailedException.Diagnostics">
            <summary>
            Contains the diagnostics of the failed copmilation process.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Formulas.Exceptions.CsxFileCompilationFailedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.Exceptions.FormulaXmlDeserializationException">
            <summary>
            This exception should be thrown when the deserialization of the formula fails. 
            It should contain the Exception-Details from the deserialization exception.
            </summary>
            <remarks>
            <para>
            When deserializing a formula (e.g. when reading from the store) an exception may occur, e.g. due to a bad format. This exception contains more information about which deserialization exception occurred.
            </para>
            <para>
            This exception is identified by error code HK15004.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Formulas.Exceptions.FormulaXmlDeserializationException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.Exceptions.InvalidMediaTypeParameterTimeBaseException">
            <summary>
            This exception is thrown when the media type for the time base cannot be parsed.
            </summary>
            <remarks>
            <para>
            When configuring the default implementation of the <see cref="T:HAKOM.Serialization.Core.Net.Api.ISerializer`1"/>, a mediaType must be specified. If the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> in this mediaType is invalid (wrong format or unknown <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/>), this exception is thrown. Specify a valid mediaType with either no <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> (default is HakomSecond) or a valid <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> as an integer (0 = HakomSecond; 1 = UnixSecond; 2 = UnixMillisecond).
            </para>
            <para>
            This exception is identified by error code HK15003.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Formulas.Exceptions.InvalidMediaTypeParameterTimeBaseException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 406 (Not Acceptable).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.Extensions.ContainerExtensions">
            <summary>
            Defines extension methods on <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> for registering services used to work with <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>s
            which implement the organization in and calculation of <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.Extensions.ContainerExtensions.UseDefaultFormulaFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factory implementations for work with formulas.
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.Extensions.ContainerExtensions.UseDefaultsForFormulas(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers implementations for all formula related services.
            </summary>
            <param name="container">The container to register the services with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.IFormula">
            <summary>
            Used to create time series which have data based on calculation rather than
            explicit values.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormula.TryRemove(System.DateTimeOffset,System.String@)">
            <summary>
            Attempts to remove a formula.
            </summary>
            <param name="at">The <see cref="T:System.DateTimeOffset"/> at which the formula is valid.</param>
            <param name="formula">The <see cref="T:System.String"/> formula that was removed.</param>
            <returns>True if the formula could be removed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormula.GetFormula(System.DateTimeOffset)">
            <summary>
            Gets the formula which should be used for any time along the series at or following
            the given date/time.
            </summary>
            <param name="at">The date/time along the series at which this formula becomes effective.</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormula.SetFormula(System.DateTimeOffset,System.String)">
            <summary>
            Sets the formula which should be used for any time along the series at or following
            the given date/time.
            </summary>
            <param name="at">The date/time along the series at which this formula becomes effective.</param>
            <param name="formula">The formula which should be used following the given date/time.</param>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory">
            <summary>
            Used to create formulas that dynamically calculate time series data.
            </summary>
            <remarks>
            Formulas are one or more expressions that define the data along a time series.
            <para>Each expression within the formula is applied to the time series starting from a specific date/time and is valid until it is succeeded by another expression.</para>
            <para>Expressions along with their date/time of when they are applied are referred to as formula slices.</para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.String)">
            <summary>
            Creates a formula with a single expression that is valid starting on January 1st 1972 at 00:00h UTC+1
            along the time series
            </summary>
            <param name="formula">The expression to use for calculation</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.DateTimeOffset,System.String)">
            <summary>
            Creates a formula that is valid starting on the given date along the time series.
            </summary>
            <param name="validFrom">Time along the series from which the formula should be used</param>
            <param name="formula">The expression to use for calculation</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.DateTimeOffset,System.String}})">
            <summary>
            Creates a formula with multiple expressions valid starting on the date given for each one along
            the time series
            </summary>
            <param name="slices">The expressions to use for calculation along with a date/time specifying their validity along the time series</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.Collections.Generic.KeyValuePair{System.DateTimeOffset,System.String}[])">
            <summary>
            Creates a formula with multiple expressions valid starting on the date given for each one along
            the time series
            </summary>
            <param name="slices">The expressions to use for calculation along with a date/time specifying their validity along the time series</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTimeOffset,System.String}})">
            <summary>
            Creates a formula with multiple expressions valid starting on the date given for each one along
            the time series
            </summary>
            <param name="slices">The expressions to use for calculation along with a date/time specifying their validity along the time series</param>
            <returns>The formula</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Formulas.IFormulaFactory.Create(System.ValueTuple{System.DateTimeOffset,System.String}[])">
            <summary>
            Creates a formula with multiple expressions valid starting on the date given for each one along
            the time series
            </summary>
            <param name="slices">The expressions to use for calculation along with a date/time specifying their validity along the time series</param>
            <returns>The formula</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.IEnumeration`1">
            <summary>
            Marker interface to characterize a struct of type <typeparamref name="TStruct"/> as an enumeration-like data type.
            </summary>
            <remarks>
            <para>
            Commonly used <see langword="enum"/>s are somewhat limited in several ways, i.e. it is not possible to add methods to them, extend them without code changes, specify an optimized data type for their backing value, etc. 
            </para>
            <para>HAKOM applications uses special <see langword="struct"/>s in these cases instead. A few examples of this can be found here: 
            <list type="bullet">
            <item><see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/></item>
            <item><see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/></item>
            <item><see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/></item>
            <item><see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/></item>
            </list>
            </para>
            </remarks>
            <typeparam name="TStruct">The type to mark as an enumeration-like data structure.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.IEnumeration`2">
            <summary>
            Base interface for enumeration types such as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>, <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>, etc.
            </summary>
            <typeparam name="TStruct">The type of struct that implements the enumeration.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.IEnumeration`2.Value">
            <summary>
            The value of the enumeration type.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.IEnumeration`2.Create(`1)">
            <summary>
            Creates an instance of <typeparamref name="TStruct"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to create the <typeparamref name="TStruct"/> with.</param>
            <returns>The newly created <typeparamref name="TStruct"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1">
            <summary>
            Provides additional properties mapped to specific values of enumeration-like structs (i.e. <see cref="T:HAKOM.TSM.Net.Api.Flags.Flag"/>, <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>, etc.).
            </summary>
            <remarks>
            <para><see cref="T:HAKOM.TSM.Net.Api.IEnumeration`1"/> implementing types are used to represent data similarly to the way how an <see langword="enum"/> works, but with added functionality and sometimes even the ability to extend them via configuration. Under the hood, these types are still represented by a single value (i.e. <see cref="T:System.Byte"/>, <see cref="T:System.Int32"/>, etc.) to keep their memory footprint as small as possible.</para>
            In order to add properties to these values without attaching them to each instance of the <typeparamref name="TStruct"/>, implementations of this interface may be used to map <typeparamref name="TStruct"/> values to additional information, for example a human-readable string representation, etc.
            </remarks>
            <typeparam name="TStruct">The enumeration-like type for which this instance provides additional properties.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1.PropertyName">
            <summary>
            The name of the property for which this instance provides values.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1.TryGetProperty(HAKOM.TSM.Net.Api.IEnumeration{`0},System.Object@)">
            <summary>
            Attempts to get the value of an additional property that has been mapped to a specific value of <typeparamref name="TStruct"/>.
            </summary>
            <param name="value">The <typeparamref name="TStruct"/> value to look up the property value for</param>
            <param name="property">The mapped property.</param>
            <returns><see langword="true"/> if there is a mapped property value for the given value of <typeparamref name="TStruct"/>, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1.TryGetProperty(`0,System.Object@)">
            <summary>
            Attempts to get the value of an additional property that has been mapped to a specific value of <typeparamref name="TStruct"/>.
            </summary>
            <param name="value">The <typeparamref name="TStruct"/> value to look up the property value for</param>
            <param name="property">The mapped property.</param>
            <returns><see langword="true"/> if there is a mapped property value for the given value of <typeparamref name="TStruct"/>, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1.MappedProperties">
            <summary>
            Gets all property values mapped to specific values of <typeparamref name="TStruct"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.ITsm">
            <summary>
            Provides access to time series management functions.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Repositories">
            <summary>
            Provides access to all configured repositories used to
            store time series and related data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Serializers">
            <summary>
            Factory for creating serializers.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.TimeSeries">
            <summary>
            Factory for creating time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.TimeSeriesData">
            <summary>
            Factory for creating time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Calculator">
            <summary>
            Used to make formula calculations and aggregations.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.FlagPriorities">
            <summary>
            Used for finding preferred flags.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.FlagNames">
            <summary>
            Used for obtaining the names of flags.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Intervals">
            <summary>
            Factory for creating information that configures
            the base interval of a time series (i.e. 15 min, 2 hour, etc).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Units">
            <summary>
            Factory for creating units used for time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.AttributeTypes">
            <summary>
            Factory for creating attribute types.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Attributes">
            <summary>
            Factory for creating attributes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Nodes">
            <summary>
            Factory for creating nodes
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.TimeDependentUnitConversions">
            <summary>
            Factory for creating unit conversions used for time dependent conversion of time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.ConstantUnitConversions">
            <summary>
            Factory for creating unit conversions used for constant conversion of time series data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Formulas">
            <summary>
            Factory for creating formulas which are used to generate/derive
            time series data based on functions rather than explicitly defined
            data.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.TimeZones">
            <summary>
            Factory for creating time zones used in time series interval transformations 
            to handle daylight saving time changes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.DataTransformer">
            <summary>
            Factory for creating data transformations used in time series to handle interval changes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.DataOperation">
            <summary>
            Factory for creating data operations used in time series to handle mathematical
            operations on a time series value.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.DataConverter">
            <summary>
            Factory for creating data conversions used in time series to handle unit conversions.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.ITsm.Container">
            <summary>
            May be used to resolve registered services from the <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that this instance of <see cref="T:HAKOM.TSM.Net.Api.ITsm"/> was created from.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.ITsm.Create(System.Action{HAKOM.DependencyInjection.Core.Net.Api.IContainer},System.Boolean,System.Action{HAKOM.DependencyInjection.Core.Net.Api.IContainer})">
            <summary>
            Creates an ITsm instance for time series management.
            Unless <paramref name="initializeContainerWithDefaults"/> is set
            to true, all dependencies (including an ITsm implementation) must be registered
            within the given <paramref name="configure"/> action.
            </summary>
            <param name="configure">An action that registers types/services with the DI container.</param>
            <param name="initializeContainerWithDefaults">If true, registers some core components including a default ITsm instance before calling <paramref name="configure"/>.</param>
            <param name="configureBeforeDefaults">An action that's called on the DI container before defaults are setup.
            Even if <paramref name="initializeContainerWithDefaults"/> is false this is called before <paramref name="configure"/> is called.
            </param>
            <returns>An ITsm instance to work with.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.ITsm.Create">
            <summary>
            Creates an ITsm instance for time series management with default settings.
            </summary>
            <returns>The ITsm instance to work with.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.ITsm.Create(System.Action{HAKOM.DependencyInjection.Core.Net.Api.IContainer})">
            <summary>
            Creates an ITsm instance for time series management with default settings.
            </summary>
            <param name="configureBeforeDefaults">An action that's called on the DI container before defaults are setup.
            </param>
            <returns>The ITsm instance to work with.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.Exceptions.UnitRepositoryIsNotConfiguredException">
            <summary>
            Thrown when the repository set as unit repository is not configured.
            </summary>
            <remarks>
            <para>This error is identified by code HK15103.</para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Persistence.Exceptions.UnitRepositoryIsNotConfiguredException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepository">
            <summary>
            Provides access to the store specific functions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetUnitStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on units.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetUnitStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on units.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetConstantUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on constant unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetConstantUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on constant unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetTimeDependentUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on time dependent unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetTimeDependentUnitConversionStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on time dependent unit conversions.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetTimeSeriesStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on time series.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetTimeSeriesStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on time series.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetAttributeStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on attributes.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetAttributeStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on attributes.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetAttributeTypeStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on attribute types.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetAttributeTypeStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on attribute types.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Persistence.IAttributeTypeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetNodeStore(System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on nodes.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetNodeStore(System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on nodes.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Attributes.Nodes.Persistence.INodeStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetTimeSeriesDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on time series data.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to which the data relates.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetTimeSeriesDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Tries to get a store used for CRUD operations on time series data.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to which the data relates.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.GetAttributeDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Threading.CancellationToken)">
            <summary>
            Gets a store used for CRUD operations on attribute data.
            </summary>
            <param name="attributeAssignmentReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> used to configure the new data store.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepository.TryGetAttributeDataStore(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{HAKOM.TSM.Net.Api.Attributes.IAttribute},System.Threading.CancellationToken)">
            <summary>
            Attempts to get a store used for CRUD operations on attribute data.
            </summary>
            <param name="attributeAssignmentReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> used to configure the new data store.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created
            <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.Attributes.IAttributeDataStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation">
            <summary>
            Describes some common properties of the repository that determine how time series data is stored in the repository.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation.TimeBase">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> of the repository. This determines both the maximum resolution (i.e. milliseconds or seconds) as well as the epoch (the zero-point in time) of time stamps stored in the data base.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformationFactory">
            <summary>
            Used internally when loading <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> from an <see cref="T:HAKOM.Persistence.Core.Net.Api.IRepository"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformationFactory.Create(System.String,HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,HAKOM.Versioning.Core.Net.Api.IVersion)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> instance with the given <paramref name="name"/> and <paramref name="timeBase"/>.
            </summary>
            <param name="name">The name of the repository</param>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> used by the repository which determines both resolution and epoch of time stamps stored in the repository.</param>
            <param name="version">The version of the repository.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformationFactory.TryCreate(System.String,HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,HAKOM.Versioning.Core.Net.Api.IVersion)">
            <summary>
            Tries to create a new <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> instance with the given <paramref name="name"/> and <paramref name="timeBase"/>.
            </summary>
            <param name="name">The name of the repository</param>
            <param name="timeBase">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> used by the repository which determines both resolution and epoch of time stamps stored in the repository.</param>
            <param name="version">The version of the repository.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryInformation"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryStore">
            <summary>
            Provides access to all configured repositories that can be used to
            store time series and related data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryStore.LoadTimeSeriesRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Loads the repository used to store the time series definitions based on the Storage property of the given <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> used to load the repository.</param>
            <param name="cancellationToken">A token, which may be used to cancel the operation.</param>
            <returns>The time series repository.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Persistence.ITsmRepositoryStore.LoadTimeSeriesDataRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Loads the repository used to store time series data based on the DataStorage or Storage properties of the given <paramref name="timeSeriesReference"/>.
            If DataStorage is null, loads the repository with the Storage property.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> used to load the data repository.</param>
            <param name="cancellationToken">A token, which may be used to cancel the operation.</param>
            <returns>The time series data repository.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceIdentifierTypeMismatchException">
            <summary>
            Indicates that the type of the identifier of a reference is unexpected.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15090.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceIdentifierTypeMismatchException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceNotResolvedException">
            <summary>
            Indicates that an attempt was to resolve a reference but the method for resolving the reference
            did not return a <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IResolvedReference`1"/>.
            </summary>
            <remarks>
            <para>
            The method from the store (given in the error message) should return a 
            <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IResolvedReference`1"/> to resolve the reference.
            </para>
            <para>
            This exception is identified by error code HK15098.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceNotResolvedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceWithoutIdentifierException">
            <summary>
            Indicates that an operation was attempted using a reference that does not contain a specific identifier even
            though the operation depends on such an identifier being present.
            </summary>
            <remarks>
            <para>
            This exception is identified by error code HK15088.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Persistence.References.Exceptions.ReferenceWithoutIdentifierException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Quotations.Extensions.ContainerExtensions">
            <summary>
            Provides methods for registering services with an instance of <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that relate to storing and retrieving individual quotations for time series data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.Extensions.ContainerExtensions.UseDefaultQuotationBehaviorNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior">
            <summary>
            The quotation behavior has an effect on which version of the time series is loaded when reading with quotation.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Create(System.Nullable{System.Int32})">
            <summary>
            Creates a quotation behavior from its known value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value of the quotation behavior.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.TryCreate(System.Nullable{System.Int32})">
            <summary>
            Attempts to create a quotation behavior from its known value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value of the quotation behavior.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing a new instance of <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.MaxExact">
            <summary>
            Creates a quotation behavior, which specifies that the latest quotation date and time for the time domain will be determined and only data for that date will be read.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> with value 1.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.MaxNotExact">
            <summary>
            Creates a quotation behavior, which specifies that data from the time domain will be read with the respective latest quotation date and time.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> with value 2.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.NowNotExact">
            <summary>
            Creates a quotation behavior which specifies that data from the time domain will be read with the respective latest quotation date and time but earlier than the current time.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> with value 3.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Default">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> that specifies no explicit behavior.
            </summary>
            <remarks>
            <para>
            When reading data from a quotation time series without explicitly specifying a quotation date/time, 
            the actual data retrieved depends on the <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> that may be controlled by 
            </para>
            <list type="bullet">
            <item>passing it in <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Quotation.ITimeSeriesQuotationDataReadingOptions.QuotationBehavior"/></item>
            <item>setting the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.QuotationDefaultBehavior" /> property of the time series being read</item>
            <item>or specifying a TSM:Persistence:Data:QuotationDefaultBehavior in the applications configuration</item>
            </list>
            <para>
            in that order. If one of these is <see langword = "null" /> or <see cref = "M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Default"/> then the next in that list is used to determine final behavior.
            If none of the aforementioned settings has a value that is not null or default, then <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.MaxExact"/> is used.
            </para>
            </remarks>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> with value default.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Value">
            <summary>
            The <see cref="T:System.Int32"/> value representing the quotation behavior.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.TryParseFromConfigurationSectionValue(System.String,System.Nullable{HAKOM.TSM.Net.Api.Quotations.QuotationBehavior}@)">
            <summary>
            Tries to parse a string value to a <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.
            </summary>
            <remarks>
            <para>
            The string value for parsing is intended as the string value from the configuration section "TSM:Persistence:Data:QuotationDefaultBehavior". 
            The following string values are currently supported for parsing:
            </para>
            <list type="bullet">
            <item><term>"0"</term><description>Parses to <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Default"/></description></item>
            <item><term>"1"</term><description>Parses to <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.MaxExact"/></description></item>
            <item><term>"2"</term><description>Parses to <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.MaxNotExact"/></description></item>
            <item><term>"3"</term><description>Parses to <see cref="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.NowNotExact"/></description></item>
            </list>
            </remarks>
            <param name="configurationSectionValue">The value to be parsed.</param>
            <param name="quotationBehavior">The parsed value. This value is null if the parsing failed.</param>
            <returns>A <see langword="bool"/> indicating if the parsing was successful.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.op_Equality(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior,HAKOM.TSM.Net.Api.Quotations.QuotationBehavior)">
            <summary>
            Compares the value of two quotation behaviors using the operator '=='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> on the right of the '==' operator.</param>
            <returns>A boolean indicating if the values of the quotation behaviors are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.op_Inequality(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior,HAKOM.TSM.Net.Api.Quotations.QuotationBehavior)">
            <summary>
            Compares the value of two quotation behaviors using the operator '!='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> on the right of the '!=' operator.</param>
            <returns>A boolean indicating if the values of the quotation behaviors are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Equals(HAKOM.TSM.Net.Api.Quotations.QuotationBehavior)">
            <summary>
            Compares the value of this quotation behavior to another quotation behavior returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>, which is used for comparison </param>
            <returns>A boolean indicating if the values of the quotation behaviors are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.IsMaxExact">
            <summary>
            Returns true if the quotation behavior is 'MaxExact'.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.IsMaxNotExact">
            <summary>
            Returns true if the quotation behavior is 'MaxNotExact'.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.IsNowNotExact">
            <summary>
            Returns true if the quotation behavior is 'NowNotExact'.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.IsDefault">
            <summary>
            Returns true if the quotation behavior is a default quotation behavior.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.GetHashCode">
            <summary>
            Creates the hash code for this quotation behavior, using its value.
            </summary>
            <returns>A hash code for this quotation behavior.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.Equals(System.Object)">
            <summary>
            Compares the value of this quotation behavior to another quotation behavior returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>, which is used for comparison </param>
            <returns>A boolean indicating if the values of the quotation behaviors are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Serialization.Exceptions.TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException">
            <summary>
            Indicates that the type of identifier of the IReference, which should be serialized, 
            or the according IStore, which is used to create a IReference, does not match the configured type of the JsonSerializer.
            <remarks>
            <para>
            Either the default IStore or the JsonSerializer has to be changed to support the same identifier.
            </para>
            <para>
            This exception is identified by error code HK15095.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Serialization.Exceptions.TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Exceptions.CouldNotParseDateTimeException">
            <summary>
            Indicates that the provided date time string could not be parsed.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Exceptions.CouldNotParseDateTimeException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ContainerExtensions">
            <summary>
            Provides methods for registering services with an instance of <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that are related to managing time series and their properties.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ContainerExtensions.UseDefaultTimeSeriesAssignmentFactories(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers factories for instantiating types related to the assignment of additional data to individual time series (i.e. <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>s or other time series to be used to convert data between specific units).
            </summary>
            <param name="container">The container to register the factories with.</param>
            <returns>The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> itself.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ContainerExtensions.UseDefaultFunctionTypeNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions">
            <summary>
            Extension methods for creating <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> objects. Used for authorization.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of timeseries resources.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TimeSeriesResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new timeseries <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TimeSeriesResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new timeseries <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TimeSeriesResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new timeseries <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TimeSeriesResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new timeseries <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.TimeSeries.Extensions.ResourceFactoryExtensions.TIME_SERIES_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType">
            <summary>
            The FunctionType of a time series.
            </summary>
            <remarks>
            This defines the validity period of data points along a time series.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Create(System.Int32)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> by a number value.
            </summary>
            <param name="value">The integer value of the type.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.TryCreate(System.Int32)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> by a number value.
            </summary>
            <param name="value">The integer value of the type.</param>
            <returns>A new <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Create(System.String)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> by a string value.
            </summary>
            <param name="value">The string value of the type.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.TryCreate(System.String)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> by a string value.
            </summary>
            <param name="value">The string value of the type.</param>
            <returns>A new <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepRight">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of type 'StepRight'. Step-Right stands for a piecewise-constant function,
            where the value of a data point applies to the interval beginning at the data point's time. Example: Power values (watts).
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of type 'StepRight'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.StepLeft">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of type 'StepLeft'. Step-Left stands for a piecewise-constant function,
            where the value of a data point applies to the interval ending at the data point's time. Example: Energy values (watt hour).
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> of type 'StepLeft'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Default">
            <summary>
            Creates a instance of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> with the default value.
            The default type is 'StepRight'.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> with the default value.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Value">
            <summary>
            The value of the function type.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.op_Equality(HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Compares one <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Value"/> with another using the '==' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> on the right of the '==' operator.</param>
            <returns>A boolean indicating if the values of the types are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.op_Inequality(HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Compares one <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Value"/> with another using the '!=' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> on the right of the '!=' operator.</param>
            <returns>A boolean indicating if the values of the types are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.GetHashCode">
            <summary>
            Creates the hash code for this  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>, using its value.
            </summary>
            <returns>A hash code for this function type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Equals(HAKOM.TSM.Net.Api.TimeSeries.FunctionType)">
            <summary>
            Compares one <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Value"/> with another returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>, which is used for comparison </param>
            <returns>A boolean indicating if the values of the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Equals(System.Object)">
            <summary>
            Compares one <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.FunctionType.Value"/> with another returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>, which is used for comparison </param>
            <returns>A boolean indicating if the values of the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> are equal (true) or not equal (false).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries">
            <summary>
            Objects implementing this interface can be assigned to <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries">
            <summary>
            The time series object.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Name">
            <summary>
            Gets or sets the name of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Description">
            <summary>
            Gets or sets the free-text description for additional info.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Function">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/> specifying how values are applied along the time axis.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Cyclic">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Interval">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Unit">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.IntervalTransformationMethod">
            <summary>
            Gets or sets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> type of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Formula">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.TimeZone">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.StartOfTime">
            <summary>
            Gets or sets the start time of the time series data mesh.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveDuplicatedValues">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> indicating whether the duplicate data values should be reduced to one value,
            or whether they should continue to be stored in duplicate.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveHistoricData">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether or not historic data is preserved.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.PreserveAuditLog">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating whether changes made to the time series and its data should be recorded for auditing purposes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Quotation">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether the time series allows quotations (An additional dimension to historization).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.QuotationDefaultBehavior">
            <summary>
            Gets or sets the default <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.CompressionMode">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.CompressionMode"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.CompressionMultiplier">
            <summary>
            Gets the compression multiplier of the time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.GetTimeZoneOrDefault">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.TimeZone"/> or if null the configured default.
            </summary>
            <returns><see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> of the time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.GetStartOfTimeOrDefault">
            <summary>
            Gets the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.StartOfTime"/> or its default. 
            The default is 01.01.1970 00:00:00 in the <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.TimeZone"/> of the time series.
            </summary>
            <returns><see cref="T:System.DateTimeOffset"/> representing the start of time of the time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.GetCompressionMultiplierOrDefault">
            <summary>
            Gets the compression mode of the time series.
            </summary>
            <returns> Integer representing the compression mode of the time series.
            If it is null the default compression multiplier for the interval of the time series.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults">
            <summary>
            Unspecified properties for time series objects 
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.TimeZone">
            <summary>
            The default <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> for the time series objects.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.StartOfTime">
            <summary>
            The default starting time for the time series objects. It is provided in the same time zone as <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesDefaults.TimeZone"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesFactory">
            <summary>
            For creating time series and associated data
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesFactory.Defaults">
            <summary>
            Gets default values for some properties of the time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesFactory.Create(System.String,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.String,HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},System.Nullable{System.DateTimeOffset},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{HAKOM.TSM.Net.Api.Quotations.QuotationBehavior},HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Creates a new time series.
            </summary>
            <param name="name">The name of the time series</param>
            <param name="description">The description of the time series</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> of the time series.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the time series.</param>
            <param name="formula">The <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> attached to the time series.</param>
            <param name="timeZone">The <see cref="T:System.TimeZone"/> of the time series.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> of the time series.</param>
            <param name="startOfTime">The start time of the time series data mesh.</param>
            <param name="preserveDuplicatedValues">A <see cref="T:System.Boolean"/> indicating if duplicate value types should be preserved.</param>
            <param name="preserveHistoricData">A <see cref="T:System.Boolean"/> indicating if historic data for this time series should be preserved.</param>
            <param name="preserveAuditLog">A <see cref="T:System.Boolean"/> value indicating whether changes made to the time series and its data should be recorded for auditing purposes.</param>
            <param name="quotation">A <see cref="T:System.Boolean"/> indicating if the time series should allow quotation.</param>
            <param name="quotationDefaultBehavior">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.</param>
            <param name="compressionMode">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>.</param>
            <param name="compressionMultiplier">An <see cref="T:System.Int32"/>representing compression multiplier of the time series.</param>
            <param name="validate">A <see cref="T:System.Boolean"/> indicating whether the time series should be validated. There should be no reason to set this to false unless one deliberately attempts to create a corrupt time series.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesFactory.TryCreate(System.String,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Boolean,HAKOM.TSM.Net.Api.TimeSeries.FunctionType,HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.String,HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},System.Nullable{System.DateTimeOffset},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{HAKOM.TSM.Net.Api.Quotations.QuotationBehavior},HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Creates a new time series.
            </summary>
            <param name="name">The name of the time series</param>
            <param name="description">The description of the time series</param>
            <param name="cyclic">A <see cref="T:System.Boolean"/> indicating whether the values along the time axis are cyclic or not.</param>
            <param name="function">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> of the time series.</param>
            <param name="interval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> of the time series.</param>
            <param name="formula">The <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/> attached to the time series.</param>
            <param name="timeZone">The <see cref="T:System.TimeZone"/> of the time series.</param>
            <param name="intervalTransformationMethod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> of the time series.</param>
            <param name="startOfTime">The start time of the time series data mesh.</param>
            <param name="preserveDuplicatedValues">A <see cref="T:System.Boolean"/> indicating if duplicate value types should be preserved.</param>
            <param name="preserveHistoricData">A <see cref="T:System.Boolean"/> indicating if historic data for this time series should be preserved.</param>
            <param name="preserveAuditLog">A <see cref="T:System.Boolean"/> value indicating whether changes made to the time series and its data should be recorded for auditing purposes.</param>
            <param name="quotation">A <see cref="T:System.Boolean"/> indicating if the time series should allow quotation.</param>
            <param name="quotationDefaultBehavior">The <see cref="T:HAKOM.TSM.Net.Api.Quotations.QuotationBehavior"/>.</param>
            <param name="compressionMode">The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/>.</param>
            <param name="compressionMultiplier">An <see cref="T:System.Int32"/>representing compression multiplier of the time series.</param>
            <param name="validate">A <see cref="T:System.Boolean"/> indicating whether the time series should be validated. There should be no reason to set this to false unless one deliberately attempts to create a corrupt time series.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesValidator">
            <summary>
            Validates the correctness of the settings of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesValidator.Validate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Tries to validate the given <paramref name="timeSeries"/>
            and returns an exception if this fails.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be validated.</param>
            <returns>True if the validation was successful.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeriesValidator.TryValidate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Tries to validate the given <paramref name="timeSeries"/>.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be validated.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing either a boolean, if successful, or exceptions, if not.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignmentFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignmentFactory.Create``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.References.IReference{``0})">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> the <paramref name="assignedReference"/> is associated with.</param>
            <param name="assignedReference">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the assigned object.</param>
            <returns>The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/> which signifies the association of the two references.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignmentFactory.TryCreate``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.References.IReference{``0})">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> the <paramref name="assignedReference"/> is associated with.</param>
            <param name="assignedReference">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the assigned object.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/> which signifies the association of the two references.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1">
            <summary>
            Signifies the association between an assigned entity and the referenced <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> it is related to.
            </summary>
            <typeparam name="TAssigned">The type of the object that is assigned to the time series.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1.TimeSeriesReference">
            <summary>
            Gets the reference to the time series to which <typeparamref name="TAssigned"/> is assigned to.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1.AssignedReference">
            <summary>
            Gets the reference to the assigned object.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.
            </summary>
            <typeparam name="TIdentifier">The type of the identifier for the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore{`0})">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1"/> for usage.
            </summary>
            <param name="timeSeriesStore">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1"/> for loading the references.</param>
            
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1.Create``1(`0)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1.TryCreate``1(`0)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1.Create``1(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment{``0})">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</param>
            <param name="timeSeriesAssignment">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/> associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReferenceFactory`1.TryCreate``1(`0,HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment{``0})">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</param>
            <param name="timeSeriesAssignment">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/> associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1">
            <summary>
            Represents a reference to a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/>.
            </summary>
            <typeparam name="TAssigned">The type of the object that is assigned to the time series.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`2">
            <summary>
            Represents a reference to a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.ITimeSeriesAssignment`1"/>.
            </summary>
            <typeparam name="TAssigned">The type of the object that is assigned to the time series.</typeparam>
            <typeparam name="TIdentifier">The type of the unique identifier used to retrieve the objects data from the store.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentAlreadyExistsException">
            <summary>
            Indicates that an attempt was made to assign something like an attribute to a time series even though that specific assignment already exists (i.e. that particular attribute is already assigned to that particular time series).
            </summary>
            <remarks>
            <para>
            This exception is typically raised when trying to assign something like an attribute or another time series to a time series when that assignment already exists.
            </para>
            <para>
            This exception is identified by error code HK15127.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentAlreadyExistsException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with an assignment that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            This exception is typically raised when trying to access an assignment that does not exist in the specified store.
            Ensure that the correct store is being accessed.
            </para>
            <para>
            This exception is identified by error code HK15105.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentTypeNotSupportedException">
            <summary>
            Indicates that an attempt was made to save, load or delete the assignment of an unsupported type.
            </summary>
            <remarks>
            <para>
            When saving or deleting assignments in the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> only supported assignment types can be saved or deleted. Currently only objects of type <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> are supported for assignment.
            </para>
            <para>
            This exception is identified by error code HK15045.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.AssignmentTypeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.InvalidStorageInformationRepositoryException">
            <summary>
            Indicates that an attempt was made to save or delete an assignment of a time series 
            to or from a time series with an different repository.
            </summary>
            <remarks>
            <para>
            When saving or deleting assignments in the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> both objects 
            (the object to be assigned and the time series to which the object is to be assigned) must be in 
            the same repository.
            </para>
            <para>
            This exception is identified by error code HK15049.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.InvalidStorageInformationRepositoryException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.InvalidTimeSeriesIdentifierException">
            <summary>
            Indicates that a time series operation was attempted with an invalid time series identifier.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.InvalidTimeSeriesIdentifierException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesDeletionFailedException">
            <summary>
            Indicates that there was a failed attempt to delete a time series.
            </summary>
            <remarks>
            <para>
            The deletion may have failed due to many reasons. The exact reason can be found in the <see cref="P:System.Exception.InnerException"/>.
            </para>
            <para>
            This exception is identified by error code HK15005.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesDeletionFailedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesIdNotAllowedOnSaveException">
            <summary>
            Indicates that an attempt was made to manually save a time series id.
            </summary>
            <remarks>
            <para>
            The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> of the time series to be saved already contained an id. The id of a time series cannot be set manually. If an update was intended, use <see cref="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.Threading.CancellationToken)"/>. 
            </para>
            <para>
            This exception is identified by error code HK15014.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesIdNotAllowedOnSaveException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesNameAlreadyExistsException">
            <summary>
            Indicates that an attempt was made to create a new time series with a name, that already exists in the repository.
            </summary>
            <remarks>
            <para>
            The name of a new time series to be saved must be unique in this repository.
            </para>
            <para>
            This exception is identified by error code HK15015.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesNameAlreadyExistsException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 409 (Conflict).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesNotFoundException">
            <summary>
            Thrown when an attempt to access a non-existent time series was made.
            </summary>
            <remarks>
            <para>
            Make sure the requested time series exists in the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> that you are using to access the time series.
            </para>
            <para>
            This exception is identified by error code HK15039.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException">
            <summary>
            Abstract class for all time series validation exceptions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException.#ctor(System.String,System.String)">
            <summary>
            Generates an exception with message indicating which property of the time series failed validation and adds a custom message.
            </summary>
            <param name="property"><see cref="T:System.String"/> name of the time series property which failed validation.</param>
            <param name="message">Exception message explaining in detail why the property failed validation.</param>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameException">
            <summary>
            Abstract class for time series validation exceptions stemming from incorrect naming.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions.TimeSeriesNameIsEmptyException">
            <summary>
            Indicates that there was an attempt to process or save a time series whose name is null or an empty string.
            </summary>
            <remarks>
            <para>
            When saving a time series with the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> the name of the time series has to be a not null or empty string.
            </para>
            <para>
            This exception is identified by error code HK15009.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.InvalidTimeSeriesNameExceptions.TimeSeriesNameIsPaddedWithWhiteSpaceException">
            <summary>
            Indicates that there was an attempt to process or save a time series, containing whitespaces at the beginning or end of its name.
            </summary>
            <remarks>
            <para>
            When saving a time series with the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> the name of the time series may not contain whitespaces at the beginning or end.
            </para>
            <para>
            This exception is identified by error code HK15010.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.NonCyclicTimeSeriesCompressionNotSupportedException">
            <summary>
            Indicates that there was an attempt to process or save a time series with cyclic false and any other <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> than "NoCompression".
            </summary>
            <remarks>
            <para>
            When saving a time series with the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> or writing data with the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataStore"/> the time series with a <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Compression.CompressionMode"/> other than "NoCompression" cannot be set to not cyclic.
            </para>
            <para>
            This exception is identified by error code HK15008.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.PreserveHistoricDataOnFormulaTimeSeriesNotSupportedException">
            <summary>
            Thrown when an attempt was made to persist a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> instance, which had a formula and PreserveHistoricData set to true.
            </summary>
            <para>
            When saving an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> instance with a formula, ensure PreserveHistoricData is not set to true.
            </para>
            <para>
            This exception is identified by error code HK15086.
            </para>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Exceptions.TimeSeriesValidationExceptions.PreservingHistoricDataWithoutAuditLogsNotPossibleException">
            <summary>
            Indicates that there was an attempt to process or save a time series with historic data where preserving audit logs not enabled.
            </summary>
            <remarks>
            <para>
            Preserving historic data requires the preservation of the audit logs.
            </para>
            <para>
            This exception is identified by error code HK15115.
            </para>
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters">
            <summary>
            Defines parameters for searching time series by attributes.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters.AttributeName">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> by the <see cref="P:HAKOM.TSM.Net.Api.Attributes.IAttribute.Name"/> of an assigned <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters.AttributeValue">
            <summary>
            Filter for <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> by the value of an assigned <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParametersFactory">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/> objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParametersFactory.Create(System.String,System.String)">
            <summary>
            Used to create <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/> objects with the given <paramref name="attributeName"/> and <paramref name="attributeValue"/>.
            </summary>
            <param name="attributeName">The name of the new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/> object.</param>
            <param name="attributeValue">The value of the new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/> object.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/> object.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters">
            <summary>
            Parameters for searching time series.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Name">
            <summary>
            Filter for time series by their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Name"/>.
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Description">
            <summary>
            Filter for time series by the content of their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Description"/>. 
            Wildcard characters may be used.<br/>
            Possible wildcards are:
            <list type="bullet">
            <item>'*' = substitutes 0 or more of any characters</item>
            <item>'?' = substitutes 1 character</item>
            </list>
            The wildcards can be escaped with a backslash '\'.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Function">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Cyclic">
            <summary>
            Filter for time series by it beeing 'cyclic' or not.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Interval">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Unit">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.IntervalTransformationMethod">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.Formula">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.TimeZone">
            <summary>
            Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.StartOfTime">
            <summary>
            Filter for time series by their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.StartOfTime"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters.AttributeSearchParameters">
            <summary>
            Filter for time series by assigned <see cref="T:HAKOM.TSM.Net.Api.Attributes.IAttribute"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParametersFactory">
            <summary>
            Factory for creating parameters for the time series search.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParametersFactory.AttributeSearchParameters">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParametersFactory.Create(System.String,System.String,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,System.Nullable{System.Boolean},System.Nullable{HAKOM.TSM.Net.Api.TimeSeries.FunctionType},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Nullable{HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod},HAKOM.TSM.Net.Api.Formulas.IFormula,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters})">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> object for the time series search.
            </summary>
            <param name="name">Filter for time series by their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Name"/>. Wildcard characters may be used.</param>
            <param name="description">Filter for time series by their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Description"/>. Wildcard characters may be used.</param>
            <param name="interval">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/>.</param>
            <param name="cyclic">Filter for time series by it being 'cyclic' or not.</param>
            <param name="function">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.FunctionType"/>.</param>
            <param name="unit">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</param>
            <param name="intervalTransformationMethod">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</param>
            <param name="formula">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Formulas.IFormula"/>.</param>
            <param name="timeZone">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>.</param>
            <param name="startOfTime">Filter for time series by their <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.StartOfTime"/>.</param>
            <param name="attributeSearchParameters">Filter for time series by their <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesAttributeSearchParameters"/>.</param>
            <returns></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore">
            <summary>
            TimeSeriesStore to load, save, delete and find time series. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStoreFactory"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Configures the time series store with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SearchParameters">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParametersFactory"/> associated with this store.
            </summary>
            <remarks>
            <para>
            This should be used in order to create search parameters for use with the Find/TryFind methods.
            </para>
            <code language="csharp title=&quot;Finding Time Series with Search Parameters&quot; linenums=&quot;1&quot; hl_lines=&quot;5-8&quot;">
            var tsm = ITsm.Create();
            var repository = await tsm.Repositories.Load("My repository");
            var timeSeriesStore = await repository.GetTimeSeriesStore();
            var results = timeSeriesStore.Find(
            	timeSeriesStore.SearchParameters.Create(
            		name: "*",
            		description: "time series number ?"
            	)
            );
            await foreach (ITimeSeriesReference result in results) {
            	ITimeSeries timeSeries = await result.Resolve();
            	Console.WriteLine(timeSeries.Name);
            }
            </code>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Count(System.Threading.CancellationToken)">
            <summary>
            Counts the amount of time series objects in the repository.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the amount as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryCount(System.Threading.CancellationToken)">
            <summary>
            Tries to count the amount of time series objects in the repository.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the amount as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Load(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage.
            </summary>
            <param name="name">The unique name of the time series.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoad(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage.
            </summary>
            <param name="name">The unique name of the time series.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Load(System.String,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage in the state from a specific date and time.
            </summary>
            <param name="name">The unique name of the time series.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the date and time of the state in which
            the time series is loaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoad(System.String,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage in the state from a specific date and time.
            </summary>
            <param name="name">The unique name of the time series.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the date and time of the state in which
            the time series is loaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing 
            the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Load(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage.
            </summary>
            <param name="timeSeriesReference">The reference of the time series (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>) which will be reloaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoad(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage.
            </summary>
            <param name="timeSeriesReference">The reference of the time series (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>) which will be reloaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing 
            the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Load(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage in the state from a specific date and time.
            </summary>
            <param name="timeSeriesReference">The reference of the time series (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>) which will be reloaded.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the date and time of the state in which
            the time series is loaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoad(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> from storage in the state from a specific date and time.
            </summary>
            <param name="timeSeriesReference">The reference of the time series (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>) which will be reloaded.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the date and time of the state in which
            the time series is loaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series including information about the exact point in time,
            at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series including information about the exact point in time,
            at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the 
            saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series with information about where its data is stored.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Tries to save a new time series with information about where its data is stored.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="dataStorageInformation">ToDO</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save a new time series with information about where its data is stored and further includes information about the exact point in time,
            at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save a new time series with information about where its data is stored and further includes information about the exact point in time,
            at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series based on a reference. 
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Tries to saves a new time series based on a reference. 
            <br/>May be used to copy a time series to another repository.
            <br/>The data storage will be the same as the original <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series based on a reference. 
            <br/>Further takes information about where its data is stored and further includes information about the exact point in time,
            at which the time series was in the given state.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save a new time series based on a reference. 
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series based on a reference.
            <br/>Further takes information about where its data is stored.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Tries to saves a new time series based on a reference. 
            <br/>Further takes information about where its data is stored.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves a new time series based on a reference. 
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save a new time series based on a reference. 
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy a time series to another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be retrieved and saved.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            Includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series.
            Includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            <br/>Further takes information about where its data is stored and further includes information about the exact point in time,
            at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            <br/>Further takes information about where its data is stored.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series.
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series.
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series based on a reference.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series based on a reference.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series based on a reference. 
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series based on a reference. 
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series based on a reference.
            <br/>Further takes information about where its data is stored.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series based on a reference.
            <br/>Further takes information about where its data is stored.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the given time series based on a reference. 
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to save or update the given time series based on a reference. 
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            <br/>May be used to copy or update a time series from another repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing
            the saved <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries}},System.Threading.CancellationToken)">
            <summary>
            Finds time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> based on the given <paramref name="parameters"/>,
            sorts them based on the given <paramref name="orderings"/>
            and returns only a specified range from the results for pagination.
            </summary>
            <param name="parameters">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A list of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing the found time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters,HAKOM.Persistence.Core.Net.Api.Paging.Range{HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries},System.Collections.Generic.IEnumerable{HAKOM.Persistence.Core.Net.Api.Ordering.Order{HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries}},System.Threading.CancellationToken)">
            <summary>
            Finds time series as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> based on the given <paramref name="parameters"/>,
            sorts them based on the given <paramref name="orderings"/>
            and returns only a specified range from the results for pagination.
            </summary>
            <param name="parameters">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesSearchParameters"/> by which the search will be filtered.</param>
            <param name="range">An optional <see cref="T:System.Range"/> by which the results should be limited.</param>
            <param name="orderings">A list of <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Order`1"/> by which the results will be ordered.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <remarks>
            Removes consecutive duplicate <paramref name="orderings"/>, retaining only the last specified <see cref="T:HAKOM.Persistence.Core.Net.Api.Ordering.Direction"/> for each.
            </remarks>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Delete(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a time series from the repository based on the given <paramref name="name"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the time series.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryDelete(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a time series from the repository based on the given <paramref name="name"/>.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the timeseries.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.Delete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a given <paramref name="timeSeriesReference"/> from the repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object representing the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the timeseries.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryDelete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a given <paramref name="timeSeriesReference"/> from the repository.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object representing the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the timeseries.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.FindAssignments``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll all assignments from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to find the assignable references from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryFindAssignments``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll all assignments from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to find the assignable references from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> of a <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of a  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.SaveAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Saves an assignment onto the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to store.</param>
            <param name="to">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to store the assignable reference on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TrySaveAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Saves an assignment onto the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to store.</param>
            <param name="to">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to store the assignable reference on.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.DeleteAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Deletes an assignment from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to delete.</param>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to delete the assignable reference from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.DeleteAssignment``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{``0},System.Threading.CancellationToken)">
            <summary>
            Deletes a given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>.
            </summary>
            <param name="timeSeriesAssignmentReference">
            The reference of the time series assignment (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>) which will be reloaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryDeleteAssignment``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{``0},System.Threading.CancellationToken)">
            <summary>
            Attempts to delete a given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>.
            </summary>
            <param name="timeSeriesAssignmentReference">
            The reference of the time series assignment (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>) which will be reloaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryDeleteAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Deletes an assignment from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to delete.</param>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to delete the assignable reference from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.DeleteAssignments``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Deletes all assignments of type <typeparamref name="TAssigned"/> from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object representing the time series to delete the assignable references from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryDeleteAssignments``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Deletes all assignments of type <typeparamref name="TAssigned"/> from the given <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/>.
            </summary>
            <param name="from">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> object representing the time series to delete the assignable references from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.LoadAssignment``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{``0},System.Threading.CancellationToken)">
            <summary>
            Loads a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="timeSeriesAssignmentReference">
            The reference of the time series assignment (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>) which will be reloaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoadAssignment``1(HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference{``0},System.Threading.CancellationToken)">
            <summary>
            Attempts to load a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="timeSeriesAssignmentReference">
            The reference of the time series assignment (<see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/>) which will be reloaded.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.LoadAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to load.</param>
            <param name="to">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to load the assignable reference from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore.TryLoadAssignment``1(HAKOM.Persistence.Core.Net.Api.References.IReference{``0},HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to load a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="assigned">The <see cref="T:HAKOM.Persistence.Core.Net.Api.References.IReference`1"/> of the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.IAssignableToTimeSeries"/> to load.</param>
            <param name="to">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> representing the time series to load the assignable reference from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1">
            <summary>
            Defines a store used for permanently storing <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> that can by uniquely identified by a value of type <typeparamref name="TIdentifier"/>.
            </summary>
            <remarks>
            <para>
            This interface extends <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> with methods that allow for the retrieval of individual <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> by a unique idendifier other than their name. For example, a SQL-database based time series store, may allow for retrieval of time series by their numeric primary key or an automatically assigned <see cref="T:System.Guid"/>.
            </para>
            <para>
            In order to use these methods, match the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore"/> against this interface with the expected <typeparamref name="TIdentifier"/>, then call the respective methods. 
            </para>
            <para>
            Note that different implementations may support different types of identifiers and there is no way of knowing which one is supported by the configured store at compile time.
            </para>
            <code language="csharp title=&quot;Loading a time series by integer id&quot; linenums=&quot;1&quot; hl_lines=&quot;6 9&quot;">
            int timeSeriesId = 32452;
            
            ITsm tsm = ITsm.Create();
            var repository = await tsm.Repositories.GetAll("TestRepository");
            var timeSeriesStore = await repository.GetTimeSeriesStore();
            if (timeSeriesStore is ITimeSeriesStore&lt;int&gt; integerTimeSeriesStore) {
               var timeSeries = await integerTimeSeriesStore.GetAll(timeSeriesId);
            } else {
               //make sure to always handle this case too!
            }
            </code>
            </remarks>
            <typeparam name="TIdentifier">The type of the identifier to be used to retrieve specific <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.</typeparam>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.References">
            <summary>
            Used to create references to time series in this store.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.Load(`0,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series from storage.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A Task containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TryLoad(`0,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series from storage.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.Load(`0,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series from storage in the state from a specific date and time.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series.</param>
            <param name="historicDateTime">Date and time of the state in which the time series is loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A Task containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TryLoad(`0,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series from storage in the state from a specific date and time.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series.</param>
            <param name="historicDateTime">Date and time of the state in which the time series is loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.SaveOrUpdate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the the time series with the given <paramref name="identifier"/> by the given time series.
            <br/>If no time series with the given identifier was found the time series will be saved or updated based on the time series name.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="identifier">The identifier of the time series to update.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TrySaveOrUpdate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to saves or update the the time series with the given <paramref name="identifier"/> by the given time series.
            <br/>If no time series with the given identifier was found the time series will be saved or updated based on the time series name.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="identifier">The identifier of the time series to update.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.SaveOrUpdate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Saves or updates the the time series with the given <paramref name="identifier"/> by the given time series.
            <br/>If no time series with the given identifier was found the time series will be saved or updated based on the time series name.
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="identifier">The identifier of the time series to update.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TrySaveOrUpdate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Tries to saves or update the the time series with the given <paramref name="identifier"/> by the given time series.
            <br/>If no time series with the given identifier was found the time series will be saved or updated based on the time series name.
            <br/>Further takes information about where its data is stored.
            <br/>It includes information about the exact point in time, at which the time series was in the given state.
            </summary>
            <param name="identifier">The identifier of the time series to update.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be saved or updated.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> the data will be saved on.</param>
            <param name="historicDateTime">
            The <see cref="T:System.DateTimeOffset"/> object representing the historic date and time of saving the time series definition.
            </param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.Delete(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a time series from the repository based on the given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the timeseries.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TryDelete(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Tries to delete a time series from the repository based on the given <paramref name="identifier"/>.
            </summary>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
            <param name="identifier">The <typeparamref name="TIdentifier"/> id of the time series to be deleted.</param>
            <param name="cascade">If set to true (default) it also deletes all data referenced to the timeseries.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.LoadAssignment``1(`0,System.Threading.CancellationToken)">
            <summary>
            Loads a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> identifier of the time series assignment.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1.TryLoadAssignment``1(`0,System.Threading.CancellationToken)">
            <summary>
            Attempts to load a single time series assignment as <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> from storage.
            </summary>
            <param name="identifier">The <typeparamref name="TIdentifier"/> identifier of the time series assignment.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Assignment.References.ITimeSeriesAssignmentReference`1"/> object.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesValidator`1">
            <summary>
            Validates the correctness of the settings of <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> objects for the storage provider.
            </summary>
            <typeparam name="TStorageProvider">Type of the storage provider.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesValidator`1.ValidateForStorage(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Validates the time series and throws one exception or an aggregate exception if multiple validation failures occur.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be validated.</param>
            <returns>True if the validation was successful.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesValidator`1.TryValidateForStorage(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Tries to validate the given <paramref name="timeSeries"/>
            and returns one exception or an aggregate exception in the <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> if validation failures occur.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> to be validated.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> containing either a boolean, if successful, or exceptions, if not.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference">
            <summary>
            Represents a reference to a time series permanently stored in a repository.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference.DataStorageInformation">
            <summary>
            Gets information about where the data for the time series is stored (may be in a different repository).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.
            </summary>
            <typeparam name="TIdentifier">The type of the identifier for the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</typeparam>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.Configure(HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore{`0})">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1"/> for usage.
            </summary>
            <param name="timeSeriesStore">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.ITimeSeriesStore`1"/> for loading the references.</param>
            
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.Create(`0)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.TryCreate(`0)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.Create(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.TryCreate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.Create(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> associated with the reference.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> associated with the data storage.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReferenceFactory`1.TryCreate(`0,HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the  <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</param>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> associated with the reference.</param>
            <param name="dataStorageInformation">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> associated with the data storage.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference`1">
            <summary>
            Represents a reference to a time series permanently stored and uniquely identified by a specific identifier in a repository.
            </summary>
            <typeparam name="TIdentifier">The type of the identifier that can be used to uniquely identify the time series.</typeparam>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.Sql.ISqlTimeSeriesStore">
            <summary>
            SqlTimeSeriesStore to load, save, delete and find time series.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore">
            <summary>
            Represents a <see cref="T:System.DateTimeOffset"/> and <see cref="T:System.Boolean"/> value determining whether this date should be applied exactly or also before it.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.At">
            <summary>
            Gets the exact date.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.ExactlyAt">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value determining whether <see cref="P:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.At"/> should be applied exactly or also before it.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.Create(System.DateTimeOffset,System.Boolean)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> object.
            </summary>
            <param name="at">The <see cref="T:System.DateTimeOffset"/> which can be applied exactly or also before it.</param>
            <param name="exactlyAt">The <see cref="T:System.Boolean"/> value determining whether the parameter '<paramref name="at"/>' should be applied exactly or also before it.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.ToString">
            <summary>
            Converts the value of the current <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> object to its equivalent <see cref="T:System.String"/> representation.
            </summary>
            <returns>A string representation of a <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> object that includes <see cref="P:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.At"/> and <see cref="P:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.ExactlyAt"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.Equals(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore)">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.op_Equality(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore,HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore)">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.op_Inequality(HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore,HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore)">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)">
            <summary>
            Parses the input span into a <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> instance.
            </summary>
            <param name="input">The input span containing the date string.</param>
            <param name="formatProvider">The format provider.</param>
            <remarks>
            The input string should follow the ISO 8601 format for dates and times. 
            It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.
            
            Supported formats:
            <list type="bullet">
            <item> For exact date and time: "YYYY-MM-ddTHH:mm:ss[,exact]" (e.g. "2002-06-04T14:30:00,exact")</item>
            <item> For date only: "YYYY-MM-dd[,exact]" (e.g. "2002-06-04")</item>
            <item> For date with additional information: "YYYY-MM-ddTHH:mm:ss,f[,exact]" (e.g. "2002-06-04T14:30:00,55")</item>
            </list>
            </remarks>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore@)">
            <summary>
            Tries to parse the input span into a <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> instance.
            </summary>
            <param name="input">The input span containing the date string.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="result">The parsed result, if successful.</param>
            <remarks>
            The input string should follow the ISO 8601 format for dates and times. 
            It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.
            
            Supported formats:
            <list type="bullet">
            <item> For exact date and time: "YYYY-MM-ddTHH:mm:ss[,exact]" (e.g. "2002-06-04T14:30:00,exact")</item>
            <item> For date only: "YYYY-MM-dd[,exact]" (e.g. "2002-06-04")</item>
            <item> For date with additional information: "YYYY-MM-ddTHH:mm:ss,f[,exact]" (e.g. "2002-06-04T14:30:00,55")</item>
            </list>
            </remarks>
            <returns>True if parsing was successful; otherwise, false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.Parse(System.String,System.IFormatProvider)">
            <summary>
            Parses the input string into a <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> instance.
            </summary>
            <param name="input">The input string containing the date.</param>
            <param name="formatProvider">The format provider.</param>
            <remarks>
            The input string should follow the ISO 8601 format for dates and times. 
            It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.
            
            Supported formats:
            <list type="bullet">
            <item> For exact date and time: "YYYY-MM-ddTHH:mm:ss[,exact]" (e.g. "2002-06-04T14:30:00,exact")</item>
            <item> For date only: "YYYY-MM-dd[,exact]" (e.g. "2002-06-04")</item>
            <item> For date with additional information: "YYYY-MM-ddTHH:mm:ss,f[,exact]" (e.g. "2002-06-04T14:30:00,55")</item>
            </list>
            </remarks>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore.TryParse(System.String,System.IFormatProvider,HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore@)">
            <summary>
            Tries to parse the input string into a <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> instance.
            </summary>
            <param name="input">The input string containing the date.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="result">The parsed result, if successful.</param>
            <remarks>
            The input string should follow the ISO 8601 format for dates and times. 
            It may optionally end with ',exact' (or ', exact' with whitespace) to specify that the date is exact.
            
            Supported formats:
            <list type="bullet">
            <item> For exact date and time: "YYYY-MM-ddTHH:mm:ss[,exact]" (e.g. "2002-06-04T14:30:00,exact")</item>
            <item> For date only: "YYYY-MM-dd[,exact]" (e.g. "2002-06-04")</item>
            <item> For date with additional information: "YYYY-MM-ddTHH:mm:ss,f[,exact]" (e.g. "2002-06-04T14:30:00,55")</item>
            </list>
            </remarks>
            <returns>True if parsing was successful; otherwise, false.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.DateTimeOffset"/> to support interval-based add, substract and alignment operations.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.AddInterval(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory)">
            <summary>
            Adds a given <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> to the specified <see cref="T:System.DateTimeOffset"/> <paramref name="startTime"/>
            while taking into account the rules of the provided <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>. This ensures that daylight saving time changes are correctly handled.
            </summary>
            <param name="startTime">
            The point in time to which the interval will be added.
            </param>
            <param name="interval">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> representing the duration to apply.
            </param>
            <param name="timeZone">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> that provides context for how the interval should be applied, 
            especially around ambiguous or invalid times due to daylight saving.
            </param>
            <param name="intervalFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory"/> used internally to construct adjusted intervals when needed for complex time shifting logic.
            </param>
            <returns>
            A <see cref="T:System.DateTimeOffset"/> representing the new point in time after applying the interval in the given time zone context.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.SubtractInterval(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory)">
            <summary>
            Subtracts a given <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> to the specified <see cref="T:System.DateTimeOffset"/> <paramref name="startTime"/>
            while taking into account the rules of the provided <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>. This ensures that daylight saving time changes are correctly handled.
            </summary>
            <param name="startTime">
            The point in time to which the interval will be subtracted.
            </param>
            <param name="interval">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> representing the duration to apply.
            </param>
            <param name="timeZone">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> that provides context for how the interval should be applied, 
            especially around ambiguous or invalid times due to daylight saving.
            </param>
            <param name="intervalFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory"/> used internally to construct adjusted intervals when needed for complex time shifting logic.
            </param>
            <returns>
            A <see cref="T:System.DateTimeOffset"/> representing the new point in time after applying the interval in the given time zone context.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.AlignWithPrevious(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory)">
            <summary>
            Aligns the specified <paramref name="givenDate"/> to the most recent previous occurrence on the interval grid, 
            starting from the defined <paramref name="startOfTime"/>. The alignment respects the rules of the given 
            <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> and uses the specified <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> for spacing between points.
            </summary>
            <param name="givenDate">
            The <see cref="T:System.DateTimeOffset"/> to align. This is the target timestamp that will be shifted backwards to 
            the nearest aligned point on the interval grid.
            </param>
            <param name="interval">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> that defines the step size inbetween points on the grid and is used for alignment.
            </param>
            <param name="timeZone">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> that provides context for how the interval should be applied, 
            especially around ambiguous or invalid times due to daylight saving.
            </param>
            <param name="startOfTime">
            The anchor point or origin of the interval grid. All aligned times are computed relative to this point, 
            following multiples of <paramref name="interval"/> from this origin.
            </param>
            <param name="intervalFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory"/> used internally to construct adjusted intervals when needed for complex time shifting logic.
            </param>
            <param name="timeSeriesDataFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory"/> used when needed for complex time shifting logic.
            </param>
            <returns>
            A <see cref="T:System.DateTimeOffset"/> representing the latest aligned time that is less than or equal to 
            <paramref name="givenDate"/>, computed from the interval grid originating at <paramref name="startOfTime"/>.
            </returns>
            <exception cref="T:HAKOM.TSM.Net.Api.Time.Extensions.Exceptions.StartOfTimeIsAfterGivenDateException">
            Thrown when <paramref name="startOfTime"/> is after <paramref name="givenDate"/> and thus no alignment is possible.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Thrown when the specified <paramref name="interval"/> is not supported by the alignment logic.
            </exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.AlignWithNext(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory)">
            <summary>
            Aligns the specified <paramref name="givenDate"/> to the next upcoming occurrence on the interval grid,
            starting from the defined <paramref name="startOfTime"/>. The alignment respects the rules of the given
            <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> and uses the specified <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> to determine the spacing between grid points.
            </summary>
            <param name="givenDate">
            The <see cref="T:System.DateTimeOffset"/> to align. This is the target timestamp that will be shifted forward to
            the next aligned point on the interval grid.
            </param>
            <param name="interval">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> that defines the step size inbetween points on the grid and is used for alignment.
            </param>
            <param name="timeZone">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> that provides context for how the interval should be applied, 
            especially around ambiguous or invalid times due to daylight saving.
            </param>
            <param name="startOfTime">
            The anchor point or origin of the interval grid. All aligned times are computed relative to this point, 
            following multiples of <paramref name="interval"/> from this origin.
            </param>
            <param name="intervalFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory"/> used internally to construct adjusted intervals when needed for complex time shifting logic.
            </param>
            <param name="timeSeriesDataFactory">
            The <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory"/> used when needed for complex time shifting logic.
            </param>
            <returns>
            A <see cref="T:System.DateTimeOffset"/> representing the earliest aligned time that is greater than or equal to 
            <paramref name="givenDate"/>, computed from the interval grid originating at <paramref name="startOfTime"/>.
            </returns>
            <exception cref="T:HAKOM.TSM.Net.Api.Time.Extensions.Exceptions.StartOfTimeIsAfterGivenDateException">
            Thrown when <paramref name="startOfTime"/> is after <paramref name="givenDate"/> and thus no alignment is possible.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Thrown when the specified <paramref name="interval"/> is not supported by the alignment logic.
            </exception>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Extensions.Exceptions.StartOfTimeIsAfterGivenDateException">
            <summary>
            Gets thrown when StartDate is greater than the given date in the alignment methods: align previous or align next
            </summary>
            <remarks>
            <para>
            When aligning a <see cref="T:System.DateTimeOffset"/> to the grid of the time series with <see cref="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.AlignWithPrevious(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory)"/> or <see cref="M:HAKOM.TSM.Net.Api.Time.Extensions.DateTimeOffsetExtensions.AlignWithNext(System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone,System.DateTimeOffset,HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataFactory)"/>, the specified StartOfTime must be before the <see cref="T:System.DateTimeOffset"/> to be aligned.
            </para>
            <para>
            This exception is identified by error code HK15035.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Extensions.Exceptions.StartOfTimeIsAfterGivenDateException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTransformationMethodNotSupportedException">
            <summary>
            Thrown whenever an <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> that is not supported in the given context.
            </summary>
            <remarks>
            <para>
            When converting data from one unit to another using an integration conversion step anywhere in the path, the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> must be either Sum or Average.
            </para>
            <para>
            This exception is identified by error code HK15059.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTransformationMethodNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTypeNotSupportedException">
            <summary>
            Thrown whenever an <see cref="T:HAKOM.TSM.Net.Time.Intervals.Interval"/> with <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> is not supported in the given context.
            </summary>
            <remarks>
            <para>
            When converting data from one unit to another using an integration conversion anywhere in the path, it must be possible to convert the interval type to milliseconds. (Millisecond, second, minute, hour). See also <see cref="M:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.TryGetMilliseconds(System.Int64@)"/>.
            </para>
            <para>
            This exception is identified by error code HK15058.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTypeNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.InvalidIntervalMultiplierException">
            <summary>
            Thrown whenever an invalid multiplier is used to create an <see cref="T:HAKOM.TSM.Net.Time.Intervals.Interval"/>.
            </summary>
            <remarks>
            <para>
            The multiplier of an <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> musst be greater than 0.
            </para>
            <para>
            This exception is identified by error code HK15041.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.InvalidIntervalMultiplierException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.Extensions.ContainerExtensions">
            <summary>
            Provides methods for registering services with an instance of <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that relate to describing time intervals between data along a time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.Extensions.ContainerExtensions.UseDefaultIntervalTypeNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.Extensions.ContainerExtensions.UseDefaultIntervalTransformationMethodNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval">
            <summary>
            Represents a relative time duration (hour, 15 minutes, 2 years, etc.).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.Type">
            <summary>
            Gets the base type of the interval (hour, minute, year, etc.).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.Multiplier">
            <summary>
            Gets ghw many of the base types durations constitute the duration of the entire interval.
            i.e. 15 with interval type minute represents a 15 minute interval.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.TryGetMilliseconds(System.Int64@)">
            <summary>
            Tries to get the interval length in milliseconds. If <see cref="P:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.Type"/> is greater than an hour,
            it will return false, since other interval types have variable lengths, because of daylight saving
            time and leap years.
            </summary>
            <param name="milliseconds">The interval length in milliseconds.</param>
            <returns>True if the <see cref="P:HAKOM.TSM.Net.Api.Time.Intervals.IInterval.Type"/> has a fixed length, false otherwise.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory">
            <summary>
            Used for creating intervals (relative durations).
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory.Create(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType,System.Int32)">
            <summary>
            Creates an interval with the given <paramref name="multiplier"/> and <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> (hour, minute, etc.).</param>
            <param name="multiplier">The amount of base type durations constituting the duration of the interval.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IIntervalFactory.TryCreate(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType,System.Int32)">
            <summary>
            Attempts to create an interval with the given <paramref name="multiplier"/> and <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> (hour, minute, etc.).</param>
            <param name="multiplier">The amount of base type durations constituting the duration of the interval.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> that contains either the new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> or an error that describes why it could not be created.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod">
            <summary>
            A struct representing the interval transformation method. 
            It is used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Create(System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> with a custom value. 
            </summary>
            <remarks>
            Sometimes input (or output) data interval might differ from the interval of the target (or source) time series. 
            In such cases interval transformation methods become active to transform across different intervals. 
            </remarks>
            <param name="value">The <see cref="T:System.Int32"/> id of the interval transformation method.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="value"/> is outside the allowed range (1-10).</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.TryCreate(System.Int32)">
            <summary>
            Attempts to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> with a custom value. 
            </summary>
            <remarks>
            Sometimes input (or output) data interval might differ from the interval of the target (or source) time series. 
            In such cases interval transformation methods become active to transform across different intervals. 
            </remarks>
            <param name="value">The <see cref="T:System.Int32"/> id of the interval transformation method.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="value"/> is outside the allowed range (1-10).</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Create(System.String)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> based on its name.
            </summary>
            <remarks>
            Sometimes input (or output) data interval might differ from the interval of the target (or source) time series. 
            In such cases interval transformation methods become active to transform across different intervals. 
            </remarks>
            <param name="name">The name id of the interval transformation method.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="name"/> is not one of the known interval transformation methods.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.TryCreate(System.String)">
            <summary>
            Attempts to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> with a custom value. 
            </summary>
            <remarks>
            Sometimes input (or output) data interval might differ from the interval of the target (or source) time series. 
            In such cases interval transformation methods become active to transform across different intervals. 
            </remarks>
            <param name="name">The name of the interval transformation method.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="name"/> is not one of the known interval transformation methods.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Average">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'Average' interval transformation method.
            The Average rule determines the average of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'Average' interval transformation method (Value=2).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Sum">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Sum' interval transformation method.
            The Sum rule determines the sum of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or calculates the proportional value of the given target period inside the source period 
            (i.e. a division of the source value by the number of target data points within a given 
            source interval), when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Sum' interval transformation method (Value=1).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Min">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Min' interval transformation method.
            The Min rule determines the minimum of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Min' interval transformation method (Value=3).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Max">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Max' interval transformation method.
            The Max rule determines the maximum of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'Max' interval transformation method (Value=4).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.MostFrequently">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'MostFrequently' interval transformation method.
            The MostFrequently rule determines the most frequent of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            If a two different values are equally frequent, the value occuring later will be taken, when converting from a shorter interval.
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'MostFrequently' interval transformation method (Value=5).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.AbsMin">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'AbsMin' interval transformation method.
            The AbsMin rule determines the absolute (modulus of a real number) minimum of all values, when converting
            to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'AbsMin' interval transformation method (Value=7).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.AbsMax">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'AbsMax' interval transformation method.
            The AbsMax rule determines the absolute (modulus of a real number) maximum of all values, when converting to
            a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing an 'AbsMax' interval transformation method (Value=8).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.FirstValue">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'FirstValue' interval transformation method.
            The FirstValue rule determines the first value out of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary> /// <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'FirstValue' interval transformation method (Value=9).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.LastValue">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'LastValue' interval transformation method.
            The LastValue rule determines the last value out of all values, when converting to a longer interval (e.g. quarter hour to hour),
            or repeats the value, when converting to a shorter interval (hour to quarter hour).
            </summary> /// <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> representing a 'LastValue' interval transformation method (Value=10).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Default">
            <summary>
            Creates a new default instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.
            The default instance is an average transformation method.
            </summary>
            <returns>A new instance of the default <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> (Value=default).</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Value">
            <summary>
            Gets the <see cref="T:System.Int32"/> representing the type of interval transformation method.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.GetAll">
            <summary>
            Returns all available <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.
            </summary>
            <returns>A collection of interval transformation methods.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Equals(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod)">
            <summary>
            Compares the value of this interval transformation method to another interval transformation method returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>, which is used for comparison </param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval transformation methods are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.op_Equality(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod,HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod)">
            <summary>
            Compares the value of two interval transformation methods using the operator '=='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> on the right of the '==' operator.</param>
            <returns>Returns a <see cref="T:System.Boolean"/> indicating if the values of the interval transformation methods are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.op_Inequality(HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod,HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod)">
            <summary>
            Compares the value of two interval transformation methods using the operator '!='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> on the right of the '!=' operator.</param>
            <returns>Returns a <see cref="T:System.Boolean"/> indicating if the values of the interval transformation methods are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.op_Implicit(System.Int32)~HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod">
            <summary>
            Implicitly converts an integer (value of an interval transformation method) to an interval transformation method.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> (number/id) of an interval transformation method.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsSum">
            <summary>
            Checks if the current interval transformation method is 'Sum' (value: 1).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'Sum'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsAverage">
            <summary>
            Checks if the current interval transformation method is 'Average' (value: 2).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'Average'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsMin">
            <summary>
            Checks if the current interval transformation method is 'Min' (value: 3).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'Min'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsMax">
            <summary>
            Checks if the current interval transformation method is 'Max' (value: 4).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'Max'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsMostFrequently">
            <summary>
            Checks if the current interval transformation method is 'MostFrequently' (value: 5).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'MostFrequently'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsAbsMin">
            <summary>
            Checks if the current interval transformation method is 'AbsMin' (value: 7).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'AbsMin'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsAbsMax">
            <summary>
            Checks if the current interval transformation method is 'AbsMax' (value: 8).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'AbsMax'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsFirstValue">
            <summary>
            Checks if the current interval transformation method is 'FirstValue' (value: 9).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'FirstValue'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsLastValue">
            <summary>
            Checks if the current interval transformation method is 'LastValue' (value: 10).
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method is 'LastValue'.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.IsDefault">
            <summary>
            Checks if the current value of the interval transformation method is equal to the default literal.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> indicating if the current interval transformation method value is equal (true) to the default literal.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.Equals(System.Object)">
            <summary>
            Compares the value of this interval transformation method to another interval transformation method returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>, which is used for comparison </param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval transformation methods are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.GetHashCode">
            <summary>
            Creates the hash code for this interval transformation method, using its value.
            </summary>
            <returns>A hash code for this interval transformation method.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.ToIntervalTransformationMethod(System.Int32)">
            <summary>
            Converts an <see cref="T:System.Int32"/> to <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> id of the interval transformation method.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType">
            <summary>
            Represents a common duration for use as a base duration in intervals.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Create(System.Byte)">
            <summary>
            Create an interval type from the id of a known interval type.
            </summary>
            <remarks>
            Supported values are
            <list type="bullet">
            <item>10 (Milliseconds)</item>
            <item>1 (Seconds)</item>
            <item>2 (Minutes)</item>
            <item>3 (Hours)</item>
            <item>4 (Days)</item>
            <item>5 (Weeks)</item>
            <item>6 (Months)</item>
            <item>7 (Quarters)</item>
            <item>8 (Years)</item>
            </list>
            </remarks>
            <param name="value">The id of the known interval type</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="value"/> is outside the supported range (1-8, 10).</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.TryCreate(System.Byte)">
            <summary>
            Attempts to create an interval type from the id of a known interval type.
            </summary>
            <remarks>
            Supported values are
            <list type="bullet">
            <item>10 (Milliseconds)</item>
            <item>1 (Seconds)</item>
            <item>2 (Minutes)</item>
            <item>3 (Hours)</item>
            <item>4 (Days)</item>
            <item>5 (Weeks)</item>
            <item>6 (Months)</item>
            <item>7 (Quarters)</item>
            <item>8 (Years)</item>
            </list>
            </remarks>
            <param name="value">The id of the known interval type</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> that contains either the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> if successful or an error describing why creation failed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Create(System.String)">
            <summary>
            Create an interval type from the name of a known interval type.
            </summary>
            <remarks>
            Supported values are
            <list type="bullet">
            <item>MS (Milliseconds)</item>
            <item>S (Seconds)</item>
            <item>N (Minutes)</item>
            <item>H (Hours)</item>
            <item>D (Days)</item>
            <item>W (Weeks)</item>
            <item>M (Months)</item>
            <item>Q (Quarters)</item>
            <item>Y (Years)</item>
            </list>
            </remarks>
            <param name="name">The name of the known interval type.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="name"/> does not match any of the supported intrerval types. Supported values are MS, S, N (=Minute), H, D, W, M (=Month), Q or Y)
            </exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.TryCreate(System.String)">
            <summary>
            Attempts to an interval type from the name of a known interval type.
            </summary>
            <remarks>
            Supported values are
            <list type="bullet">
            <item>MS (Milliseconds)</item>
            <item>S (Seconds)</item>
            <item>N (Minutes)</item>
            <item>H (Hours)</item>
            <item>D (Days)</item>
            <item>W (Weeks)</item>
            <item>M (Months)</item>
            <item>Q (Quarters)</item>
            <item>Y (Years)</item>
            </list>
            </remarks>
            <param name="name">The name of the known interval type.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> that contains either the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> if successful or an error describing why creation failed.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Millisecond">
            <summary>
            Creates an interval type with a duration of 1 millisecond .
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Second">
            <summary>
            Creates an interval type with a duration of 1 second .
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Minute">
            <summary>
            Creates an interval type with a duration of 1 minute.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Hour">
            <summary>
            Creates an interval type with a duration of 1 hour.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Day">
            <summary>
            Creates an interval type with a duration of 1 day.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Week">
            <summary>
            Creates an interval type with a duration of 1 Week.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Month">
            <summary>
            Creates an interval type with a duration of 1 Month.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Quarter">
            <summary>
            Creates an interval type with a duration of 1 Quarter.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Year">
            <summary>
            Creates an interval type with a duration of 1 Year.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Default">
            <summary>
            Creates a default interval type.
            The default instance has hour as specified duration.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> with the default value.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Value">
            <summary>
            The value of the interval type
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Name">
            <summary>
            Gets the <see cref="T:System.String"/> name of the interval type.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.op_Equality(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType,HAKOM.TSM.Net.Api.Time.Intervals.IntervalType)">
            <summary>
            Compares the value of two interval types using the operator '=='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> on the right of the '==' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval types are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.op_Inequality(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType,HAKOM.TSM.Net.Api.Time.Intervals.IntervalType)">
            <summary>
            Compares the value of two interval types using the operator '!='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/> on the right of the '!=' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval types are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Equals(HAKOM.TSM.Net.Api.Time.Intervals.IntervalType)">
            <summary>
            Compares the value of this interval type to another interval type returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>, which is used for comparison </param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval types are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Equals(System.Object)">
            <summary>
            Compares the value of this interval type to another interval type returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>, which is used for comparison </param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the interval types are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.GetHashCode">
            <summary>
            Creates the hash code for this interval type, using its value.
            </summary>
            <returns>A hash code for this interval type.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.Parse(System.String,System.IFormatProvider)">
            <summary>
            Parses the given string <paramref name="s"/> into an instance of type <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.
            </summary>
            <remarks>
            Will throw an exception if the string does not consist of either an integer in the acceptable range or an existing interval type's name.
            </remarks>
            <param name="s">The string to parse.</param>
            <param name="provider">This parameter is currently ignored and has no effect.</param>
            <returns>The parsed <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType.TryParse(System.String,System.IFormatProvider,HAKOM.TSM.Net.Api.Time.Intervals.IntervalType@)">
            <summary>
            Attempts to parse the given string into an instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalType"/>.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="provider">This parameter is currently ignored and has no effect.</param>
            <param name="result">The parsed interval type.</param>
            <returns><see langword="true"/> if successful, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Periods.Exceptions.FromIsNotBeforeToException">
            <summary>
            Indicates, that an attempt was made to create a <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>, where the from date is not before the to date.
            </summary>
            <remarks>
            <para>
            The from <see cref="T:System.DateTimeOffset"/> of a <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> has to be before the to <see cref="T:System.DateTimeOffset"/>.
            </para>
            <para>
            This exception is identified by error code HK15029.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Periods.Exceptions.FromIsNotBeforeToException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Periods.Period">
            <summary>
            A struct used to describe periods of time.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Periods.Period.From">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset"/> representing the beginning of the period.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Periods.Period.To">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset"/> representing the end of the period.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.Create(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Creates a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with the given <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The <see cref="T:System.DateTimeOffset"/> representing the beginning of the new period.</param>
            <param name="to">The <see cref="T:System.DateTimeOffset"/> representing the end of the new period.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.TryCreate(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Attempts to create a new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with the given <paramref name="from"/> and <paramref name="to"/>.
            </summary>
            <param name="from">The <see cref="T:System.DateTimeOffset"/> representing the beginning of the new period.</param>
            <param name="to">The <see cref="T:System.DateTimeOffset"/> representing the end of the new period.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> indicating if the period could successfully be created</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.Default">
            <summary>
            Creates a default instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with default values for the from and to parameters.
            The default instance exists to ensure, that periods not created by the static Create method have a from parameter, which is before their to parameter.
            </summary>
            <returns>The default instance of <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.ToString">
            <summary>
            Used to get a string representation of the period, using its from and to properties, separated by a comma.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of the period.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.CompareTo(HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares this period to the given <paramref name="other"/> by their duration and, if their duration is the same, by their from parameters.
            </summary>
            <param name="other">The other <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> used for the comparison.</param>
            <returns>
            	<list type="bullet">
            		<item>A negative <see cref="T:System.Int32"/>, if this period is shorter (or starts earlier, if they're equally long) than <paramref name="other"/></item>
            		<item>0, if both have the same duration and start date</item>
            		<item>a positive <see cref="T:System.Int32"/>, if this period is longer (or starts later, if they're equally long) than <paramref name="other"/></item>
            	</list>
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.Equals(HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares this period to the given <paramref name="other"/> for equality.
            </summary>
            <param name="other">The other <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> used for the comparison.</param>
            <returns>True, if the periods are equal in duration and start time, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.Equals(System.Object)">
            <summary>
            Compares this period to the given <paramref name="obj"/> for equality.
            </summary>
            <param name="obj">The other <see cref="T:System.Object"/> used for the comparison.</param>
            <returns>True, if the object is a period with equal duration and start time, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.GetHashCode">
            <summary>
            Creates a hash for this period, using its from and to parameters.
            </summary>
            <returns>A hash code for this period.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_Equality(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the given periods using the '==' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '=='.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '=='.</param>
            <returns>True, if the given periods are equal, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_Inequality(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the given periods using the '!=' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '!='.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '!='.</param>
            <returns>True, if the given periods are not equal, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_LessThan(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> by their duration and, 
            if their duration is the same, by their from parameters using the '&lt;' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '&lt;'.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '&lt;'.</param>
            <returns>True, if the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> is shorter (or starts earlier, if they're equally long) 
            than the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_LessThanOrEqual(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> by their duration and, 
            if their duration is the same, by their from parameters using the '&lt;=' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '&lt;='.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '&lt;='.</param>
            <returns>True, if the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> is shorter (or starts earlier, if they're equally long) 
            than the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> or both periods are equally long and start at the same time, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_GreaterThan(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> by their duration and, 
            if their duration is the same, by their from parameters using the '&gt;' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '&gt;'.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '&gt;'.</param>
            <returns>True, if the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> is longer (or starts later, if they're equally long)
            than the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_GreaterThanOrEqual(HAKOM.TSM.Net.Api.Time.Periods.Period,HAKOM.TSM.Net.Api.Time.Periods.Period)">
            <summary>
            Compares the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> to the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> by their duration and, 
            if their duration is the same, by their from parameters using the '&gt;=' operator.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the left of the '&gt;='.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> on the right of the '&gt;='.</param>
            <returns>True, if the left <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> is longer (or starts later, if they're equally long)
            than the right <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> or both periods are equally long and start at the same time, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.op_Implicit(System.ValueTuple{System.DateTimeOffset,System.DateTimeOffset})~HAKOM.TSM.Net.Api.Time.Periods.Period">
            <summary>
            Implicitly converts a <see cref="T:System.ValueTuple"/> of two <see cref="T:System.DateTimeOffset"/> into a <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>.
            </summary>
            <param name="range">The <see cref="T:System.ValueTuple"/> with the two <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>A <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with the given <see cref="T:System.DateTimeOffset"/> in the <see cref="T:System.ValueTuple"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.Periods.Period.ToPeriod(System.ValueTuple{System.DateTimeOffset,System.DateTimeOffset})">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of two <see cref="T:System.DateTimeOffset"/> into a <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/>.
            </summary>
            <param name="range">The <see cref="T:System.ValueTuple"/> with the two <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>A <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> with the given <see cref="T:System.DateTimeOffset"/> in the <see cref="T:System.ValueTuple"/></returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Serialization.Exceptions.TimeFormatNotSupportedException">
            <summary>
            Thrown whenever an time format is used that is not supported and therefore can not be used.
            </summary>
            <remarks>
            <para>
            When deserializing into a <see cref="T:System.DateTime"/> or <see cref="T:System.DateTimeOffset"/> the <see cref="T:System.String"/> 
            needs to be in a valid format.
            </para>
            <para>
            This exception is identified by error code HK15067.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.Serialization.Exceptions.TimeFormatNotSupportedException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.Serialization.TimeFormat">
            <summary>
            The format to use when serializing times/dates
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Time.Serialization.TimeFormat.Iso8601">
            <summary>
            Serialize as ISO-8601 string
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Time.Serialization.TimeFormat.HakomSecond">
            <summary>
            Serialize as the number of seconds since January 1st 1972, 00:00h CET
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Time.Serialization.TimeFormat.UnixSecond">
            <summary>
            Serialize as the number of seconds since January 1st 1970, 00:00h UTC
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Time.Serialization.TimeFormat.UnixMillisecond">
            <summary>
            Serialize as the number of milliseconds since January 1st 1970, 00:00h UTC
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions.UnknownTimeBaseException">
            <summary>
            This exception should be thrown when an undefined time base would be created.
            </summary>
            <remarks>
            <para>
            Creating a <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> with an unknown identifier throws this exception. Known default identifiers are:
            * 0 = HakomSecond
            * 1 = UnixSecond
            * 2 = UnixMillisecond
            </para>
            <para>
            This exception is identified by error code HK15002.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.TimeBases.Exceptions.UnknownTimeBaseException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeBases.Extensions.ContainerExtensions">
            <summary>
            Provides methods for registering services with an instance of <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> that relate to how time is stored in a repository.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.Extensions.ContainerExtensions.UseDefaultTimeBaseNames(HAKOM.DependencyInjection.Core.Net.Api.IContainer)">
            <summary>
            Registers an implementation of <see cref="T:HAKOM.TSM.Net.Api.IEnumerationPropertyProvider`1"/> that provides string representations for individual <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> values.
            </summary>
            <param name="container">The <see cref="T:HAKOM.DependencyInjection.Core.Net.Api.IContainer"/> to register the names with.</param>
            <returns>The <paramref name="container"/> for chaining additional registration calls.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase">
            <summary>
            The time base used to convert the time when persisting data.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.Create(System.Int32)">
            <summary>
            Creates a time base with a custom value.
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> instance.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.TryCreate(System.Int32)">
            <summary>
            Attempts to create a time base based on the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to create the time base from</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> representing either success or failure of creating a time base with the given value.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.Default">
            <summary>
            Creates a default time base.
            The default instance is Hakom second.
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> with the default value.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.UnixMillisecond">
            <summary>
            Creates a time base for unix milliseconds. The time is persisted in unix milliseconds (0 = 01.01.1970 00:00:00,000 UTC+0)
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> instance with value 2.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.UnixSecond">
            <summary>
            Creates a time base for unix seconds. The time is persisted in unix seconds (0 = 01.01.1970 00:00:00 UTC+0)
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> instance with value 1.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.HakomSecond">
            <summary>
            Creates a time base similar to unix seconds but with a different timezone (UTC+1) and starting point. (0 = 01.01.1972 00:00:00 UTC+1)
            </summary>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> instance with value 0.</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.Value">
            <summary>
            The value of the time base
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.op_Equality(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase)">
            <summary>
            Compares the value of two time bases using the operator '=='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> on the left of the '==' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> on the right of the '==' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the time bases are equal (true) or not equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.op_Inequality(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase,HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase)">
            <summary>
            Compares the value of two time bases using the operator '!='.
            </summary>
            <param name="left">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> on the left of the '!=' operator.</param>
            <param name="right">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> on the right of the '!=' operator.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the time bases are not equal (true) or equal (false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.Equals(HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase)">
            <summary>
            Compares the value of this time base to another time base returning a boolean.
            </summary>
            <param name="other">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> used for comparison.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the time bases are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.Equals(System.Object)">
            <summary>
            Compares the value of this time base to another time base returning a boolean.
            </summary>
            <param name="obj">The <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> used for comparison.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the values of the time bases are equal (true) or not equal(false).</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.GetHashCode">
            <summary>
            Creates the hash code for this time base, using its value.
            </summary>
            <returns>A hash code for this time base.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase.ToString">
            <summary>
            Display the name and numeric value of the <see cref="T:HAKOM.TSM.Net.Api.Time.TimeBases.TimeBase"/> as formated string.
            </summary>
            <returns>The name and numeric value in the following format Name (Value).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition">
            <summary>
            An interface which can be used to create custom time zone definitions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition.ImplementsId(System.String)">
            <summary>
            true if id is supported.
            </summary>
            <param name="id">the id of the timeZone</param>
            <returns>true if the <see cref="M:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition.CreateInstance(System.String,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory)"/> method supports the given id</returns>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition.Name">
            <summary>
            Gets the name of the time zone definition.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition.CreateInstance(System.String,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory)">
            <summary>
            Creates an instance of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition"/> with the given <paramref name="id"/>.
            </summary>
            <param name="id">The <see cref="T:System.String"/> id representing the time zone definition.</param>
            <param name="timeZoneFactory">used to look up base time zones.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ICustomTimeZoneDefinition"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone">
            <summary>
            Represents a time zone
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone.TimeZoneInfo">
            <summary>
            The info of the time zone
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone.TryGetNextDaylightSavingTransitionForDateTime(System.DateTimeOffset,System.Nullable{System.DateTimeOffset}@)">
            <summary>
            Tries to get the next daylight saving time transition date after the given <paramref name="dateTimeOffset"/>.
            It is possible, that the time zone used to have a daylight saving time and not anymore. In such cases, or when DST
            is not supported, this method will return false. Otherwise the output parameter <paramref name="transitionDateTimeOffset"/>
            will be set to the next transition date and the method will return true.
            </summary>
            <param name="dateTimeOffset">The <see cref="T:System.DateTimeOffset"/> used to calculate the next transition date.</param>
            <param name="transitionDateTimeOffset">The next transition date.</param>
            <returns>True, if the next date was found, otherwise false.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone.TryGetPreviousDaylightSavingTransitionForDateTime(System.DateTimeOffset,System.Nullable{System.DateTimeOffset}@)">
            <summary>
            Tries to get the previous daylight saving time transition date before the given <paramref name="dateTimeOffset"/>.
            It is possible, that the time zone used to have a daylight saving time and not anymore. In such cases, or when DST
            is not supported, this method will return false. Otherwise the output parameter <paramref name="transitionDateTimeOffset"/>
            will be set to the previous transition date and the method will return true.
            </summary>
            <param name="dateTimeOffset">The <see cref="T:System.DateTimeOffset"/> used to calculate the previous transition date.</param>
            <param name="transitionDateTimeOffset">The previous transition date.</param>
            <returns>True, if the previous date was found, otherwise false.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory">
            <summary>
            Used to create time zones.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory.CreateFromId(System.String)">
            <summary>
            Creates a time zone based on a given <paramref name="id"/>.
            The ID can be specified in the following formats:
             - Custom timezone ID
             - IANA ID
             - Window ID
            
            Please note that the IANA and Windows timezones contain adjustment rules. 
            On non NT platforms like Linux, BSD and Mac Os, the Windows ID will map to an 
            equivalent IANA timezone, according to TimeZoneConverter.
            
            <example>IANA ID:
            <code>
                var ianaTimeZone = timeZoneFactory.CreateFromId("Europe/Vienna");
            </code>
            </example>
            </summary>
            <param name="id">The IANA ID, Windows ID or UTC + offset of the time zone.</param>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory.TryCreateFromId(System.String,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone@)">
            <summary>
            A non throwing variant of: <see cref="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory.CreateFromId(System.String)"/>.
            </summary>
            <param name="id">The id to use</param>
            <param name="timeZone">If successful, contains the time zone.</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory.CreateLocal">
            <summary>
            Creates a time zone based on the time zone of the computer/server where the application runs.
            </summary>
            <returns>A new instance of <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Exceptions.TimeSeriesUnitDoesNotSupportConversionException">
            <summary>
            Indicates that the provided <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> is not supported for conversions.
            </summary>
            <remarks>
            <para>
            A time series for creating a <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> must have a unit containing a "/" (e.g. km/h).
            </para>
            <para>
            This exception is identified by error code HK15066.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Exceptions.TimeSeriesUnitDoesNotSupportConversionException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 500 (Internal Server Error).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions">
            <summary>
            Extension methods for creating <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> objects. Used for authorization.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UNIT_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of unit resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of constant unit conversion resources.
            </summary>
        </member>
        <member name="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE">
            <summary>
            A constant used for the creation of time dependent unit conversion resources.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UnitResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new unit <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UNIT_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UnitResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new unit <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> associated with the given storage provider.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UNIT_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UnitResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new unit <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UNIT_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UnitResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new unit <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/> and associates the resource with a given storage provider.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the unit.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.UNIT_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.ConstantUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new constant unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.ConstantUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new constant unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> and associates it with the given storage provider.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> associated to the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.ConstantUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new constant unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.ConstantUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new constant unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/> and associates it with the given storage provider.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.CONSTANT_UNIT_CONVERSION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TimeDependentUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory)">
            <summary>
            Creates a new time dependent unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TimeDependentUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider)">
            <summary>
            Creates a new time dependent unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TimeDependentUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,System.String)">
            <summary>
            Creates a new time dependent unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TimeDependentUnitConversionResource(HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory,HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.String)">
            <summary>
            Creates a new time dependent unit conversion <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with the given <paramref name="identifier"/>.
            </summary>
            <param name="resourceFactory">The <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResourceFactory"/> used to create the <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/>.</param>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used to access the resource.</param>
            <param name="identifier">The <see cref="T:System.String"/> identifier used in the creation.</param>
            <returns>
            The newly created <see cref="T:HAKOM.Security.Core.Net.Api.Authorization.IResource"/> with its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Type"/> equal to <see cref="F:HAKOM.TSM.Net.Api.Units.Extensions.ResourceFactoryExtensions.TIMEDEPENDENT_UNIT_CONVERSION_RESOURCE_TYPE"/>
            and its <see cref="P:HAKOM.Security.Core.Net.Api.Authorization.IResource.Identifier"/> equal to the given <paramref name="identifier"/>.
            </returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion">
            <summary>
            A type of unit conversion that provides a constant conversion between units.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion.Factor">
            <summary>
            Gets or sets the conversion factor.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion.Offset">
            <summary>
            Gets or sets the conversion offset.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion.IntegrationInterval">
            <summary>
            Gets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> used for the integration.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversionFactory">
            <summary>
            A factory for creating constant unit conversions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.IConstantUnitConversionFactory.Create(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Decimal,System.Decimal,HAKOM.TSM.Net.Api.Time.Intervals.IInterval,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation)">
            <summary>
            Creates a new <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> object.
            </summary>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the conversion rules will apply.</param>
            <param name="conversionUnit">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the conversion can be made.</param>
            <param name="factor">A <see cref="T:System.Decimal"/> value used for the conversion.</param>
            <param name="offset">A <see cref="T:System.Decimal"/> value used for the conversion.</param>
            <param name="integrationInterval">The <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IInterval"/> used for the integration.</param>
            <param name="storage">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/> about how the object is stored in a repository.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> object with the given values.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion">
            <summary>
            Represents conversion time series for time dependent conversion rules between units.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion.ReadData``1(HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions,System.Threading.CancellationToken)">
            <summary>
            Reads the time series data of the conversion time series.
            </summary>
            <typeparam name="TValue">The type of the values of the data points to be read.</typeparam>
            <param name="readingOptions"><see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> on how the data should be read.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> with additional information (unit, etc).</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversionFactory">
            <summary>
            A factory for creating time dependent unit conversions.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversionFactory.Create(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> for the specified <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The time series from which the new <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> object will be created.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> object created from the time series or null if the given time series is not a conversion time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversionFactory.TryCreate(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> for the specified <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The time series from which the new <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> object will be created.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> 
            from the time series when it is a conversion time series.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.IUnit">
            <summary>
            The unit of time series data. It is used in conversions and interval transformations.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IUnit.Symbol">
            <summary>
            Gets or sets the symbol identifying the unit (kWh, K, etc.).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IUnit.IntervalTransformationMethod">
            <summary>
            Gets the or sets the <see cref="T:HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod"/> used for the conversion.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.IUnitConversion">
            <summary>
            Represents conversion rules between units.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IUnitConversion.Unit">
            <summary>
            Get or sets an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the conversion rules apply.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IUnitConversion.ConversionUnit">
            <summary>
            Get or sets an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> to which the conversion can be made.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.IUnitConversion.Storage">
            <summary>
            Gets or sets the <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation"/>.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.IUnitFactory">
            <summary>
            Used to create an instance of <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.IUnitFactory.Create(System.String)">
            <summary>
            Create a unit with the given <paramref name="symbol"/>.
            </summary>
            <param name="symbol">The <see cref="T:System.String"/> symbol of the unit to be created</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.IUnitFactory.Create(System.String,HAKOM.TSM.Net.Api.Time.Intervals.IntervalTransformationMethod)">
            <summary>
            Create a unit with the given <paramref name="symbol"/>.
            </summary>
            <param name="symbol">The <see cref="T:System.String"/> symbol of the unit to be created</param>
            <param name="intervalTransformationMethod"> determines how data is transformed along the time axis</param>
            <returns>A new <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.ConstantUnitConversionNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with a constant unit conversion that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            Make sure that the correct store is being accessed or define the unit in the current 
            store by calling <see cref="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Save(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)"/> or a similar overload.
            </para>
            <para>
            This exception is identified by error code HK15106.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.ConstantUnitConversionNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.InvalidTimeDependentUnitConversionException">
            <summary>
            Indicates that an attempt was made to save a <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> with an invalid unit.
            </summary>
            <remarks>
            <para>
            The timeseries of a <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> must have a unit containing a "/" (e.g. km/h) in order to be saved.
            </para>
            <para>
            This exception is identified by error code HK15055.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.InvalidTimeDependentUnitConversionException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 400 (Bad Request).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.TimeDependentUnitConversionNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with a time dependent unit conversion that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            Make sure that the correct store is being accessed or define the unit in the current 
            store by calling <see cref="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)"/> or a similar overload.
            </para>
            <para>
            This exception is identified by error code HK15107.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.TimeDependentUnitConversionNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.UnitConversionExistsAlreadyException">
            <summary>
            Indicates that an attempt was made to save a unit conversion with the same properties (i.e. <see cref="P:HAKOM.TSM.Net.Api.Units.IUnitConversion.Unit"/>/<see cref="P:HAKOM.TSM.Net.Api.Units.IUnitConversion.ConversionUnit"/> combination) as one that already exists.
            </summary>
            <remarks>
            <para>
            Either delete the existing unit conversion from the store, modify the new one to represent a unique conversion or call <see cref="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.SaveOrUpdate(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)"/> instead of <see cref="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Save(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)"/> if an update was intended.
            </para>
            <para>
            This exception is identified by error code HK15030.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.UnitConversionExistsAlreadyException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs in the context of an HTTP request, the service should respond with a 409 status code (Conflict).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.UnitNotFoundException">
            <summary>
            Indicates that an attempt was made to interact with a unit that is not defined in the given store.
            </summary>
            <remarks>
            <para>
            Make sure that the correct store is being accessed or define the unit in the current
            store by calling <see cref="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Save(HAKOM.TSM.Net.Api.Units.IUnit,System.Threading.CancellationToken)"/> or a similar overload.
            </para>
            <para>
            This exception is identified by error code HK15071.
            </para>
            </remarks>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.UnitNotFoundException.EquivalentHttpStatusCode">
            <summary>
            If this error occurs while processing an HTTP request, the request should be terminated with a status code 404 (Not Found).
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore">
            <summary>
            A data store used to create, read, update or delete constant unit conversions. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStoreFactory"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Configures the constant unit conversion store with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Find(System.Threading.CancellationToken)">
            <summary>
            Finds all currently available constant unit conversions.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available constant unit conversions.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TryFind(System.Threading.CancellationToken)">
            <summary>
            Finds all currently available constant unit conversions.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available constant unit conversions in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Load(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the constant unit conversion with the given <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:System.String"/> unit of the constant unit conversion, which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing the constant unit conversion with the given unit.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TryLoad(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the constant unit conversion with the given <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:System.String"/> unit of the constant unit conversion, which will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the constant unit conversion with the given unit.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Load(HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference,System.Threading.CancellationToken)">
            <summary>
            Loads the constant unit conversion.
            </summary>
            <param name="constantUnitConversionReference">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference"/> that will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing the constant unit conversion with the given unit.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TryLoad(HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference,System.Threading.CancellationToken)">
            <summary>
            Loads the constant unit conversion.
            </summary>
            <param name="constantUnitConversionReference">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference"/> that will be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the constant unit conversion with the given unit.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Save(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)">
            <summary>
            Saves a given <paramref name="unitConversion"/>.
            </summary>
            <param name="unitConversion">The <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> to be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TrySave(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)">
            <summary>
            Saves a given <paramref name="unitConversion"/>.
            </summary>
            <param name="unitConversion">The <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> to be persisted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.SaveOrUpdate(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)">
            <summary>
            Saves a new or updates an existing <paramref name="unitConversion"/>.
            </summary>
            <param name="unitConversion">The <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> to look for and persist.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.Units.IConstantUnitConversion,System.Threading.CancellationToken)">
            <summary>
            Saves a new or updates an existing <paramref name="unitConversion"/>.
            </summary>
            <param name="unitConversion">The <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> to look for and persist.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the constant unit conversion with the given <paramref name="unit"/>.
            </summary>
            <param name="unit">The symbol of the unit of the conversion,which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore.TryDelete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the constant unit conversion with the given <paramref name="unit"/>.
            </summary>
            <param name="unit">The symbol of the unit of the conversion,which will be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore">
            <summary>
            A store to find conversion time series. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStoreFactory"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Configures the dependent unit conversion store with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll conversion time series of a given <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all conversion time series of <paramref name="timeSeriesReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll conversion time series of a given <paramref name="timeSeriesReference"/>.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all conversion time series of <paramref name="timeSeriesReference"/> in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Find(System.Threading.CancellationToken)">
            <summary>
            GetAll default conversion time series which are configured to be used without assignment to a time series.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all default conversion time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.TryFind(System.Threading.CancellationToken)">
            <summary>
            GetAll default conversion time series which are configured to be used without assignment to a time series.
            </summary>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all default conversion time series in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.FindAll(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll all conversion time series which can be used for a conversion. This includes conversion time series of a given
            <paramref name="timeSeriesReference"/> and the default conversion time series.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all conversion time series of <paramref name="timeSeriesReference"/>
            and default conversion time series.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.TryFindAll(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            GetAll all conversion time series which can be used for a conversion. This includes converstion timeseries of a given
            <paramref name="timeSeriesReference"/> and the default conversion time series.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> with all conversion time series of <paramref name="timeSeriesReference"/>
            and default conversion time series represented as <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.
            </returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Save(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Sets a given <paramref name="timeSeriesReference"/> to a default conversion time series and saves the configuration.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to to be set as default conversion time series. The time series must already be saved.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A task that finishes when the <paramref name="timeSeriesReference"/> is saved as default conversion time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.TrySave(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Sets a given <paramref name="timeSeriesReference"/> to a default conversion time series and saves the configuration.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to to be set as default conversion time series. The time series must already be saved.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> that finishes when the
            <paramref name="timeSeriesReference"/> is saved as default conversion time series.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.Delete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Removes a given <paramref name="timeSeriesReference"/> from default conversion time series.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to to be removed from default conversion time series. The time series itself will not be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>A task that finishes when the <paramref name="timeSeriesReference"/> is removed from default conversion time series.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore.TryDelete(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Removes a given <paramref name="timeSeriesReference"/> from default conversion time series.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to to be removed from default conversion time series. The time series itself will not be deleted.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns>
            An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> that finishes when the
            <paramref name="timeSeriesReference"/> is removed from default conversion time series.
            </returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.ITimeDependentUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore">
            <summary>
            A data store used to create, read, update or delete unit conversions. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStoreFactory"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore.Configure(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Configures the unit conversion store with the given parameters.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">Propagates a notification if the operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore.Find(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Finds all currently available unit conversions.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available unit conversions.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore.TryFind(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <summary>
            Finds all currently available unit conversions.
            </summary>
            <param name="timeSeriesReference">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference"/> to load the assigned conversion time series from.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available unit conversions in  the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> used for creating unit references.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitConversionStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore">
            <summary>
            A data store used to create, read, update or delete units. Should only be instantiated by an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStoreFactory"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.References">
            <summary>
            The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory" /> which can create a reference to an <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Find(System.Threading.CancellationToken)">
            <summary>
            Finds all currently available units as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available units.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TryFind(System.Threading.CancellationToken)">
            <summary>
            Finds all currently available units as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.
            </summary>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> containing all available units in the form of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Load(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the unit as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> by the given unit symbol.
            </summary>
            <param name="unit">The symbol of the unit to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the requested unit.</returns>
            <exception cref="T:HAKOM.TSM.Net.Api.Units.Persistence.Exceptions.UnitNotFoundException">May be thrown (depending on implementation) if the unit identified by <paramref name="unit"/> is not found in the store.</exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TryLoad(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the unit as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> by the given unit symbol.
            </summary>
            <param name="unit">The symbol of the unit to be loaded.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the requested <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Load(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Threading.CancellationToken)">
            <summary>
            Loads an existing unit as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> from the store.
            </summary>
            <param name="reference">A reference to the existing unit that should be retrieved from the store.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> that can be used to attempt to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the requested unit.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TryLoad(HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Threading.CancellationToken)">
            <summary>
            Attempts to load the given existing unit as <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> from the store.
            </summary>
            <param name="reference">A reference to the existing unit that should be loaded.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> that can be used to attempt to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the requested <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Save(HAKOM.TSM.Net.Api.Units.IUnit,System.Threading.CancellationToken)">
            <summary>
            Saves a given <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TrySave(HAKOM.TSM.Net.Api.Units.IUnit,System.Threading.CancellationToken)">
            <summary>
            Saves a given <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to be saved.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure of the operation.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.SaveOrUpdate(HAKOM.TSM.Net.Api.Units.IUnit,System.Threading.CancellationToken)">
            <summary>
            Saves a new or updates an existing <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to look for and to save.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TrySaveOrUpdate(HAKOM.TSM.Net.Api.Units.IUnit,System.Threading.CancellationToken)">
            <summary>
            Saves a new or updates an existing <paramref name="unit"/>.
            </summary>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to look for and to save.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the saved <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the unit by the given unit symbol.
            </summary>
            <param name="unit">The symbol of the unit to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore.TryDelete(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the unit by the given unit symbol.
            </summary>
            <param name="unit">The symbol of the unit to be deleted.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStoreFactory">
            <summary>
            A factory used to create instances of <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStoreFactory.Create(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStoreFactory.TryCreate(HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider,System.Threading.CancellationToken)">
            <summary>
            Tries to create an instance of an <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> using the specified <paramref name="storageProvider"/>.
            </summary>
            <param name="storageProvider">The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStorageProvider"/> used for read and write operations on the storage.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference">
            <summary>
            Represents a reference to a constant unit conversion rule (see <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/>) stored within a repository.
            </summary>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReferenceFactory">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReferenceFactory.Configure(HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore)">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReferenceFactory"/> for usage.
            </summary>
            <param name="constantUnitConversionStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> for loading the references.</param>
            
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReferenceFactory.Create(System.Int32,HAKOM.Persistence.Core.Net.Api.Storage.IStorageInformation,HAKOM.TSM.Net.Api.Units.Persistence.IConstantUnitConversionStore)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IConstantUnitConversionReference"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the unit conversion.</param>
            <param name="storageInformation"> Information about the storage of the<see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/>. </param>
            <param name="unitConversionStore"> The <see cref="T:HAKOM.Persistence.Core.Net.Api.Storage.IStore`1"/> for the <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/>s referenced by objects created in this factory.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference">
            <summary>
            Represents a reference to a unit stored in a repository.
            </summary>
            <remarks>
            Note that units must always have a string value within a repository to identify them. Usually this would be the symbol of that unit, i.e. kWh or °C since it does make sense to have different definitions for the same symbol (especially within one repository).
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory">
            <summary>
            A factory for creating <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory.Configure(HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore)">
            <summary>
            Configures the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory"/> for usage.
            </summary>
            <param name="unitStore">The <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.IUnitStore"/> for loading the references.</param>
            
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory.Create(System.String)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the unit reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory.TryCreate(System.String)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory.Create(System.String,HAKOM.TSM.Net.Api.Units.IUnit)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to be associated with the reference.</param>
            <returns>The created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReferenceFactory.TryCreate(System.String,HAKOM.TSM.Net.Api.Units.IUnit)">
            <summary>
            Tries to create a <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/> with the specified identifier.
            </summary>
            <param name="identifier">The identifier for the <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</param>
            <param name="unit">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnit"/> to be associated with the reference.</param>
            <returns>A <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> of the created <see cref="T:HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="T:HAKOM.TSM.Net.Api.Units.Persistence.Sql.ISqlConstantUnitConversionStore">
            <summary>
            A store for CRUD operations on unit conversions for sql databases.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.Sql.ISqlConstantUnitConversionStore.Load(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Loads the unit conversion with the given <paramref name="id"/>.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> id of the unit conversion to be loaded.</param>
            <param name="cancellationToken">A token, that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> containing the unit conversion with the given id.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.Sql.ISqlConstantUnitConversionStore.TryLoad(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Loads the unit conversion with the given <paramref name="id"/>.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> id of the unit conversion to be loaded.</param>
            <param name="cancellationToken">A token, that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result`1"/> containing the unit conversion with the given id..</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.Sql.ISqlConstantUnitConversionStore.Delete(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Deletes the unit conversion with the given <paramref name="id"/>.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> id of the unit conversion to delete.</param>
            <param name="cancellationToken">A token, that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Api.Units.Persistence.Sql.ISqlConstantUnitConversionStore.TryDelete(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Deletes the unit conversion with the given <paramref name="id"/>.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> id of the unit conversion to delete.</param>
            <param name="cancellationToken">A token that may be used to cancel the operation.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/>.</returns>
            <remarks>
            The <see cref="T:HAKOM.ErrorHandling.Core.Net.Api.Result"/> will provide additional information about success or failure.
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Calculation.Formulas.FormulaParser.ReferenceRegex">
            <remarks>
            Pattern:<br/>
            <code>(?&lt;!references)\\[(.*?)\\]</code><br/>
            Explanation:<br/>
            <code>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match the string "references" right-to-left.<br/>
            ○ Match '['.<br/>
            ○ 1st capture group.<br/>
                ○ Match a character other than '\n' lazily any number of times.<br/>
            ○ Match ']'.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Calculation.Formulas.FormulaParser.QuotedElementsRegex">
            <remarks>
            Pattern:<br/>
            <code>"(.*?)(?&lt;!\\\\)"</code><br/>
            Explanation:<br/>
            <code>
            ○ Match '"'.<br/>
            ○ 1st capture group.<br/>
                ○ Match a character other than '\n' lazily any number of times.<br/>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match '\\' right-to-left.<br/>
            ○ Match '"'.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Calculation.Formulas.FormulaParser.ConstantTValueAndFlagRegex">
            <remarks>
            Pattern:<br/>
            <code>{(.+?)\\|(\\d+?)}</code><br/>
            Explanation:<br/>
            <code>
            ○ Match '{'.<br/>
            ○ 1st capture group.<br/>
                ○ Match a character other than '\n' lazily at least once.<br/>
            ○ Match '|'.<br/>
            ○ 2nd capture group.<br/>
                ○ Match a Unicode digit atomically at least once.<br/>
            ○ Match '}'.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.Persistence.TimeSeries.TimeSeriesDataStore`4.TryAlignTimeSeriesDataReadingOptions(HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries,HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions)">
            <summary>
            Tries to align the From- and To-Dates of the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.
            </summary>
            <param name="timeSeries">The <see cref="T:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries"/> the <paramref name="readingOptions"/> have to be aligned to.</param>
            <param name="readingOptions">The <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> that have to be aligned.</param>
            <returns>The aligned <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/>.</returns>
            <remarks>
            <para> 
            The alignment happens with the <paramref name="timeSeries"/> <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Interval"/> based on its <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.TimeZone"/> and <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.StartOfTime"/>.
            </para>
            <para> 
            It ensures that the <paramref name="readingOptions"/> <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Period"/> From-Date aligns with the
            <paramref name="timeSeries"/> <see cref="P:HAKOM.TSM.Net.Api.TimeSeries.ITimeSeries.Interval"/>.
            </para>
            <para> 
            In order to ensure this for the <paramref name="readingOptions"/> <see cref="P:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions.Period"/> To-Date as well, it will align it to the new To-Date based 
            on the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> properties and then align it a second time based on the <paramref name="timeSeries"/> properties.
            </para>
            </remarks>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.Persistence.TimeSeries.TimeSeriesDataStore`4.CreateConsecutivePeriods``1(System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.IDataPeriod})">
            <summary>
            Processes a stream of chronologically sorted but potentially overlapping data periods and returns a newly 
            created stream of chronologically sorted, consecutive data periods where these overlaps have been removed.
            </summary>
            <param name="fromTime">The data you want to start reading data from.</param>
            <param name="toTime">The data you want to stop reading data from.</param>
            <param name="overlappingTimePeriods ">List of possible overlapping time periods.</param>
            <returns>List of non-overlapping time periods</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.TimeSeries.DataConverter`1.Convert(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Api.Units.Persistence.References.IUnitReference,System.Collections.Generic.IAsyncEnumerable{HAKOM.TSM.Net.Api.Units.IUnitConversion},System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Threading.CancellationToken)">
            <inheritdoc/>
            <exception cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.UnitConversionPathForUnitConversionNotFoundException"></exception>
            <exception cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.Exceptions.TimeSeriesDataConversionException"></exception>
            <exception cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.Exceptions.MultiPathConversionOnlySupportsFactorConversionException"></exception>
            <exception cref="T:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTypeNotSupportedException"></exception>
            <exception cref="T:HAKOM.TSM.Net.Api.Time.Intervals.Exceptions.IntervalTransformationMethodNotSupportedException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.TimeSeries.DataConverter`1.TryConvertWithOnlyMultiplication(HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},System.Collections.Generic.List{HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath},System.Threading.CancellationToken)">
            <summary>
            Converts data by just calculating the multiplier and applying it at the end.
            </summary>
            <param name="data"></param>
            <param name="shortestPaths"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.TimeSeries.DataConverter`1.TryConvert(HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath,HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection{`0},HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionStepCalculations,System.Nullable{HAKOM.TSM.Net.Api.Time.Periods.Period},System.Nullable{HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Recursively converts the data from one unit into another specified by the <see cref="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath"/>.
            </summary>
            <param name="dataUnitConversionPath">The <see cref="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath"/> that defines how it will be converted.</param>
            <param name="data">The data that will be converted.</param>
            <param name="startingPoint">Indicates if the method is at the start of the conversion.</param>
            <param name="conversionStepCalculations">The calculations of the conversion steps accumulated until an step contains an offset or a TimeDependentUnitConversion.</param>
            <param name="timeDependentUnitConversionReadingPeriod">The <see cref="T:HAKOM.TSM.Net.Api.Time.Periods.Period"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="timeDependentUnitConversionHistoricDateTime">The <see cref="T:HAKOM.TSM.Net.Api.Time.DateTimes.DateTimeOffsetAtOrBefore"/> for the <see cref="T:HAKOM.TSM.Net.Api.Data.Persistence.TimeSeries.ITimeSeriesDataReadingOptions"/> to read the <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> data.
            Can be null if no <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/> is in the unit conversion path.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> to cancel the Task.</param>
            <returns><see cref="T:HAKOM.TSM.Net.Api.Data.TimeSeries.ITimeSeriesDataCollection`1"/> of the converted data.</returns>
        </member>
        <member name="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath">
            <summary>
            A linked list containing <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/>s.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.UnitConversion">
            <summary>
            The element of the linked list. <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> is either
            a <see cref="T:HAKOM.TSM.Net.Api.Units.IConstantUnitConversion"/> or a <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.PreviousUnitConversionPathElement">
            <summary>
            The previous element of the linked list.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.BackwardsConversion">
            <summary>
            Indicates whether the unit is to be applied backwards. <br/>
            More precisely if true it indicates that the conversion actually
            is from <see cref="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.ToUnit"/> to <see cref="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.FromUnit"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.ConversionStepsCount">
            <summary>
            Returns how many steps from the start of the linked list are up to now.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.FromUnit">
            <summary>
            Returns the unit to be converted from based on <see cref="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.BackwardsConversion"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.ToUnit">
            <summary>
            Returns the unit to be converted to based on <see cref="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.BackwardsConversion"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.ContainsTimeDependentConversionInPath">
            <summary>
            Indicates whether up to this part of the path the <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/>
            is ever of type <see cref="T:HAKOM.TSM.Net.Api.Units.ITimeDependentUnitConversion"/>.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.ContainsOffsetInPath">
            <summary>
            Indicates whether up to this part of the path the <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/>
            contains an offset.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.IntegrationConversionSteps">
            <summary>
            Returns how often a <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> with integration interval is in the path.
            contains an offset.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.#ctor(HAKOM.TSM.Net.Api.Units.IUnitConversion,HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath,System.Boolean)">
            <summary>
            Creates a <see cref="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath"/> element.
            </summary>
            <param name="unitConversion">The <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> of this element.</param>
            <param name="previousUnitConversionPathElement">The previous <see cref="T:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath"/> in the linked list.</param>
            <param name="backwardsConversion">Indicates ín which direction the <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> is used.</param>
        </member>
        <member name="M:HAKOM.TSM.Net.Data.TimeSeries.DataUnitConversionPath.PathContainsUnitConversionInPreviousElements(HAKOM.TSM.Net.Api.Units.IUnitConversion)">
            <summary>
            Checks if the path contains the given <see cref="T:HAKOM.TSM.Net.Api.Units.IUnitConversion"/> in one of the previous elements.
            </summary>
            <param name="unitConversion"></param>
            <returns><see cref="T:System.Boolean"/> Contains?</returns>
        </member>
        <member name="M:HAKOM.TSM.Net.Formulas.Serialization.Xml.XmlFormulaSerializer.#ctor(HAKOM.Serialization.Core.Net.Api.Xml.IXmlSerializationParametersFactory)">
            <summary>
            Xml Serializer of Formula objects.
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Persistence.TsmRepositoryStore.LoadTimeSeriesRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:HAKOM.TSM.Net.Persistence.TsmRepositoryStore.LoadTimeSeriesDataRepository(HAKOM.TSM.Net.Api.TimeSeries.Persistence.References.ITimeSeriesReference,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:HAKOM.TSM.Net.Properties.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AccountedFlagName">
            <summary>
              Looks up a localized string similar to Accounted.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ActualDataTableNotSetExceptionMessage">
            <summary>
              Looks up a localized string similar to The table for time series data has not been set in the time series definition..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ActualTablesForQuotationNotSetExceptionMessage">
            <summary>
              Looks up a localized string similar to The table for quotation time series data was not set in the time series definition..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AdditionOfIntervalNotPossibleMessage">
            <summary>
              Looks up a localized string similar to The interval &apos;{0}&apos; cannot be added to a date..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AssignmentAlreadyExistsExceptionMessage">
            <summary>
              Looks up a localized string similar to An assignment of the object of type {0} with identifier {1} to the time series with Id {2} exists already..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AssignmentNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to No assignment(s) found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AssignmentTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The assignment type &quot;{0}&quot; is not supported..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeIdNotAllowedOnSaveExceptionMessage">
            <summary>
              Looks up a localized string similar to An attribute Id can not be set when saving..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeNameAlreadyExistsExceptionMessage">
            <summary>
              Looks up a localized string similar to An attribute with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeNotFoundIdentifierMessage">
            <summary>
              Looks up a localized string similar to No attribute with identifier &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeNotFoundNameMessage">
            <summary>
              Looks up a localized string similar to No attribute with name &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeTypeNotFoundIdentifierMessage">
            <summary>
              Looks up a localized string similar to The attribute type with identifier &apos;{0}&apos; was not found in the given store..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.AttributeTypeNotFoundNameMessage">
            <summary>
              Looks up a localized string similar to The attribute type with name &apos;{0}&apos; was not found in the given store..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CannotChangeNodeRootExceptionMessage">
            <summary>
              Looks up a localized string similar to The root attribute of the node &apos;{0}&apos; cannot be changed..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CircularNodeTreeExceptionMessage">
            <summary>
              Looks up a localized string similar to Attempt to save invalid tree. Cycle detected for node with root {0}, parent name={1} and node name={2}).
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CompilationOfCalculationContextFailedExceptionMessage">
            <summary>
              Looks up a localized string similar to An error occurred while compiling the formula &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CompressionModeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Serializing data for compression with CompressionMode &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ConstantUnitConversionNotFoundIdentifierMessage">
            <summary>
              Looks up a localized string similar to No constant unit conversion with identifier &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ConstantUnitConversionNotFoundUnitMessage">
            <summary>
              Looks up a localized string similar to No constant unit conversion with unit &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ConversionToTDataPeriodIsNotPossibleMessage">
            <summary>
              Looks up a localized string similar to Due to this operation, an unsupported type was passed when compiling the data to be queried. Please contact HAKOM Support with this error..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CouldNotDeleteAttributeDataExceptionMessage">
            <summary>
              Looks up a localized string similar to The attempt to delete the attribute data for attribute assignment has failed..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CouldNotParseDateTimeExceptionMessage">
            <summary>
              Looks up a localized string similar to Erroneous configuration for TSM:TimeSeries:Defaults:StartOfTime. The string &apos;{0}&apos; does not correspond to a ISO-8601 formatted date or time. For Example: 2020-10-23T03:55.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CouldNotUpdateAttributeValueExceptionMessage">
            <summary>
              Looks up a localized string similar to The attempt to update the attribute value for attribute assignment has failed..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CouldNotWriteAttributeDataExceptionMessage">
            <summary>
              Looks up a localized string similar to The attempt to write attribute data for the attribute assignment has failed..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CsxFileCompilationFailedExceptionMessage">
            <summary>
              Looks up a localized string similar to The compilation of a csx file has failed. See the diagnostics property for further details..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CsxFileCompiledWithAWarningLogMessage">
            <summary>
              Looks up a localized string similar to The file {0} was compiled successfully with the following warning {1}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CustomFunctionFolderNotFoundLogMessage">
            <summary>
              Looks up a localized string similar to The directory &apos;{Path}&apos; configured for locating custom functions does not exist..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CustomFunctionNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to The following custom functions could not be found: {0}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CustomFunctionsNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to No custom functions were found in the directory of the executed assemblies..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.CustomFunctionTypeHasErrorExceptionMessage">
             <summary>
               Looks up a localized string similar to At least one custom function specified in the formula has a compilation error. See the compilation errors property for further details.
            Occurred compilation errors:
            {0}.
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DataWriteOnFormulaTimeSeriesNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Writing data to formula time series is not supported..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DateAlignmentNotPossibleMessage">
            <summary>
              Looks up a localized string similar to The date cannot be aligned with the interval &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DateTimeOffsetAtOrBeforeParseFormatExceptionMessage">
             <summary>
               Looks up a localized string similar to The passed input parameter does not contain the correct format to be converted to an instance of DateTimeOffsetAtOrBefore.
            Format: &lt;ISO-8601&gt;[,exact]
            Example: &quot;2020-01-01T15:30:00,exact&quot;, &quot;2020-01-02&quot;.
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DbDataTypeMismatchExceptionMessage">
            <summary>
              Looks up a localized string similar to Unable to read the value &apos;{0}&apos; as type of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DefaultRepositoryCannotBeNullExceptionMessage">
            <summary>
              Looks up a localized string similar to The defaultRepository parameter cannot be null when the formula time series doesn&apos;t have a repository..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DeserializationOfReferenceWithIdentifierHasNoValidIdentifierExceptionMessage">
            <summary>
              Looks up a localized string similar to The identifier of a reference cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.DesrializationOfReferenceWithNotSupportedStoreExceptionMessage">
            <summary>
              Looks up a localized string similar to The deserializer currently only supports &quot;{0}&quot; implementations, where TIdentifier is either integer, string or guid..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.EstimatedFlagName">
            <summary>
              Looks up a localized string similar to Estimated.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FaultyFlagName">
            <summary>
              Looks up a localized string similar to Faulty.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FlagMappingNameIsNullMessage">
            <summary>
              Looks up a localized string similar to One of the values is null..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FormulaContainsACyclicReferenceExceptionMessage">
            <summary>
              Looks up a localized string similar to The given formula or one of the formulas it references contains a circular reference..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FormulaResultCannotBeMatchedToTimeSeriesDataExceptionMessage">
            <summary>
              Looks up a localized string similar to The formula result cannot be converted into a ITimeSeriesData object..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FormulaXmlDeserializationExceptionMessage">
            <summary>
              Looks up a localized string similar to An Exception occurred during deserialization of the formula &apos;{0}&apos;. Please refer to the inner exception for more details..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.FromIsNotBeforeToExceptionMessage">
            <summary>
              Looks up a localized string similar to The from date must be before the to date..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.IgnoreFlagName">
            <summary>
              Looks up a localized string similar to Ignore.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InstanceOfCustomFunctionCouldNotBeCreatedExceptionMessage">
            <summary>
              Looks up a localized string similar to An instance of the custom function with the name &quot;{0}&quot; could not be created. .
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InterpolatedFlagName">
            <summary>
              Looks up a localized string similar to Interpolated.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.IntervalOrTimeZoneDifferExceptionMessage">
             <summary>
               Looks up a localized string similar to The interval and/or time zone of the given data does not match the interval and/or time zone of the configured time series. Make sure that the data is transformed to the interval and time zone of the configured time series before it is converted to ITimeSeriesBlockData.
            The interval of the time series is &apos;{0}&apos; and the time zone is &apos;{1}&apos;.
            The data interval is &apos;{2}&apos; and the time zone is &apos;{3}&apos;..
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.IntervalTransformationMethodNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The given IntervalTransformationMethod &apos;{0}&apos; is not supported in the given context..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.IntervalTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The given IntervalType &apos;{0}&apos; is not supported in the given context..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidAttributeIdentifierExceptionMessageForId">
            <summary>
              Looks up a localized string similar to The Id &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidAttributeIdentifierExceptionMessageForName">
            <summary>
              Looks up a localized string similar to The name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidMediaTypeParameterTimeBaseExceptionMessage">
            <summary>
              Looks up a localized string similar to Invalid value &apos;{0}&apos; for media type timeBase-parameter..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidMultiplierExceptionMessage">
            <summary>
              Looks up a localized string similar to The interval multiplier must be greater than or equal to 1..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidNodeStorageInformationExceptionMessage">
            <summary>
              Looks up a localized string similar to The repository of the node store does not match the repository of the {0}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidRepositoryExceptionMessage">
            <summary>
              Looks up a localized string similar to The repository &apos;{0}&apos; is invalid for this time series. Please select a repository according to the configured data repository name &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidStorageInformationRepositoryExceptionMessage">
            <summary>
              Looks up a localized string similar to The repository of the target time series does not match the repository of the assignment time series..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidTimeDependentUnitConversionExceptionMessage">
            <summary>
              Looks up a localized string similar to The unit of the time series cannot be null and must contain a backslash (&quot;/&quot;)..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidTimeSeriesExceptionMessage">
            <summary>
              Looks up a localized string similar to The current time series configuration does not support saving or reading data. Details: \n{0}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidTimeSeriesIdentifierExceptionMessageForId">
            <summary>
              Looks up a localized string similar to The Id &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidTimeSeriesIdentifierExceptionMessageForName">
            <summary>
              Looks up a localized string similar to The name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.InvalidTimeSeriesReferenceInFormulaExceptionMessage">
            <summary>
              Looks up a localized string similar to The time series reference &apos;{0}&apos; cannot be resolved. Make sure that any dots and commas in the name are escaped accordingly..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ManuallyReplacedFlagName">
            <summary>
              Looks up a localized string similar to Manually Replaced.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.MissingFlagName">
            <summary>
              Looks up a localized string similar to Missing.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.MultiPathConversionOnlySupportsFactorConversionExceptionMessage">
            <summary>
              Looks up a localized string similar to Multiple conversion paths are only possible for conversions with a constant factor..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.MultipleCustomFunctionsWithTheSameNameExceptionMessage">
            <summary>
              Looks up a localized string similar to Multiple custom functions were found with the &quot;Name&quot; property set to &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NoAttributeDataFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to No attribute data was found for the attribute assignment..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NodeAlreadyExistsExceptionMessage">
            <summary>
              Looks up a localized string similar to A node with name: {0}, root: {1} and parent: {2} already exists..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NodeDataMustBeAssignedToAttributeOfTypeNodeExceptionMessage">
            <summary>
              Looks up a localized string similar to The attribute is not of type &apos;Node&apos;. Node data cannot be read from or written to it..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NodeNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to The node with the identifier &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NodeRootNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to No attribute with identifier &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NonCyclicStepLeftFunctionDataIsNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The combination of acyclic and left aligned data is not supported for this operation..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NonCyclicTimeSeriesDataCollectionConversionToTimeSeriesSpanWithoutIgnoreAsLastFlagIsNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Converting a time series data collection into a collection of time series data spans is not supported for non cyclic collections where the last flag is not &apos;Ignore&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.NonCyclicTimeSeriesDontSupportCompressionExceptionMessage">
            <summary>
              Looks up a localized string similar to Time series with type &quot;spontaneous&quot; do not support compressed storage at the moment (TimeSeriesStorageOptions.CompressionMode must be NoCompression)..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.PreserveHistoricDataOnFormulaTimeSeriesNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Preserving historic data is not possible for formula time series..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.PreservingHistoricDataWithoutAuditLogsNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Using historic data.requires the preservation of audit logs..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.PropertyIsMissingInSerializationInfoMessage">
            <summary>
              Looks up a localized string similar to Cannot deserialize &apos;{0}&apos; because property &apos;{1}&apos; is null or missing in serialization info..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.PropertyIsNotValidInSerializationInfoMessage">
            <summary>
              Looks up a localized string similar to {0} in SerializationInfo is not a valid type..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.QuotationDateAndTimeCouldNotBeDeterminedMessage">
            <summary>
              Looks up a localized string similar to No quotation time could be determined. Please contact HAKOM Support with this error..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.QuotationDefaultBehaviorConfigurationSettingNotValidExceptionMessage">
            <summary>
              Looks up a localized string similar to The configuration setting &quot;TSM:Persistence:Data:QuotationDefaultBehavior&quot; has an invalid value..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.RangeStartIsAfterRangeEndExceptionMessage">
            <summary>
              Looks up a localized string similar to The RangeStart parameter must not be larger than RangeEnd..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingAuditedQuotationsForTimeSeriesWithoutPreservedHistoricDataNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Audited quotation entries can only be read from time series that have &quot;PreserveHistoricData&quot; activated..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingDataForAggregationExceptionMessage">
             <summary>
               Looks up a localized string similar to An error occurred when loading the time series data for the time series with the identifier {0}.
            Error: &quot;{1}&quot;
            Further details can be found in the internal exception..
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingDataForAggregationExceptionMessageWithoutIdentifier">
             <summary>
               Looks up a localized string similar to An error occurred when loading the time series data for at least one time series.
            Error: &quot;{0}&quot;
            Further details can be found in the internal exception..
             </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Reading with quotation date and time is only possible for time series where quotations are enabled..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingQuotationDataWithQuotationBehaviorAndWithoutPreserveAuditLogOnlySupportsNowNotExactExceptionMessage">
            <summary>
              Looks up a localized string similar to Reading quotation data with a quotation behavior other than NowNotExact is not supported for time series with PreserveAuditLogs set to false. Please use a different quotation behavior or a quotation datetime..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingQuotationsForTimeSeriesWithoutPreservedAuditLogNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Quotation entries can only be read from time series that have &quot;PreserveAuditLog&quot; activated..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingSpecificDataPointWithoutQuotationDateTimeExceptionMessage">
            <summary>
              Looks up a localized string similar to This operation triggered the query of a specific data record without specifying a quotation date and time. Please contact HAKOM Support with this error..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReadingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Reading with historic date and time is only possible for time series where preserving of historic data is enabled..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReferencedObjectNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to The referenced object of type &quot;{0}&quot; could not be found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReferenceIdentifierTypeMismatchExceptionMessage">
            <summary>
              Looks up a localized string similar to The identifier of the reference &apos;{0}&apos; was expected to be of type &apos;{1}&apos; but was &apos;{2}&apos; instead..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReferenceNotResolvedException">
            <summary>
              Looks up a localized string similar to Method {0} of store {1} must return a resolved reference of type {2}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ReferenceWithoutIdentifierExceptionMessage">
            <summary>
              Looks up a localized string similar to The provided &apos;{0}&apos; reference does not support identifiers..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ScheduleFlagName">
            <summary>
              Looks up a localized string similar to Scheduled.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.StartOfTimeIsAfterGivenDateExceptionMessage">
            <summary>
              Looks up a localized string similar to The date to be aligned cannot be before the start of time..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.StorageProviderTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The storage provider type &quot;{0}&quot; is not supported for the current storage..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TIdentifierOfSerializerDoesNotMatchWithConfiguredIReferenceExceptionMessage">
            <summary>
              Looks up a localized string similar to Error while serialization of {2} for Json. The type of the identifier of the {1} does not match the type (&apos;{0}&apos;) of the JsonSerializer for {2}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeDependentUnitConversionNotFoundIdentifierMessage">
            <summary>
              Looks up a localized string similar to No time dependent unit conversion with identifier &apos;{0}&apos; found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeFormatNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The given time format is not supported (&apos;{0}&apos;)..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesCompressedValueTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to This value type is used, because you&apos;re attempting to read or write compressed data..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesDataConversionExceptionMessage">
            <summary>
              Looks up a localized string similar to The data cannot be converted from unit &apos;{0}&apos; to unit &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesDataStoreConfigurationTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The TimeSeriesDataStoreConfiguration type &quot;{0}&quot; is not supported for the current storage..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesDeletionFailedExceptionMessage">
            <summary>
              Looks up a localized string similar to An error occurred while attempting to delete a time series..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesDoesNotContainAFormulaExceptionMessage">
            <summary>
              Looks up a localized string similar to The given time series does not contain a formula..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesIdNotAllowedOnSaveExceptionMessage">
            <summary>
              Looks up a localized string similar to The time series Id can not be set when saving..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNameAlreadyExistsExceptionMessage">
            <summary>
              Looks up a localized string similar to A time series with the name &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNameIsEmptyExceptionMessage">
            <summary>
              Looks up a localized string similar to A time series must be given a name..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNameIsPaddedWithWhiteSpaceExceptionMessage">
            <summary>
              Looks up a localized string similar to The name of a time series must not begin or end with white-space..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNotFoundByIdentifierAndHistoricDateTimeMessage">
            <summary>
              Looks up a localized string similar to The time series with {0} &apos;{1}&apos; was not found in the given store for the historic datetime &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNotFoundByIdentifierMessage">
            <summary>
              Looks up a localized string similar to The time series with {0} &apos;{1}&apos; was not found in the given store..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to The requested time series was not found in the given store..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesQuotationDataStoreForTimeSeriesWithoutQuotationNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Using a TimeSeriesQuotationDataStore to read or write data from a time series that is not configured to support quotations is not supported..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesToBeDeletedNotFoundInThePastMessage">
            <summary>
              Looks up a localized string similar to For the time series to be deleted, there is no entry in the past with the repository &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesUnitDoesNotSupportConversionExceptionMessage">
            <summary>
              Looks up a localized string similar to The time series does not support conversions..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TimeSeriesValidationExceptionMessage">
            <summary>
              Looks up a localized string similar to An error occurred while attempting to validate the \&quot;{0}\&quot; property of a time series for storage:\n{1}..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.TransformationIntoCyclicDataWithoutToDateNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Transformation into cyclic data is not possible when the to date is missing..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnitConversionExistsAlreadyExceptionMessage">
            <summary>
              Looks up a localized string similar to A unit conversion with the same properties exists already ({0})!.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnitConversionPathForUnitConversionNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to No ConversionPath for the given UnitConversion was found..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnitNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to The unit &apos;{0}&apos; was not found in the given store..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnitRepositoryIsNotConfiguredExceptionMessage">
            <summary>
              Looks up a localized string similar to The repository &apos;{0}&apos; set as unit repository is not configured..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnknownTimeBaseValueMessage">
            <summary>
              Looks up a localized string similar to There is no known time base with value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.UnsupportedNodeStoreTypeExceptionMessage">
            <summary>
              Looks up a localized string similar to The type of the node reference or store is not supported..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ValidFlagName">
            <summary>
              Looks up a localized string similar to Valid.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.ValueTypeNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to The value type &apos;{0}&apos; is not supported by the implementation of {1}. {2}.
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.WritingAttributeDataCollectionWithConfiguredPropertiesNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Writing attribute data is only supported with an noncyclic StepRight data collection that has no unit and its time zone matches the time zone of the assigned time series..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.WritingDataWithoutQuotationTimeOnTimeSeriesWithQuotationIsNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Saving without quotation date and time is not possible for time series for which quotations are enabled..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.WritingQuotationDataOnTimeSeriesWithoutQuotationNotSupportedExceptionMessage">
            <summary>
              Looks up a localized string similar to Writing with quotation date and time is only possible for time series for which quotations are enabled..
            </summary>
        </member>
        <member name="P:HAKOM.TSM.Net.Properties.Strings.WritingWithHistoricDateTimeOnTimeSeriesWithoutPreserveHistoricDataNotPossibleExceptionMessage">
            <summary>
              Looks up a localized string similar to Saving with historic date and time is only possible for time series where preserving of historic data is enabled..
            </summary>
        </member>
        <member name="M:HAKOM.TSM.Net.Time.TimeZones.CustomTimeZoneDefinitions.UtcWithOffsetCustomTimeZoneDefinition.CreateInstance(System.String,HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZoneFactory)">
             <summary>
             The ID grammar is as follows:
            
             TimeZoneID ::= 'UTC' . ('+' | '-') . hh:mm
             
             <example>
                 var utcTimeZone = timeZoneFactory.createFromId("UTC+01:00");
             </example>
             </summary>
             <param name="id">Utc ID, maxValue = UTC+14:00, minValue = UTC-14:00</param>
             <param name="timeZoneFactory"></param>
             <returns>Utc offset based <see cref="T:HAKOM.TSM.Net.Api.Time.TimeZones.ITimeZone"/> without adjustmentrules.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">When the id does not map to a proper TimeZone. In order to avoid that, check with the <see cref="M:HAKOM.TSM.Net.Time.TimeZones.CustomTimeZoneDefinitions.UtcWithOffsetCustomTimeZoneDefinition.ImplementsId(System.String)"/> whether the given id is supported or not.</exception>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReferenceRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ReferenceRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ReferenceRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReferenceRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ReferenceRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the QuotedElementsRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.QuotedElementsRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ConstantTValueAndFlagRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ConstantTValueAndFlagRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
