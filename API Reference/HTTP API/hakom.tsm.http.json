{
  "openapi": "3.0.4",
  "info": {
    "title": "PowerTSM HTTP API",
    "description": "## Introduction\n\nThe HAKOM PowerTSM HTTP API provides applications with a convenient way of accessing and manipulating time series data using simple HTTP requests.\nThe following document is designed to making its use as easy and straight-forward as possible.\n\nIt is based on the [OpenAPI](https://www.openapis.org/) format (formerly \"Swagger\") which is well understood by a wide range of development tools.\nFor example, check out the list of client code generators at [https://tools.openapis.org](https://tools.openapis.org/categories/code-generators.html).\n\nPlease note that not all tools support the full range of features that the OpenAPI specification allows for. \nWe automatically validate this document against the specification to ensure its compatibility as well as we can.\nIf you run into problems during development and suspect that there's an issue with the document, please feel free to contact us at [support@hakom.at](mailto:support@hakom.at).\n\n## Basics\nThe following sections only describe concepts specific to the HTTP API. For a basic introduction to time series in the context of the HAKOM PowerTSM suite, please refer to the general getting started guide available at [https://documentation.hakom.at](https://documentation.hakom.at/powertsm/latest/English/getting-started)\n### Formatting\nThe service currently only accepts and produces data in JSON format.\nAny request should include an `Accept` header with a value of `application/json`. Requests that contain a body (`PUT`, `POST`) should also declare their `Content-Type` as `application/json`.\n\nNote that the response from the service includes additional information in the `Content-Type` header as media type parameters. These specify additional formatting options.\nA typical header sent from the service may look like this: `Content-Type: application/json; api-version=4.9.0; timeZone=utc; charset=utf-8; timeFormat=iso8601; indentation=false; casing=camel`\n\nClients may also set these parameters in their `Accept` header to change certain details about how the output is formatted.\nFor example, setting the `Accept` header to `application/json;casing=pascal` would format the output so that property names start capitalized.\n\nDetailed information about each parameter and their allowed values will be added soon!\n\nPlease also note that the OpenAPI specification document currently does **not** include response examples for all the possible combinations of all these parameters. Instead, the specification document always uses the default `application/json` media type and it is up to the client to determine if any modifications to the data format are required.\n\n### Versioning\n\nEndpoints may change over time as we react to changing requirements and feature requests. In order to provide some level of backwards compatibility, we will always attempt to retain the original functionality.\n\nFor example, if an endpoint in version 5.3 supported a specific query parameter that was dropped or renamed in version 5.4, clients will still be able to use the parameter by specifying that they would like to access version 5.3 of the API.\nThis is done - similar to specifying formatting options above - using media type parameters.\n\nIn the aforementioned example, setting the `Accept` header to `application/json;api-version=5.3` would allow the use of the query parameter as before.\n\n## Further Reading\n\nAdditional documentation can be found at [the official documentation page](https://documentation.hakom.at/latest)\n",
    "version": "4.9.0"
  },
  "paths": {
    "/documentation/openapi/specifications": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Returns links to all OpenAPI specifications available for this service.",
        "description": "This endpoint returns all available OpenApi specifications for this service.\r\n\r\nThe service may support multiple API versions (for backwards compatibility with existing clients applications).\r\nSelecting a particular API version is done by specifying an `api-version` parameter along with the media type in the `Accept` and/or `Content-Type` header of a request.\r\n\r\nThe list also contains an entry `default` that links to the most current version of the document.",
        "operationId": "Get_Documentation_Openapi_Specifications",
        "responses": {
          "200": {
            "description": "Successful response. The body of the response contains links to all available versions of the specification.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "example": {"default":"https://example.com","4.9.0":"https://example.com"}
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/documentation/openapi/specifications/default": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Redirects to the default OpenAPI specification document for this service.",
        "description": "This endpoint can be used to quickly access the most current version of the OpenAPI specification document available for this service.\r\nIf the service supports more than one API version, the most recent available version is always considered to be the default.\r\n\r\nThis means that any request sent to the service without an `api-version` parameter in the `Accept` header will be treated as if it where requested for this version.",
        "operationId": "Get_Documentation_Openapi_Specifications_Default",
        "responses": {
          "302": {
            "description": "Redirects to the default OpenAPI specification document for this service.",
            "headers": {
              "Location": {
                "description": "The absolute URI of the default OpenAPI document.",
                "schema": {
                  "type": "string",
                  "description": "The absolute URI of the default OpenAPI document.",
                  "format": "uri"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identity": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Returns the currently authenticated identity.",
        "description": "This endpoint can be used to verify successful authentication.\r\n\r\nIf, for example the OpenID Connect protocol is used to generate an access token from a third-party identity provider (i.e. Azure Entra ID, KeyCloak, etc.), this endpoint can be used to confirm that the token has been accepted and validated and that all properties/claims within the token are properly decoded/mapped.",
        "operationId": "Get_Security_Authentication_Identity",
        "responses": {
          "200": {
            "description": "This response indicates that the request contains valid authentication information. The response body contains all the information about the identity defined by that information.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimsIdentity"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identity/signout": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Attempts to end an authentication session.",
        "description": "If authenticated using a method that supports sessions, this endpoint can be used to end the current session.\r\n\r\nRegardless of wether the current authentication method supports sessions or wether or not the sign-out process was successful, the request is then redirected to the absolute URI or relative path given in the `referrer` parameter.",
        "operationId": "Get_Security_Authentication_Identity_Signout",
        "parameters": [
          {
            "name": "referrer",
            "in": "query",
            "description": "The path to redirect to after signout has been completed. By default this path redirects to the root of the service if no value is set.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "After attempting to end the current session, the request is redirected to the given absolute URI or relative path.",
            "headers": {
              "Location": {
                "description": "The absolute URI or relative path which the client should move on to.",
                "schema": {
                  "description": "The absolute URI or relative path which the client should move on to.",
                  "format": ""
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identityProviders": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Gets all identity providers available for authentication.",
        "description": "Identity providers are third party authentication services that can be used with this service.\r\n\r\nInformation about how to authenticate can usually be found in the documentation of the specific provider.",
        "operationId": "Get_Security_Authentication_IdentityProviders",
        "responses": {
          "200": {
            "description": "\tThe response contains a list of all configured identity providers.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfConfiguredHttpIdentityProvider"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfConfiguredHttpIdentityProvider",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identityProviders/{identityProvider}": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Gets information about a specific identity provider that can be used for authentication.",
        "description": "Every configured identity provider is given a unique name. That name can be used to retrieve specific information about the identity provider and in order to access additional functions such as interactive sign-in and sign-out (if supported by the provider).",
        "operationId": "Get_Security_Authentication_IdentityProviders_ByIdentityProvider",
        "parameters": [
          {
            "name": "identityProvider",
            "in": "path",
            "description": "The name of the identity provider to get information about.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\tThe response contains information about the identity provider.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguredHttpIdentityProvider"
                }
              }
            }
          },
          "404": {
            "description": "\tThis response indicates that no identity provider is configured under the given name.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identityProviders/{identityProvider}/signin": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Initiates the sign-in process with the given identity provider.",
        "description": "The response depends on the type of identity provider.\r\n\r\n### For providers implementing the OAuth 2.0 or the OpenID Connect protocol:\r\n\r\nUsually, client application would have to follow the identity providers mechanisms for obtaining a Json Web Token (JWT) and then send that token on each subsequent request.\r\n\r\nThis is not ideal in some scenarios such as public applications that run in browsers where keeping the token secure is challenging. In addition, the application has to attach the token to each request causing additional development overhead.\r\n\r\nIn these cases, a commonly applied mechanism is to have the identity provider send the token to the back-end service for storage. The service then issues a cookie to the client associating all subsequent requests with the token. This way, the token is not stored in the web application and the cookie is automatically sent along with every request automatically by the browser.\r\nAnother benefit of this is that the service is able to refresh the token on it's own (given that the identity provider supports refresh tokens), reducing the need for the client/user to reauthenticate.\r\nIn summary, accessing this endpoint essentially creates an authenticated session between the client and the service.\r\nNote that after the initial requests, the client is initially redirected to the identity provider for authorization. The identity provider it self may then initiate a series of redirects to complete the process.\r\n\r\n### For other providers:\r\nThe response usually would be a standard HTTP authentication challenge, indicated by a 401 (Unauthorized) response in conjunction with a `WWW-Authenticate` header describing the supported types of credentials.\r\nSome of these challenges may cause the client application (i.e. a browser) to prompt the user for credentials. Some may not, requiring the client application to take appropriate action (such as aquiring and providing a token, etc.)\r\nExamples:\r\n* For identity providers requiring username/password identification, the header may contain the value `Basic` or `Digest` prompting the browser to ask the user for these credentials.\r\n* For providers only supporting JWTs, the value of the header would be `Bearer`.\r\n* For Windows authentication, the value would be 'Negotiate` or `Ntlm`",
        "operationId": "Get_Security_Authentication_IdentityProviders_ByIdentityProvider_Signin",
        "parameters": [
          {
            "name": "identityProvider",
            "in": "path",
            "description": "The name of the identity provider to sign in with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referrer",
            "in": "query",
            "description": "The relative path to redirect to after the client has been signed in successfully.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "\tAfter successful sign-in with an OpenID Connect provider (which may require several intermediate redirects) , the client is redirected to the absolute URI or relative path given in the `referrer` parameter.",
            "headers": {
              "Location": {
                "description": "The location to which the client should be returned to after sign-in.",
                "schema": {
                  "description": "The location to which the client should be returned to after sign-in.",
                  "format": ""
                }
              },
              "Set-Cookie": {
                "description": "If sign-in was successful, this header contains the cookie identifying the session.",
                "schema": {
                  "description": "If sign-in was successful, this header contains the cookie identifying the session.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/json; api-version=4.9.0": { }
            }
          },
          "401": {
            "description": "\tThis response indicates that an HTTP authentication challenge was issued. ",
            "headers": {
              "WWW-Authenticate": {
                "description": "The HTTP authentication scheme(s) supported for authentication.",
                "schema": {
                  "description": "The HTTP authentication scheme(s) supported for authentication.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "\tThis response indicates that no identity provider is configured under the given name.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/security/authentication/identityProviders/{identityProvider}/signout": {
      "get": {
        "tags": [
          "Security:Authentication"
        ],
        "summary": "Attempts to end a currently active session with the given provider.",
        "description": "Depending on support by the given identity provider, this will sign the user out of the current session.",
        "operationId": "Get_Security_Authentication_IdentityProviders_ByIdentityProvider_Signout",
        "parameters": [
          {
            "name": "identityProvider",
            "in": "path",
            "description": "The name of the identity provider to sign out of.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referrer",
            "in": "query",
            "description": "The path to redirect to after the client has been signed in successfully. By default this path redirects to the root of the service if no value is set.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "After successful sign-out (which may require several intermediate redirects by the identity provider), the client is redirected to the absolute URI or relative path given in the `referrer` parameter.",
            "headers": {
              "Location": {
                "description": "The location to which the client should be returned to after sign-out.",
                "schema": {
                  "description": "The location to which the client should be returned to after sign-out.",
                  "format": ""
                }
              },
              "Set-Cookie": {
                "description": "If sign-out was successful, this header may contain the required settings to invalidate the session cookie on the client side.",
                "schema": {
                  "description": "If sign-out was successful, this header may contain the required settings to invalidate the session cookie on the client side.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/json; api-version=4.9.0": { }
            }
          },
          "404": {
            "description": "This response indicates that no identity provider is configured under the given name.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/assignments/timeSeries": {
      "post": {
        "tags": [
          "Time Series:Assignments"
        ],
        "summary": "Assigns one time series to another",
        "description": "Assigns the time series in the body to the time series specified in the request",
        "operationId": "Post_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_TimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series to assign another time series to is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to assign another time series to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSeriesReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Time Series:Assignments"
        ],
        "summary": "Gets assigned time series",
        "description": "Gets all time series assigned to the specified time series",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_TimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series to get assign time series for is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to get assigned time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Assignments"
        ],
        "summary": "Deletes all assignments",
        "description": "Removes all assignments from the time series given",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_TimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series from which assigned time series are to be deleted is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to remove assigned time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that either the time series or the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/assignments/timeSeries/{assignedTimeSeries}": {
      "get": {
        "tags": [
          "Time Series:Assignments"
        ],
        "summary": "Gets specific assigned time series",
        "description": "Retrieves a time series that is assigned to another time series, both identified by their name or id (when prefixed with 'id:')",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_TimeSeries_ByAssignedTimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series to get the assigned time series for is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to get the assigned time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedTimeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the assigned time series to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that one of the time series or the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Assignments"
        ],
        "summary": "Deletes assignment",
        "description": "Removes a specific assignment from one time series to the other. Both are specified by name or id (when prefixed with 'id:')",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_TimeSeries_ByAssignedTimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series from which the assigned time series is to be deleted is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to remove the assigned time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedTimeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the assigned time series to remove.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that one of the time series or the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/assignments/attributes": {
      "get": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Gets attributes assigned to time series",
        "description": "Gets all attributes that are assigned to the specified time series",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series for which to get assigned attributes is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to get assigned attributes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of assigned attributes",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfAttributeReference"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfAttributeReference",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Deletes attributes from time series.",
        "description": "Deletes all attributes assigned to the specified time series.",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series for which to delete all attribute assignments is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to delete all attribute assignments.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "All assignements removed"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Assignss an attribute",
        "description": "Assigns an attribute to the given time series",
        "operationId": "Post_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series to which to assign attribute to is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to which to assign the attribute to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeReference"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Indicates that the attribute is already assigned to the specified time series.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Attribute assigned successfully."
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The request completed successfully",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSeriesAssignmentReferenceOfAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/assignments/attributes/{assignedAttribute}": {
      "get": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Gets a specific attribute assigned to a time series.",
        "description": "Gets an attribute assigned to a time series by specifying its name.",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes_ByAssignedAttribute",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series for which to get an attribute assignment is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series for which to retrieve the attribute assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedAttribute",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the assigned attribute to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that given attribute, time series or repository does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The assigned attribute.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Removes a specific attribute assignment.",
        "description": "Removes an attribute assignment from the specified time series.",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes_ByAssignedAttribute",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series from which to remove the assignment is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series from which to remove the assignment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedAttribute",
            "in": "path",
            "description": "The name or id (prefixed with 'id:' of the assignment to remove from the given time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Attribute assignment successfully deleted."
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/assignments/attributes/{attribute}/data": {
      "get": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Gets attribute data",
        "description": "Gets the data of a given attribute in a time series in a defined time interval. The \"from\" and \"to\" parameters must be set",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes_ByAttribute_Data",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start of the period for which to get data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end of the period for which to get data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The repository that holds the time series, its attributes and their respective data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The time series that has the attribute assigned for which to retrieve data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The attribute for which to retrieve data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given attribute, time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of attribute data",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSeriesDataOfString"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Posts data to an attribute",
        "description": "Posts data to an attribute assigned to the specified time series",
        "operationId": "Post_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes_ByAttribute_Data",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository that holds the time series, its attributes and their respective data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The time series that has the attribute assigned to which the given data should be written.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The attribute to which the data should be written.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The data to be written",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeSeriesDataOfString"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Indicates that the given attribute, time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Data saved successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Indicates that the operation was a success. There is no data to return."
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Attributes",
          "Time Series:Assignments"
        ],
        "summary": "Deletes attribute data",
        "description": "Deletes data points from the given attribute assigned to the given time series",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Assignments_Attributes_ByAttribute_Data",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository that holds the time series, its attributes and their respective data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The time series that has the attribute assigned from which the data should be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The attribute from which the data should be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given attribute, time series or repository does not exist or that the attribute has on data points saved to it.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Data deleted successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/attributeTypes": {
      "get": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Gets all attribute types",
        "description": "Gets all attribute types in the given repository",
        "operationId": "Get_Repositories_ByRepository_AttributeTypes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository from which to load all attribute types.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of attribute types",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfAttributeTypeReference"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfAttributeTypeReference",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Adds an attribute type",
        "description": "Adds an attribute type to the given repository",
        "operationId": "Post_Repositories_ByRepository_AttributeTypes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which to store the new attribute type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeType"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Attribute type saved successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The request completed successfully",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeTypeReference"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/attributeTypes/{attributeType}": {
      "get": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Gets a specific attribute type",
        "description": "Gets an attribute type in the given repository specified by its name",
        "operationId": "Get_Repositories_ByRepository_AttributeTypes_ByAttributeType",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the requested attribute type is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeType",
            "in": "path",
            "description": "The name of the attribute type to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given attribute type or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The attribute type has been successfully retrieved from the repository.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ResolvedReferenceOfAttributeType"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Deletes an attribute type",
        "description": "Deletes an attribute type specified by its name in the given repository",
        "operationId": "Delete_Repositories_ByRepository_AttributeTypes_ByAttributeType",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository from which the attribute type should be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeType",
            "in": "path",
            "description": "The name of the attribute type to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given attribute or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Attribute type deleted successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/attributes": {
      "get": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Gets all attributes",
        "description": "Gets all attributes in given repository",
        "operationId": "Get_Repositories_ByRepository_Attributes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which to find attributes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the attribute",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the attribute",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the attribute",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specifies one or more orderings for the results.\r\n\r\nThe value should consist of the property by which to order and the direction separated by a comma.\r\nIf no direction is specified, it defaults to `unspecified` and may depend on where exactly the results are retrieved from.\r\n\r\nAvailable properties to order by:\r\n* name\n* description\n* type",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name,unspecified",
                  "name,ascending",
                  "name,descending",
                  "description",
                  "description,unspecified",
                  "description,ascending",
                  "description,descending",
                  "type",
                  "type,unspecified",
                  "type,ascending",
                  "type,descending"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Range",
            "in": "header",
            "description": "Specifies the range that should be returned.\r\nFormat: attribute=[<range-start>]-[<range-end>]\r\n\r\nExample values:\r\n* Retrieve the first eleven items: attribute=-10\r\n* Retrieve items number 6 through 11: attribute=5-10\r\n* Retrieve all items starting at the fourth: attribute=3-\r\n* Retrieve the first item: attribute=0-0\r\n\r\nNote that the first example behaves slightly different from the specification. Not specifying a range-start is the same as specifying 0 as the start of the range.\r\nFor performance reasons, there is currently no method for retrieving the last n items of the result.\r\n\r\nIn addition, multiple ranges for the same unit in one requests are currently not supported.",
            "schema": {
              "type": "string",
              "format": "attribute=0-99"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "A list of available attributes",
            "headers": {
              "Accept-Ranges": {
                "description": "Lists the units for which ranges may be specified.",
                "schema": {
                  "type": "string",
                  "example": "attribute"
                },
                "example": "attribute"
              }
            },
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfAttributeReference"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfAttributeReference",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "416": {
            "description": "Indicates that the request failed due to an invalid range request being made. Make sure the 'Range' header is correct.",
            "headers": {
              "Accept-Ranges": {
                "description": "Lists the units for which ranges may be specified.",
                "schema": {
                  "type": "string",
                  "example": "attribute"
                },
                "example": "attribute"
              }
            },
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Adds an attribute",
        "description": "Adds an attributes to the given repository",
        "operationId": "Post_Repositories_ByRepository_Attributes",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which to store the new attribute.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The attribute was saved successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The request completed successfully",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeReference"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/attributes/{attribute}": {
      "get": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Gets an attribute by name",
        "description": "Gets a specific attributes in given repository by name",
        "operationId": "Get_Repositories_ByRepository_Attributes_ByAttribute",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the attribute is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the attribute to load.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given repository or attribute does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The requested attribute",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Edits an attributes",
        "description": "Edits an attribute specified by its name",
        "operationId": "Put_Repositories_ByRepository_Attributes_ByAttribute",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the attribute is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the attribute to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given repository or attribute does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The attribute was saved successfully",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Attributes"
        ],
        "summary": "Deletes an attribute",
        "description": "Deletes an attribute specified by its name",
        "operationId": "Delete_Repositories_ByRepository_Attributes_ByAttribute",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the attribute is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the attribute to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given repository or attribute does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "The attribute was deleted successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/calculations/formulas": {
      "get": {
        "tags": [
          "Time Series:Calculations"
        ],
        "summary": "Calculates the value of the given formula.",
        "description": "\tGiven a formula, this endpoint calculates the time series data for the given range.",
        "operationId": "Get_Repositories_ByRepository_Calculations_Formulas",
        "parameters": [
          {
            "name": "formulaString",
            "in": "query",
            "description": "The formula/function that defines the time series data.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The default repository from which to retrieve time series data referenced in the formula",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalType",
            "in": "query",
            "description": "The interval type (i.e. hour, minute, etc.) in which data should be returned.",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "intervalMultiplier",
            "in": "query",
            "description": "In combination with the `intervalType` parameter, this allows for the data to be returned in any conceivable interval, i.e. 15 minutes, 2 hours, 8 weeks, etc.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cyclic",
            "in": "query",
            "description": "Specifies wether the data should be read as if it is cyclic or not. If not specified, the `cyclic` property of the underlying time series is used.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "functionType",
            "in": "query",
            "description": "Specifies the function type that should be used when reading the data. If none is specified, the function type of the undelying time series is used.",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Specifies the unit the data should be read in. Conversion is attempted if possible. If not specified, the unit of the underlying time series is used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalTransformationMethod",
            "in": "query",
            "description": "Specifies the interval transformation method that should be used when reading data in another interval than the underlying time series has set. If not specified then the interval transformation method of the underlying time series is used.",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "timeZone",
            "in": "query",
            "description": "The time zone in which the data is to be read. If this is different from the time zone of the underlying time series, some transformations may be applied.",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "historicDateTime",
            "in": "query",
            "description": "Specifies the date/time in the history of the time series that should be read. If not specified, the current state of the data is read.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Together with the `to` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Together with the `from` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "calculationIntervalType",
            "in": "query",
            "description": "The interval type to use for calculation (i.e. Hour, Minute, etc.). This and calculationIntervalMultiplier affect how data is read from source time series prior to calculation.",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "calculationIntervalMultiplier",
            "in": "query",
            "description": "A multiplier for the given calculationIntervalType. Default: 1.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "calculationCyclic",
            "in": "query",
            "description": "Wether or not to calculate the data on the assumption that the underlying time series data holds cyclic data.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "calculationFunctionType",
            "in": "query",
            "description": "The function type to use during calculation. If not specified, uses the function type of the underlying time series.",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "calculationUnit",
            "in": "query",
            "description": "The unit to use during calculation. This may affect how underlying/referenced time series data is converted prior to calculation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculationIntervalTransformationMethod",
            "in": "query",
            "description": "The interval transformation method to use during calculation. If not specified, the method of the underlying time series is used.",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "calculationTimeZone",
            "in": "query",
            "description": "The time zone that should be used during calculation. This may affect results during DST transitions. If not specified, the time zone of the underlying time series is used.",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "calculationStartOfTime",
            "in": "query",
            "description": "The start of time that should be used during calculation, that is the hour when a day starts. This is usually zero and is only required in specific edge cases when reading/calculating time series in intervals greater than or equal to one day. If not specified, the `startOfDay` property of the underlying time series is used.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This response is returned when the calculation has been successfully performed. The body of the response contains ",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSeriesDataOfDouble"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/calculations/aggregation": {
      "get": {
        "tags": [
          "Time Series:Calculations"
        ],
        "summary": "Performs simple aggregation on time series that match given criteriae.",
        "description": "\tGiven specific search criteriae, this endpoint finds all the matching time series and aggregates (sums) all their data points.",
        "operationId": "Get_Repositories_ByRepository_Calculations_Aggregation",
        "parameters": [
          {
            "name": "flagHandling",
            "in": "query",
            "description": "Determines how flags are considered when aggregating multiple values with different flags.",
            "schema": {
              "$ref": "#/components/schemas/FlagHandling"
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series to aggregate are stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalType",
            "in": "query",
            "description": "The interval type (i.e. hour, minute, etc.) in which data should be returned.",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "intervalMultiplier",
            "in": "query",
            "description": "In combination with the `intervalType` parameter, this allows for the data to be returned in any conceivable interval, i.e. 15 minutes, 2 hours, 8 weeks, etc.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cyclic",
            "in": "query",
            "description": "Specifies wether the data should be read as if it is cyclic or not. If not specified, the `cyclic` property of the underlying time series is used.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "functionType",
            "in": "query",
            "description": "Specifies the function type that should be used when reading the data. If none is specified, the function type of the undelying time series is used.",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Specifies the unit the data should be read in. Conversion is attempted if possible. If not specified, the unit of the underlying time series is used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalTransformationMethod",
            "in": "query",
            "description": "Specifies the interval transformation method that should be used when reading data in another interval than the underlying time series has set. If not specified then the interval transformation method of the underlying time series is used.",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "timeZone",
            "in": "query",
            "description": "The time zone in which the data is to be read. If this is different from the time zone of the underlying time series, some transformations may be applied.",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "historicDateTime",
            "in": "query",
            "description": "Specifies the date/time in the history of the time series that should be read. If not specified, the current state of the data is read.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Together with the `to` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Together with the `from` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "calculationIntervalType",
            "in": "query",
            "description": "The interval type to use for calculation (i.e. Hour, Minute, etc.). This and calculationIntervalMultiplier affect how data is read from source time series prior to calculation.",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "calculationIntervalMultiplier",
            "in": "query",
            "description": "A multiplier for the given calculationIntervalType. Default: 1.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "calculationCyclic",
            "in": "query",
            "description": "Wether or not to calculate the data on the assumption that the underlying time series data holds cyclic data.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "calculationFunctionType",
            "in": "query",
            "description": "The function type to use during calculation. If not specified, uses the function type of the underlying time series.",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "calculationUnit",
            "in": "query",
            "description": "The unit to use during calculation. This may affect how underlying/referenced time series data is converted prior to calculation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculationIntervalTransformationMethod",
            "in": "query",
            "description": "The interval transformation method to use during calculation. If not specified, the method of the underlying time series is used.",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "calculationTimeZone",
            "in": "query",
            "description": "The time zone that should be used during calculation. This may affect results during DST transitions. If not specified, the time zone of the underlying time series is used.",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "calculationStartOfTime",
            "in": "query",
            "description": "The start of time that should be used during calculation, that is the hour when a day starts. This is usually zero and is only required in specific edge cases when reading/calculating time series in intervals greater than or equal to one day. If not specified, the `startOfDay` property of the underlying time series is used.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "search.name",
            "in": "query",
            "description": "Name of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search.description",
            "in": "query",
            "description": "Description of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search.intervalType",
            "in": "query",
            "description": "Interval type of the time series",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "search.intervalMultiplier",
            "in": "query",
            "description": "Interval multiplier of the time series",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search.cyclic",
            "in": "query",
            "description": "Whether to look for cyclic time series or non-cyclic time series.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search.functionType",
            "in": "query",
            "description": "Function type of the time series",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "search.unit",
            "in": "query",
            "description": "Unit of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search.intervalTransformationMethod",
            "in": "query",
            "description": "Interval transformation method of the time series",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "search.formula",
            "in": "query",
            "description": "Formula of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search.timeZone",
            "in": "query",
            "description": "Time zone of the time series",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "search.startOfTime",
            "in": "query",
            "description": "Start of time of the time series",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "search.attribute",
            "in": "query",
            "description": "Attribute assigned to the time series",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This response is returned when the calculation has been successfully performed. The body of the response contains ",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSeriesDataOfDouble"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/data": {
      "get": {
        "tags": [
          "Time Series:Data"
        ],
        "summary": "Retrieves time series data",
        "description": "Fetches data points from a time series identified by its name. \"from\" and \"to\" parameters must be defined.",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Data",
        "parameters": [
          {
            "name": "quotationDateTime",
            "in": "query",
            "description": "The (optional) quotation date/time for which data should be read and wether only quotation data from that _exact_ date/time should be loaded or wether previous quotations should be included as well if available.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "quotationBehavior",
            "in": "query",
            "description": "Determines how quotation data should be loaded.",
            "schema": {
              "title": "QuotationBehavior",
              "type": "number",
              "description": "Defines how data data should be read from a time series that has multiple quotations, especially when the quotation data/time given while reading data does not exactly match with the date/time of an existing quotation.",
              "default": 0,
              "example": 2
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series from which data should be fetched.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalType",
            "in": "query",
            "description": "The interval type (i.e. hour, minute, etc.) in which data should be returned.",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "intervalMultiplier",
            "in": "query",
            "description": "In combination with the `intervalType` parameter, this allows for the data to be returned in any conceivable interval, i.e. 15 minutes, 2 hours, 8 weeks, etc.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cyclic",
            "in": "query",
            "description": "Specifies wether the data should be read as if it is cyclic or not. If not specified, the `cyclic` property of the underlying time series is used.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "functionType",
            "in": "query",
            "description": "Specifies the function type that should be used when reading the data. If none is specified, the function type of the undelying time series is used.",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Specifies the unit the data should be read in. Conversion is attempted if possible. If not specified, the unit of the underlying time series is used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalTransformationMethod",
            "in": "query",
            "description": "Specifies the interval transformation method that should be used when reading data in another interval than the underlying time series has set. If not specified then the interval transformation method of the underlying time series is used.",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "timeZone",
            "in": "query",
            "description": "The time zone in which the data is to be read. If this is different from the time zone of the underlying time series, some transformations may be applied.",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "historicDateTime",
            "in": "query",
            "description": "Specifies the date/time in the history of the time series that should be read. If not specified, the current state of the data is read.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Together with the `to` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Together with the `from` parameter, defines the period of time for which data is to be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the repository or the requested time series does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Indicates that one of the parameters \"from\" or \"to\" is missing",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of time series data in given timespan",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSeriesDataOfDouble"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Series:Data"
        ],
        "summary": "Saves time series data",
        "description": "Saves data points to a time series identified by its name",
        "operationId": "Post_Repositories_ByRepository_TimeSeries_ByTimeSeries_Data",
        "parameters": [
          {
            "name": "quotationDateTime",
            "in": "query",
            "description": "The quotation date/time for which the data should be written.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to write the data to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeSeriesDataOfDouble"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Indicates that the requested time series does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Data saved successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Indicates that the operation was a success. There is no data to return."
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Data"
        ],
        "summary": "Deletes time series data",
        "description": "Delete data points from a time series using \"from\" and \"to\" timestamps",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries_Data",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series from which data should be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The beginning of the period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end of the period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Data deleted successfully"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/datatimespan": {
      "post": {
        "tags": [
          "Time Series:Data"
        ],
        "summary": "Do not use! (For internal use only.) - This endpoint writes data to the given time series using a specialized format.",
        "description": "\tUse of this endpoint is discouraged. It exists solely to provide a compatibility layer with existing HAKOM applications.",
        "operationId": "Post_Repositories_ByRepository_TimeSeries_ByTimeSeries_Datatimespan",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to write the data to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "The unit in which the data is written. A conversion will be performed if applicable.\r\n\r\nThe name/symbol of a unit stored in the repository specified in the requests parameters.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeSeriesDataSpanOfDouble"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "This response indicates that the data was written successfully. The response contains no body.",
            "content": {
              "application/json; api-version=4.9.0": { }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}/data/quotations": {
      "get": {
        "tags": [
          "Time Series:Data"
        ],
        "summary": "Gets time series quotations",
        "description": "Gets quotations from a time series specified by name. The fields \"from\" and \"to\" are required",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries_Data_Quotations",
        "parameters": [
          {
            "name": "quotationDateTime",
            "in": "query",
            "description": "When given specifies wether or not only a specific quotation should be returned or all quotations that lie before this value.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "historicDateTime",
            "in": "query",
            "description": "When given, specifies for what historic date/time the data should be retrieved.",
            "schema": {
              "title": "DateTimeOffsetAtOrBefore",
              "type": "string",
              "description": "Specifies a point in time used in filtering chronological data and/or wether or not to include data before the given date/time or not.",
              "default": null,
              "example": "2020-03-14T23:01:05,exact"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the result to the specified number of quotations.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series from which quotations should be read.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The period of time series data for which associated quotations should be fetched.\r\n\r\nThe beginning of the period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The period of time series data for which associated quotations should be fetched.\r\n\r\nThe end of the period.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given time series or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of quotations in given timespan",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfAuditedQuotationEntry"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfAuditedQuotationEntry",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries": {
      "post": {
        "tags": [
          "Time Series:Definitions"
        ],
        "summary": "Defines a new time series",
        "description": "Used to create a new time series from its definition.",
        "operationId": "Post_Repositories_ByRepository_TimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series should be stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSeries"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created the new time series in the given repository.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ResolvedReferenceOfTimeSeries"
                }
              }
            }
          },
          "404": {
            "description": "Indicates that the given repository does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Indicates that the time series could not be saved due to a conflict (i.e. there is another time series with the same name in this repository already).",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully saved time series",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSeriesReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Time Series:Definitions"
        ],
        "summary": "Find time series",
        "description": "Returns all time series that match the given parameters.",
        "operationId": "Get_Repositories_ByRepository_TimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which to look for time series.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalType",
            "in": "query",
            "description": "Interval type of the time series",
            "schema": {
              "title": "IntervalType",
              "type": "number",
              "description": "Defines the smallest step in time between data points on a time series.",
              "default": 3,
              "example": 2
            }
          },
          {
            "name": "intervalMultiplier",
            "in": "query",
            "description": "Interval multiplier of the time series",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cyclic",
            "in": "query",
            "description": "Whether to look for cyclic time series or non-cyclic time series.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "functionType",
            "in": "query",
            "description": "Function type of the time series",
            "schema": {
              "title": "FunctionType",
              "type": "number",
              "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
              "default": 1,
              "example": 2
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Unit of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalTransformationMethod",
            "in": "query",
            "description": "Interval transformation method of the time series",
            "schema": {
              "title": "IntervalTransformationMethod",
              "type": "number",
              "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
              "default": 2,
              "example": 1
            }
          },
          {
            "name": "formula",
            "in": "query",
            "description": "Formula of the time series",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeZone",
            "in": "query",
            "description": "Time zone of the time series",
            "schema": {
              "title": "TimeZone",
              "type": "string",
              "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
              "default": null,
              "example": "Europe/Vienna"
            }
          },
          {
            "name": "startOfTime",
            "in": "query",
            "description": "Start of time of the time series",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Attribute assigned to the time series",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specifies one or more orderings for the results.\r\n\r\nThe value should consist of the property by which to order and the direction separated by a comma.\r\nIf no direction is specified, it defaults to `unspecified` and may depend on where exactly the results are retrieved from.\r\n\r\nAvailable properties to order by:\r\n* name\n* function\n* cyclic\n* description\n* intervalTransformationMethod\n* startOfTime\n* unit\n* interval.Type\n* interval.Multiplier",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "name",
                  "name,unspecified",
                  "name,ascending",
                  "name,descending",
                  "function",
                  "function,unspecified",
                  "function,ascending",
                  "function,descending",
                  "cyclic",
                  "cyclic,unspecified",
                  "cyclic,ascending",
                  "cyclic,descending",
                  "description",
                  "description,unspecified",
                  "description,ascending",
                  "description,descending",
                  "intervalTransformationMethod",
                  "intervalTransformationMethod,unspecified",
                  "intervalTransformationMethod,ascending",
                  "intervalTransformationMethod,descending",
                  "startOfTime",
                  "startOfTime,unspecified",
                  "startOfTime,ascending",
                  "startOfTime,descending",
                  "unit",
                  "unit,unspecified",
                  "unit,ascending",
                  "unit,descending",
                  "interval.Type",
                  "interval.Type,unspecified",
                  "interval.Type,ascending",
                  "interval.Type,descending",
                  "interval.Multiplier",
                  "interval.Multiplier,unspecified",
                  "interval.Multiplier,ascending",
                  "interval.Multiplier,descending"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "Range",
            "in": "header",
            "description": "Specifies the range that should be returned.\r\nFormat: timeSeries=[<range-start>]-[<range-end>]\r\n\r\nExample values:\r\n* Retrieve the first eleven items: timeSeries=-10\r\n* Retrieve items number 6 through 11: timeSeries=5-10\r\n* Retrieve all items starting at the fourth: timeSeries=3-\r\n* Retrieve the first item: timeSeries=0-0\r\n\r\nNote that the first example behaves slightly different from the specification. Not specifying a range-start is the same as specifying 0 as the start of the range.\r\nFor performance reasons, there is currently no method for retrieving the last n items of the result.\r\n\r\nIn addition, multiple ranges for the same unit in one requests are currently not supported.",
            "schema": {
              "type": "string",
              "format": "timeSeries=0-99"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found one or more time series.",
            "headers": {
              "Accept-Ranges": {
                "description": "Lists the units for which ranges may be specified.",
                "schema": {
                  "type": "string",
                  "example": "timeSeries"
                },
                "example": "timeSeries"
              }
            },
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfTimeSeriesReference"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfTimeSeriesReference",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "Successfully found one or more time series within the requested range.",
            "headers": {
              "Accept-Ranges": {
                "description": "Lists the units for which ranges may be specified.",
                "schema": {
                  "type": "string",
                  "example": "timeSeries"
                },
                "example": "timeSeries"
              },
              "Content-Range": {
                "description": "If a 'Range' header was specified, this header will return the range returned. Please note that there are some issues with open ranges as well as when data is streamed asynchronously from a repository, since the total number of results is not always known when this header is set. Therefor, the content of this header can - at the present - not be used reliably for determining the total number of items available.",
                "schema": {
                  "type": "string",
                  "example": "timeSeries 10-99/*"
                },
                "example": "timeSeries 10-99/*"
              }
            }
          },
          "404": {
            "description": "Indicates that the given repository does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "416": {
            "description": "Indicates that the request failed due to an invalid range request being made. Make sure the 'Range' header is correct.",
            "headers": {
              "Accept-Ranges": {
                "description": "Lists the units for which ranges may be specified.",
                "schema": {
                  "type": "string",
                  "example": "timeSeries"
                },
                "example": "timeSeries"
              }
            },
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/timeSeries/{timeSeries}": {
      "get": {
        "tags": [
          "Time Series:Definitions"
        ],
        "summary": "Gets a time series by name",
        "description": "Get a specific time series by using its name",
        "operationId": "Get_Repositories_ByRepository_TimeSeries_ByTimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to load",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The time series has been found.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ResolvedReferenceOfTimeSeries"
                }
              }
            }
          },
          "404": {
            "description": "Indicates that the given time series was not found within the given repository or that the given repository itself does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time Series:Definitions"
        ],
        "summary": "Edits a time series by name",
        "description": "Edit a time series defined by its name using the body",
        "operationId": "Put_Repositories_ByRepository_TimeSeries_ByTimeSeries",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with id:) of the time series to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSeries"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given time series was not found within the given repository or that the given repository itself does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully edited the time series",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSeriesReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Definitions"
        ],
        "summary": "Deletes a specific time series",
        "description": "Use this request to delete a specific time series from a repository.",
        "operationId": "Delete_Repositories_ByRepository_TimeSeries_ByTimeSeries",
        "parameters": [
          {
            "name": "cascade",
            "in": "query",
            "description": "Specifies wether or not the data associated with the time series should be permanently deleted as well.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the time series is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeSeries",
            "in": "path",
            "description": "The name or id (prefixed with 'id:') of the time series to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates that the given time series was deleted successfully."
          },
          "404": {
            "description": "Indicates that the given time series was not found within the given repository or that the given repository itself does not exist.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervalTypes": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available interval types.",
        "description": "Lists preconfigured interval types and their corresponding numerical value for use in calculations or when reading data along a time series.",
        "operationId": "Get_Time_IntervalTypes",
        "responses": {
          "200": {
            "description": "A list of all available interval types.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfIntervalType"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervalTypes/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific interval type by its value.",
        "description": "Gets an interval type identified by the numerical value. Interval types are used in calculations or when reading data along a time series.",
        "operationId": "Get_Time_IntervalTypes_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the interval type to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested interval type.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfIntervalType"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervalTypes/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific interval type by its name.",
        "description": "Gets an interval typ identified by the name. Interval types are used in calculations or when reading data along a time series.",
        "operationId": "Get_Time_IntervalTypes_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the interval type to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested interval type.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfIntervalType"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/timeBases": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available time bases.",
        "description": "Lists all available time bases. A time base determines both the maximum resolution (i.e. milliseconds or seconds) as well as the epoch (the zero-point in time) of time stamps stored in the data base.",
        "operationId": "Get_Time_TimeBases",
        "responses": {
          "200": {
            "description": "A list of all available time bases.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfTimeBase"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/timeBases/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific time base by its value.",
        "description": "Gets a time base identified by the numerical value. A time base determines both the maximum resolution (i.e. milliseconds or seconds) as well as the epoch (the zero-point in time) of time stamps stored in the data base.",
        "operationId": "Get_Time_TimeBases_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the time base to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested time base.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfTimeBase"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/timeBases/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific time base by its name.",
        "description": "Gets a time base identified by the name. A time base determines both the maximum resolution (i.e. milliseconds or seconds) as well as the epoch (the zero-point in time) of time stamps stored in the data base.",
        "operationId": "Get_Time_TimeBases_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the time base to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested time base.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfTimeBase"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervals/intervalTransformationMethods": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available interval transformation methods.",
        "description": "Lists all available interval transformation methods which are used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series.",
        "operationId": "Get_Time_Intervals_IntervalTransformationMethods",
        "responses": {
          "200": {
            "description": "A list of all available interval transformationi methods.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfIntervalTransformationMethod"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervals/intervalTransformationMethods/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific interval transformation method by its value.",
        "description": "Gets an interval transformation method identified by the numerical value. Interval transformation types are used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series.",
        "operationId": "Get_Time_Intervals_IntervalTransformationMethods_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the interval transformation method to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested interval transformation method.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfIntervalTransformationMethod"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/intervals/intervalTransformationMethods/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific interval transformation method by its name.",
        "description": "Gets an interval typ transformation method by the name. Interval transformation types are used to determine how data is transformed along the time axis, for example when changing the interval in which data is read from or written to a time series.",
        "operationId": "Get_Time_Intervals_IntervalTransformationMethods_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the interval transformation method to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested interval transformation method.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfIntervalTransformationMethod"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/quotationBehaviors": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available quotation behaviors.",
        "description": "Lists preconfigured quotation behaviors and their corresponding numerical value. The quotation behavior has an effect on which version of the time series is loaded when reading with quotation.",
        "operationId": "Get_QuotationBehaviors",
        "responses": {
          "200": {
            "description": "A list of all available quotation behaviors.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfQuotationBehavior"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/quotationBehaviors/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific quotation behavior by its value.",
        "description": "Gets a quotation behavior identified by the numerical value. The quotation behavior has an effect on which version of the time series is loaded when reading with quotation.",
        "operationId": "Get_QuotationBehaviors_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the quotation behavior to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested quotation behaviors.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfQuotationBehavior"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/quotationBehaviors/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific quotation behavior by its name.",
        "description": "Gets a quotation behavior identified by the name. The quotation behavior has an effect on which version of the time series is loaded when reading with quotation.",
        "operationId": "Get_QuotationBehaviors_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the quotation behavior to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested quotation behaviors.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfQuotationBehavior"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/functionTypes": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available function types.",
        "description": "Lists all available function types. The function type indicates how the value relates to the timestamp and the interval.",
        "operationId": "Get_FunctionTypes",
        "responses": {
          "200": {
            "description": "A list of all available function types.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfFunctionType"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/functionTypes/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific function type by its value.",
        "description": "Gets a function type identified by the numerical value. The function type indicates how the value relates to the timestamp and the interval.",
        "operationId": "Get_FunctionTypes_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the function type to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested function type.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfFunctionType"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/functionTypes/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific function type by its name.",
        "description": "Gets a function type identified by the name. The function type indicates how the value relates to the timestamp and the interval.",
        "operationId": "Get_FunctionTypes_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the function type to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested function type.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfFunctionType"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/flags": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available flags.",
        "description": "Lists all available time bases. A flag describes the quality of an individual data point.",
        "operationId": "Get_Flags",
        "responses": {
          "200": {
            "description": "A list of all available flags.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfFlag"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/flags/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific flag by its value.",
        "description": "Gets a flag identified by the numerical value. A flag describes the quality of an individual data point.",
        "operationId": "Get_Flags_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the flag to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested flag.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfFlag"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/flags/{value}/priority": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific flag by its name.",
        "description": "Gets the priority of a flag identified by the value.",
        "operationId": "Get_Flags_ByValue_Priority",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the flag to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The priority of a given flag.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/flags/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific flag by its name.",
        "description": "Gets a flag identified by the name. A flag describes the quality of an individual data point.",
        "operationId": "Get_Flags_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the flag to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested flag.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfFlag"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/flags/priority:{priorityValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific flag by its priority.",
        "description": "Gets a flag identified by the priority. A flag describes the quality of an individual data point. The priority of a flag provides information on how the flag/data compares to other flags/data.",
        "operationId": "Get_Flags_Priority:{priorityValue}",
        "parameters": [
          {
            "name": "priorityValue",
            "in": "path",
            "description": "Priority of the flag to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested flag.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfFlag"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/compressionModes": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets all available compression modes.",
        "description": "Lists all available compression modes. In HAKOM terminology time series compression is a data storage technology, where individual time series values are cascaded to fixed sized blocks, that are binary encoded and saved to the database. The compression mode defines the type of compression used for writing compressed data to the store. The size of the blocks depends on the interval of the underlying data. The CompressionMode represents the type of compression.",
        "operationId": "Get_CompressionModes",
        "responses": {
          "200": {
            "description": "A list of all available compression modes.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumerationOfCompressionMode"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/compressionModes/{value}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific compression mode by its value.",
        "description": "Gets a compression mode identified by the numerical value. In HAKOM terminology time series compression is a data storage technology, where individual time series values are cascaded to fixed sized blocks, that are binary encoded and saved to the database. The compression mode defines the type of compression used for writing compressed data to the store. The size of the blocks depends on the interval of the underlying data. The CompressionMode represents the type of compression.",
        "operationId": "Get_CompressionModes_ByValue",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "Value of the compression mode to be accessed.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested compression mode.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfCompressionMode"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/compressionModes/name:{nameValue}": {
      "get": {
        "tags": [
          "Time Series:Enumerations"
        ],
        "summary": "Gets a specific compression mode by its name.",
        "description": "Gets a compression mode identified by the name. In HAKOM terminology time series compression is a data storage technology, where individual time series values are cascaded to fixed sized blocks, that are binary encoded and saved to the database. The compression mode defines the type of compression used for writing compressed data to the store. The size of the blocks depends on the interval of the underlying data. The CompressionMode represents the type of compression.",
        "operationId": "Get_CompressionModes_Name:{nameValue}",
        "parameters": [
          {
            "name": "nameValue",
            "in": "path",
            "description": "Name of the compression mode to be accessed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested compression mode.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationOfCompressionMode"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/time/interval": {
      "get": {
        "tags": [
          "Time Series:Factories"
        ],
        "summary": "Gets an in interval with the provided type and multiplier or if omitted, their respective default values.",
        "description": "This request may be used to create an interval object (for use in other requests).\r\nBecause all parameters are optional, it enables the use of the services default values without having to hard code them into client applications.",
        "operationId": "Get_Time_Interval",
        "parameters": [
          {
            "name": "intervalType",
            "in": "query",
            "description": "The interval type, i.e. hour, minute, etc.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "intervalMultiplier",
            "in": "query",
            "description": "The multiplier to use. For example, to define an interval of 15 minutes, specify a `intervalType` of `2` and an `intervalMultiplier` of `15`.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the interval created from the given parameters",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/Interval"
                }
              }
            }
          },
          "400": {
            "description": "One of the parameters given was out of the acceptable range.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "tags": [
          "Time Series:Repositories"
        ],
        "summary": "Returns information about all configured repositories.",
        "description": "Returns information about all configured repositories.",
        "operationId": "Get_Repositories",
        "responses": {
          "200": {
            "description": "Successful response.\r\nIndicates that at least one configured repository was found that the client has access to.\r\n\r\nEach item in the returned list contains an object with a `$successful` property set to either `true` or `false`.\r\nIn the former case, the object will also have a `value` property that contains information about the repository. In the later case, the object will contain an `error` property that contains information about problems that occurred when an attempt was made to access the repository.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfTsmRepositoryInformation"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfTsmRepositoryInformation",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}": {
      "get": {
        "tags": [
          "Time Series:Repositories"
        ],
        "summary": "Returns information about a specific repository.",
        "description": "Returns information about a specific repository.",
        "operationId": "Get_Repositories_ByRepository",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The repository to retrieve information about",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates that a repository with the given name is available and that information about it could be retrieved successfully.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/TsmRepositoryInformation"
                }
              }
            }
          },
          "404": {
            "description": "No repository with the given name is currently available.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/units": {
      "post": {
        "tags": [
          "Time Series:Units"
        ],
        "summary": "Post unit to repository",
        "description": "Post a unit to the given repository using a symbol and the intervalTransformationMethod ",
        "operationId": "Post_Repositories_ByRepository_Units",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which to save the new unit.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The unit was successfully saved.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/UnitReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Time Series:Units"
        ],
        "summary": "Fetch all units",
        "description": "Get all saved units in the given repository",
        "operationId": "Get_Repositories_ByRepository_Units",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository from which to retrieve units.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "List of all units",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/SuccessOfUnitReference"
                      },
                      {
                        "$ref": "#/components/schemas/Failure"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "$successful",
                      "mapping": {
                        "true": "#/components/schemas/SuccessOfUnitReference",
                        "false": "#/components/schemas/Failure"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/repositories/{repository}/units/{unit}": {
      "get": {
        "tags": [
          "Time Series:Units"
        ],
        "summary": "Get specific unit",
        "description": "Get the specification of a unit defined by its name",
        "operationId": "Get_Repositories_ByRepository_Units_ByUnit",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the unit is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "path",
            "description": "The name/symbol of the unit to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given unit or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Indicates that the given repository is not valid",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Value of specific unit",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/UnitReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time Series:Units"
        ],
        "summary": "Edit unit by name",
        "description": "Change the value of a unit defined by its name using the body",
        "operationId": "Put_Repositories_ByRepository_Units_ByUnit",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the unit is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "path",
            "description": "The name/symbol of the unit that should be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Indicates that the given unit or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Indicates that the body is empty",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Indicates that the \"symbol\" element in the body is missing or different from the units actual name",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful edit",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/UnitReference"
                }
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Time Series:Units"
        ],
        "summary": "Delete specific unit",
        "description": "Delete a unit defined by its name",
        "operationId": "Delete_Repositories_ByRepository_Units_ByUnit",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The name of the repository in which the unit is stored.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "path",
            "description": "The name/symbol of the unit to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Indicates that the given unit or repository does not exist",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Indicates that the given repository is not valid",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Successfully deleted unit"
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Versioning"
        ],
        "summary": "Get basic information about the service.",
        "description": "This endpoint returns the current version of the service as well as information about additional API versions that are supported for backwards compatibility with existing applications.",
        "operationId": "Get_",
        "responses": {
          "200": {
            "description": "Successful response. The response content contains information about the service and supported API versions.",
            "content": {
              "application/json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/VersionedServiceInformation"
                },
                "example": {"title":"PowerTSM HTTP API","description":"Manage time series using a RESTful HTTP interface.","version":"4.9.0+2025.06.23.605.4c26fdb37.4c26fdb37b8d9c93101ea4026b6e704164935d52","supportedApiVersions":["4.9.0"]}
              }
            }
          },
          "4XX": {
            "description": "Indicates that the request failed due to a client error. Please refer to the details provided in the body of the response in order to ensure that the request can be handled properly.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "5XX": {
            "description": "Indicates that the request failed due to an error that occurred on the server. Consider reporting this error to the server operators.",
            "content": {
              "application/problem+json; api-version=4.9.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Attribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AttributeTypeReference"
          }
        },
        "additionalProperties": false
      },
      "AttributeReference": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          }
        },
        "additionalProperties": false
      },
      "AttributeType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AttributeTypeReference": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          }
        },
        "additionalProperties": false
      },
      "AuditedQuotationEntry": {
        "type": "object",
        "properties": {
          "period": {
            "$ref": "#/components/schemas/Period"
          },
          "quotationDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "historicDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Claim": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "originalIssuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "subject": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "valueType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClaimTransformation": {
        "required": [
          "fromType"
        ],
        "type": "object",
        "properties": {
          "retainOriginal": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromType": {
            "type": "string",
            "nullable": true
          },
          "toType": {
            "type": "string",
            "nullable": true
          },
          "fromValue": {
            "type": "string",
            "nullable": true
          },
          "toValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimsIdentity": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true
          },
          "actor": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "nameClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationSection": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfiguredHttpIdentityProvider": {
        "type": "object",
        "properties": {
          "schemes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "signInScheme": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "settings": {
            "$ref": "#/components/schemas/IdentityProviderSettings"
          }
        },
        "additionalProperties": false
      },
      "Direction": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EnumerationOfCompressionMode": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "CompressionMode",
            "type": "number",
            "description": "Defines how data should be compressed during storage, if at all.",
            "default": 0,
            "example": 1
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfFlag": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Flag",
            "type": "number",
            "description": "Specifies the quality of a point of data along a time series. When combining multiple time series in a calculation, the flag of each point of data may impact the final result.",
            "default": 19,
            "example": 9
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfFunctionType": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "FunctionType",
            "type": "number",
            "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
            "default": 1,
            "example": 2
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfIntervalTransformationMethod": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "IntervalTransformationMethod",
            "type": "number",
            "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
            "default": 2,
            "example": 1
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfIntervalType": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "IntervalType",
            "type": "number",
            "description": "Defines the smallest step in time between data points on a time series.",
            "default": 3,
            "example": 2
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfQuotationBehavior": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "QuotationBehavior",
            "type": "number",
            "description": "Defines how data data should be read from a time series that has multiple quotations, especially when the quotation data/time given while reading data does not exactly match with the date/time of an existing quotation.",
            "default": 0,
            "example": 2
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumerationOfTimeBase": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "TimeBase",
            "type": "number",
            "description": "Defines the smallest step in time between data points on a time series that can be stored in a particular repository.",
            "default": 0,
            "example": 2
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Failure": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "$ref": "#/components/schemas/ProblemDetails"
          }
        }
      },
      "FlagHandling": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "IdentityProviderSettings": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "configurationSection": {
            "$ref": "#/components/schemas/ConfigurationSection"
          },
          "nameClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "claimTransformations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimTransformation"
            },
            "nullable": true,
            "readOnly": true
          },
          "removeUntransformedClaims": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Interval": {
        "type": "object",
        "properties": {
          "type": {
            "title": "IntervalType",
            "type": "number",
            "description": "Defines the smallest step in time between data points on a time series.",
            "default": 3,
            "readOnly": true,
            "example": 2
          },
          "multiplier": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairOfDateTimeOffsetString": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Period": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "title": "ProblemDetails",
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the problem. For most errors, this will correspond to a HAKOM error code (HKxxxxx). Some general errors may just contain the string representation of the responses HTTP status code (i.e. \"Bad Gateway\" for status 502)",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code for this error.",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "root": {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          "roots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Represents RFC7807 compliant problem details indicating that an error occurred while processing the current request.",
        "example": {
          "type": "?",
          "title": "HK09008",
          "status": 400,
          "detail": "A description of the problem",
          "instance": "https://..",
          "root": {
            "type": "?",
            "title": "HK15019",
            "status": 500,
            "detail": "Ooopsies!",
            "instance": "https://.."
          },
          "roots": [
            {
              "type": "?",
              "title": "HK15019",
              "status": 500,
              "detail": "Ooopsies!",
              "instance": "https://.."
            },
            {
              "type": "?",
              "title": "HK15019",
              "status": 500,
              "detail": "Ooopsies!",
              "instance": "https://.."
            }
          ],
          "traceId": "dcc93130-8bb5-4b73-a675-e7ac285a3c84"
        }
      },
      "ResolvedReferenceOfAttributeType": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          },
          "value": {
            "$ref": "#/components/schemas/AttributeType"
          }
        },
        "additionalProperties": false
      },
      "ResolvedReferenceOfTimeSeries": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          },
          "value": {
            "$ref": "#/components/schemas/TimeSeries"
          }
        },
        "additionalProperties": false
      },
      "StorageInformation": {
        "type": "object",
        "properties": {
          "repositoryName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SuccessOfAttributeReference": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/AttributeReference"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfAttributeTypeReference": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/AttributeTypeReference"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfAuditedQuotationEntry": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/AuditedQuotationEntry"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfConfiguredHttpIdentityProvider": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/ConfiguredHttpIdentityProvider"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfTimeSeriesReference": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/TimeSeriesReference"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfTsmRepositoryInformation": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/TsmRepositoryInformation"
          }
        },
        "additionalProperties": false
      },
      "SuccessOfUnitReference": {
        "type": "object",
        "properties": {
          "$successful": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "$ref": "#/components/schemas/UnitReference"
          }
        },
        "additionalProperties": false
      },
      "TimeSeries": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "title": "FunctionType",
            "type": "number",
            "description": "Specifies the validity of each single value along a time series, i.e either from the last value up to the current data/time or from the current date/time to the next value.",
            "default": 1,
            "readOnly": true,
            "example": 2
          },
          "cyclic": {
            "type": "boolean",
            "readOnly": true
          },
          "interval": {
            "$ref": "#/components/schemas/Interval"
          },
          "unit": {
            "$ref": "#/components/schemas/UnitReference"
          },
          "intervalTransformationMethod": {
            "title": "IntervalTransformationMethod",
            "type": "number",
            "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
            "default": 2,
            "nullable": true,
            "example": 1
          },
          "formula": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfDateTimeOffsetString"
            },
            "nullable": true,
            "readOnly": true
          },
          "timeZone": {
            "title": "TimeZone",
            "type": "string",
            "description": "Identifies the time zone in which a time series is defined. This may impact calculation results, especially during daylight savings time transitions.",
            "default": null,
            "nullable": true,
            "readOnly": true,
            "example": "Europe/Vienna"
          },
          "startOfTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "preserveDuplicatedValues": {
            "type": "boolean"
          },
          "preserveHistoricData": {
            "type": "boolean",
            "readOnly": true
          },
          "preserveAuditLog": {
            "type": "boolean",
            "readOnly": true
          },
          "quotation": {
            "type": "boolean",
            "readOnly": true
          },
          "quotationDefaultBehavior": {
            "title": "QuotationBehavior",
            "type": "number",
            "description": "Defines how data data should be read from a time series that has multiple quotations, especially when the quotation data/time given while reading data does not exactly match with the date/time of an existing quotation.",
            "default": 0,
            "nullable": true,
            "example": 2
          },
          "compressionMode": {
            "title": "CompressionMode",
            "type": "number",
            "description": "Defines how data should be compressed during storage, if at all.",
            "default": 0,
            "readOnly": true,
            "example": 1
          },
          "compressionMultiplier": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TimeSeriesAssignmentReferenceOfAttribute": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          }
        },
        "additionalProperties": false
      },
      "TimeSeriesDataOfDouble": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "flag": {
            "title": "Flag",
            "type": "number",
            "description": "Specifies the quality of a point of data along a time series. When combining multiple time series in a calculation, the flag of each point of data may impact the final result.",
            "default": 19,
            "example": 9
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TimeSeriesDataOfString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "flag": {
            "title": "Flag",
            "type": "number",
            "description": "Specifies the quality of a point of data along a time series. When combining multiple time series in a calculation, the flag of each point of data may impact the final result.",
            "default": 19,
            "example": 9
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TimeSeriesDataSpanOfDouble": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "flag": {
            "title": "Flag",
            "type": "number",
            "description": "Specifies the quality of a point of data along a time series. When combining multiple time series in a calculation, the flag of each point of data may impact the final result.",
            "default": 19,
            "example": 9
          },
          "period": {
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "TimeSeriesReference": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          },
          "dataStorageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          }
        },
        "additionalProperties": false
      },
      "TsmRepositoryInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the repository.",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of repository, i.e. the underlying type of database/driver it uses.",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "$ref": "#/components/schemas/Version"
          },
          "timeBase": {
            "title": "TimeBase",
            "type": "number",
            "description": "Defines the smallest step in time between data points on a time series that can be stored in a particular repository.",
            "default": 0,
            "readOnly": true,
            "example": 2
          }
        },
        "additionalProperties": false
      },
      "Unit": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "intervalTransformationMethod": {
            "title": "IntervalTransformationMethod",
            "type": "number",
            "description": "Defines how data should be transformed when converting between intervals, i.e. summed up or averaged, etc.",
            "default": 2,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "UnitReference": {
        "type": "object",
        "properties": {
          "storageInformation": {
            "$ref": "#/components/schemas/StorageInformation"
          },
          "identifier": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Version": {
        "type": "string",
        "example": "4.9.0+2025.06.23.605.4c26fdb37.4c26fdb37b8d9c93101ea4026b6e704164935d52"
      },
      "VersionedServiceInformation": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "$ref": "#/components/schemas/Version"
          },
          "supportedApiVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Version"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  },
  "tags": [
    {
      "name": "Versioning",
      "description": "Get version information about the service."
    },
    {
      "name": "Documentation",
      "description": "Access information about working with the service and its individual endpoints."
    },
    {
      "name": "Time Series:Repositories",
      "description": "Retrieve information about the repositories available for storing time series and their data."
    },
    {
      "name": "Time Series:Definitions",
      "description": "Create and manage the definitions of time series."
    },
    {
      "name": "Time Series:Data",
      "description": "Read and write time series data."
    },
    {
      "name": "Time Series:Units",
      "description": "Manage units that are used to describe time series data."
    },
    {
      "name": "Time Series:Attributes",
      "description": "Manage custom attributes that can be used to attach additional information to time series."
    },
    {
      "name": "Time Series:Assignments",
      "description": "Assign additional information to time series, such as custom attributes or other time series for use in unit conversions."
    },
    {
      "name": "Time Series:Calculations",
      "description": "Generate ad-hoc time series data using formulas that use mathematical functions and/or other data from one or more stored time series."
    },
    {
      "name": "Time Series:Factories",
      "description": "Create objects for use in requests using defaults provided by the service."
    },
    {
      "name": "Time Series:Enumerations",
      "description": "Get additional information about enumeration-like types used to describe time series and their data."
    },
    {
      "name": "Security:Authentication",
      "description": "Get information about how to authenticate as well as the current authentication status."
    }
  ]
}